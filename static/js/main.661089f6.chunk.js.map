{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","fields","sentenceField","split","join","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","name","base64","audioField","audio","filename","data","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","margin","spacing","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","target","rows","onClick","DialogActions","Button","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","source","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","Math","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","Number","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","onExit","onOffset","onCurrentTime","then","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","marginTop","subtitleSetting","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","canceled","refreshFieldNames","modelFieldNames","handleClose","Tabs","newIndex","Tab","DialogContentText","location","hostname","helperText","type","inputProps","step","defaultAnkiConnectUrl","defaultSubtitleColor","defaultSubtitleOutlineColor","defaultSubtitleBackgroundColor","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","audioClipFromItem","fromBase64","fromFile","audioTrack","Content","contentShift","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","setDisableKeyEvents","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.661089f6.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip) {\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text ? text.split(\"\\n\").join(\"<br>\") : text;\r\n        fields[this.settingsProvider.definitionField] = definition ? definition.split(\"\\n\").join(\"<br>\") : definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    audioField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, audioClip} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.audioField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition, audioClip)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio will be exported only if an audio source was available when the subtitle was copied.\r\n                        </li>\r\n                        <li>\r\n                            Configure Anki settings with the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=Khipc3zLMiA\">Sentence mining video files</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=fau1BNNDrEQ\">Sentence mining streaming video</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <Tabs\r\n                value={tabIndex}\r\n                variant=\"fullWidth\"\r\n                onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n            >\r\n                <Tab label=\"Anki\" />\r\n                <Tab label=\"In-Video Subtitles\" />\r\n            </Tabs>\r\n            {tabIndex === 0 && (\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                    </DialogContentText>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                />\r\n                            </div>\r\n                            <SelectableSetting\r\n                                label=\"Deck\"\r\n                                value={deck}\r\n                                selections={deckNames}\r\n                                onChange={handleDeckChange}\r\n                                onSelectionChange={handleDeckSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Note Type\"\r\n                                value={noteType}\r\n                                selections={modelNames}\r\n                                onChange={handleNoteTypeChange}\r\n                                onSelectionChange={handleNoteTypeSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Sentence Field\"\r\n                                value={sentenceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSentenceFieldChange}\r\n                                onSelectionChange={handleSentenceFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Definition Field\"\r\n                                value={definitionField}\r\n                                selections={fieldNames}\r\n                                onChange={handleDefinitionFieldChange}\r\n                                onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Audio Field\"\r\n                                value={audioField}\r\n                                selections={fieldNames}\r\n                                onChange={handleAudioFieldChange}\r\n                                onSelectionChange={handleAudioFieldSelectionChange}\r\n                            />\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            {tabIndex === 1 && (\r\n                <DialogContent>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Color\"\r\n                                    value={subtitleColor}\r\n                                    onChange={handleSubtitleColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Size\"\r\n                                    value={subtitleSize}\r\n                                    onChange={handleSubtitleSizeChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Outline Color\"\r\n                                    value={subtitleOutlineColor}\r\n                                    onChange={handleSubtitleOutlineColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Outline Thickness\"\r\n                                    value={subtitleOutlineThickness}\r\n                                    onChange={handleSubtitleOutlineThicknessChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Background Color\"\r\n                                    value={subtitleBackgroundColor}\r\n                                    onChange={handleSubtitleBackgroundColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Background Opacity\"\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        max: 1,\r\n                                        step: 0.1\r\n                                    }}\r\n                                    value={subtitleBackgroundOpacity}\r\n                                    onChange={handleSubtitleBackgroundOpacityChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey),\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.5.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for(const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}