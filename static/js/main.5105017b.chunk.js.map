{"version":3,"sources":["Util.js","Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","background.png","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","combined","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItem","backgroundColor","palette","action","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","background","inactiveButton","disabled","progress","margin","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","filter","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","Fade","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChange","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","table","marginBottom","subtitleRow","subtitle","compressedSubtitle","textAlign","copyButton","noSubtitles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","Object","keys","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","paused","echo","console","error","useStyles","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","api","offsetRef","videoFrameRef","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","videoColumns","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","init","subscribed","ready","onCurrentTime","onExit","onOffset","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","xs","Boolean","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowWidth","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","forward","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleClose","nocontrols","Content","contentShift","App","location","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alert","setAlert","alertOpen","setAlertOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","params","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.5105017b.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\nexport function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundImage: \"url(\" + background + \")\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n            const selected = Object.keys(selectedSubtitleIndexes);\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                {!compressed && (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"h6\">\r\n                            Drag and drop srt, ass, mp3, or mkv files.\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                            Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.1\">extension</Link> to sync subtitles with videos in other tabs.\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )}\r\n                {compressed && (\r\n                    <React.Fragment>\r\n                        <Typography>\r\n                            No subtitles loaded.\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} ref={containerRef} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\nimport { useWindowSize } from './Util';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {api, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const videoColumns = windowWidth < 1300 ? 8 : 9;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffset(0);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => {\r\n                            play(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onPause((echo) => {\r\n                            pause(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onCurrentTime((currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            seek(progress, clock, echo, (v) => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        channel.onAudioTrackSelected((id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            mediaAdapter.onReady()\r\n                                .then(() => {\r\n                                    if (playingRef.current) {\r\n                                        clock.start();\r\n                                    }\r\n                                });\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        channel.onExit(() => {\r\n                            onUnloadVideo(videoFileUrl);\r\n                        });\r\n\r\n                        channel.onOffset((offset) => {\r\n                            setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n                        });\r\n\r\n                        channel.onPopOutToggle(() => {\r\n                            setVideoPopOut(popOut => !popOut);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        props.onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item xs={videoColumns}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item xs={videoInWindow ? (12 - videoColumns) : 12}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { arrayEquals, useWindowSize } from './Util';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    if (now < subtitles[i].start) {\r\n                        newSubtitleIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                    const s = subtitles[i];\r\n\r\n                    if (now > s.start) {\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from './Util';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(location.pathname !== '/video');\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleAlertClosed = useCallback(() => {\n        setAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        const offset = offsetRef.current || 0;\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(\n                item.audioFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            )\n            .catch(e => {\n                handleError(e.message);\n            });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(\n                item.videoFile,\n                item.originalStart + offset,\n                item.originalEnd + offset,\n                item.audioTrack\n            )\n            .catch(e => {\n                handleError(e.message);\n            });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            api={api}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}