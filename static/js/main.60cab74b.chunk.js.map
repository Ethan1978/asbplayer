{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","../../common/src/KeyEvents.js","../../common/src/KeyBindings.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","a","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","now","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","id","currentTime","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","KeyEvents","ctrlKey","shiftKey","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bind","detectCopy","subtitle","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","subtitleStart","originalStart","adjacentSubtitleIndex","minDiff","MAX_SAFE_INTEGER","s","diff","increase","currentOffset","onToggleSubtitles","detectToggleSubtitles","handler","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","SubtitlePlayer","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","copy","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","paused","echo","subtitleFileName","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","availableTabs","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","forwardToVideo","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","bindToggleSubtitles","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.60cab74b.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.4a1beec0.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Alt+Z by default) to mine subtitles since that will include audio/screenshots.\r\n                        If the keyboard shortcut  is not working for some reason try:\r\n                        <Typography component=\"ul\">\r\n                            <li>Uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                            <li>Verifying the keyboard shortcut is  bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.</li>\r\n                        </Typography>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Specifically, for synced streaming video, an audio/image will only be available if the extension keyboard shortcut was used (Ctrl+Alt+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (drag and drop)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and the asbplayer extension has only been tested and Chrome 91 and later.\r\n                    </li>\r\n                    <li>\r\n                        The asbplayer application and the asbplayer extension may work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local video file playback is supported only for codecs supported by the browser.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts or use the copy button next to the subtitle.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && event.ctrlKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && event.ctrlKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectToggleSubtitles(event) {\r\n        // S\r\n        return event.keyCode === 83;\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectToggleSubtitles(event)) {\r\n                return;\r\n            }\r\n\r\n            onToggleSubtitles(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bind(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitle, onCopy) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        navigator.clipboard.writeText(subtitle.text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => copy(event, subtitle, onCopy),\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles[index], onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileName) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles, name: subtitleFileName});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, tab, availableTabs, onError, onUnloadVideo, onCopy, onLoaded, onTabSelected, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFile?.name);\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFile, offsetRef]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFile?.name);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={props.jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, themeType]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(\"Copied \" + subtitle.text);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => setSubtitlesEnabled(enabled => !enabled),\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.10.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const offsetRef = useRef();\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item, offsetRef.current || 0);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync') {\n                const tabs = availableTabs.filter(t => {\n                    if (t.id !== message.tabId) {\n                        return false;\n                    }\n\n                    return !message.src || t.src === message.src;\n                });\n\n                if (tabs.length === 0) {\n                    if (message.src) {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\n                    } else {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    }\n\n                    return;\n                }\n\n                const tab = tabs[0];\n                const subtitleFile = new File(\n                    [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                    message.data.subtitles.name\n                );\n                setFileName(subtitleFile.name);\n                setSources({\n                    subtitleFile: subtitleFile,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                    image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.mkv\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        offsetRef={offsetRef}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}