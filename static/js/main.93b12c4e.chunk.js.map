{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","Util.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","combined","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","useState","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainer","volumeInputHidden","short","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","background","inactiveButton","disabled","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","VolumeSlider","withStyles","verticalAlign","thumb","backgroundColor","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offsetValue","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","offset","Number","isNaN","blur","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","onMouseOver","onMouseOut","Fade","Grid","direction","volumeEnabled","onChange","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","toFixed","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","table","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","Object","keys","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffsetValue","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","o","newSubtitles","offsetSeconds","t1","t2","loaded","onMouseMove","screenX","screenY","Boolean","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","arrayEquals","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","nocontrols","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.93b12c4e.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainer: {\r\n        height: 48,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    },\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offsetValue, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            offsetInputRef.current.value= offsetValue;\r\n        }\r\n    }, [offsetValue]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => playing ? onPause() : onPlay()}\r\n                            >\r\n                                {playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        {props.volumeEnabled && (\r\n                            <Grid item\r\n                                onMouseOver={handleVolumeMouseOver}\r\n                                onMouseOut={handleVolumeMouseOut}\r\n                            >\r\n                                <IconButton onClick={handleVolumeToggle}>\r\n                                    {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                </IconButton>\r\n                                <VolumeSlider\r\n                                    onChange={handleVolumeChange}\r\n                                    onChangeCommitted={handleVolumeChangeCommitted}\r\n                                    value={volume}\r\n                                    defaultValue={100}\r\n                                    classes={{\r\n                                        root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                        thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                        <Grid item>\r\n                            <div className={classes.timeDisplay}>\r\n                                {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                            </div>\r\n                        </Grid>\r\n                        {offsetEnabled && (\r\n                            <Grid item>\r\n                                <Input\r\n                                    inputRef={offsetInputRef}\r\n                                    disableUnderline={true}\r\n                                    className={classes.offsetInput}\r\n                                    placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        {props.subtitlesToggle && (\r\n                            <Grid item>\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        )}\r\n                        {props.videoFile && (\r\n                            <Grid item>\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                             </Grid>\r\n                        )}\r\n                        {props.audioFile && (\r\n                            <Grid item>\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        )}\r\n                        {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                            <Grid item>\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        )}\r\n                        {props.tabs && props.tabs.length > 0 && (\r\n                            <Grid item>\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        )}\r\n                        {props.fullscreenEnabled && (\r\n                            <Grid item>\r\n                                <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                    {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                </IconButton>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75 // so the last row doesn't collide with controls\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n            const selected = Object.keys(selectedSubtitleIndexes);\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offsetValue, setOffsetValue] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffsetValue(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        props.onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((o) => {\r\n        const offset = Math.max(-lengthRef.current ?? 0, o);\r\n        const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n        const newSubtitles = subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            displayTime: timeDuration(s.originalStart + offset, length)\r\n        }));\r\n\r\n        setSubtitles(newSubtitles);\r\n        videoRef.current?.subtitles(newSubtitles);\r\n\r\n        const offsetSeconds = offset / 1000;\r\n        const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n        setOffsetValue(value);\r\n    }, [subtitles]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                offsetEnabled={true}\r\n                offsetValue={offsetValue}\r\n                volumeEnabled={Boolean(audioFileUrl)}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                onOffsetChange={handleOffsetChange}\r\n                onVolumeChange={handleVolumeChange}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { arrayEquals } from './Util';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={false}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                volumeEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e00cf',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}