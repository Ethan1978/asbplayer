{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","image","word","source","fields","sentenceField","split","join","definitionField","wordField","sourceField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","audio","filename","data","imageField","picture","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","setDefinition","setText","setWord","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","target","rows","onClick","DialogActions","Button","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","backgroundSize","Math","min","img","Image","onload","fetchImage","Card","CardMedia","title","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","Bar","drawerWidth","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","background","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","condensedModeToggleEnabled","onCondensedModeToggle","condensedModeEnabled","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","default","table","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","onExit","onOffset","newValue","condensedModeToggle","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","marginTop","subtitleSetting","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","fieldNames","setFieldNames","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","handleImageFieldChange","handleImageFieldSelectionChange","handleWordFieldChange","handleWordFieldSelectionChange","handleSourceFieldChange","handleSourceFieldSelectionChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","canceled","refreshFieldNames","modelFieldNames","handleClose","Tabs","newIndex","Tab","DialogContentText","location","hostname","helperText","type","inputProps","step","defaultAnkiConnectUrl","defaultSubtitleColor","defaultSubtitleOutlineColor","defaultSubtitleBackgroundColor","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","contentShift","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.cece564e.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip, image, word, source) {\r\n        const fields = {};\r\n\r\n        if (this.settingsProvider.sentenceField && text) {\r\n            fields[this.settingsProvider.sentenceField] = text ? text.split(\"\\n\").join(\"<br>\") : text;\r\n        }\r\n\r\n        if (this.settingsProvider.definitionField && definition) {\r\n            fields[this.settingsProvider.definitionField] = definition ? definition.split(\"\\n\").join(\"<br>\") : definition;\r\n        }\r\n\r\n        if (this.settingsProvider.wordField && word) {\r\n            fields[this.settingsProvider.wordField] = word;\r\n        }\r\n\r\n        if (this.settingsProvider.sourceField && source) {\r\n            fields[this.settingsProvider.sourceField] = source;\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            params.note.picture = {\r\n                filename: image.name,\r\n                data: await image.base64(),\r\n                fields: [\r\n                    this.settingsProvider.imageField\r\n                ]\r\n            }\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, audioClip, image, source} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n        }\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio and/or image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                        </li>\r\n                        <li>\r\n                            Configure Anki settings with the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = (width, height) => makeStyles((theme) => ({\r\n    image: {\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    }\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles(width * resizeRatio, height * resizeRatio);\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents, settingsProvider} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={(e) => props.onCondensedModeToggle()}>\r\n                                            <SpeedIcon className={props.condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp, disableKeyEvents} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleImageFieldSelectionChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleWordFieldSelectionChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSourceFieldSelectionChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(ankiConnectUrl, noteType)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <Tabs\r\n                value={tabIndex}\r\n                variant=\"fullWidth\"\r\n                onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n            >\r\n                <Tab label=\"Anki\" />\r\n                <Tab label=\"In-Video Subtitles\" />\r\n            </Tabs>\r\n            {tabIndex === 0 && (\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                        Leaving a field blank is fine.\r\n                    </DialogContentText>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                />\r\n                            </div>\r\n                            <SelectableSetting\r\n                                label=\"Deck\"\r\n                                value={deck}\r\n                                selections={deckNames}\r\n                                onChange={handleDeckChange}\r\n                                onSelectionChange={handleDeckSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Note Type\"\r\n                                value={noteType}\r\n                                selections={modelNames}\r\n                                onChange={handleNoteTypeChange}\r\n                                onSelectionChange={handleNoteTypeSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Sentence Field\"\r\n                                value={sentenceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSentenceFieldChange}\r\n                                onSelectionChange={handleSentenceFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Definition Field\"\r\n                                value={definitionField}\r\n                                selections={fieldNames}\r\n                                onChange={handleDefinitionFieldChange}\r\n                                onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Word Field\"\r\n                                value={wordField}\r\n                                selections={fieldNames}\r\n                                onChange={handleWordFieldChange}\r\n                                onSelectionChange={handleWordFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Audio Field\"\r\n                                value={audioField}\r\n                                selections={fieldNames}\r\n                                onChange={handleAudioFieldChange}\r\n                                onSelectionChange={handleAudioFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Image Field\"\r\n                                value={imageField}\r\n                                selections={fieldNames}\r\n                                onChange={handleImageFieldChange}\r\n                                onSelectionChange={handleImageFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Source Field\"\r\n                                value={sourceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSourceFieldChange}\r\n                                onSelectionChange={handleSourceFieldSelectionChange}\r\n                            />\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            {tabIndex === 1 && (\r\n                <DialogContent>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Color\"\r\n                                    value={subtitleColor}\r\n                                    onChange={handleSubtitleColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Size\"\r\n                                    value={subtitleSize}\r\n                                    onChange={handleSubtitleSizeChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Outline Color\"\r\n                                    value={subtitleOutlineColor}\r\n                                    onChange={handleSubtitleOutlineColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Outline Thickness\"\r\n                                    value={subtitleOutlineThickness}\r\n                                    onChange={handleSubtitleOutlineThicknessChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Background Color\"\r\n                                    value={subtitleBackgroundColor}\r\n                                    onChange={handleSubtitleBackgroundColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Background Opacity\"\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        max: 1,\r\n                                        step: 0.1\r\n                                    }}\r\n                                    value={subtitleBackgroundOpacity}\r\n                                    onChange={handleSubtitleBackgroundOpacityChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey),\r\n            imageField: localStorage.getItem(imageFieldKey),\r\n            wordField: localStorage.getItem(wordFieldKey),\r\n            sourceField: localStorage.getItem(sourceFieldKey),\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}