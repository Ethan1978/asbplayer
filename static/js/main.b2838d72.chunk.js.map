{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/SubtitleReader.js","services/MediaClipper.js","components/Bar.js","components/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","components/BroadcastChannelVideoProtocol.js","components/ChromeTabVideoProtocol.js","components/Clock.js","components/Controls.js","components/MediaAdapter.js","components/KeyEvents.js","components/SubtitlePlayer.js","components/Util.js","components/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","components/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioBlob","audioFileName","audioFileExtension","_blobToBase64","audioBase64","fields","sentenceField","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audio","filename","Date","now","data","audioField","action","body","version","fetch","method","JSON","stringify","json","error","Error","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","base64","substr","indexOf","useStyles","theme","margin","spacing","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","Dialog","disableEnforceFocus","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","multiline","maxRows","label","value","onChange","e","target","rows","DialogActions","Button","onClick","SubtitleReader","file","name","endsWith","then","parseSync","nodes","map","node","sort","n1","n2","start","parse","parsed","events","dialogue","event","Math","round","Start","end","End","Text","combined","AUDIO_TYPES","MediaClipper","trackId","clipAudio","extension","_saveToFile","_nameWithoutExtension","media","Audio","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","play","stream","_captureStream","getVideoTracks","stop","_findMediaType","mimeType","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","Blob","pause","revokeObjectURL","fileName","substring","lastIndexOf","url","a","document","createElement","appendChild","style","href","download","click","remove","Object","keys","filter","isTypeSupported","captureStream","mozCaptureStream","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","IconButton","edge","onOpenSettings","color","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","listContainer","height","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","flexDirection","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","loading","Fade","Link","rel","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","startTime","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","copySubtitle","subtitleIndexes","index","TableContainer","Table","TableBody","TableRow","TableCell","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","onExit","onOffset","onCurrentTime","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","SettingsDialog","anki","settings","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","handleAnkiConnectUrlChange","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","modelFieldNames","refreshFieldNames","handleClose","DialogContentText","location","hostname","helperText","defaultAnkiConnectUrl","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","nocontrols","Content","contentShift","App","mediaClipper","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clipAndSaveAudio","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","mediaFile","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.b2838d72.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioBlob, audioFileName, audioFileExtension) {\r\n        const audioBase64 = audioBlob ? await this._blobToBase64(audioBlob) : null;\r\n\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text;\r\n        fields[this.settingsProvider.definitionField] = definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioBase64 && audioFileName) {\r\n            params.note.audio = {\r\n                filename: audioFileName + \"_\" + Date.now() + \".\" + audioFileExtension,\r\n                data: audioBase64,\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        this._executeAction(ankiConnectUrl, 'addNote', params);\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n\r\n    async _blobToBase64(blob) {\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        maxRows={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n                });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    })\r\n                    .sort((n1, n2) => n1.start - n2.start)\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\n\r\nexport default class MediaClipper {\r\n\r\n    async clipAndSaveAudio(file, start, end, trackId) {\r\n        const [blob, extension] = await this.clipAudio(file, start, end, trackId);\r\n        await this._saveToFile(blob,  this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".\" + extension);\r\n    }\r\n\r\n    async clipAudio(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n                const media = new Audio();\r\n                media.src = URL.createObjectURL(file);\r\n                media.preload = \"none\";\r\n\r\n                // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n                if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n                    for (const t of media.audioTracks) {\r\n                        t.enabled = trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                media.currentTime = start / 1000;\r\n                media.load();\r\n\r\n                media.oncanplay = (e) => {\r\n                    media.play();\r\n                    const stream = this._captureStream(media);\r\n\r\n                    for (const t of stream.getVideoTracks()) {\r\n                        t.stop();\r\n                    }\r\n\r\n                    const [mimeType, extension] = this._findMediaType();\r\n                    const recorder = new MediaRecorder(stream, { mimeType: mimeType });\r\n                    const chunks = [];\r\n                    recorder.ondataavailable = (e) => {\r\n                        chunks.push(e.data);\r\n                    };\r\n                    recorder.onstop = (e) => {\r\n                        resolve([new Blob(chunks), extension]);\r\n                    };\r\n                    recorder.start();\r\n                    setTimeout(() => {\r\n                        media.pause();\r\n                        recorder.stop();\r\n                        const src = media.src;\r\n                        media.src = null;\r\n                        URL.revokeObjectURL(src);\r\n                    }, end - start + 100);\r\n                };\r\n        });\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    _findMediaType() {\r\n        return Object.keys(AUDIO_TYPES)\r\n                .filter(MediaRecorder.isTypeSupported)\r\n                .map(t => [t, AUDIO_TYPES[t]])[0];\r\n    }\r\n\r\n    _captureStream(media) {\r\n        if (typeof media.captureStream === \"function\") {\r\n            return media.captureStream();\r\n        }\r\n\r\n        if (typeof media.mozCaptureStream === \"function\") {\r\n            return media.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from media\");\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    onClick={props.onOpenSettings}\r\n                >\r\n                    <SettingsIcon/>\r\n                </IconButton>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onAnki(item)}>\r\n                            <StarIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {loading} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, mp3, or mkv files. <br />\r\n                        Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.1\">extension</Link> to sync subtitles with videos in other tabs.\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport { detectCopy } from './KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType) {\r\n            return;\r\n        }\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle>\r\n                Settings\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                </DialogContentText>\r\n                <form className={classes.root}>\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Anki Connect URL\"\r\n                            value={ankiConnectUrl}\r\n                            error={Boolean(ankiConnectUrlError)}\r\n                            helperText={ankiConnectUrlError}\r\n                            onChange={handleAnkiConnectUrlChange}\r\n                        />\r\n                    </div>\r\n                    <SelectableSetting\r\n                        label=\"Deck\"\r\n                        value={deck}\r\n                        selections={deckNames}\r\n                        onChange={handleDeckChange}\r\n                        onSelectionChange={handleDeckSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Note Type\"\r\n                        value={noteType}\r\n                        selections={modelNames}\r\n                        onChange={handleNoteTypeChange}\r\n                        onSelectionChange={handleNoteTypeSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Sentence Field\"\r\n                        value={sentenceField}\r\n                        selections={fieldNames}\r\n                        onChange={handleSentenceFieldChange}\r\n                        onSelectionChange={handleSentenceFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Definition Field\"\r\n                        value={definitionField}\r\n                        selections={fieldNames}\r\n                        onChange={handleDefinitionFieldChange}\r\n                        onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Audio Field\"\r\n                        value={audioField}\r\n                        selections={fieldNames}\r\n                        onChange={handleAudioFieldChange}\r\n                        onSelectionChange={handleAudioFieldSelectionChange}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey)\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from './Util'\r\nimport { detectCopy } from './KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js'\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport MediaClipper from '../services/MediaClipper.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for(const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const mediaClipper = useMemo(() => new MediaClipper(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        const offset = offsetRef.current || 0;\n        try {\n            await mediaClipper.clipAndSaveAudio(\n                item.audioFile || item.videoFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [mediaClipper, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback(async (item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition) => {\n        setAnkiDialogDisabled(true);\n        const item = ankiDialogItem;\n        const offset = offsetRef.current || 0;\n\n        try {\n            const mediaFile = item.audioFile || item.videoFile;\n            const [blob, extension] = await mediaClipper.clipAudio(\n                mediaFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n            await anki.export(settingsProvider.ankiConnectUrl, text, definition, blob, mediaFile.name, extension);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, mediaClipper, handleError, ankiDialogItem]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = loading || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage loading={loading} />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}