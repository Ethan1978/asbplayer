{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/SubtitleReader.js","services/MediaClipper.js","components/Bar.js","components/ChromeExtension.js","components/CopyHistory.js","components/BroadcastChannelVideoProtocol.js","components/ChromeTabVideoProtocol.js","components/Clock.js","components/Controls.js","components/MediaAdapter.js","components/KeyEvents.js","components/background.png","components/SubtitlePlayer.js","components/Util.js","components/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","components/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioBlob","audioFileName","audioFileExtension","_blobToBase64","audioBase64","fields","sentenceField","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audio","filename","Date","now","data","audioField","action","body","version","fetch","method","JSON","stringify","json","error","Error","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","base64","substr","indexOf","useStyles","theme","margin","spacing","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","Dialog","disableEnforceFocus","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","multiline","maxRows","label","value","onChange","e","target","rows","DialogActions","Button","onClick","SubtitleReader","file","name","endsWith","then","parseSync","nodes","map","node","sort","n1","n2","start","parse","parsed","events","dialogue","event","Math","round","Start","end","End","Text","combined","AUDIO_TYPES","MediaClipper","trackId","clipAudio","extension","_saveToFile","_nameWithoutExtension","media","Audio","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","play","stream","_captureStream","getVideoTracks","stop","_findMediaType","mimeType","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","Blob","pause","revokeObjectURL","fileName","substring","lastIndexOf","url","a","document","createElement","appendChild","style","href","download","click","remove","Object","keys","filter","isTypeSupported","captureStream","mozCaptureStream","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","IconButton","edge","onOpenSettings","color","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","listContainer","height","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","background","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","Fade","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","loading","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","subtitleRow","subtitle","overflowWrap","compressedSubtitle","textAlign","copyButton","noSubtitles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","copySubtitle","subtitleIndexes","index","TableContainer","Table","TableBody","TableRow","TableCell","Link","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","loadingSubtitles","setLoadingSubtitles","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","finally","onReady","init","subscribed","ready","onCurrentTime","onExit","onOffset","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","SettingsDialog","anki","settings","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","handleAnkiConnectUrlChange","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","modelFieldNames","refreshFieldNames","handleClose","DialogContentText","location","hostname","helperText","defaultAnkiConnectUrl","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","nocontrols","Content","contentShift","App","mediaClipper","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clipAndSaveAudio","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","mediaFile","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.73ac909b.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioBlob, audioFileName, audioFileExtension) {\r\n        const audioBase64 = audioBlob ? await this._blobToBase64(audioBlob) : null;\r\n\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text;\r\n        fields[this.settingsProvider.definitionField] = definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioBase64 && audioFileName) {\r\n            params.note.audio = {\r\n                filename: audioFileName + \"_\" + Date.now() + \".\" + audioFileExtension,\r\n                data: audioBase64,\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        this._executeAction(ankiConnectUrl, 'addNote', params);\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n\r\n    async _blobToBase64(blob) {\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        maxRows={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    })\r\n                    .sort((n1, n2) => n1.start - n2.start)\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\n\r\nexport default class MediaClipper {\r\n\r\n    async clipAndSaveAudio(file, start, end, trackId) {\r\n        const [blob, extension] = await this.clipAudio(file, start, end, trackId);\r\n        await this._saveToFile(blob,  this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".\" + extension);\r\n    }\r\n\r\n    async clipAudio(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n                const media = new Audio();\r\n                media.src = URL.createObjectURL(file);\r\n                media.preload = \"none\";\r\n\r\n                // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n                if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n                    for (const t of media.audioTracks) {\r\n                        t.enabled = trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                media.currentTime = start / 1000;\r\n                media.load();\r\n\r\n                media.oncanplay = (e) => {\r\n                    media.play();\r\n                    const stream = this._captureStream(media);\r\n\r\n                    for (const t of stream.getVideoTracks()) {\r\n                        t.stop();\r\n                    }\r\n\r\n                    const [mimeType, extension] = this._findMediaType();\r\n                    const recorder = new MediaRecorder(stream, { mimeType: mimeType });\r\n                    const chunks = [];\r\n                    recorder.ondataavailable = (e) => {\r\n                        chunks.push(e.data);\r\n                    };\r\n                    recorder.onstop = (e) => {\r\n                        resolve([new Blob(chunks), extension]);\r\n                    };\r\n                    recorder.start();\r\n                    setTimeout(() => {\r\n                        media.pause();\r\n                        recorder.stop();\r\n                        const src = media.src;\r\n                        media.src = null;\r\n                        URL.revokeObjectURL(src);\r\n                    }, end - start + 100);\r\n                };\r\n        });\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    _findMediaType() {\r\n        return Object.keys(AUDIO_TYPES)\r\n                .filter(MediaRecorder.isTypeSupported)\r\n                .map(t => [t, AUDIO_TYPES[t]])[0];\r\n    }\r\n\r\n    _captureStream(media) {\r\n        if (typeof media.captureStream === \"function\") {\r\n            return media.captureStream();\r\n        }\r\n\r\n        if (typeof media.mozCaptureStream === \"function\") {\r\n            return media.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from media\");\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    onClick={props.onOpenSettings}\r\n                >\r\n                    <SettingsIcon/>\r\n                </IconButton>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onAnki(item)}>\r\n                            <StarIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport { detectCopy } from './KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundImage: \"url(\" + background + \")\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles && compressed && loading) {\r\n        subtitleTable = null;\r\n    } else if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                    {!compressed && (\r\n                        <Fade in={!loading} timeout={500}>\r\n                            <Typography>\r\n                                Drag and drop srt, ass, mp3, or mkv files. <br />\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.1\">extension</Link> to sync subtitles with videos in other tabs.\r\n                            </Typography>\r\n                        </Fade>\r\n                    )}\r\n                    {compressed && !loading && (\r\n                        <Typography>\r\n                            No subtitles loaded. Drag and drop to load.\r\n                        </Typography>\r\n                    )}\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffset(0);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            setLoadingSubtitles(true);\r\n\r\n            subtitlesPromise = subtitleReader.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e))\r\n                .finally(() => setLoadingSubtitles(false))\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => {\r\n                            play(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onPause((echo) => {\r\n                            pause(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onCurrentTime((currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            seek(progress, clock, echo, (v) => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        channel.onAudioTrackSelected((id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            mediaAdapter.onReady()\r\n                                .then(() => {\r\n                                    if (playingRef.current) {\r\n                                        clock.start();\r\n                                    }\r\n                                });\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        channel.onExit(() => {\r\n                            onUnloadVideo(videoFileUrl);\r\n                        });\r\n\r\n                        channel.onOffset((offset) => {\r\n                            setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n                        });\r\n\r\n                        channel.onPopOutToggle(() => {\r\n                            setVideoPopOut(popOut => !popOut);\r\n                        });\r\n\r\n                        channel.onCopy((subtitle) => {\r\n                            onCopy(\r\n                                subtitle,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitleFile,\r\n                                channel.selectedAudioTrack\r\n                            );\r\n                        })\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType) {\r\n            return;\r\n        }\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n        >\r\n            <DialogTitle>\r\n                Settings\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                </DialogContentText>\r\n                <form className={classes.root}>\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Anki Connect URL\"\r\n                            value={ankiConnectUrl}\r\n                            error={Boolean(ankiConnectUrlError)}\r\n                            helperText={ankiConnectUrlError}\r\n                            onChange={handleAnkiConnectUrlChange}\r\n                        />\r\n                    </div>\r\n                    <SelectableSetting\r\n                        label=\"Deck\"\r\n                        value={deck}\r\n                        selections={deckNames}\r\n                        onChange={handleDeckChange}\r\n                        onSelectionChange={handleDeckSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Note Type\"\r\n                        value={noteType}\r\n                        selections={modelNames}\r\n                        onChange={handleNoteTypeChange}\r\n                        onSelectionChange={handleNoteTypeSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Sentence Field\"\r\n                        value={sentenceField}\r\n                        selections={fieldNames}\r\n                        onChange={handleSentenceFieldChange}\r\n                        onSelectionChange={handleSentenceFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Definition Field\"\r\n                        value={definitionField}\r\n                        selections={fieldNames}\r\n                        onChange={handleDefinitionFieldChange}\r\n                        onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Audio Field\"\r\n                        value={audioField}\r\n                        selections={fieldNames}\r\n                        onChange={handleAudioFieldChange}\r\n                        onSelectionChange={handleAudioFieldSelectionChange}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey)\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from './Util'\r\nimport { detectCopy } from './KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => {\r\n        setAlertOpen(false);\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js'\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport MediaClipper from '../services/MediaClipper.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const mediaClipper = useMemo(() => new MediaClipper(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(location.pathname !== '/video');\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen);\n    }, []);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, []);\n\n    const handleOpenSettings = useCallback(() => {\n        setSettingsDialogOpen(true);\n    }, []);\n\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleAlertClosed = useCallback(() => {\n        setAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        const offset = offsetRef.current || 0;\n        try {\n            await mediaClipper.clipAndSaveAudio(\n                item.audioFile || item.videoFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [mediaClipper, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback(async (item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition) => {\n        setAnkiDialogDisabled(true);\n        const item = ankiDialogItem;\n        const offset = offsetRef.current || 0;\n\n        try {\n            const mediaFile = item.audioFile || item.videoFile;\n            const [blob, extension] = await mediaClipper.clipAudio(\n                mediaFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n            await anki.export(settingsProvider.ankiConnectUrl, text, definition, blob, mediaFile.name, extension);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, mediaClipper, handleError, ankiDialogItem]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}