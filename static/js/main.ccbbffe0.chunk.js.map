{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/Util.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","name","base64","extension","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","audioName","substring","lastIndexOf","floor","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","canvas","dataUrl","toDataURL","toBlob","video","_videoElement","width","videoWidth","height","videoHeight","getContext","drawImage","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","specialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","action","version","error","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","min","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","track","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","round","Start","End","Text","combined","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","hex","exec","r","parseInt","g","b","hexToRgb","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","then","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","bindPlay","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","subtitlePreview","disabledBackground","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","audioPaddingStart","setAudioPaddingStart","audioPaddingEnd","setAudioPaddingEnd","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","disabledSubtitleTracks","setDisabledSubtitleTracks","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrack","newTracks","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.ccbbffe0.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n\r\n    constructor({up, holding, canceledBy, map}) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return {result: result, extra: extra};\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57]});\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({holding: [83], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrack(onToggleSubtitleTrack, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        const audioName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + Math.floor(start) + \"_\" + Math.floor(end);\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n}","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass etc.\r\n                    </li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded,\r\n                        they can be toggled on and off using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Alt+X by default) to mine subtitles since that will include audio/screenshots.\r\n                        If the keyboard shortcut  is not working for some reason try:\r\n                        <Typography component=\"ul\">\r\n                            <li>Uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                            <li>Verifying the keyboard shortcut is  bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.</li>\r\n                        </Typography>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Specifically, for synced streaming video, an audio/image will only be available if the extension keyboard shortcut was used (Ctrl+Alt+X by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S+1, S+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2...</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right or Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later.\r\n                    </li>\r\n                    <li>\r\n                        The asbplayer application and extension may work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local video file playback is supported only for codecs supported by the browser.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap(nodes => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => ({...node.data, track: track}));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track\r\n                        }))\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(\r\n            selection?.type === 'Range'\r\n            && textRef.current?.isSameNode(selection.anchorNode.parentNode)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    onCopy(subtitles[Math.min(...subtitleIndexes)], true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], false);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image, event.data.preventDuplicate);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest() {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest'});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({command: 'miscSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings } from '@project/common';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length),\r\n                track: s.track\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFiles.map(f => f.name));\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFiles]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length),\r\n                        track: s.track\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFiles.map(f => f.name));\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image, preventDuplicate) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFiles[subtitle.track],\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest) {\r\n            videoRef.current?.finishedAnkiDialogRequest();\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFiles[subtitle.track],\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType, audioPaddingStart, audioPaddingEnd]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst audioPaddingStartKey = \"audioPaddingStart\";\r\nconst audioPaddingEndKey = \"audioPaddingEnd\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async () => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                try {\r\n                    await containerRef.current?.requestFullscreen();\r\n                } catch(e) {\r\n                    console.error(e);\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            track: s.track\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled(enabled => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrack(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks(tracks => {\r\n                    const newTracks = {...tracks};\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    playerChannel.copy(showSubtitlesRef.current[0], true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n                \r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport { Anki, AudioClip, Image } from '@project/common';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.12.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFiles = [];\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                subtitleFiles.push(f);\n                break;\n            case \"mkv\":\n            case \"mp4\":\n            case \"avi\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n            case \"aac\":\n            case \"flac\":\n            case \"ogg\":\n            case \"wav\":\n            case \"opus\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, paddingStart, paddingEnd) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile.name,\n            Math.max(0, item.start - (item.audio.paddingStart || 0)),\n            item.end + (item.audio.paddingEnd || 0),\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            Math.max(0, item.start - paddingStart),\n            item.end + paddingEnd,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile.name,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.start\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const copiedSubtitlesRef = useRef();\n    copiedSubtitlesRef.current = copiedSubtitles;\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({subtitleFiles: []});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const ankiDialogAudioClip = useMemo(\n        () => ankiDialogItem && audioClipFromItem(ankiDialogItem, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd),\n        [ankiDialogItem, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]\n    );\n    const ankiDialogImage = useMemo(() => ankiDialogItem && imageFromItem(ankiDialogItem), [ankiDialogItem]);\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState(0);\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const fileInputRef = useRef();\n    const {subtitleFiles} = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate) => {\n        navigator.clipboard.writeText(subtitle.text);\n        setCopiedSubtitles(copiedSubtitles => {\n            if (preventDuplicate && copiedSubtitles.length > 0) {\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\n\n                if (subtitle.start === last.start\n                    && subtitle.end === last.end\n                    && subtitle.text === last.text\n                    && subtitleFile.name === last.subtitleFile.name) {\n                        return copiedSubtitles;\n                    }\n            }\n\n            return [...copiedSubtitles, {\n                ...subtitle,\n                timestamp: Date.now(),\n                name: fileName,\n                subtitleFile: subtitleFile,\n                audioFile: audioFile,\n                videoFile: videoFile,\n                audioTrack: audioTrack,\n                audio: audio,\n                image: image\n            }];\n        });\n\n        setAlertSeverity(\"success\");\n        setAlert(`Copied: \"${subtitle.text}\"`);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => {\n        setDisableKeyEvents(true);\n        setSettingsDialogOpen(true);\n    }, []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        setDisableKeyEvents(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\n        extension.publishMessage({command: 'miscSettings', value: settingsProvider.miscSettings});\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFiles: previous.subtitleFiles,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFiles: previous.subtitleFiles,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFiles.filter(f => f.name === item.subtitleFile.name).length === 0) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFiles, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n\n        if (ankiDialogRequested) {\n            setAnkiDialogFinishedRequest(Date.now());\n            setAnkiDialogRequested(false);\n        }\n    }, [ankiDialogRequested]);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                mode\n            );\n\n            if (mode === 'default') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            } else if (mode === 'updateLast') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Update succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n\n            if (ankiDialogRequested) {\n                setAnkiDialogFinishedRequest(Date.now());\n                setAnkiDialogRequested(false);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, ankiDialogRequested]);\n\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\n        if (copiedSubtitlesRef.current.length === 0) {\n            return;\n        }\n\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n        setAnkiDialogRequested(true);\n\n        if (forwardToVideo) {\n            setAnkiDialogRequestToVideo(Date.now());\n        }\n    }, []);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFiles, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFiles.length > 0) {\n                setFileName(subtitleFiles[0].name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\n                const tabs = availableTabs.filter(t => {\n                    if (t.id !== message.tabId) {\n                        return false;\n                    }\n\n                    return !message.src || t.src === message.src;\n                });\n\n                if (tabs.length === 0) {\n                    if (message.src) {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\n                    } else {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    }\n\n                    return;\n                }\n\n                const tab = tabs[0];\n                let subtitleFiles;\n\n                if (message.data.command === 'sync') {\n                    subtitleFiles = [new File(\n                        [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                        message.data.subtitles.name\n                    )];\n                } else if (message.data.command === 'syncv2') {\n                    subtitleFiles = await Promise.all(message.data.subtitles.map(async (s) => new File(\n                        [await (await fetch(\"data:text/plain;base64,\" + s.base64)).blob()],\n                        s.name\n                    )));\n                }\n\n                setFileName(subtitleFiles[0].name);\n                setSources({\n                    subtitleFiles: subtitleFiles,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogAudioClip}\n                                    image={ankiDialogImage}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                        ankiDialogRequested={ankiDialogRequested}\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}