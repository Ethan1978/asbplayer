{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","now","trimmedWord","trim","a","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","id","currentTime","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","defaultBackground","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","handleMouseOver","handleMouseOut","savedVolume","Number","interval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onMouseOver","onMouseOut","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","copy","subtitleIndex","scrollIfVisible","visibilityState","firstSubtitleRef","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","paused","echo","subtitleFileName","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","availableTabs","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","setTime","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.56b164b1.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.2ecce0ce.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileName) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles, name: subtitleFileName});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, tab, availableTabs, onError, onUnloadVideo, onCopy, onLoaded, onTabSelected, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFile?.name);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles, subtitleFile?.name);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [subtitleFile, offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab && tab.id}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={props.jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                                    Leaving a field blank is fine.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.7.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const offsetRef = useRef();\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        settingsProvider.preferMp3 = newSettings.preferMp3;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item, offsetRef.current || 0);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((id) => {\n        const tab = availableTabs.filter(t => t.id === id)[0];\n        setTab(tab);\n    }, [availableTabs]);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync') {\n                const tabs = availableTabs.filter(t => t.id === message.tabId);\n\n                if (tabs.length === 0) {\n                    console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    return;\n                }\n\n                const tab = tabs[0];\n                const subtitleFile = new File(\n                    [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                    message.data.subtitles.name\n                );\n                setFileName(subtitleFile.name);\n                setSources({\n                    subtitleFile: subtitleFile,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                anki={anki}\n                                settingsProvider={settingsProvider}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                                onFileSelector={handleFileSelector}\n                            />\n                            <input\n                                ref={fileInputRef}\n                                onChange={handleFileInputChange}\n                                type=\"file\"\n                                accept=\".srt,.ass,.vtt,.mp3,.m4a,.mkv\"\n                                multiple\n                                hidden\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                        onFileSelector={handleFileSelector}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} loading={loading} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    onTabSelected={handleTabSelected}\n                                    offsetRef={offsetRef}\n                                    tab={tab}\n                                    availableTabs={availableTabs}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}