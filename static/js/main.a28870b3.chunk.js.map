{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/Util.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bind","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","detectToggleSubtitles","onToggleSubtitleTrack","track","detectToggleSubtitleTrack","handler","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","result","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","type","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","name","base64","extension","this","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","audioName","substring","lastIndexOf","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","canvas","dataUrl","toDataURL","toBlob","video","_videoElement","width","videoWidth","height","videoHeight","getContext","drawImage","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","specialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","includes","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","action","version","error","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","min","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","hex","exec","r","parseInt","g","b","hexToRgb","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","condensedModeToggle","onOffset","onCurrentTime","then","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","subtitlePreview","disabledBackground","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","disabledSubtitleTracks","setDisabledSubtitleTracks","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrack","newTracks","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.a28870b3.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && event.ctrlKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && event.ctrlKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectToggleSubtitles(event) {\r\n        // S\r\n        return event.keyCode === 83;\r\n    }\r\n\r\n    static detectToggleSubtitleTrack(event) {\r\n        if (!event.ctrlKey) {\r\n            return false;\r\n        }\r\n\r\n        // 1...9\r\n        switch (event.keyCode) {\r\n            case 49:\r\n                return 0;\r\n            case 50:\r\n                return 1;\r\n            case 51:\r\n                return 2;\r\n            case 52:\r\n                return 3;\r\n            case 53:\r\n                return 4;\r\n            case 54:\r\n                return 5;\r\n            case 55:\r\n                return 6;\r\n            case 56:\r\n                return 7;\r\n            case 57:\r\n                return 8;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectToggleSubtitles(event)) {\r\n                return;\r\n            }\r\n\r\n            onToggleSubtitles(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitleTrack(onToggleSubtitleTrack, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const track = KeyEvents.detectToggleSubtitleTrack(event);\r\n\r\n            if (track === false) {\r\n                return;\r\n            }\r\n\r\n            onToggleSubtitleTrack(event, track);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bind(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        const audioName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n}","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass etc.\r\n                    </li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded,\r\n                        they can be toggled on and off using Ctrl+1, Ctrl+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Alt+X by default) to mine subtitles since that will include audio/screenshots.\r\n                        If the keyboard shortcut  is not working for some reason try:\r\n                        <Typography component=\"ul\">\r\n                            <li>Uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                            <li>Verifying the keyboard shortcut is  bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.</li>\r\n                        </Typography>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Specifically, for synced streaming video, an audio/image will only be available if the extension keyboard shortcut was used (Ctrl+Alt+X by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+1, Ctrl+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2...</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later.\r\n                    </li>\r\n                    <li>\r\n                        The asbplayer application and extension may work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local video file playback is supported only for codecs supported by the browser.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap(nodes => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => ({...node.data, track: track}));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track\r\n                        }))\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    onCopy(subtitles[Math.min(...subtitleIndexes)], true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], false);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image, event.data.preventDuplicate);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest() {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest'});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length),\r\n                track: s.track\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFiles.map(f => f.name));\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFiles]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length),\r\n                        track: s.track\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFiles.map(f => f.name));\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image, preventDuplicate) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFiles[subtitle.track],\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest) {\r\n            videoRef.current?.finishedAnkiDialogRequest();\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFiles[subtitle.track],\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async () => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                try {\r\n                    await containerRef.current?.requestFullscreen();\r\n                } catch(e) {\r\n                    console.error(e);\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 100)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            track: s.track\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled(enabled => !enabled);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrack(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks(tracks => {\r\n                    const newTracks = {...tracks};\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    playerChannel.copy(showSubtitlesRef.current[0], true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport { Anki, AudioClip, Image } from '@project/common';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.11.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFiles = [];\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                subtitleFiles.push(f);\n                break;\n            case \"mkv\":\n            case \"mp4\":\n            case \"avi\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n            case \"aac\":\n            case \"flac\":\n            case \"ogg\":\n            case \"wav\":\n            case \"opus\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile.name,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.start,\n            item.end,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile.name,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.start\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const copiedSubtitlesRef = useRef();\n    copiedSubtitlesRef.current = copiedSubtitles;\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({subtitleFiles: []});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const ankiDialogAudioClip = useMemo(() => ankiDialogItem && audioClipFromItem(ankiDialogItem), [ankiDialogItem]);\n    const ankiDialogImage = useMemo(() => ankiDialogItem && imageFromItem(ankiDialogItem), [ankiDialogItem]);\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState(0);\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const fileInputRef = useRef();\n    const {subtitleFiles} = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate) => {\n        navigator.clipboard.writeText(subtitle.text);\n        setCopiedSubtitles(copiedSubtitles => {\n            if (preventDuplicate && copiedSubtitles.length > 0) {\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\n\n                if (subtitle.start === last.start\n                    && subtitle.end === last.end\n                    && subtitle.text === last.text\n                    && subtitleFile.name === last.subtitleFile.name) {\n                        return copiedSubtitles;\n                    }\n            }\n\n            return [...copiedSubtitles, {\n                ...subtitle,\n                timestamp: Date.now(),\n                name: fileName,\n                subtitleFile: subtitleFile,\n                audioFile: audioFile,\n                videoFile: videoFile,\n                audioTrack: audioTrack,\n                audio: audio,\n                image: image\n            }];\n        });\n\n        setAlertSeverity(\"success\");\n        setAlert(`Copied: \"${subtitle.text}\"`);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => {\n        setDisableKeyEvents(true);\n        setSettingsDialogOpen(true);\n    }, []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        setDisableKeyEvents(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFiles: previous.subtitleFiles,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFiles: previous.subtitleFiles,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFiles.filter(f => f.name === item.subtitleFile.name).length === 0) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFiles, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n\n        if (ankiDialogRequested) {\n            setAnkiDialogFinishedRequest(Date.now());\n            setAnkiDialogRequested(false);\n        }\n    }, [ankiDialogRequested]);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                mode\n            );\n\n            if (mode === 'default') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            } else if (mode === 'updateLast') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Update succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n\n            if (ankiDialogRequested) {\n                setAnkiDialogFinishedRequest(Date.now());\n                setAnkiDialogRequested(false);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, ankiDialogRequested]);\n\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\n        if (copiedSubtitlesRef.current.length === 0) {\n            return;\n        }\n\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n        setAnkiDialogRequested(true);\n\n        if (forwardToVideo) {\n            setAnkiDialogRequestToVideo(Date.now());\n        }\n    }, []);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFiles, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFiles.length > 0) {\n                setFileName(subtitleFiles[0].name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\n                const tabs = availableTabs.filter(t => {\n                    if (t.id !== message.tabId) {\n                        return false;\n                    }\n\n                    return !message.src || t.src === message.src;\n                });\n\n                if (tabs.length === 0) {\n                    if (message.src) {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\n                    } else {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    }\n\n                    return;\n                }\n\n                const tab = tabs[0];\n                let subtitleFiles;\n\n                if (message.data.command === 'sync') {\n                    subtitleFiles = [new File(\n                        [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                        message.data.subtitles.name\n                    )];\n                } else if (message.data.command === 'syncv2') {\n                    subtitleFiles = await Promise.all(message.data.subtitles.map(async (s) => new File(\n                        [await (await fetch(\"data:text/plain;base64,\" + s.base64)).blob()],\n                        s.name\n                    )));\n                }\n\n                setFileName(subtitleFiles[0].name);\n                setSources({\n                    subtitleFiles: subtitleFiles,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogAudioClip}\n                                    image={ankiDialogImage}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                        ankiDialogRequested={ankiDialogRequested}\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}