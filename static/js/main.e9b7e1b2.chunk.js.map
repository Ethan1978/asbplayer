{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","raw","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","height","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","useCallback","element","scrollIntoView","content","items","lastSeenItemName","item","ListSubheader","disableSticky","ref","ListItem","ListItemIcon","Tooltip","navigator","clipboard","writeText","fontSize","disabled","audioFile","videoFile","onClipAudio","onSelect","ListItemText","onDelete","timestamp","list","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","cursor","background","activeButton","button","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","marginLeft","current","currentTarget","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","Popover","disableEnforceFocus","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","TabSelector","selectedTab","onTabSelected","Controls","useState","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","mousePositionRef","clearInterval","handleKey","keyCode","preventDefault","playing","onPause","onPlay","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","clock","onMouseOver","onMouseOut","Fade","Grid","direction","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","subtitles","subtitleRefs","useMemo","Array","_","createRef","selectedSubtitleIndex","setSelectedSubtitleIndex","selectedSubtitleIndexRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","cancelAnimationFrame","requestAnimationFrame","update","currentSubtitleIndex","selectedSubtitleRef","allowScroll","block","inline","behavior","newSubtitleIndex","handleScroll","table","jumpToSubtitle","jumpToIndex","s","subtitleTable","handleClick","subtitleIndex","handleCopy","stopPropagation","onCopy","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","target","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","subtitlesLength","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","mediaAdapter","availableTabs","setAvailableTabs","lengthRef","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","backgroundColor","overflow","objectFit","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","nocontrols","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","handleClipAudio","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","revokeUrls","handleDrop","dataTransfer","files","extensionStartIndex","previous","onDrop","onDragOver","exact","path","render","to","createMuiTheme","palette","primary","main","secondary","red","A400","default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"8VAKMA,EAAiBC,YAAW,CAC9BC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QACVC,IAAK,GACLC,MAAO,OACPC,cAAe,OACfC,OAAQ,OAID,SAASC,EAAMC,GAC1B,IAAMC,EAAUZ,IAWhB,OATAa,qBAAU,WACN,GAAIF,EAAMG,KAAM,CACZ,IAAMC,EAAUC,WAAWL,EAAMM,QAASN,EAAMO,kBAChD,OAAO,kBAAMC,aAAaJ,IAG9B,OAAO,OACR,CAACJ,EAAMG,KAAMH,EAAMO,iBAAkBP,EAAMM,UAG1C,qBAAKG,UAAWR,EAAQV,KAAxB,SACI,cAACmB,EAAA,EAAD,CAAMC,GAAIX,EAAMG,KAAhB,SACG,cAAC,IAAD,CAAUS,SAAUZ,EAAMY,SAA1B,SACKZ,EAAMa,e,sCC9BLC,E,kGAEPC,GACN,GAAIA,EAAKC,KAAKC,SAAS,QACnB,OAAOF,EAAKG,OACPC,MAAK,SAAAD,GACF,OAAOE,YAAUF,MAEpBC,MAAK,SAAAE,GACF,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAEnC,GAAIT,EAAKC,KAAKC,SAAS,QAC1B,OAAOF,EAAKG,OACPC,MAAK,SAAAD,GACF,OAAOO,YAAMP,MAEhBC,MAAK,SAAAO,GACF,OAAOA,EAAOC,OAAOC,SAASN,KAAI,SAAAO,GAC9B,MAAO,CACHC,MAAOC,KAAKC,MAAoB,IAAdH,EAAMI,OACxBC,IAAKH,KAAKC,MAAkB,IAAZH,EAAMM,KACtBjB,KAAMW,EAAMO,KAAKC,WAMrC,MAAM,IAAIC,MAAM,sC,6CAGGvB,EAAMe,EAAOI,EAAKK,GAAU,IAAD,OAC9C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAQC,SAASC,cAAc,SACrC,EAAKC,WAAWH,EAAO5B,EAAMe,EAAOI,EAAKK,EAASE,Q,6CAInC1B,EAAMe,EAAOI,EAAKK,GAAU,IAAD,OAC9C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMK,EAAQH,SAASC,cAAc,SACrC,EAAKC,WAAWC,EAAOhC,EAAMe,EAAOI,EAAKK,EAASE,Q,iCAI/CO,EAAOjC,EAAMe,EAAOI,EAAKK,EAASE,GAAU,IAAD,OAKlD,GAJAO,EAAMC,IAAMC,IAAIC,gBAAgBpC,GAChCiC,EAAMI,QAAU,OAGZb,GAAWS,EAAMK,aAAeL,EAAMK,YAAYC,OAAS,EAAG,CAAC,IAAD,gBAC9CN,EAAMK,aADwC,IAC9D,2BAAmC,CAAC,IAAzBE,EAAwB,QAC/BA,EAAEC,QAAUjB,IAAYgB,EAAEE,IAFgC,+BAMlET,EAAMU,YAAc5B,EAAQ,IAC5BkB,EAAMW,OAENX,EAAMY,UAAY,SAACC,GACfb,EAAMc,OACN,IAFqB,EAEfC,EAASf,EAAMgB,gBAFA,cAILD,EAAOE,kBAJF,IAIrB,2BAAyC,SACnCT,SAAU,GALK,8BAQrB,IAAMU,EAAW,IAAIC,cAAcJ,GAC7BK,EAAS,GACfF,EAASG,gBAAkB,SAACR,GACxBO,EAAOE,KAAKT,EAAErC,OAElB0C,EAASK,OAAS,SAACV,GACf,EAAKW,YACD,IAAIC,KAAKL,GACT,EAAKM,sBAAsB3D,EAAKC,MAAQ,IAAMc,EAAQ,IAAMI,EAAM,QAGtEO,KAEJyB,EAASpC,QACTzB,YAAW,WACP2C,EAAM2B,QACNT,EAASU,OACT,IAAM3B,EAAMD,EAAMC,IAClBD,EAAMC,IAAM,KACZC,IAAI2B,gBAAgB5B,KACrBf,EAAMJ,EAAQ,Q,4CAIHgD,GAClB,OAAOA,EAASC,UAAU,EAAGD,EAASE,YAAY,Q,kCAG1CC,EAAMjE,GACd,IAAMkE,EAAMC,OAAOjC,IAAIC,gBAAgB8B,GACjCG,EAAIxC,SAASC,cAAc,KACjCD,SAASyC,KAAKC,YAAYF,GAC1BA,EAAEG,MAAQ,gBACVH,EAAEI,KAAON,EACTE,EAAEK,SAAWzE,EACboE,EAAEM,QACFxC,IAAI2B,gBAAgBK,GACpBE,EAAEO,a,0DCvEK,SAASC,EAAI5F,GACxB,IA3Be6F,EA2BT5F,GA3BS4F,EA2BW7F,EAAM6F,YA3BDvG,aAAW,SAACwG,GAAD,MAAY,CACtDvG,KAAM,CACFwG,OAAQ,QAEZC,MAAO,CACHC,SAAU,GAEdC,OAAQ,CACJC,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,iBAG7CC,YAAa,CACT9G,MAAM,eAAD,OAAiBiG,EAAjB,OACLM,WAAYL,EAAMM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQR,EAAMM,YAAYE,OAAOK,QACjCH,SAAUV,EAAMM,YAAYI,SAASI,iBAEvCC,YAAahB,GAEjBiB,KAAM,CACFtH,QAAS,eAOb,OACI,cAACuH,EAAA,EAAD,CACIrH,SAAS,SACTe,UAAWuG,YAAK/G,EAAQiG,OAAT,eACVjG,EAAQyG,YAAc1G,EAAMiH,aAHrC,SAKI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK3G,UAAWR,EAAQ+F,MAA5C,SACKhG,EAAMgG,QAEX,cAACqB,EAAA,EAAD,CACIC,KAAK,MACLC,MAAM,UACNC,aAAW,OACXC,QAASzH,EAAM0H,kBACfjH,UAAWuG,YAAKhH,EAAMiH,YAAchH,EAAQ6G,MALhD,SAMI,cAAC,IAAD,W,ICtDCa,E,WAEjB,aAAe,IAAD,2BACVC,KAAKC,mBAAqB,GAC1BD,KAAKE,KAAO,GACZ3C,OAAO4C,iBAAiB,WAAW,SAAClG,GAChC,GAAIA,EAAMmG,SAAW7C,QAIK,kCAAtBtD,EAAML,KAAKyG,QACPpG,EAAML,KAAK0G,QACX,GAAmC,SAA/BrG,EAAML,KAAK0G,QAAQC,QACnB,EAAKL,KAAOjG,EAAML,KAAK0G,QAAQJ,SAC5B,CAAC,IAAD,gBACW,EAAKD,oBADhB,IACH,2BAAuC,EACnCO,EADmC,SACjC,CACE5G,KAAMK,EAAML,KAAK0G,QACjBG,MAAOxG,EAAML,KAAK6G,SAJvB,mC,wDAaXH,EAASG,GACjBlD,OAAOmD,YAAY,CAACL,OAAQ,YAAaC,QAASA,EAASG,MAAOA,GAAQ,O,gCAGpEE,GACNX,KAAKC,mBAAmBvD,KAAKiE,K,kCAGrBA,GACR,IAAK,IAAIC,EAAIZ,KAAKC,mBAAmBvE,OAAS,EAAGkF,GAAK,IAAKA,EACvD,GAAID,IAAaX,KAAKC,mBAAmBW,GAAI,CACzCZ,KAAKC,mBAAmBY,OAAOD,EAAG,GAClC,W,8KCMD,SAASE,EAAY1I,GAChC,IA7Be6F,EA6BT5F,GA7BS4F,EA6BW7F,EAAM6F,YA7BDvG,aAAW,SAACwG,GAAD,MAAY,CACtD6C,OAAQ,CACJ/I,MAAOiG,EACP+C,WAAY,GAEhBC,YAAa,CACTjJ,MAAOiG,GAEXiD,aAAa,yBACTtJ,QAAS,OACTuJ,WAAY,SACZrJ,SAAU,SACVsJ,QAASlD,EAAMmD,QAAQ,EAAG,IAEvBnD,EAAMoD,OAAOC,SANR,IAOR1J,eAAgB,eAEpB2J,cAAe,CACX1J,SAAU,WACVqG,OAAQ,OACRsD,UAAW,OACXC,UAAW,UAEfC,iBAAkB,CACdC,SAAU,WAMRC,EAA6BC,uBAAY,SAAAC,GACvCA,GACAA,EAAQC,mBAEb,IAECC,EAAU,KAEd,GAAI7J,EAAM8J,MAAMxG,OAAS,EAAG,CACxBuG,EAAU,GACV,IAFwB,EAEpBE,EAAmB,KACnBvB,EAAI,EAHgB,cAKLxI,EAAM8J,OALD,yBAKbE,EALa,QAMK,OAArBD,GAA6BA,IAAqBC,EAAKhJ,OACvD+I,EAAmBC,EAAKhJ,KACxB6I,EAAQvF,KAAM,cAAC2F,EAAA,EAAD,CAAeC,eAAe,EAA9B,SAAqDF,EAAKhJ,MAAjBgJ,EAAKhJ,QAGhE,IAAMmJ,EAAM3B,IAAMxI,EAAM8J,MAAMxG,OAAS,EAAImG,EAA4B,KAEvEI,EAAQvF,KACJ,eAAC8F,EAAA,EAAD,CAAUD,IAAKA,EAAf,UACI,cAACE,EAAA,EAAD,CAAcpK,QAAS,CAACV,KAAMU,EAAQsJ,kBAAtC,SACI,cAACe,EAAA,EAAD,CAAStE,MAAM,OAAf,SACI,cAACqB,EAAA,EAAD,CAAYI,QAAS,SAAC5D,GAAD,OAAO0G,UAAUC,UAAUC,UAAUT,EAAK9I,OAA/D,SACI,cAAC,IAAD,CAAcwJ,SAAS,gBAInC,cAACL,EAAA,EAAD,CAAcpK,QAAS,CAACV,KAAMU,EAAQsJ,kBAAtC,SACI,cAACe,EAAA,EAAD,CAAStE,MAAM,aAAf,SACI,cAACqB,EAAA,EAAD,CAAYsD,UAAWX,EAAKY,YAAcZ,EAAKa,UAAWpD,QAAS,kBAAMzH,EAAM8K,YAAYd,IAA3F,SACI,cAAC,IAAD,CAAgBU,SAAS,gBAIrC,cAACL,EAAA,EAAD,CAAcpK,QAAS,CAACV,KAAMU,EAAQsJ,kBAAtC,SACI,cAACe,EAAA,EAAD,CAAStE,MAAM,UAAf,SACI,cAACqB,EAAA,EAAD,CAAYI,QAAS,kBAAMzH,EAAM+K,SAASf,IAA1C,SACI,cAAC,IAAD,CAAaU,SAAS,gBAIlC,cAACM,EAAA,EAAD,UAAehB,EAAK9I,OACpB,cAACmJ,EAAA,EAAD,CAAcpK,QAAS,CAACV,KAAMU,EAAQsJ,kBAAtC,SACI,cAAClC,EAAA,EAAD,CAAYI,QAAS,kBAAMzH,EAAMiL,SAASjB,IAA1C,SACI,cAAC,IAAD,CAAYU,SAAS,gBAzBRV,EAAKkB,cA+BhC1C,GAxCN,2BAAiC,IALT,oCAiDxBqB,EAAW,cAACO,EAAA,EAAD,qCAGf,IAAMe,EAAQ,cAAC,IAAD,UAAOtB,IAErB,OACI,eAACuB,EAAA,EAAD,CACIhE,QAAQ,aACRiE,OAAO,QACPlL,KAAMH,EAAMG,KACZM,UAAWR,EAAQ0I,OACnB1I,QAAS,CACLqL,MAAOrL,EAAQ4I,aANvB,UAQI,qBAAKpI,UAAWR,EAAQ6I,aAAxB,SACI,cAACzB,EAAA,EAAD,CAAYI,QAASzH,EAAMM,QAA3B,SACI,cAAC,IAAD,QAGR,cAACiL,EAAA,EAAD,IACA,qBAAK9K,UAAWR,EAAQmJ,cAAxB,SACK+B,O,IC7HIK,E,WAEjB,WAAYC,GAAY,oBACpB7D,KAAK8D,QAAU,IAAIC,iBAAiBF,GACpC,IAAMG,EAAOhE,KACbA,KAAK8D,QAAQG,UAAY,SAAChK,GAAW,IAAD,EAChC,UAAA+J,EAAKE,iBAAL,cAAAF,EAAiB/J,I,wDAIbqG,GACRN,KAAK8D,QAAQpD,YAAYJ,K,8BAIzBN,KAAK8D,QAAQK,Y,KCfAC,G,WAEjB,WAAY3D,EAAO4D,GAAY,IAAD,2BAC1BrE,KAAKS,MAAQA,EACbT,KAAKsE,SAAW,SAAChE,GACiB,IAAD,EAAzBA,EAAQG,QAAUA,IAClB,YAAKyD,iBAAL,gBAAiB,CACbtK,KAAM0G,EAAQ1G,SAK1ByK,EAAUE,UAAUvE,KAAKsE,UACzBtE,KAAKqE,UAAYA,E,wDAGT/D,GACRN,KAAKqE,UAAUG,YAAYlE,EAASN,KAAKS,S,8BAIzCT,KAAKqE,UAAUI,YAAYzE,KAAKsE,c,KCrBnBI,G,WAEjB,aAAe,oBACX1E,KAAK2E,YAAc,EACnB3E,KAAK4E,SAAU,E,iDAGdC,GACD,OAAI7E,KAAK4E,QACEzK,KAAK2K,IAAID,EAAK7E,KAAK2E,YAAcI,KAAKC,MAAQhF,KAAKiF,WAGvD9K,KAAK2K,IAAID,EAAK7E,KAAK2E,e,6BAIrB3E,KAAK4E,UAIV5E,KAAK4E,SAAU,EACf5E,KAAK2E,aAAeI,KAAKC,MAAQhF,KAAKiF,a,8BAItCjF,KAAKiF,UAAYF,KAAKC,MACtBhF,KAAK4E,SAAU,I,8BAGXM,GACAlF,KAAK4E,SACL5E,KAAKiF,UAAYF,KAAKC,MACtBhF,KAAK2E,YAAcO,GAEnBlF,KAAK2E,YAAcO,I,+BAIlBL,GACL,OAAe,IAARA,EAAY,EAAI1K,KAAK2K,IAAI,EAAG9E,KAAKkF,KAAKL,GAAOA,O,uHCzBtDM,GAAmBzN,aAAW,SAACwG,GAAD,MAAY,CAC5CkH,UAAW,CACPtN,SAAU,WACVuN,KAAM,MACNrN,MAAO,MACPsN,OAAQ,GAEZC,gBAAiB,CACbC,cAAe,OAEnBC,YAAa,CACT9F,MAAO,QACP/H,QAAS,OACT4N,cAAe,SACf3N,eAAgB,SAChBsG,OAAQ,OACRuH,OAAQ,WAEZhC,MAAO,CACHiC,WAAY,gEACZ7N,SAAU,WACVuN,KAAM,QACNrN,MAAO,OACPE,OAAQ,GACRkJ,QAAS,IAEbwE,aAAc,CACVjG,MAAO,WAEXkG,OAAQ,CACJlG,MAAO,SAEXmG,SAAU,CACNC,OAAQ,GAEZC,gBAAiB,CACbzH,WAAY,OACZoH,WAAY,kDAIdM,GAAuBvO,aAAW,SAACwG,GAAD,MAAY,CAChDkH,UAAW,CACPpN,MAAO,OACP2N,WAAY,qBACZxH,OAAQ,EACR+H,aAAc,EACdR,OAAQ,WAEZS,cAAe,CACXnO,MAAO,QAEXoO,KAAM,CACFT,WAAY,6CACZxH,OAAQ,QAEZkI,gBAAiB,CACbvO,SAAU,WACVE,MAAO,EACPmG,OAAQ,GAEZmI,OAAQ,CACJC,aAAc,MACdvO,MAAO,GACPmG,OAAQ,GACRwH,WAAY,QACZ7N,SAAU,WACVC,IAAK,EACLsN,KAAM,EACNmB,OAAQ,gDAIhB,SAASC,GAAYC,GACjB,IAAMC,EAAUxM,KAAKyM,MAAMF,EAAe,KACpCG,EAAU1M,KAAKyM,MAAMD,EAAU,IAC/BG,EAAkBH,EAAU,GAClC,OAAOI,OAAOF,GAAW,IAAME,OAAOD,GAAiBE,SAAS,EAAG,KAGvE,SAASC,GAAalF,GAClB,IAAMmF,EAAOnF,EAAQoF,wBACrB,OAAOD,EAAKE,MAAQF,EAAK7B,KAG7B,SAASgC,GAAYjP,GACjB,IAAMC,EAAU4N,KACVqB,EAAeC,iBAAO,MAU5B,IAAMC,EAAY,CAACxP,MAAOI,EAAMqP,MAAQ,KAClCC,EAAc,CAACC,WAAYL,EAAaM,QAAUX,GAAaK,EAAaM,SAAWxP,EAAMqP,MAAQ,IAAM,GAEjH,OACI,sBAAKlF,IAAK+E,EAAczH,QAZ5B,SAAqB5D,GACjB,IAAMiL,EAAOjL,EAAE4L,cAAcV,wBACvBnP,EAAQkP,EAAKE,MAAQF,EAAK7B,KAC1BS,GAAY7J,EAAE6L,MAAQZ,EAAK7B,MAAQrN,EAEzCI,EAAM2P,OAAOjC,IAOiCjN,UAAWR,EAAQ+M,UAAjE,UACI,qBAAKvM,UAAWR,EAAQ+N,KAAMzI,MAAO6J,IACrC,qBAAK3O,UAAWR,EAAQ2P,aAAxB,SACI,qBAAKnP,UAAWR,EAAQiO,OAAQ3I,MAAO+J,SAMvD,SAASO,GAAmB7P,GACxB,IAAKA,EAAMqD,aAA4C,IAA7BrD,EAAMqD,YAAYC,OACxC,OAAO,KAGX,IAAM6H,EAAOnL,EAAMqD,YAAY/B,KAAI,SAACiC,GAChC,OACI,eAAC6G,EAAA,EAAD,CAEI0F,SAAUvM,EAAEE,KAAOzD,EAAM+P,mBACzBtC,QAAM,EAAChG,QAAS,kBAAMzH,EAAMgQ,qBAAqBzM,EAAEE,KAHvD,UAIKF,EAAE0M,SAJP,IAIkB1M,EAAE2M,QAHX3M,EAAEE,OAQnB,OACI,8BACI,cAAC0M,GAAA,EAAD,CACIC,qBAAqB,EACrBjQ,KAAMH,EAAMG,KACZkQ,SAAUrQ,EAAMqQ,SAChB/P,QAASN,EAAMM,QACfgQ,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,IAAD,UAAOrF,QAMvB,SAASuF,GAAY1Q,GACjB,IAAKA,EAAM8H,MAA8B,IAAtB9H,EAAM8H,KAAKxE,OAC1B,OAAO,KAGX,IAAM6H,EAAOnL,EAAM8H,KAAKxG,KAAI,SAACiC,GACzB,OACI,eAAC6G,EAAA,EAAD,CAEI0F,SAAUvM,EAAEE,KAAOzD,EAAM2Q,YACzBlD,QAAM,EAAChG,QAAS,kBAAMzH,EAAM4Q,cAAcrN,EAAEE,KAHhD,UAIKF,EAAEE,GAJP,IAIYF,EAAEyC,MAJd,IAIsBzC,EAAEN,MAHfM,EAAEE,OAQnB,OACI,8BACI,cAAC0M,GAAA,EAAD,CACIC,qBAAqB,EACrBjQ,KAAMH,EAAMG,KACZkQ,SAAUrQ,EAAMqQ,SAChB/P,QAASN,EAAMM,QACfgQ,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,IAAD,UAAOrF,QAMR,SAAS0F,GAAS7Q,GAC7B,IAAMC,EAAU8M,KADoB,EAEZ+D,oBAAS,GAFG,mBAE7BC,EAF6B,KAEvBC,EAFuB,OAGwBF,oBAAS,GAHjC,mBAG7BG,EAH6B,KAGLC,EAHK,OAIgCJ,qBAJhC,mBAI7BK,EAJ6B,KAIDC,EAJC,OAKUN,oBAAS,GALnB,mBAK7BO,EAL6B,KAKZC,EALY,OAMkBR,qBANlB,mBAM7BS,EAN6B,KAMRC,EANQ,KAO9BC,EAAuBtC,iBAAO,CAACuC,EAAG,EAAGC,EAAG,IACxCC,EAAuBzC,iBAAOxC,KAAKC,OACnCiF,EAAc1C,kBAAO,GACrB2C,EAAe3C,kBAAO,GAVQ,EAWZ2B,qBAAfiB,EAX2B,oBAY9BC,EAActI,uBAAY,kBAAMqI,EAAY,MAAK,IAEjDE,EAAavI,uBAAY,SAACgE,GAC5B1N,EAAM2P,OAAOjC,KACd,CAAC1N,IAUJE,qBAAU,WACN,IAAMgS,EAAWC,aAAY,WACzB,IAAMC,EAAczF,KAAKC,MAAQgF,EAAqBpC,QAAU,KACzDzN,KAAKsQ,IAAIrS,EAAMsS,iBAAiB9C,QAAQkC,EAAID,EAAqBjC,QAAQkC,EAAG,GACzE3P,KAAKsQ,IAAIrS,EAAMsS,iBAAiB9C,QAAQmC,EAAIF,EAAqBjC,QAAQmC,EAAG,GAAK,KACpFG,EAAatC,QAEhB4C,IAAgBP,EAAYrC,SAC5BoC,EAAqBpC,QAAU7C,KAAKC,MACpCoE,EAAQoB,KACAA,GAAeP,EAAYrC,SACnCwB,EAAQoB,GAGZP,EAAYrC,QAAU4C,EACtBX,EAAqBjC,QAAQkC,EAAI1R,EAAMsS,iBAAiB9C,QAAQkC,EAChED,EAAqBjC,QAAQmC,EAAI3R,EAAMsS,iBAAiB9C,QAAQmC,IACjE,KACH,OAAO,kBAAMY,cAAcL,MAC5B,CAAClS,EAAMsS,iBAAkBtB,EAASD,IAErC7Q,qBAAU,WACN,SAASsS,EAAU3Q,GACO,KAAlBA,EAAM4Q,UACN5Q,EAAM6Q,iBAEF1S,EAAM2S,QACN3S,EAAM4S,UAEN5S,EAAM6S,UAOlB,OAFA1N,OAAO4C,iBAAiB,UAAWyK,GAE5B,WACHrN,OAAO2N,oBAAoB,UAAWN,MAE3C,CAACxS,IAEJE,qBAAU,WACN,IAAMgS,EAAWC,aAAY,WACzBH,MACD,KAEH,OAAO,kBAAMO,cAAcL,MAC5B,CAACF,IAEJ,IAAMe,EAAiCrJ,uBAAY,WAC/C0H,EAA8B,MAC9BF,GAA0B,KAC3B,IAEG8B,EAAiCtJ,uBAAY,SAAC7F,GAChDuN,EAA8BvN,EAAE4L,eAChCyB,GAA0B,KAC3B,IAEG+B,EAA2BvJ,uBAAY,SAACjG,GAC1CzD,EAAMgQ,qBAAqBvM,GAC3B2N,EAA8B,MAC9BF,GAA0B,KAC3B,CAAClR,IAEEkT,EAA0BxJ,uBAAY,WACxC8H,EAAuB,MACvBF,GAAmB,KACpB,IAEG6B,EAA0BzJ,uBAAY,SAAC7F,GACzC2N,EAAuB3N,EAAE4L,eACzB6B,GAAmB,KACpB,IAEG8B,EAAoB1J,uBAAY,SAACjG,GACnCzD,EAAM4Q,cAAcnN,GACpB+N,EAAuB,MACvBF,GAAmB,KACpB,CAACtR,IAEE0N,EAAW1N,EAAMqT,MAAM3F,SAAS1N,EAAMsD,QAE5C,OACI,sBAAK7C,UAAWR,EAAQ+M,UAAWsG,YA5FvC,SAAyBzP,GACrBiO,EAAatC,SAAU,GA2F0C+D,WAxFrE,SAAwB1P,GACpBiO,EAAatC,SAAU,GAuFvB,UACI,cAACgE,GAAA,EAAD,CAAM7S,GAAIoQ,EAAM3Q,QAAS,IAAzB,SACI,sBAAKK,UAAWR,EAAQqL,MAAxB,UACI,cAAC2D,GAAD,CACIU,OAAQsC,EACR5C,MAAkB,IAAX3B,IAEX,eAAC+F,GAAA,EAAD,CAAMzG,WAAS,EAAC0G,UAAU,MAA1B,UACI,cAACD,GAAA,EAAD,CAAMzJ,MAAI,EAAV,SACI,cAAC3C,EAAA,EAAD,CACII,QAAS,kBAAMzH,EAAM2S,QAAU3S,EAAM4S,UAAY5S,EAAM6S,UAD3D,SAGK7S,EAAM2S,QACD,cAAC,KAAD,CAAWlS,UAAWR,EAAQwN,SAC9B,cAAC,KAAD,CAAehN,UAAWR,EAAQwN,aAGhD,cAACgG,GAAA,EAAD,CAAMzJ,MAAI,EAAV,SACI,eAAC7C,EAAA,EAAD,CAAYC,QAAQ,KAAK3G,UAAWR,EAAQoN,YAA5C,UACKgB,GAAYX,EAAW1N,EAAMsD,QADlC,MAC8C+K,GAAYrO,EAAMsD,aAGpE,cAACmQ,GAAA,EAAD,CAAMlO,MAAO,CAACU,SAAU,GAAG+D,MAAI,IAE/B,cAACyJ,GAAA,EAAD,CAAMzJ,MAAI,EAAV,SACKhK,EAAMqD,aAAerD,EAAMqD,YAAYC,OAAS,GAC7C,cAAC+D,EAAA,EAAD,CAAYI,QAASuL,EAArB,SACI,cAAC,KAAD,CAAgBvS,UAAWR,EAAQwN,aAI/C,cAACgG,GAAA,EAAD,CAAMzJ,MAAI,EAAV,SACKhK,EAAM8H,MAAQ9H,EAAM8H,KAAKxE,OAAS,GAC/B,cAAC+D,EAAA,EAAD,CAAYI,QAAS0L,EAArB,SACI,cAAC,KAAD,CAAc1S,UAAWT,EAAM2Q,YAAc1Q,EAAQuN,aAAevN,EAAQwN,qBAOpG,cAACiD,GAAD,CACIvQ,KAAMkR,GAAmBN,EACzBV,SAAUkB,EACVzJ,KAAM9H,EAAM8H,KACZ6I,YAAa3Q,EAAM2Q,YACnBrQ,QAAS4S,EACTtC,cAAewC,IAEnB,cAACvD,GAAD,CACI1P,KAAM8Q,GAA0BF,EAChCV,SAAUc,EACV9N,YAAarD,EAAMqD,YACnB0M,mBAAoB/P,EAAM+P,mBAC1BzP,QAASyS,EACT/C,qBAAsBiD,O,IC3WjBU,G,WAEjB,WAAYxJ,GAAM,oBACdvC,KAAKuC,IAAMA,EACXvC,KAAKgM,cAAgB,G,iDAGpB9G,GAAO,IAAD,OACP,OAAO,IAAItK,SAAQ,SAACC,EAASC,GACrB,EAAKyH,IAAIqF,SACT,EAAKrF,IAAIqF,QAAQ9L,YAAcoJ,EAC/B,EAAK+G,iBAAgB,kBAAMpR,QAE3BA,S,gCAKD,IAAD,OACN,OAAO,IAAID,SAAQ,SAACC,EAASC,GACrB,EAAKyH,IAAIqF,QACT,EAAKqE,iBAAgB,kBAAMpR,OAE3BA,S,sCAKI8F,GAAW,IAAD,OACM,IAAxBX,KAAKuC,IAAI2J,YAKTlM,KAAKuC,IAAIqF,UAAY5H,KAAKuC,IAAIqF,QAAQ5L,YACtCgE,KAAKuC,IAAIqF,QAAQ5L,UAAY,SAACC,GAAO,IAAD,gBACV,EAAK+P,eADK,IAChC,2BAA0C,EACtCnR,EADsC,YADV,8BAKhC,EAAKmR,cAActQ,OAAS,EAC5B,EAAK6G,IAAIqF,QAAQ5L,UAAY,OAKrCgE,KAAKgM,cAActP,KAAKiE,IAhBpBA,M,6BAmBA,IAAD,EACH,UAAAX,KAAKuC,IAAIqF,eAAT,SAAkB1L,S,8BAGb,IAAD,EACJ,UAAA8D,KAAKuC,IAAIqF,eAAT,SAAkB7K,Y,uDC3CpBoP,GAA0BzU,YAAW,CACvC0N,UAAW,CACPjH,OAAQ,qBACRrG,SAAU,WACV4J,UAAW,UAEf0K,iBAAkB,CACdtJ,SAAU,IAEduJ,SAAU,CACNvJ,SAAU,GACV9K,MAAO,QAEXsL,UAAW,CACPR,SAAU,GACVnD,MAAO,UACP2M,UAAW,SAEfC,WAAY,CACRzJ,SAAU,GACVnD,MAAO,UACP2M,UAAW,QACXlL,QAAS,GAEboL,YAAa,CACTrO,OAAQ,OACRvG,QAAS,OACT4N,cAAe,SACf3N,eAAgB,SAChBsJ,WAAY,YAIL,SAASsL,GAAerU,GACnC,IAAMqT,EAAQrT,EAAMqT,MACdiB,EAAYtU,EAAMsU,UAClBC,EAAeC,mBAAQ,kBAAMF,EAC7BG,MAAMH,EAAUhR,QAAQ0K,OAAO1M,KAAI,SAACoT,EAAGlM,GAAJ,OAAUmM,yBAC7C,KAAI,CAACL,IAL+B,EAMgBxD,mBAAS,GANzB,mBAMnC8D,EANmC,KAMZC,EANY,KAOpCC,EAA2B3F,iBAAO,GAPE,EAQA2B,oBAAS,GART,mBAQnCiE,EARmC,KAQpBC,EARoB,OASUlE,mBAAS,MATnB,mBASnCmE,EATmC,KASfC,EATe,KAUpCC,EAAyBhG,iBAAO,GAChCiG,EAAsBjG,mBACtBkG,EAAWV,sBACX1U,EAAU8T,KAEhB7T,qBAAU,WACN,IAAKoU,GAAkC,IAArBA,EAAUhR,OACxB,OAAO,kBAAMgS,qBAAqBF,EAAoB5F,UAmC1D,OAFA4F,EAAoB5F,QAAU+F,uBA9Bf,SAATC,EAAU1I,GAKZ,IAJA,IAAMxJ,EAAStD,EAAMsD,OACfoK,EAAW2F,EAAM3F,SAASpK,GAC5BmS,GAAwB,EAEnBjN,EAAI8L,EAAUhR,OAAS,EAAGkF,GAAI,IAAKA,EACxC,GAAIkF,GAAY4G,EAAU9L,GAAG1G,MAAQwB,EAAQ,CACzCmS,EAAuBjN,EACvB,MAIR,IAA8B,IAA1BiN,GAA+BA,IAAyBX,EAAyBtF,QAAS,CAC1FqF,EAAyBY,GACzBX,EAAyBtF,QAAUiG,EACnC,IAAMC,EAAsBnB,EAAakB,GACnCE,EAAchJ,KAAKC,MAAQuI,EAAuB3F,QAAU,IAE9DkG,EAAoBlG,SAAWmG,GAC/BD,EAAoBlG,QAAQ5F,eAAe,CACvCgM,MAAO,SACPC,OAAQ,UACRC,SAAU,WAKtBV,EAAoB5F,QAAU+F,sBAAsBC,MAKjD,kBAAMF,qBAAqBF,EAAoB5F,YACvD,CAAC8E,EAAWjB,EAAOrT,EAAMsD,OAAQiR,IAEpCrU,qBAAU,WACN,SAASsS,EAAU3Q,GACf,GAAKyS,GAAkC,IAArBA,EAAUhR,OAA5B,CAIA,IAAIyS,EAEJ,GAAsB,KAAlBlU,EAAM4Q,QACNsD,EAAmBhU,KAAK0K,IAAI,EAAGmI,EAAwB,OACpD,IAAsB,KAAlB/S,EAAM4Q,QAGb,OAFAsD,EAAmBhU,KAAK2K,IAAI1M,EAAMsU,UAAUhR,OAAS,EAAGsR,EAAwB,GAKpF/S,EAAM6Q,iBACN,IAAMhF,EAAW1N,EAAMsU,UAAUyB,GAAkBjU,MAAQ9B,EAAMsD,OACjEtD,EAAM2P,OAAOjC,GAAU,IAK3B,OAFAvI,OAAO4C,iBAAiB,UAAWyK,GAE5B,WACHrN,OAAO2N,oBAAoB,UAAWN,MAE3C,CAACxS,EAAO4U,EAAuBN,IAElCpU,qBAAU,WACN,SAAS8V,EAAanU,GAClBsT,EAAuB3F,QAAU7C,KAAKC,MAG1C,IAAMqJ,EAAQZ,EAAS7F,QAGvB,OAFK,OAALyG,QAAK,IAALA,KAAOlO,iBAAiB,QAASiO,GAE1B,WACE,OAALC,QAAK,IAALA,KAAOnD,oBAAoB,QAASkD,MAEzC,CAACX,EAAUF,IAEdjV,qBAAU,WACN,GAAKF,EAAMkW,gBAAmBlW,EAAMsU,UAApC,CAIA,IALY,EAKR6B,GAAe,EACf3N,EAAI,EANI,cAQExI,EAAMsU,WARR,IAQZ,2BAA+B,CAAC,IAAvB8B,EAAsB,QACvBA,EAAEtU,QAAU9B,EAAMkW,eAAepU,OAASsU,EAAElV,OAASlB,EAAMkW,eAAehV,OAC1EiV,EAAc3N,KAGhBA,GAbM,+BAgBS,IAAjB2N,GACA5B,EAAa4B,GAAa3G,QAAQ5F,eAAe,CAC5CgM,MAAO,SACPC,OAAQ,UACRC,SAAU,cAGpB,CAAC9V,EAAMkW,eAAgBlW,EAAMsU,UAAWC,IAE3C,IAmBI8B,EAnBEC,EAAc5M,uBAAY,SAAC6M,GAC7B,IAAM7I,EAAW1N,EAAMsU,UAAUiC,GAAezU,MAAQ9B,EAAMsD,OAC9DtD,EAAM2P,OAAOjC,GAAW1N,EAAM2S,SAAW4D,IAAkB3B,KAC5D,CAAC5U,EAAO4U,IAEL4B,EAAa9M,uBAAY,SAAC7H,EAAO0U,GACnC1U,EAAM4U,kBACN,IAAMxC,EAAWjU,EAAMsU,UAAUiC,GAC3BrV,EAAO+S,EAAS/S,KACtBqJ,UAAUC,UAAUC,UAAUvJ,GAC9BlB,EAAM0W,OAAOxV,EAAM+S,EAASnS,MAAOmS,EAAS/R,KAC5CgT,EAAsBhU,GACtB8T,GAAiB,KAClB,CAAChV,IAEE2W,EAAwBjN,uBAAY,WACtCsL,GAAiB,KAClB,CAACA,IAoDJ,OApCIqB,EAZCrW,EAAMsU,UAW2B,IAA3BtU,EAAMsU,UAAUhR,OACP,KAGZ,cAACsT,GAAA,EAAD,CAAgBzM,IAAKkL,EAArB,SACI,cAACwB,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACK9W,EAAMsU,UAAUhT,KAAI,SAAC8U,EAAGW,GACrB,IAAMjH,EAAWiH,IAAUnC,EACrBnU,EAAYqP,EAAW7P,EAAQ+T,iBAAmB/T,EAAQgU,SAEhE,OACG,eAAC+C,GAAA,EAAD,CACIvP,QAAS,SAAC5D,GAAD,OAAOyS,EAAYS,IAE5B5M,IAAKoK,EAAawC,GAClBjH,SAAUA,EAJd,UAKI,cAACmH,GAAA,EAAD,CAAWxW,UAAWA,EAAtB,SACK2V,EAAElV,OAEP,cAAC+V,GAAA,EAAD,CAAWxW,UAAWR,EAAQkU,WAA9B,SACI,cAAC9M,EAAA,EAAD,CAAYI,QAAS,SAAC5D,GAAD,OAAO2S,EAAW3S,EAAGkT,IAA1C,SACI,cAAC,IAAD,QAGR,cAACE,GAAA,EAAD,CAAWxW,UAAWR,EAAQiL,UAA9B,SACKkL,EAAE/H,gBAZF0I,YAvB5B,sBAAKtW,UAAWR,EAAQmU,YAAxB,UACI,8EAGA,gDACgB,mBAAG8C,OAAO,SAAS1R,KAAK,gEAAxB,uBADhB,sDA2CR,sBAAK/E,UAAWR,EAAQ+M,UAAxB,UACKqJ,EACD,eAAC,EAAD,CAAOlW,KAAM4U,EAAezU,QAASqW,EAAuBpW,iBAAkB,IAAMK,SAAS,UAA7F,oBACYqU,Q,IC9OHkC,G,WAEjB,WAAYC,GAAW,oBACnBxP,KAAKwP,SAAWA,EAChBxP,KAAKkF,KAAO,EACZlF,KAAKpB,SAAW,EAChBoB,KAAKyP,SAAU,EACfzP,KAAKkM,WAAa,EAClBlM,KAAK0P,eAAiB,GACtB1P,KAAK2P,cAAgB,GACrB3P,KAAK4P,eAAiB,GACtB5P,KAAK6P,qBAAuB,GAC5B7P,KAAK8P,4BAA8B,GAEnC,IAAM9L,EAAOhE,KAEbA,KAAKwP,SAAStL,UAAY,SAACjK,GACvB,OAAOA,EAAML,KAAK2G,SACd,IAAK,QACDyD,EAAKpF,SAAW3E,EAAML,KAAKgF,SAC3BoF,EAAKyL,SAAU,EACfzL,EAAKvI,YAAcxB,EAAML,KAAK6B,YAC9BuI,EAAKmE,mBAAqBlO,EAAML,KAAKuO,mBACrCnE,EAAKkI,WAAa,EAClBlI,EAAKkB,KAAOjL,EAAML,KAAKkC,YAN3B,oBAQyBkI,EAAK0L,gBAR9B,IAQI,2BAA0C,EACtC/O,EADsC,SAC7B1G,EAAML,KAAKmW,SAT5B,8BAWI,MACJ,IAAK,aAE2B,IAAD,EAA3B,GADA/L,EAAKkI,WAAajS,EAAML,KAAK6N,MACL,IAApBzD,EAAKkI,WACL,UAAAlI,EAAKhI,iBAAL,cAAAgI,GAEJ,MACJ,IAAK,OAAL,oBACyBA,EAAK2L,eAD9B,IACI,2BAAyC,EACrChP,EADqC,SAC5B1G,EAAML,KAAKoW,OAF5B,8BAII,MACJ,IAAK,QAAL,oBACyBhM,EAAK4L,gBAD9B,IACI,2BAA0C,EACtCjP,EADsC,SAC7B1G,EAAML,KAAKoW,OAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyBhM,EAAK8L,6BAD9B,IACI,2BAAuD,EACnDnP,EADmD,SAC1C1G,EAAML,KAAKiC,KAF5B,8BAII,MACJ,IAAK,cAAL,oBACyBmI,EAAK6L,sBAD9B,IACI,2BAAgD,EAC5ClP,EAD4C,SACnC1G,EAAML,KAAK6N,MAAOxN,EAAML,KAAKoW,OAF9C,8BAII,MACJ,QACIC,QAAQC,MAAM,sBAAwBjW,EAAML,KAAK2G,W,oDAezDI,GACAX,KAAKyP,SACL9O,IAEJX,KAAK0P,eAAehT,KAAKiE,K,6BAGtBA,GACHX,KAAK2P,cAAcjT,KAAKiE,K,8BAGpBA,GACJX,KAAK4P,eAAelT,KAAKiE,K,oCAGfA,GACVX,KAAK6P,qBAAqBnT,KAAKiE,K,2CAGdA,GACjBX,KAAK8P,4BAA4BpT,KAAKiE,K,4BAGpC/B,GACFoB,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,QAAS3B,SAAUA,M,6BAIvDoB,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,W,6BAIpCP,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,W,8BAIpCP,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,Y,yCAGrB1E,GACfmE,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,qBAAsB1E,GAAIA,M,8BAI9DmE,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,UACpCP,KAAKwP,SAASrL,U,kCAtDd,OAAOnE,KAAKkF,M,aAGAuC,GACZzH,KAAKkF,KAAOuC,EACZzH,KAAKkM,WAAa,EAClBlM,KAAKwP,SAAS9O,YAAY,CAACH,QAAS,cAAekH,MAAOzH,KAAKkF,W,KC3DjEiL,GAAYzY,YAAW,CACzBC,KAAM,CACFwG,OAAQ,qBACRrG,SAAU,WACV4J,UAAW,YAInB,SAAS0O,GAAa1J,EAAc2J,GAChC,IAAMC,EAAK5J,EAAe,IAEpB6J,GADN7J,GAAgBA,EAAe4J,GAAM,KACT,GAEtBE,GADN9J,GAAgBA,EAAe6J,GAAQ,IACX,GAE5B,OAAIF,GAAqB,KAEdI,IADM/J,EAAe8J,GAAQ,IAClB,IAAMC,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGhEG,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGtD,SAASG,GAAIE,GACT,OAAO5J,OAAO4J,GAAG3J,SAAS,EAAG,KAGjC,SAAS0J,GAAOC,GACZ,OAAO5J,OAAO4J,GAAGD,OAAO,EAAG,KAG/B,SAASE,GAAYC,EAAUC,EAAUpE,GACrC,IAAMqE,EAAkBrE,GAAaA,EAAUhR,OAAS,EAClDgR,EAAUA,EAAUhR,OAAS,GAAGpB,IAAMoS,EAAU,GAAGxS,MACnD,EAEA8W,EAAcH,EAASjJ,SAAWiJ,EAASjJ,QAAQhJ,SACnD,IAAOiS,EAASjJ,QAAQhJ,SACxB,EAEAqS,EAAcH,EAASlJ,SAAWkJ,EAASlJ,QAAQhJ,SACnD,IAAOkS,EAASlJ,QAAQhJ,SACxB,EAEN,OAAOzE,KAAK0K,IAAIoM,EAAa9W,KAAK0K,IAAIkM,EAAiBC,IAG5C,SAASE,GAAO9Y,GAAQ,IAC3B+Y,EAA4B/Y,EAA5B+Y,IAAK9M,EAAuBjM,EAAvBiM,UAAW+M,EAAYhZ,EAAZgZ,QADU,EAEuChZ,EAAMiZ,QAAxEC,EAF2B,EAE3BA,aAActO,EAFa,EAEbA,UAAWuO,EAFE,EAEFA,aAActO,EAFZ,EAEYA,UAAWuO,EAFvB,EAEuBA,aAFvB,EAGZtI,qBAHY,mBAG3BuI,EAH2B,KAGtBC,EAHsB,OAIAxI,qBAJA,mBAI3BwD,EAJ2B,KAIhBiF,EAJgB,OAKJzI,oBAAS,GALL,mBAK3B6B,EAL2B,KAKlB6G,EALkB,KAM5BC,EAAatK,mBACnBsK,EAAWjK,QAAUmD,EAPa,MAQV7B,qBAAfiB,EARyB,sBASIjB,qBATJ,mBAS3BzN,EAT2B,KASdqW,EATc,OAUkB5I,qBAVlB,mBAU3Bf,EAV2B,KAUP4J,EAVO,KAW5B3H,EAActI,uBAAY,kBAAMqI,EAAY,MAAK,IACjDO,EAAmBnD,iBAAO,CAACuC,EAAE,EAAGC,EAAE,IAClC8G,EAAWtJ,mBACXuJ,EAAWvJ,mBACXyK,EAAepF,mBAAQ,WACzB,OACW,IAAIb,GADXwF,EACwBV,EACjBW,GAAgBC,EACCX,EAGJ,MACzB,CAACS,EAAcC,EAAcC,IAC1BhG,EAAQmB,mBAAQ,kBAAM,IAAIlI,KAAS,IACnCrM,EAAU8X,KAzBkB,EA0BQjH,mBAAS,IA1BjB,mBA0B3B+I,EA1B2B,KA0BZC,EA1BY,KA2B5BC,EAAY5K,iBAAO,GACzB4K,EAAUvK,QAAUgJ,GAAYC,EAAUC,EAAUpE,GAEpD,IAAM0F,EAAOtQ,uBAAY,SAACgE,EAAU2F,EAAOuE,EAAMrP,GAC7C,IAAMuE,EAAOY,EAAWqM,EAAUvK,QAClC6D,EAAM4G,QAAQnN,GACdkF,IAEI4F,EACAgC,EAAaI,KAAKlN,EAAO,KAAM3L,MAAK,SAAC+Y,GAAD,OAAO3R,OAE3CA,MAEL,CAACyJ,EAAa4H,IAoHjB,SAAS9V,EAAKuP,EAAOuG,EAAchC,GAC/B4B,GAAW,GACXnG,EAAMvR,QAEF8V,GACAgC,EAAa9V,OAIrB,SAASa,EAAM0O,EAAOuG,EAAchC,GAChC4B,GAAW,GACXnG,EAAMzO,OAEFgT,GACAgC,EAAajV,QAhIrBzE,qBAAU,WAAO,IAAD,EAQRia,EAPJ9G,EAAM4G,QAAQ,GACd5G,EAAMzO,OACN4U,GAAW,GACXf,EAASjJ,QAAQ9L,YAAc,EAC/B+U,EAASjJ,QAAQ7K,QACjB,UAAA+T,EAASlJ,eAAT,SAAkBzD,QAClB2M,EAASlJ,QAAU,KAIf2K,EADAjB,EACmBH,EAAIzE,UAAU4E,GAC5B/X,MAAK,SAAAE,GACF,IAAMiC,EAASjC,EAAMiC,OAAS,EACxBjC,EAAMA,EAAMiC,OAAS,GAAGpB,IAAMb,EAAM,GAAGS,MACvC,EAEAwS,EAAYjT,EAAMC,KAAI,SAAC8U,GACzB,MAAO,CAAClV,KAAMkV,EAAElV,KAAMY,MAAOsU,EAAEtU,MAAOI,IAAKkU,EAAElU,IAAKmM,YAAa2J,GAAa5B,EAAEtU,MAAOwB,OAGzFiW,EAAajF,MAEhB8F,OAAM,SAAAvW,GAAC,OAAImV,EAAQnV,MAEL,IAAIrB,SAAQ,SAACC,EAASC,GAAV,OAAqBD,OAGpD0W,GACAS,EAAaS,UAAUlZ,MAAK,kBAAM6Q,QAGlCoH,GAAgBC,IAChBc,EAAiBhZ,MAAK,SAAAmT,GAClB,IAAI5I,EAEJ,GAAI0N,EAAc,CACd,IAAM3N,EAAYkD,OAAOhC,KAAKC,OAC9BlB,EAAU,IAAIyL,GAAa,IAAI3L,EAA8BC,IAC7DtG,OAAOhF,KACHma,qBAAsCC,mBAAmBnB,GAAgB,YAAc3N,EACvF,mBAAqB2N,EACrB,uCAEGC,IACP3N,EAAU,IAAIyL,GAAa,IAAInL,GAAuBqN,EAAI5V,GAAIwI,KACtDuO,OAGZ9B,EAASlJ,QAAU9D,EAEnBA,EAAQ2O,SAAQ,SAAC1C,GACboC,EAAUvK,QAAUgJ,GAAYC,EAAUC,EAAUpE,GACpD5I,EAAQ+O,MAAMV,EAAUvK,SAExB9D,EAAQmH,QAAO,SAAC+E,GACZ9T,EAAKuP,EAAOuG,EAAchC,MAG9BlM,EAAQkH,SAAQ,SAACgF,GACbjT,EAAM0O,EAAOuG,EAAchC,MAG/BlM,EAAQgP,eAAc,SAAChX,EAAakU,GAChC,IAAMlK,EAAyB,IAAdhK,EAAqBqW,EAAUvK,QAE5CiK,EAAWjK,SACX6D,EAAMzO,OAGVoV,EAAKtM,EAAU2F,EAAOuE,GAAM,SAACsC,GACrBT,EAAWjK,SACX6D,EAAMvR,cAKlB4J,EAAQsE,sBAAqB,SAACvM,GACtBgW,EAAWjK,SACX6D,EAAMzO,OAGVgV,EAAaS,UACRlZ,MAAK,WACEsY,EAAWjK,SACX6D,EAAMvR,WAIlB6X,EAAsBlW,MAGtBiI,EAAQrI,aAAeqI,EAAQrI,YAAYC,OAAS,GACpDoW,EAAehB,EAASlJ,QAAQnM,aAChCsW,EAAsBjB,EAASlJ,QAAQO,sBAEvC2J,EAAe,MACfC,EAAsB,OAG1BtG,EAAM4G,QAAuC,IAA/BvB,EAASlJ,QAAQ9L,aAE3BiU,EACAtE,EAAMzO,OAENyO,EAAMvR,QAGV0X,GAAY7B,WAIzB,CAACoB,EAAK9M,EAAWoH,EAAOuG,EAAcI,EAAMhB,EAASE,EAAcC,EAAcC,EAAcC,EAAKrH,IAoBvG,IAAM2I,EAAajR,uBAAY,WAC3B5F,EAAKuP,EAAOuG,GAAc,KAC3B,CAACvG,EAAOuG,IAELgB,EAAclR,uBAAY,WAC5B/E,EAAM0O,EAAOuG,GAAc,KAC5B,CAACvG,EAAOuG,IAEL3H,GAAavI,uBAAY,SAACgE,GACxB+L,EAAWjK,SACX6D,EAAMzO,OAGVoV,EAAKtM,EAAU2F,GAAO,GAAM,WACpBoG,EAAWjK,SACX6D,EAAMvR,aAGf,CAACuR,EAAO2G,IAELa,GAAuBnR,uBAAY,SAACgE,EAAUoN,GAC3CA,GACDnW,EAAM0O,EAAOuG,GAAc,GAG3BH,EAAWjK,SACX6D,EAAMzO,OAGVoV,EAAKtM,EAAU2F,GAAO,GAAM,WACpByH,IAAerB,EAAWjK,SAE1B1L,EAAKuP,EAAOuG,GAAc,QAGnC,CAACvG,EAAO2G,EAAMJ,IAEXpD,GAAa9M,uBAAY,SAACxI,EAAMY,EAAOI,GACzClC,EAAM0W,OACFxV,EACAY,EACAI,EACA0I,EACAC,EACAqO,EACAnJ,KAEL,CAAC/P,EAAO4K,EAAWC,EAAWqO,EAAcnJ,IAO/C,IAAMkD,GAA2BvJ,uBAAY,SAACjG,GACtCiV,EAASlJ,SACTkJ,EAASlJ,QAAQuL,mBAAmBtX,GAGxCkB,EAAM0O,EAAOuG,GAAc,GAE3BI,EAAK,EAAG3G,GAAO,GAAM,WACboG,EAAWjK,SACX1L,EAAKuP,EAAOuG,GAAc,QAGnC,CAACvG,EAAOuG,EAAcI,IAEnB5G,GAAoB1J,uBAAY,SAACjG,GACnC,IAAM4V,EAAMQ,EAAczL,QAAO,SAAA7K,GAAC,OAAIA,EAAEE,KAAOA,KAAI,GACnD6V,EAAOD,KACR,CAACQ,IAEJ3Z,qBAAU,WACN,IAAMgS,EAAWC,aAAY,WACzB,IAAM7O,EAASyW,EAAUvK,QACR6D,EAAM3F,SAASpK,IAEhB,IACZ+P,EAAM4G,QAAQ,GACd5G,EAAMzO,OACNgV,EAAajV,QACb6U,GAAW,MAEhB,KAEH,OAAO,kBAAMjH,cAAcL,MAC5B,CAACmB,EAAOiB,EAAWsF,IAEtB1Z,qBAAU,WACN,IAAMgS,EAAWC,aAAY,WACzB,GAAInS,EAAMiM,UAAUnE,KAAKxE,SAAWuW,EAAcvW,OAC9CwW,EAAiB9Z,EAAMiM,UAAUnE,UAC9B,CAGH,IAFA,IAAI0N,GAAS,EAEJhN,EAAI,EAAGA,EAAIqR,EAAcvW,SAAUkF,EAAG,CAC3C,IAAMwS,EAAKnB,EAAcrR,GACnByS,EAAKjb,EAAMiM,UAAUnE,KAAKU,GAChC,GAAIwS,EAAGvX,KAAOwX,EAAGxX,IACVuX,EAAGhV,QAAUiV,EAAGjV,OAChBgV,EAAG/X,MAAQgY,EAAGhY,IAAK,CACtBuS,GAAS,EACT,OAIJA,GACAsE,EAAiB9Z,EAAMiM,UAAUnE,MAIhBuR,GAAyF,IAAlFrZ,EAAMiM,UAAUnE,KAAKsG,QAAO,SAAA7K,GAAC,OAAIA,EAAEE,KAAO4V,EAAI5V,IAAMF,EAAEN,MAAQoW,EAAIpW,OAAKK,SAGnGgW,EAAO,MACPtZ,EAAMgZ,QAAQ,4BAA8BK,EAAI5V,GAAK,IAAM4V,EAAIrT,UAEpE,KAEH,OAAO,kBAAMuM,cAAcL,MAC5B,CAAC2H,EAAeR,EAAKrZ,IAExB,IAAMsD,GAASyW,EAAUvK,QACnB0L,GAAS/B,GAAgBC,GAAgB9E,EAE/C,OACI,sBACI6G,YA/ER,SAAyBtX,GACrByO,EAAiB9C,QAAQkC,EAAI7N,EAAEuX,QAC/B9I,EAAiB9C,QAAQmC,EAAI9N,EAAEwX,SA8E3B5a,UAAWR,EAAQV,KAFvB,UAIK2b,IAAW,cAACrK,GAAD,CACRyB,iBAAkBA,EAClBK,QAASA,EACTU,MAAOA,EACP/P,OAAQA,GACRD,YAAaA,EACb0M,mBAAoBA,EACpBjI,MAAOsR,IAAiBD,GAAgBU,EACxClJ,YAAa0I,GAAOA,EAAI5V,GACxBoP,OAAQ8H,EACR/H,QAASgI,EACTjL,OAAQsC,GACRjC,qBAAsBiD,GACtBrC,cAAewC,KAEnB,cAACiB,GAAD,CACI1B,QAASA,EACT2B,UAAWA,EACXjB,MAAOA,EACP/P,OAAQA,GACR4S,eAAgBlW,EAAMkW,eACtBvG,OAAQkL,GACRnE,OAAQF,KAEZ,uBAAOrM,IAAKsO,EAAUxV,IAAKkW,O,IClYlBmC,G,WAEjB,WAAY5P,GAAU,oBAClB9D,KAAK8D,QAAU,IAAIC,iBAAiBD,GACpC9D,KAAKkF,KAAO,EACZlF,KAAKpB,SAAW,EAChBoB,KAAK2P,cAAgB,GACrB3P,KAAK4P,eAAiB,GACtB5P,KAAK6P,qBAAuB,GAC5B7P,KAAK8P,4BAA8B,GACnC9P,KAAK2T,eAAiB,GACtB3T,KAAK0P,eAAiB,GAEtB,IAAM1L,EAAOhE,KAEbA,KAAK8D,QAAQG,UAAY,SAAChK,GACtB,OAAOA,EAAML,KAAK2G,SACd,IAAK,OAED,MACJ,IAAK,QAAL,oBACyByD,EAAK0L,gBAD9B,IACI,2BAA0C,EACtC/O,EADsC,SAC7B1G,EAAML,KAAKgF,WAF5B,8BAII,MACJ,IAAK,OAAL,oBACyBoF,EAAK2L,eAD9B,IACI,2BAAyC,EACrChP,EADqC,YAD7C,8BAII,MACJ,IAAK,QAAL,oBACyBqD,EAAK4L,gBAD9B,IACI,2BAA0C,EACtCjP,EADsC,YAD9C,8BAII,MACJ,IAAK,cAAL,oBACyBqD,EAAK6L,sBAD9B,IACI,2BAAgD,EAC5ClP,EAD4C,SACnC1G,EAAML,KAAK6N,QAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyBzD,EAAK8L,6BAD9B,IACI,2BAAuD,EACnDnP,EADmD,SAC1C1G,EAAML,KAAKiC,KAF5B,8BAII,MACJ,IAAK,QAAL,oBACyBmI,EAAK2P,gBAD9B,IACI,2BAA0C,EACtChT,EADsC,YAD9C,8BAII,MACJ,QACIsP,QAAQC,MAAM,sBAAwBjW,EAAML,KAAK2G,W,mDAc1DI,GACHX,KAAK2P,cAAcjT,KAAKiE,K,8BAGpBA,GACJX,KAAK4P,eAAelT,KAAKiE,K,oCAGfA,GACVX,KAAK6P,qBAAqBnT,KAAKiE,K,2CAGdA,GACjBX,KAAK8P,4BAA4BpT,KAAKiE,K,8BAGlCA,GACJX,KAAK2T,eAAejX,KAAKiE,K,8BAGrBA,GACJX,KAAK0P,eAAehT,KAAKiE,K,4BAGvB/B,EAAUmR,EAAQtU,EAAa0M,GACjCnI,KAAK8D,QAAQpD,YAAY,CACrBH,QAAS,QACT3B,SAAUA,EACVmR,OAAQA,EACRjU,YAAa,EACbL,YAAaA,EACb0M,mBAAoBA,M,iCAIjB+D,GACPlM,KAAK8D,QAAQpD,YAAY,CAACH,QAAS,aAAckH,MAAOyE,M,6BAIxDlM,KAAK8D,QAAQpD,YAAY,CAACH,QAAS,OAAQyP,MAAM,M,8BAIjDhQ,KAAK8D,QAAQpD,YAAY,CAACH,QAAS,QAASyP,MAAM,M,yCAGnCnU,GACfmE,KAAK8D,QAAQpD,YAAY,CAACH,QAAS,qBAAsB1E,GAAIA,M,8BAIzDmE,KAAK8D,UACL9D,KAAK8D,QAAQK,QACbnE,KAAK8D,QAAU,Q,kCA9DnB,OAAO9D,KAAKkF,M,aAGAuC,GACZzH,KAAKkF,KAAOuC,EACZzH,KAAK8D,QAAQpD,YAAY,CAACH,QAAS,cAAekH,MAAOzH,KAAKkF,KAAM8K,MAAM,Q,KCxD5EG,GAAYzY,YAAW,CACzBC,KAAM,CACFic,gBAAiB,QACjB5b,MAAO,OACPmG,OAAQ,QACR0V,SAAU,UAEd1Y,MAAO,CACH2Y,UAAW,QACXhc,SAAU,WACVE,MAAO,OACPmG,OAAQ,UAIhB,SAAS4V,GAAYhS,EAASiS,EAAelC,EAAgBC,GACzD,GAAIxU,OAAO0W,YAAclS,EAAQmS,WAAa,GAAKnS,EAAQoS,YAAc,EAAG,CACxE,IAAMC,EAAa7W,OAAO8W,OAAOD,YAAc7W,OAAO0W,WAAa1W,OAAO+W,YACpEC,EAAchX,OAAO8W,OAAOE,aAAehX,OAAOiX,YAAcjX,OAAOkX,aACvEC,EAAcva,KAAK2K,IAAI,EAAG3K,KAAK2K,IAAIsP,EAAarS,EAAQmS,WAAYK,EAAcxS,EAAQoS,cAEhG5W,OAAOoX,SACHD,EAAc3S,EAAQmS,YAAc3W,OAAO0W,WAAa1W,OAAO+W,YAC/DI,EAAc3S,EAAQoS,aAAe5W,OAAOiX,YAAcjX,OAAOkX,cAIzE,IAAIG,EACAC,EAEJ,GAAI9S,EAAQtG,YAAa,CACrBmZ,EAAS,GADY,oBAGP7S,EAAQtG,aAHD,IAGrB,2BAAmC,CAAC,IAA3BE,EAA0B,QAC/BiZ,EAAOlY,KAAK,CACRb,GAAIF,EAAEE,GACNyM,MAAO3M,EAAE2M,MACTD,SAAU1M,EAAE0M,WAGZ1M,EAAEC,UACFiZ,EAAgBlZ,EAAEE,KAXL,oCAerB+Y,EAAS,KACTC,EAAgB,KAGpB/C,EAAe8C,GACf7C,EAAsB8C,GACtBb,EAAcnB,MAAM9Q,EAAQnD,SAAUmD,EAAQgO,OAAQ6E,EAAQC,GA0BnD,SAASC,GAAY1c,GAChC,IAAMC,EAAU8X,KADuB,EAERvD,mBAAQ,WACnC,IAAMmI,EAAS,IAAIC,gBAAgBzX,OAAO0X,SAASC,QACnD,MAAO,CACHjS,UAAW8R,EAAOI,IAAI,SACtBrR,QAASiR,EAAOI,IAAI,cAEzB,IANKlS,EAF+B,EAE/BA,UAAWa,EAFoB,EAEpBA,QAObkQ,EAAgBpH,mBAAQ,kBAAM,IAAI8G,GAAc5P,KAAU,CAACA,IAT1B,EAUToF,oBAAS,GAVA,mBAUhC6B,EAVgC,KAUvB6G,EAVuB,KAWjCC,EAAatK,mBACnBsK,EAAWjK,QAAUmD,EAZkB,MAaX7B,mBAAS,GAbE,mBAahCxN,EAbgC,KAaxB0Z,EAbwB,OAcDlM,mBAAS,MAdR,mBAchCzN,EAdgC,KAcnBqW,EAdmB,OAea5I,mBAAS,MAftB,mBAehCf,EAfgC,KAeZ4J,EAfY,KAgBjCtG,EAAQmB,mBAAQ,kBAAM,IAAIlI,KAAS,IACnCgG,EAAmBnD,iBAAO,CAACuC,EAAE,EAAGC,EAAE,IAClC+G,EAAWvJ,iBAAO,MAClB8N,EAAmBvT,uBAAY,SAAAC,GAC7BA,IACA+O,EAASlJ,QAAU7F,EAEQ,IAAvBA,EAAQmK,WACR6H,GAAYhS,EAASiS,EAAelC,EAAgBC,GAEpDhQ,EAAQuT,aAAe,SAACrb,GACpB8Z,GAAYhS,EAASiS,EAAelC,EAAgBC,IAI5DhQ,EAAQ/F,UAAY,SAAC/B,GACjB+Z,EAAc9H,WAAW,GAErB2F,EAAWjK,SACX6D,EAAMvR,SAId6H,EAAQwT,QAAU,SAACtb,GACf7B,EAAMgZ,QA/DtB,SAAsBrP,GAClB,IAAImO,EACJ,OAAQnO,EAAQmO,MAAMsF,MAClB,KAAK,EACDtF,EAAQ,UACR,MACJ,KAAK,EACDA,EAAQ,gBACR,MACJ,KAAK,EACDA,EAAQ,iBACR,MACJ,KAAK,EACDA,EAAQ,uBACR,MACJ,QACIA,EAAQ,gBAIhB,OAAOA,EAAQ,MAAQnO,EAAQmO,MAAM5P,SAAW,qBA2CtBmV,CAAa1T,QAGpC,CAAC+P,EAAgBC,EAAuBtG,EAAOuI,EAAe5b,IAEjE,SAASsd,EAAiB7Z,GAAK,IAAD,gBACZiV,EAASlJ,QAAQnM,aADL,IAC1B,2BAA4C,CAAC,IAApCE,EAAmC,QACpCA,EAAEE,KAAOA,EACTF,EAAEC,SAAU,EAEZD,EAAEC,SAAU,GALM,+BAU9BtD,qBAAU,WAwCN,OAvCA0b,EAAcvB,SAAQ,SAAC7T,GACnBwW,EAAUxW,MAGdoV,EAAc/I,QAAO,WACjB6F,EAASlJ,QAAQ1L,OACjBuP,EAAMvR,QACN0X,GAAW,MAGfoC,EAAchJ,SAAQ,WAClB8F,EAASlJ,QAAQ7K,QACjB0O,EAAMzO,OACN4U,GAAW,MAGfoC,EAAclB,eAAc,SAAChX,GAAiB,IAAD,EACrCgV,EAASlJ,UACTkJ,EAASlJ,QAAQ9L,YAAcA,GAGE,KAAjC,UAAAgV,EAASlJ,eAAT,eAAkBsE,aAClB8H,EAAc9H,WAAW,GAG7BT,EAAMzO,OACNyO,EAAM4G,QAAsB,IAAdvW,MAGlBkY,EAAc5L,sBAAqB,SAACvM,GAChC6Z,EAAiB7Z,GACjBmY,EAAcb,mBAAmBtX,MAGrCmY,EAActb,SAAQ,WAClBsb,EAAc7P,QACd5G,OAAO4G,WAGJ,WACH6P,EAAc7P,WAEnB,CAACsH,EAAOmG,EAAYoC,IAEvB,IAAMjB,EAAajR,uBAAY,WACvBgP,EAASlJ,SACToM,EAAc9X,SAEnB,CAAC8X,IAEEhB,EAAclR,uBAAY,WAC5BkS,EAAcjX,UACf,CAACiX,IAEE3J,EAAavI,uBAAY,SAACgE,GACxB+L,EAAWjK,SACX6D,EAAMzO,OAGV,IAAMkI,EAAOY,EAAWpK,EACxBsY,EAAclY,YAAcoJ,EAAO,MACpC,CAACxJ,EAAQ+P,EAAOuI,IAOnB,IAAM3I,EAA2BvJ,uBAAY,SAACjG,GACtCgW,EAAWjK,UACX6D,EAAMzO,OACNgX,EAAcjX,SAGlB2Y,EAAiB7Z,GACjBkW,EAAsBlW,GACtBmY,EAAclY,YAAc,EAC5BkY,EAAcb,mBAAmBtX,KAClC,CAACmY,EAAevI,IAEnB,OACI,sBAAK8H,YAlBT,SAAyBtX,GACrByO,EAAiB9C,QAAQkC,EAAI7N,EAAEuX,QAC/B9I,EAAiB9C,QAAQmC,EAAI9N,EAAEwX,SAgBI5a,UAAWR,EAAQV,KAAtD,UACI,uBACI6D,QAAQ,OACRma,WAAY,EACZ9c,UAAWR,EAAQ8C,MACnBoH,IAAK8S,EACLha,IAAK4H,IACT,cAACgG,GAAD,CACIyB,iBAAkBA,EAClBK,QAASA,EACTU,MAAOA,EACP/P,OAAQA,EACRD,YAAaA,EACb0M,mBAAoBA,EACpB8C,OAAQ8H,EACR/H,QAASgI,EACTjL,OAAQsC,EACRjC,qBAAsBiD,OC/MtC,SAASuK,GAAQxd,GACb,IAnBc6F,EAmBR5F,GAnBQ4F,EAmBY7F,EAAM6F,YAnBHvG,aAAW,SAACwG,GAAD,MAAY,CACpD+D,QAAS,CACL5D,SAAU,EACVE,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC3CC,OAAQR,EAAMM,YAAYE,OAAOC,MACjCC,SAAUV,EAAMM,YAAYI,SAASC,gBAEzCI,YAAa,GAEjB4W,aAAc,CACVtX,WAAYL,EAAMM,YAAYC,OAAO,SAAU,CAC3CC,OAAQR,EAAMM,YAAYE,OAAOK,QACjCH,SAAUV,EAAMM,YAAYI,SAASI,iBAEzCC,YAAahB,UAMjB,OACI,sBACIpF,UAAWuG,YAAK/G,EAAQ4J,QAAT,eACV5J,EAAQwd,aAAezd,EAAMiH,aAFtC,SAICjH,EAAMa,WAmPA6c,OA5Nf,WACI,IAAM3E,EAAMvE,mBAAQ,kBAAM,IAAI1T,IAAO,IAC/BmL,EAAYuI,mBAAQ,kBAAM,IAAI7M,IAAmB,IAF5C,EAjBf,SAAuBgW,GAAM,IAAD,EACA7M,mBAAS,CAAC,EAAG,IADb,mBACjB8M,EADiB,KACXC,EADW,KAcxB,OAZAC,2BAAgB,WACZ,SAASC,IACDJ,GAIJE,EAAQ,CAAC1Y,OAAO+W,WAAY/W,OAAOkX,cAIvC,OAFAlX,OAAO4C,iBAAiB,SAAUgW,GAClCA,IACO,kBAAM5Y,OAAO2N,oBAAoB,SAAUiL,MACnD,CAACJ,IACGC,EAOWI,CAAoC,WADrCC,cACwBC,UAAlCte,EAJI,oBAKLiG,EAAc9D,KAAK0K,IAAI,IAAa,GAAR7M,GALvB,EAMmCkR,mBAAS,IAN5C,mBAMJqN,EANI,KAMaC,EANb,OAOmCtN,oBAAS,GAP5C,mBAOJuN,EAPI,KAOaC,EAPb,OAQexN,qBARf,mBAQJgH,EARI,KAQGyG,EARH,OASiCzN,oBAAS,GAT1C,mBASJ0N,EATI,KASYC,EATZ,OAUiC3N,qBAVjC,mBAUJoF,EAVI,KAUYwI,EAVZ,OAWmB5N,mBAAS,IAX5B,mBAWJmI,EAXI,KAWK0F,EAXL,OAYqB7N,qBAZrB,mBAYJhM,EAZI,KAYM8Z,EAZN,KAaH1F,EAAiBD,EAAjBC,aAEF1C,EAAa9M,uBAAY,SAACxI,EAAMY,EAAOI,EAAK0I,EAAWC,EAAWqO,EAAc2F,GAClFT,GAAmB,SAAAD,GAAe,4BAAQA,GAAR,CAAyB,CACvDjT,UAAWyB,KAAKC,MAChB1L,KAAMA,EACNY,MAAOA,EACPI,IAAKA,EACLlB,KAAM8D,EACNoU,aAAcA,EACdtO,UAAWA,EACXC,UAAWA,EACXgU,WAAYA,UAEjB,CAAC/Z,IAEEga,EAAwBpV,uBAAY,SAAC7H,GACvCyc,GAAoBD,KACrB,CAACA,IAEEU,EAAyBrV,uBAAY,WACvC4U,GAAmB,KACpB,CAACA,IAEEU,EAA8BtV,uBAAY,SAAAM,GAC5C,IADoD,EAC9CiV,EAAqB,GADyB,cAG/Bd,GAH+B,IAGpD,2BAAsC,CAAC,IAA9BlK,EAA6B,QAC9BjK,EAAKkB,YAAc+I,EAAS/I,WAC5B+T,EAAmB3a,KAAK2P,IALoB,8BASpDmK,EAAmBa,KACpB,CAACd,IAEEe,EAAyBxV,uBAAY,WACvC+U,GAAkB,KACnB,IAEGU,EAAczV,uBAAY,SAACxB,GAC7BqW,EAASrW,GACTuW,GAAkB,KACnB,IAEGW,EAAkB1V,uBAAY,SAAAM,GAC5BA,EAAKY,UACLmO,EAAIsG,uBAAuBrV,EAAKY,UAAWZ,EAAKlI,MAAOkI,EAAK9H,KACvDkY,OAAM,SAAAvW,GACHsb,EAAYtb,EAAEqE,YAEf8B,EAAKa,WACZkO,EAAIuG,uBAAuBtV,EAAKa,UAAWb,EAAKlI,MAAOkI,EAAK9H,IAAK8H,EAAK6U,YACjEzE,OAAM,SAAAvW,GACHsb,EAAYtb,EAAEqE,cAG3B,CAAC6Q,EAAKoG,IAEHI,EAA8B7V,uBAAY,SAACM,GACzCkP,IAAiBlP,EAAKkP,aAK1BwF,EAAkB,CAACxd,KAAM8I,EAAK9I,KAAMY,MAAOkI,EAAKlI,QAJ5Cqd,EAAY,iBAAmBnV,EAAKkP,aAAalY,KAAO,mBAK7D,CAACkY,EAAciG,IAElB,SAASK,EAAWvG,GACZA,EAAQE,cACRjW,IAAI2B,gBAAgBoU,EAAQE,cAG5BF,EAAQG,cACRlW,IAAI2B,gBAAgBoU,EAAQG,cAIpC,IAAMqG,GAAa/V,uBAAY,SAAC7F,GAG5B,GAFAA,EAAE6O,iBAEG7O,EAAE6b,aAAaC,OAAyC,IAAhC9b,EAAE6b,aAAaC,MAAMrc,OAAlD,CAIA,IAAMvC,EAAO8C,EAAE6b,aAAaC,MAAM,GAC5BC,EAAsB7e,EAAKC,KAAKgE,YAAY,KAElD,IAA6B,IAAzB4a,EAAJ,CAKA,IAAM3T,EAAYlL,EAAKC,KAAK+D,UAAU6a,EAAsB,EAAG7e,EAAKC,KAAKsC,QAEzE,OAAQ2I,GACJ,IAAK,MACL,IAAK,MACD0S,GAAW,SAAAkB,GACP,MAAO,CACH3G,aAAcnY,EACd6J,UAAWiV,EAASjV,UACpBuO,aAAc0G,EAAS1G,aACvBtO,UAAWgV,EAAShV,UACpBuO,aAAcyG,EAASzG,iBAG/BwF,EAAY7d,EAAKC,MACjB,MACJ,IAAK,MACD2d,GAAW,SAAAkB,GAGP,OAFAL,EAAWK,GAEJ,CACH3G,aAAc2G,EAAS3G,aACvBtO,UAAW,KACXuO,aAAc,KACdtO,UAAW9J,EACXqY,aAAclW,IAAIC,gBAAgBpC,OAGrCkY,EAAQC,cACT0F,EAAY7d,EAAKC,MAErB,MACJ,IAAK,MACD2d,GAAW,SAAAkB,GAGP,OAFAL,EAAWK,GAEJ,CACH3G,aAAc2G,EAAS3G,aACvBtO,UAAW7J,EACXoY,aAAcjW,IAAIC,gBAAgBpC,GAClC8J,UAAW,KACXuO,aAAc,SAGjBH,EAAQC,cACT0F,EAAY9Z,GAEhB,MACJ,QACIqa,EAAY,yBAA2BlT,SArD3CkT,EAAY,oCAAsCpe,EAAKC,SAuD5D,CAACiY,EAASnU,EAAUqa,IAEvB,OACI,sBACIW,OAAQL,GACRM,WAAY,SAAAlc,GAAC,OAAIA,EAAE6O,kBAFvB,UAII,cAAC,EAAD,CACIvS,KAAMqe,EACNle,QAAS4e,EACT3e,iBAAkB,IAClBK,SAAS,QAJb,SAMKkX,IAEL,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkI,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC1B,IAAMvD,EAAS,IAAIC,gBAAgBzX,OAAO0X,SAASC,QAC7CjS,EAAY8R,EAAOI,IAAI,SACvBrR,EAAUiR,EAAOI,IAAI,WAE3B,OAAIlS,GAAaa,EACL,cAAC,IAAD,CAAUyU,GAAI,gBAAkB5F,mBAAmB1P,GAAa,YAAca,IAItF,gCACI,cAAChD,EAAD,CACIoB,MAAOqU,EACPhe,KAAMke,EACNxY,YAAaA,EACbvF,QAASye,EACT9T,SAAU+T,EACVlU,YAAasU,EACbrU,SAAUwU,IAEd,cAAC3Z,EAAD,CACII,MAAOlB,GAAY,oBACnBe,YAAaA,EACboB,WAAYoX,EACZ3W,kBAAmBoX,IAEvB,cAACtB,GAAD,CAAS3X,YAAaA,EAAaoB,WAAYoX,EAA/C,SACI,cAACvF,GAAD,CACIC,IAAKA,EACLrC,OAAQF,EACRwC,QAASmG,EACTlG,QAASA,EACT/C,eAAgBA,EAChBjK,UAAWA,YAM/B,cAAC,IAAD,CAAO+T,OAAK,EAACC,KAAK,SAAlB,SACI,cAACvD,GAAD,CAAa3D,IAAKA,EAAKC,QAASmG,a,mBC5PrCrZ,GAjBDsa,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERzI,MAAO,CACLyI,KAAME,KAAIC,MAEZnT,WAAY,CACVoT,QAAS,WCJAC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3f,MAAK,YAAkD,IAA/C4f,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCEdO,IAASlB,OACL,cAAC,KAAD,CAAemB,SAAU/G,aAAwBgH,cAAc,EAA/D,SACI,eAACC,EAAA,EAAD,CAAezb,MAAOA,GAAtB,UAEA,cAAC0b,EAAA,EAAD,IACA,cAAC,GAAD,SAGJ5e,SAAS6e,cAAc,UAM3Bb,O","file":"static/js/main.e9b7e1b2.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.raw\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    root: {\r\n        height: '64px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton onClick={(e) => navigator.clipboard.writeText(item.text)}>\r\n                                <FileCopyIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Clip Audio\">\r\n                            <IconButton disabled={!item.audioFile && !item.videoFile} onClick={() => props.onClipAudio(item)}>\r\n                                <AudiotrackIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Jump To\">\r\n                            <IconButton onClick={() => props.onSelect(item)}>\r\n                                <ForwardIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={props.open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}>\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={props.onClose}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.listContainer}>\r\n                {list}\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: 'white',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default'\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    activeButton: {\r\n        color: \"#55ff55\"\r\n    },\r\n    button: {\r\n        color: 'white'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        props.onSeek(progress);\r\n    }, [props]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(props.mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(props.mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = props.mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = props.mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [props.mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (props.playing) {\r\n                    props.onPause();\r\n                } else {\r\n                    props.onPlay();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        props.onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        props.onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const progress = props.clock.progress(props.length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => props.playing ? props.onPause() : props.onPlay()}\r\n                            >\r\n                                {props.playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.timeDisplay}>\r\n                                {displayTime(progress * props.length)} / {displayTime(props.length)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}}item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.activeButton : classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const clock = props.clock;\r\n    const subtitles = props.subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const [selectedSubtitleIndex, setSelectedSubtitleIndex] = useState(0);\r\n    const selectedSubtitleIndexRef = useRef(0);\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return () => cancelAnimationFrame(requestAnimationRef.current);\r\n        }\r\n\r\n        const update = (time) => {\r\n            const length = props.length;\r\n            const progress = clock.progress(length);\r\n            let currentSubtitleIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >=0; --i) {\r\n                if (progress >= subtitles[i].start / length) {\r\n                    currentSubtitleIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentSubtitleIndex !== -1 && currentSubtitleIndex !== selectedSubtitleIndexRef.current) {\r\n                setSelectedSubtitleIndex(currentSubtitleIndex);\r\n                selectedSubtitleIndexRef.current = currentSubtitleIndex;\r\n                const selectedSubtitleRef = subtitleRefs[currentSubtitleIndex];\r\n                const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                if (selectedSubtitleRef.current && allowScroll) {\r\n                    selectedSubtitleRef.current.scrollIntoView({\r\n                        block: \"center\",\r\n                        inline: \"nearest\",\r\n                        behavior: \"smooth\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, [subtitles, clock, props.length, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = Math.max(0, selectedSubtitleIndex - 1);\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = Math.min(props.subtitles.length - 1, selectedSubtitleIndex + 1);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n            const progress = props.subtitles[newSubtitleIndex].start / props.length;\r\n            props.onSeek(progress, false);\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props, selectedSubtitleIndex, subtitles]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!props.jumpToSubtitle || !props.subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of props.subtitles) {\r\n            if (s.start === props.jumpToSubtitle.start && s.text === props.jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [props.jumpToSubtitle, props.subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = props.subtitles[subtitleIndex].start / props.length;\r\n        props.onSeek(progress, !props.playing && subtitleIndex === selectedSubtitleIndex);\r\n    }, [props, selectedSubtitleIndex]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = props.subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        props.onCopy(text, subtitle.start, subtitle.end);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [props]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!props.subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <span>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </span>\r\n                <span>\r\n                    Install the <a target=\"_blank\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.1.0\">extension</a> to sync subtitles with videos in other tabs.\r\n                </span>\r\n            </div>\r\n        );\r\n    } else if (props.subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {props.subtitles.map((s, index) => {\r\n                            const selected = index === selectedSubtitleIndex;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}>\r\n                                   <TableCell className={className}>\r\n                                       {s.text}\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.copyButton}>\r\n                                       <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                           <FileCopy />\r\n                                       </IconButton>\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.timestamp}>\r\n                                       {s.displayTime}\r\n                                   </TableCell>\r\n                               </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles) {\r\n    const subtitlesLength = subtitles && subtitles.length > 0\r\n        ? subtitles[subtitles.length - 1].end - subtitles[0].start\r\n        : 0;\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0\r\n                        ? nodes[nodes.length - 1].end - nodes[0].start\r\n                        : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {text: s.text, start: s.start, end: s.end, displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        }\r\n\r\n        if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((text, start, end) => {\r\n        props.onCopy(\r\n            text,\r\n            start,\r\n            end,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props])\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState(null);\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState(null);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef(null);\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected} />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((text, start, end, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            timestamp: Date.now(),\n            text: text,\n            start: start,\n            end: end,\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile !== item.subtitleFile) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, start: item.start});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        const file = e.dataTransfer.files[0];\n        const extensionStartIndex = file.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            handleError(\"Unable to determine file type of \" + file.name);\n            return;\n        }\n\n        const extension = file.name.substring(extensionStartIndex + 1, file.name.length);\n\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n                setSources(previous => {\n                    return {\n                        subtitleFile: file,\n                        audioFile: previous.audioFile,\n                        audioFileUrl: previous.audioFileUrl,\n                        videoFile: previous.videoFile,\n                        videoFileUrl: previous.videoFileUrl\n                    };\n                });\n                setFileName(file.name);\n                break;\n            case \"mkv\":\n                setSources(previous => {\n                    revokeUrls(previous);\n\n                    return {\n                        subtitleFile: previous.subtitleFile,\n                        audioFile: null,\n                        audioFileUrl: null,\n                        videoFile: file,\n                        videoFileUrl: URL.createObjectURL(file)\n                    };\n                });\n                if (!sources.subtitleFile) {\n                    setFileName(file.name);\n                }\n                break;\n            case \"mp3\":\n                setSources(previous => {\n                    revokeUrls(previous);\n\n                    return {\n                        subtitleFile: previous.subtitleFile,\n                        audioFile: file,\n                        audioFileUrl: URL.createObjectURL(file),\n                        videoFile: null,\n                        videoFileUrl: null\n                    };\n                });\n                if (!sources.subtitleFile) {\n                    setFileName(fileName);\n                }\n                break;\n            default:\n                handleError(\"Unsupported file type \" + extension);\n        }\n    }, [sources, fileName, handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}