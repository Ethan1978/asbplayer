{"version":3,"sources":["hooks/useWindowSize/index.ts","../../common/src/KeySequence.ts","../../common/src/KeyEvents.ts","../../common/src/KeySequences.ts","../../common/src/KeyBindings.ts","../../common/src/Mp3Encoder.ts","../../common/src/mp3-encoder.js","../../common/src/AudioClip.ts","../../common/src/CanvasResizer.ts","../../common/src/Image.ts","../../common/src/Fetcher.ts","../../common/src/Anki.ts","../../common/src/Util.ts","components/Alert.tsx","../../common/components/src/TagsTextField.tsx","../../common/components/src/ImageDialog.tsx","../../common/components/src/AnkiDialog.tsx","components/background-colored.png","components/DragOverlay.tsx","components/HelpDialog.tsx","services/SubtitleReader.ts","components/Bar.tsx","services/ChromeExtension.ts","services/Util.ts","components/CopyHistory.tsx","components/LandingPage.tsx","services/BroadcastChannelVideoProtocol.ts","services/ChromeTabVideoProtocol.ts","services/Clock.ts","components/Controls.tsx","services/MediaAdapter.ts","components/SubtitlePlayer.tsx","services/VideoChannel.ts","components/Player.tsx","components/CustomFieldDialog.tsx","components/SettingsDialog.tsx","services/SettingsProvider.ts","services/PlayerChannel.ts","components/VideoPlayer.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeySequenceTransitionResult","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","currentlyHolding","canceled","this","result","REJECTED","extra","type","includes","ADVANCED","CANCELED","_holdingAll","COMPLETE","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","target","Error","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","error","message","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","_name","_base64","_extension","cachedBlob","floor","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","undefined","fetch","FileAudioData","file","trackId","name","readAsDataURL","onloadend","substring","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","selectTrack","onloadedmetadata","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","display","href","download","click","remove","mp3WorkerFactory","subtitleFileName","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","ankiQuerySpecialCharacters","fileNameSpecialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","tags","mode","fields","_appendField","sentenceField","definitionField","sourceField","urlField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","sanitizedName","_sanitizeFileName","_storeMediaFile","fileName","filename","imageField","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","sanitized","action","version","humanReadableTime","seconds","nearestTenth","totalSeconds","round","minutes","hours","String","padStart","surroundingSubtitles","index","countRadius","timeRadius","startIndex","atBoundary","endIndex","mockSurroundingSubtitles","middleSubtitle","maxTimestamp","offset","afterTimestamp","originalEnd","track","beforeTimestamp","unshift","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","TagsTextField","onTagsChange","setValue","handleChange","useCallback","currentValue","endsWith","newTags","splitTags","tag","trim","extractTagsFromString","TextField","onChange","useStyles","theme","backgroundSize","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Dialog","Card","CardMedia","title","marginBottom","spacing","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","label","mark","sliderValueLabelFormat","ms","ValueLabelComponent","Tooltip","enterTouchDelay","placement","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","onRerecord","initialAudioClip","initialSource","initialUrl","customFields","anki","initialDefinition","initialWord","initialCustomFieldValues","initialSelectedTimestampInterval","timestampInterval","initialLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToText","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","setTags","setUrl","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","preventDefault","stopPropagation","handleCustomFieldChange","newCustomFieldValues","assign","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","interval","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","disableApplyTextSelection","disableEnforceFocus","fullWidth","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","color","maxRows","InputProps","endAdornment","InputAdornment","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","valueLabelFormat","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","appBarHidden","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","tagRegex","RegExp","assNewLineRegex","helperElement","SubtitleReader","xmlParser","files","all","f","_subtitles","flatMap","nodes","n1","n2","parseSrt","node","isFromNetflix","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","replace","lines","newLines","line","_fixRTL","onflush","startTime","endTime","parse","flush","parseAss","dialogues","dialogue","slices","fragments","fragment","xml","_xmlParser","textNodes","elm","parseFloat","_decodeHTML","index1","index2","newLine","innerHTML","childNodes","nodeValue","XMLParser","ignoreAttributes","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","hidden","onFileSelector","onOpenHelp","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","versionPromise","tabs","versionResolve","uuidv4","sender","tabId","_sendHeartbeat","setInterval","receivedTabs","tab","callback","_remove","callbacks","splice","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","opacity","hex","exec","r","parseInt","g","b","hexToRgb","timeDurationDisplay","milliseconds","totalMilliseconds","includeMilliseconds","secs","mins","hrs","pad","padEnd","n","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","emptyText","secondary","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","wrap","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","onMessage","BroadcastChannel","that","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","inactiveTopButton","progress","margin","topButton","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","secondsInMinute","ProgressBar","onSeek","mouseOver","setMouseOver","containerRef","useRef","handleClick","rect","getBoundingClientRect","right","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","selectedAudioTrack","onAudioTrackSelected","list","selected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","showOnMouseMovement","theaterModeToggleEnabled","theaterModeEnabled","onTheaterModeToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","closeButtonRef","updateState","forceUpdate","handleSeek","savedVolume","currentShow","pow","offsetTop","offsetHeight","activeElement","clearInterval","handleKey","key","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","onClickSubtitle","onCopySubtitle","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","audioTrackSelectedCallbacks","currentTimeCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","appBarToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","readyMessage","paused","readyStateMessage","Event","playMessage","echo","pauseMessage","audioTrackSelectedMessage","currentTimeMessage","offsetMessage","copyMessage","preventDuplicate","ankiDialogRequestMessage","forwardToVideo","toggleSubtitleTrackInListMessage","subtitleFileNames","names","settings","resume","videoFrame","border","trackLength","audioRef","videoRef","useOffset","subtitlesLength","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","onAppBarToggle","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","HTMLMediaElement","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","unbindCopy","unbindAnkiExport","appBarToggle","loaded","videoInWindow","Boolean","onMouseMove","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setUrlField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleUrlFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handleTagsChange","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","theaterMode","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","urlFieldKey","customAnkiFieldsKey","tagsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","theaterModeKey","preferMp3Key","themeTypeKey","SettingsProvider","_tags","newSettings","localStorage","getItem","removeItem","setItem","_setOptionalItem","ankiFieldsString","tagsString","_getNumberItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","subtitlesMessage","condensedModeToggleMessage","hideSubtitlePlayerToggleMessage","appBarToggleMessage","finishedAnkiDialogRequestMessage","playbackRate","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","setAppBarHidden","showSubtitlesRef","showCursor","setShowCursor","lastMouseMovementTimestamp","alert","setAlert","alertOpen","setAlertOpen","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","videoElement","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleTheaterModeToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","bounds","clientX","clientY","controls","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","Content","App","createTheme","main","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","setTheaterMode","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","itemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","copiedSubtitle","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleAppBarToggle","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","subtitleSettingsMessage","ankiSettingsMessage","miscSettingsMessage","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","syncMessage","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.780545fe.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled: boolean) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","export enum KeySequenceTransitionResult {\r\n    REJECTED = 0,\r\n    CANCELED = 1,\r\n    ADVANCED = 2,\r\n    COMPLETE = 3,\r\n}\r\n\r\nexport interface KeySequenceOptions {\r\n    up?: number[];\r\n    holding?: number[];\r\n    canceledBy?: number[];\r\n    map?: (event: KeyboardEvent) => any;\r\n}\r\n\r\nexport interface KeySequenceTransition {\r\n    result: KeySequenceTransitionResult;\r\n    extra?: any;\r\n}\r\n\r\nexport default class KeySequence {\r\n    private up: number[];\r\n    private holding: number[];\r\n    private canceledBy: number[];\r\n    private map: (event: KeyboardEvent) => any;\r\n    private currentlyHolding: { [key: number]: boolean };\r\n    private canceled: boolean;\r\n\r\n    constructor({ up, holding, canceledBy, map }: KeySequenceOptions) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || ((event: KeyboardEvent) => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event: KeyboardEvent): KeySequenceTransition {\r\n        let result = KeySequenceTransitionResult.REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = KeySequenceTransitionResult.ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = KeySequenceTransitionResult.CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = KeySequenceTransitionResult.ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = KeySequenceTransitionResult.COMPLETE;\r\n            }\r\n        }\r\n\r\n        return { result: result, extra: extra };\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","export default class KeyEvents {\r\n    static detectCopy(event: KeyboardEvent) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event: KeyboardEvent) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event: KeyboardEvent) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event: KeyboardEvent) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event: KeyboardEvent) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event: KeyboardEvent) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event: KeyboardEvent) {\r\n        // Left\r\n        return (\r\n            !KeyEvents.detectIncreaseOffset(event) &&\r\n            !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) &&\r\n            event.keyCode === 37\r\n        );\r\n    }\r\n\r\n    static detectNextSubtitle(event: KeyboardEvent) {\r\n        // Right\r\n        return (\r\n            !KeyEvents.detectDecreaseOffset(event) &&\r\n            !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) &&\r\n            event.keyCode === 39\r\n        );\r\n    }\r\n\r\n    static detectPlay(event: KeyboardEvent) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({ up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57] });\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({\r\n            holding: [83],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({\r\n            holding: [68],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n}\r\n","import { SubtitleModel } from './Model';\r\nimport KeyEvents from './KeyEvents';\r\nimport { KeySequenceTransitionResult } from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n    static bindCopy<T extends SubtitleModel = SubtitleModel>(\r\n        onCopy: (event: KeyboardEvent, subtitle: T) => void,\r\n        disabledGetter: () => boolean,\r\n        subtitleGetter: () => T | undefined,\r\n        useCapture = false\r\n    ) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(\r\n        onAnkiExport: (event: KeyboardEvent) => void,\r\n        disabledGetter: () => boolean,\r\n        useCapture = false\r\n    ) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(\r\n        onSeekToSubtitle: (event: KeyboardEvent, subtitle: SubtitleModel) => void,\r\n        disabledGetter: () => boolean,\r\n        timeGetter: () => number,\r\n        subtitlesGetter: () => SubtitleModel[] | undefined,\r\n        useCapture = false\r\n    ) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(\r\n        onOffsetChange: (event: KeyboardEvent, newOffset: number) => void,\r\n        disabledGetter: () => boolean,\r\n        timeGetter: () => number,\r\n        subtitlesGetter: () => SubtitleModel[] | undefined,\r\n        useCapture = false\r\n    ) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward: boolean, time: number, subtitles: SubtitleModel[]) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(\r\n        onOffsetChange: (event: KeyboardEvent, newOffset: number) => void,\r\n        disabledGetter: () => boolean,\r\n        subtitlesGetter: () => SubtitleModel[] | undefined,\r\n        useCapture = false\r\n    ) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(\r\n        onToggleSubtitles: (event: KeyboardEvent) => void,\r\n        onSequenceAdvanced: () => void,\r\n        disabledGetter: () => boolean,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event: KeyboardEvent) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequenceTransitionResult.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequenceTransitionResult.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(\r\n        onToggleSubtitleTrack: (event: KeyboardEvent, extra: any) => void,\r\n        onSequenceAdvanced: (event: KeyboardEvent) => void,\r\n        disabledGetter: () => boolean,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event: KeyboardEvent) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequenceTransitionResult.ADVANCED) {\r\n                onSequenceAdvanced(event);\r\n            } else if (transition.result === KeySequenceTransitionResult.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(\r\n        onToggleSubtitleTrackInList: (event: KeyboardEvent, extra: any) => void,\r\n        onSequenceAdvanced: (event: KeyboardEvent) => void,\r\n        disabledGetter: () => boolean,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event: KeyboardEvent) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequenceTransitionResult.ADVANCED) {\r\n                onSequenceAdvanced(event);\r\n            } else if (transition.result === KeySequenceTransitionResult.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay: (event: KeyboardEvent) => void, disabledGetter: () => boolean, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler: (event: KeyboardEvent) => void, useCapture: boolean) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler: (event: KeyboardEvent) => void, useCapture: boolean) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}\r\n","export default class Mp3Encoder {\r\n    static async encode(blob: Blob, workerFactory: () => Worker): Promise<Blob> {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n\r\n                    if (e.target === null) {\r\n                        reject(new Error(\"Could not obtain buffer to encode\"));\r\n                        return;\r\n                    }\r\n\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result as ArrayBuffer);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        },\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, { type: 'audio/mp3' }));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = (e) => {\r\n                        const error = e?.error ?? new Error('MP3 encoding failed: ' + e?.message);\r\n                        reject(error);\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.d9a88fab.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES: { [key: string]: string } = { 'audio/ogg;codecs=opus': 'ogg', 'audio/webm;codecs=opus': 'webm' };\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES)\r\n    .filter(MediaRecorder.isTypeSupported)\r\n    .map((t) => [t as string, AUDIO_TYPES[t] as string])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\ninterface ExperimentalAudioElement extends HTMLAudioElement {\r\n    audioTracks: any;\r\n    captureStream?: () => MediaStream;\r\n    mozCaptureStream?: () => MediaStream;\r\n}\r\n\r\ninterface AudioData {\r\n    name: string;\r\n    extension: string;\r\n    play: () => Promise<void>;\r\n    blob: () => Promise<Blob>;\r\n    base64: () => Promise<string>;\r\n    slice: (start: number, end: number) => AudioData;\r\n    isSliceable: (start: number, end: number) => boolean;\r\n}\r\n\r\nclass Base64AudioData implements AudioData {\r\n    private readonly _name: string;\r\n    private readonly start: number;\r\n    private readonly end: number;\r\n    private readonly _base64: string;\r\n    private readonly _extension: string;\r\n\r\n    private cachedBlob?: Blob;\r\n\r\n    constructor(baseName: string, start: number, end: number, base64: string, extension: string) {\r\n        this._name = baseName + '_' + Math.floor(start) + '_' + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this._extension = extension;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get extension(): string {\r\n        return this._extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play(): Promise<void> {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = 'none';\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = '';\r\n                URL.revokeObjectURL(src);\r\n                resolve(undefined);\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch('data:audio/' + this.extension + ';base64,' + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start: number, end: number): AudioData {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData implements AudioData {\r\n    private readonly file: File;\r\n    private readonly _name: string;\r\n    private readonly start: number;\r\n    private readonly end: number;\r\n    private readonly trackId?: string;\r\n    private readonly _extension: string;\r\n\r\n    private _blob?: Blob;\r\n\r\n    constructor(file: File, start: number, end: number, trackId?: string) {\r\n        this.file = file;\r\n        this._name = file.name + '_' + start + '_' + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this._extension = recorderExtension;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get extension(): string {\r\n        return this._extension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result as string;\r\n                const base64 = result.substring(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            };\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = await this._audioElement(this._blob, false);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio(): Promise<Blob> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const audio = await this._audioElement(this.file, true);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks: BlobPart[] = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source: Blob, selectTrack: boolean): Promise<ExperimentalAudioElement> {\r\n        const audio = new Audio() as ExperimentalAudioElement;\r\n        audio.src = URL.createObjectURL(source);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            audio.onloadedmetadata = (e) => {\r\n                if (selectTrack && this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n                    // @ts-ignore\r\n                    for (const t of audio.audioTracks) {\r\n                        t.enabled = this.trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                audio.currentTime = this.start / 1000;\r\n                resolve(audio);\r\n            };\r\n        });\r\n    }\r\n\r\n    _captureStream(audio: ExperimentalAudioElement) {\r\n        if (typeof audio.captureStream === 'function') {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === 'function') {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error('Unable to capture stream from audio');\r\n    }\r\n\r\n    async _stopAudio(audio: ExperimentalAudioElement): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = '';\r\n                URL.revokeObjectURL(src);\r\n                resolve(undefined);\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData implements AudioData {\r\n    private readonly data: AudioData;\r\n    private readonly workerFactory: () => Worker;\r\n    private _blob?: Blob;\r\n\r\n    constructor(data: AudioData, workerFactory: () => Worker) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return 'mp3';\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result as string;\r\n                    const base64 = result.substring(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n    private readonly data: AudioData;\r\n\r\n    constructor(data: AudioData) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName: string, start: number, end: number, base64: string, extension: string) {\r\n        return new AudioClip(\r\n            new Base64AudioData(\r\n                subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')),\r\n                start,\r\n                end,\r\n                base64,\r\n                extension\r\n            )\r\n        );\r\n    }\r\n\r\n    static fromFile(file: File, start: number, end: number, trackId?: string) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + '.' + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style.display = 'none';\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n","export default class CanvasResizer {\r\n    resize(\r\n        canvas: HTMLCanvasElement,\r\n        ctx: CanvasRenderingContext2D,\r\n        maxWidth: number,\r\n        maxHeight: number\r\n    ): Promise<HTMLCanvasElement> {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, { resizeWidth: newWidth, resizeHeight: newHeight })\r\n                    .then((sprite) => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData implements ImageData {\r\n    private readonly _name: string;\r\n    private readonly _base64: string;\r\n    private readonly _extension: string;\r\n\r\n    private cachedBlob?: Blob;\r\n\r\n    constructor(name: string, base64: string, extension: string) {\r\n        this._name = name;\r\n        this._base64 = base64;\r\n        this._extension = extension;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    get extension() {\r\n        return this._extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return 'data:image/' + this.extension + ';base64,' + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData implements ImageData {\r\n    private readonly file: File;\r\n    private readonly timestamp: number;\r\n    private readonly maxWidth: number;\r\n    private readonly maxHeight: number;\r\n    private readonly _name: string;\r\n\r\n    constructor(file: File, timestamp: number, maxWidth: number, maxHeight: number) {\r\n        this.file = file;\r\n        this._name = file.name + '_' + Math.floor(timestamp) + '.jpeg';\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    async base64(): Promise<string> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substring(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob(): Promise<Blob> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                if (blob === null) {\r\n                    reject(new Error('Could not obtain blob'));\r\n                } else {\r\n                    resolve(blob);\r\n                }\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas(): Promise<HTMLCanvasElement> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx!.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx!, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source: File) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = 'none';\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\ninterface ImageData {\r\n    name: string;\r\n    base64: () => Promise<string>;\r\n    dataUrl: () => Promise<string>;\r\n    blob: () => Promise<Blob>;\r\n}\r\n\r\nexport default class Image {\r\n    private readonly data: ImageData;\r\n\r\n    constructor(data: ImageData) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName: string, timestamp: number, base64: string, extension: string) {\r\n        const imageName =\r\n            subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')) +\r\n            '_' +\r\n            Math.floor(timestamp) +\r\n            '.' +\r\n            extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file: File, timestamp: number, maxWidth: number, maxHeight: number) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style.display = 'none';\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}\r\n","export interface Fetcher {\r\n    fetch: (url: string, body: any) => Promise<any>;\r\n}\r\n\r\nexport class HttpFetcher implements Fetcher {\r\n    async fetch(url: string, body: any) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n        });\r\n        return await response.json();\r\n    }\r\n}\r\n","import AudioClip from './AudioClip';\r\nimport Image from './Image';\r\nimport { HttpFetcher, Fetcher } from './Fetcher';\r\nimport { AnkiSettings } from './Settings';\r\n\r\nconst ankiQuerySpecialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\nconst fileNameSpecialCharacters = [':', '/', '\\\\', '<', '>', '\"', '|', '?', '*', '^'];\r\n\r\nexport type ExportMode = 'gui' | 'updateLast' | 'default';\r\n\r\nexport default class Anki {\r\n    private readonly settingsProvider: AnkiSettings;\r\n    private readonly fetcher: Fetcher;\r\n\r\n    constructor(settingsProvider: AnkiSettings, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('modelFieldNames', { modelName: modelName }, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query: string) {\r\n        let escaped = '';\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (ankiQuerySpecialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`;\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(\r\n        text: string | undefined,\r\n        definition: string | undefined,\r\n        audioClip: AudioClip | undefined,\r\n        image: Image | undefined,\r\n        word: string | undefined,\r\n        source: string | undefined,\r\n        url: string | undefined,\r\n        customFieldValues: { [key: string]: string },\r\n        tags: string[],\r\n        mode: ExportMode,\r\n        ankiConnectUrl?: string\r\n    ) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n        this._appendField(fields, this.settingsProvider.urlField, url, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.customAnkiFields[customFieldName],\r\n                    customFieldValues[customFieldName],\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        const params: any = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                tags: tags,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            const sanitizedName = this._sanitizeFileName(audioClip.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await audioClip.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false);\r\n            } else {\r\n                params.note['audio'] = {\r\n                    filename: sanitizedName,\r\n                    data: await audioClip.base64(),\r\n                    fields: [this.settingsProvider.audioField],\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            const sanitizedName = this._sanitizeFileName(image.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await image.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.imageField,\r\n                    `<div><img src=\"${fileName}\"></div>`,\r\n                    false\r\n                );\r\n            } else {\r\n                params.note['picture'] = {\r\n                    filename: sanitizedName,\r\n                    data: await image.base64(),\r\n                    fields: [this.settingsProvider.imageField],\r\n                };\r\n            }\r\n        }\r\n\r\n        params.note['fields'] = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (\r\n                    await this._executeAction('findNotes', { query: 'added:1' }, ankiConnectUrl)\r\n                ).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note['id'] = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n    }\r\n\r\n    _appendField(fields: any, fieldName: string | undefined, value: string | undefined, multiline: boolean) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue = multiline ? value.split('\\n').join('<br>') : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + '<br>' + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    _sanitizeFileName(name: string) {\r\n        let sanitized = '';\r\n\r\n        for (let i = 0; i < name.length; ++i) {\r\n            const char = name[i];\r\n\r\n            if (fileNameSpecialCharacters.includes(char)) {\r\n                sanitized += '_';\r\n            } else {\r\n                sanitized += char;\r\n            }\r\n        }\r\n\r\n        return sanitized;\r\n    }\r\n\r\n    async _storeMediaFile(name: string, base64: string, ankiConnectUrl?: string) {\r\n        return this._executeAction('storeMediaFile', { filename: name, data: base64 }, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action: string, params: any, ankiConnectUrl?: string) {\r\n        const body: any = {\r\n            action: action,\r\n            version: 6,\r\n        };\r\n\r\n        if (params) {\r\n            body['params'] = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}\r\n","import { SubtitleModel } from './Model';\r\n\r\nexport function humanReadableTime(timestamp: number, nearestTenth = false): string {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    let seconds;\r\n\r\n    if (nearestTenth) {\r\n        seconds = Math.round(((timestamp / 1000) % 60) * 10) / 10;\r\n    } else {\r\n        seconds = totalSeconds % 60;\r\n    }\r\n\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + 'h' + String(minutes).padStart(2, '0') + 'm' + String(seconds).padStart(2, '0') + 's';\r\n    }\r\n\r\n    return minutes + 'm' + String(seconds).padStart(2, '0') + 's';\r\n}\r\n\r\nexport function surroundingSubtitles(\r\n    subtitles: SubtitleModel[],\r\n    index: number,\r\n    countRadius: number,\r\n    timeRadius: number\r\n): SubtitleModel[] {\r\n    let startIndex = index;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    let endIndex = startIndex;\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nexport function mockSurroundingSubtitles(\r\n    middleSubtitle: SubtitleModel,\r\n    maxTimestamp: number,\r\n    timeRadius: number\r\n): SubtitleModel[] {\r\n    const subtitles = [middleSubtitle];\r\n    const offset = middleSubtitle.start - middleSubtitle.originalStart;\r\n\r\n    if (middleSubtitle.end < maxTimestamp) {\r\n        const afterTimestamp = Math.min(maxTimestamp, middleSubtitle.end + timeRadius);\r\n        subtitles.push({\r\n            text: '',\r\n            start: middleSubtitle.end,\r\n            end: afterTimestamp,\r\n            originalStart: middleSubtitle.end - offset,\r\n            originalEnd: afterTimestamp - offset,\r\n            track: middleSubtitle.track,\r\n        });\r\n    }\r\n\r\n    if (middleSubtitle.start > 0) {\r\n        const beforeTimestamp = Math.max(0, middleSubtitle.start - timeRadius);\r\n        subtitles.unshift({\r\n            text: '',\r\n            start: beforeTimestamp,\r\n            end: middleSubtitle.start,\r\n            originalStart: beforeTimestamp - offset,\r\n            originalEnd: middleSubtitle.start - offset,\r\n            track: middleSubtitle.track,\r\n        });\r\n    }\r\n\r\n    return subtitles;\r\n}\r\n\r\nfunction atBoundary(\r\n    subtitles: SubtitleModel[],\r\n    index: number,\r\n    initialIndex: number,\r\n    countRadius: number,\r\n    timeRadius: number,\r\n    sign: boolean\r\n): boolean {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (\r\n        Math.abs(initialIndex - index) >= countRadius &&\r\n        (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert, { Color } from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000,\r\n    },\r\n});\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    autoHideDuration: number;\r\n    onClose: () => void;\r\n    severity: Color | undefined;\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function Alert(props: Props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n                <MuiAlert severity={props.severity}>{props.children}</MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { TextField, TextFieldProps } from \"@material-ui/core\";\r\n\r\nfunction extractTagsFromString(value: string) {\r\n    const splitTags = value.split(' ').join('').split(',');\r\n    const tags = [];\r\n\r\n    for (const tag of splitTags) {\r\n        tags.push(tag.trim());\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nexport interface Props {\r\n    tags: string[];\r\n    onTagsChange: (tags: string[]) => void;\r\n}\r\n\r\nexport default function TagsTextField({tags, onTagsChange, ...props}: Props & TextFieldProps) {\r\n    const [value, setValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const tagsString = tags.join(', ');\r\n\r\n        if (tagsString !== value) {\r\n            setValue(tags.join(', '));\r\n        }\r\n    }, [value, tags]);\r\n\r\n    const handleChange = useCallback((e) => {\r\n        let currentValue = e.target.value;\r\n\r\n        if (\r\n            value.length > currentValue.length &&\r\n            value.includes(currentValue) &&\r\n            currentValue.endsWith(',')\r\n        ) {\r\n            // Detected a backspace at the last comma, move cursor back enough to remove the comma\r\n            currentValue = currentValue.substring(0, currentValue.length - 1);\r\n        }\r\n\r\n        // Decompose string into individual tags by removing all spaces and splitting on \",\"\r\n        const newTags = extractTagsFromString(currentValue);\r\n        setValue(newTags.join(', '));\r\n        onTagsChange(newTags);\r\n    }, [value, onTagsChange]);\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            value={value}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\n","import React, { useEffect, useState, useLayoutEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { Image as CommonImage } from '@project/common';\r\n\r\ninterface ImageDimensions {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({ width, height }: ImageDimensions) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain',\r\n    }),\r\n}));\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            setSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n\r\n    return size;\r\n}\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    image?: CommonImage;\r\n    onClose: () => void;\r\n}\r\n\r\nexport default function ImageDialog({ open, image, onClose }: Props) {\r\n    const [dataUrl, setDataUrl] = useState<string>();\r\n    const [width, setWidth] = useState<number>(0);\r\n    const [height, setHeight] = useState<number>(0);\r\n    const [windowWidth, windowHeight] = useWindowSize();\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({ width: width * resizeRatio, height: height * resizeRatio });\r\n\r\n    useEffect(() => {\r\n        setDataUrl(undefined);\r\n        async function fetchImage() {\r\n            if (!image) {\r\n                return;\r\n            }\r\n\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"lg\">\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{ width: width * resizeRatio, height: height * resizeRatio }}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Anki, AnkiDialogSliderContext, AudioClip, Image, humanReadableTime, AnkiSettings } from '@project/common';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider, { Mark } from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport TagsTextField from './TagsTextField';\r\nimport { ExportMode } from '@project/common/src/Anki';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext: AnkiDialogSliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min !== null && max !== null && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext: AnkiDialogSliderContext, boundary: number[]): Mark[] {\r\n    const seenTimestamps: any = {};\r\n\r\n    return sliderContext.subtitles\r\n        .filter((s) => s.text.trim() !== '')\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`,\r\n            };\r\n        })\r\n        .filter((mark: Mark | null) => mark !== null)\r\n        .filter((mark: Mark | null) => mark!.value >= boundary[0] && mark!.value <= boundary[1]) as Mark[];\r\n}\r\n\r\nfunction sliderValueLabelFormat(ms: number) {\r\n    return humanReadableTime(ms, true);\r\n}\r\n\r\ninterface ValueLabelComponentProps {\r\n    children: React.ReactElement;\r\n    open: boolean;\r\n    value: number;\r\n}\r\n\r\nfunction ValueLabelComponent({ children, open, value }: ValueLabelComponentProps) {\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport interface RerecordParams {\r\n    text: string;\r\n    sliderContext: AnkiDialogSliderContext;\r\n    definition: string;\r\n    word: string;\r\n    source: string;\r\n    url: string;\r\n    customFieldValues: { [key: string]: string };\r\n    lastAppliedTimestampIntervalToText: number[];\r\n    timestampInterval: number[];\r\n}\r\n\r\ninterface AnkiDialogProps {\r\n    open: boolean;\r\n    disabled: boolean;\r\n    text?: string;\r\n    onProceed: (\r\n        text: string,\r\n        definition: string,\r\n        audioClip: AudioClip | undefined,\r\n        image: Image | undefined,\r\n        word: string,\r\n        source: string,\r\n        url: string,\r\n        customFieldValues: { [key: string]: string },\r\n        tags: string[],\r\n        mode: ExportMode\r\n    ) => void;\r\n    onRerecord?: (params: RerecordParams) => void;\r\n    onCancel: () => void;\r\n    onViewImage: (image: Image) => void;\r\n    onOpenSettings?: () => void;\r\n    audioClip?: AudioClip;\r\n    image?: Image;\r\n    source?: string;\r\n    url?: string;\r\n    sliderContext?: AnkiDialogSliderContext;\r\n    settingsProvider: AnkiSettings;\r\n    anki: Anki;\r\n    definition?: string;\r\n    word?: string;\r\n    customFields: { [key: string]: string };\r\n    customFieldValues?: { [key: string]: string };\r\n    timestampInterval?: number[];\r\n    lastAppliedTimestampIntervalToText?: number[];\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    onRerecord,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    url: initialUrl,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    definition: initialDefinition,\r\n    word: initialWord,\r\n    customFieldValues: initialCustomFieldValues,\r\n    timestampInterval: initialSelectedTimestampInterval,\r\n    lastAppliedTimestampIntervalToText: initialLastAppliedTimestampIntervalToText,\r\n}: AnkiDialogProps) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState<string>('');\r\n    const [text, setText] = useState<string>('');\r\n    const [word, setWord] = useState<string>('');\r\n    const [lastSearchedWord, setLastSearchedWord] = useState<string>();\r\n    const [source, setSource] = useState<string>(initialSource ?? '');\r\n    const [tags, setTags] = useState<string[]>(settingsProvider.tags);\r\n    const [url, setUrl] = useState<string>(initialUrl ?? '');\r\n    const [duplicateNotes, setDuplicateNotes] = useState<any[]>([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState<number>(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState<{ [key: string]: string }>({});\r\n    const [timestampInterval, setTimestampInterval] = useState<number[]>();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState<number[]>();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState<number[]>();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState<number[]>();\r\n    const [timestampMarks, setTimestampMarks] = useState<Mark[]>();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState<number[]>();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState<number[]>();\r\n    const [audioClip, setAudioClip] = useState<AudioClip>();\r\n\r\n    useEffect(() => {\r\n        setText(initialText ?? '');\r\n        setDefinition(initialDefinition ?? '');\r\n        setWord(initialWord ?? '');\r\n        setSource(initialSource ?? '');\r\n        setUrl(initialUrl ?? '');\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues(initialCustomFieldValues ?? {});\r\n        setTags(settingsProvider.tags);\r\n    }, [\r\n        initialText,\r\n        initialSource,\r\n        initialDefinition,\r\n        initialWord,\r\n        initialCustomFieldValues,\r\n        initialUrl,\r\n        settingsProvider.tags,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval =\r\n            initialSelectedTimestampInterval ||\r\n            (sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd]) ||\r\n            undefined;\r\n        const timestampBoundaryInterval =\r\n            (sliderContext && boundaryIntervalFromSliderContext(sliderContext)) || undefined;\r\n        const timestampMarks =\r\n            (sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval!)) || undefined;\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(timestampMarks);\r\n    }, [sliderContext, initialSelectedTimestampInterval, initialLastAppliedTimestampIntervalToText]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(undefined);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [\r\n        initialAudioClip,\r\n        settingsProvider.preferMp3,\r\n        lastAppliedTimestampIntervalToAudio,\r\n        settingsProvider.audioPaddingStart,\r\n        settingsProvider.audioPaddingEnd,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === '' || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            audioClip!.play();\r\n        },\r\n        [audioClip]\r\n    );\r\n\r\n    const handleCustomFieldChange = useCallback(\r\n        (customFieldName: string, value: string) => {\r\n            const newCustomFieldValues: { [fieldName: string]: string } = {};\r\n            Object.assign(newCustomFieldValues, customFieldValues);\r\n            newCustomFieldValues[customFieldName] = value;\r\n            setCustomFieldValues(newCustomFieldValues);\r\n        },\r\n        [customFieldValues]\r\n    );\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText =\r\n            duplicateNotes.length > 0\r\n                ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n                : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = '';\r\n    }\r\n\r\n    const handleViewImage = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onViewImage(image!);\r\n        },\r\n        [image, onViewImage]\r\n    );\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n        const interval = timestampInterval!;\r\n\r\n        for (const s of sliderContext!.subtitles) {\r\n            if (\r\n                (s.start >= interval[0] && s.start <= interval[1]) ||\r\n                (s.end >= interval[0] && s.end <= interval[1]) ||\r\n                (interval[0] >= s.start && interval[0] <= s.end) ||\r\n                (interval[1] >= s.start && interval[1] <= s.end)\r\n            ) {\r\n                intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join('\\n'));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback(\r\n        (e) => {\r\n            e.stopPropagation();\r\n            if (onRerecord) {\r\n                if (!lastAppliedTimestampIntervalToText || !timestampInterval) {\r\n                    return;\r\n                }\r\n\r\n                e.stopPropagation();\r\n                onRerecord({\r\n                    text: text,\r\n                    sliderContext: sliderContext!,\r\n                    definition: definition,\r\n                    word: word,\r\n                    source: source,\r\n                    url: url,\r\n                    customFieldValues: customFieldValues,\r\n                    lastAppliedTimestampIntervalToText: lastAppliedTimestampIntervalToText,\r\n                    timestampInterval: timestampInterval,\r\n                });\r\n            } else {\r\n                setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n            }\r\n        },\r\n        [\r\n            onRerecord,\r\n            lastAppliedTimestampIntervalToText,\r\n            timestampInterval,\r\n            text,\r\n            sliderContext,\r\n            definition,\r\n            word,\r\n            source,\r\n            url,\r\n            customFieldValues,\r\n        ]\r\n    );\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        if (!initialTimestampBoundaryInterval) {\r\n            return;\r\n        }\r\n\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(\r\n            sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval)\r\n        );\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        if (!timestampBoundaryInterval || !timestampInterval) {\r\n            return;\r\n        }\r\n\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const disableApplyTextSelection =\r\n        !sliderContext || sliderContext.subtitles.filter((s) => s.text.trim() !== '').length === 0;\r\n\r\n    return (\r\n        <Dialog open={open} disableEnforceFocus fullWidth maxWidth=\"sm\" onClose={onCancel}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Anki Export\r\n                </Typography>\r\n                {onOpenSettings && (\r\n                    <IconButton edge=\"end\" onClick={() => onOpenSettings()}>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                )}\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        maxRows={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    !timestampInterval ||\r\n                                                    !lastAppliedTimestampIntervalToText ||\r\n                                                    (timestampInterval[0] === lastAppliedTimestampIntervalToText[0] &&\r\n                                                        timestampInterval[1] ===\r\n                                                            lastAppliedTimestampIntervalToText[1]) ||\r\n                                                    disableApplyTextSelection\r\n                                                }\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    disabled ||\r\n                                                    !settingsProvider.wordField ||\r\n                                                    !word ||\r\n                                                    word.trim() === ''\r\n                                                }\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            maxRows={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || ''}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div className={classes.mediaField} onClick={handlePlayAudio}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            {onRerecord ? (\r\n                                                <Tooltip title=\"Apply Selection (rerecord)\">\r\n                                                    <span>\r\n                                                        <IconButton\r\n                                                            disabled={\r\n                                                                !timestampInterval ||\r\n                                                                !initialTimestampInterval ||\r\n                                                                (timestampInterval[0] === initialTimestampInterval[0] &&\r\n                                                                    timestampInterval[1] ===\r\n                                                                        initialTimestampInterval[1])\r\n                                                            }\r\n                                                            onClick={handleApplyTimestampIntervalToAudio}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            <DoneIcon />\r\n                                                        </IconButton>\r\n                                                    </span>\r\n                                                </Tooltip>\r\n                                            ) : (\r\n                                                <Tooltip title={'Apply Selection'}>\r\n                                                    <span>\r\n                                                        <IconButton\r\n                                                            disabled={\r\n                                                                !lastAppliedTimestampIntervalToAudio ||\r\n                                                                (timestampInterval[0] ===\r\n                                                                    lastAppliedTimestampIntervalToAudio[0] &&\r\n                                                                    timestampInterval[1] ===\r\n                                                                        lastAppliedTimestampIntervalToAudio[1]) ||\r\n                                                                !audioClip.isSliceable(\r\n                                                                    timestampInterval[0],\r\n                                                                    timestampInterval[1]\r\n                                                                )\r\n                                                            }\r\n                                                            onClick={handleApplyTimestampIntervalToAudio}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            <DoneIcon />\r\n                                                        </IconButton>\r\n                                                    </span>\r\n                                                </Tooltip>\r\n                                            )}\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div className={classes.mediaField} onClick={handleViewImage}>\r\n                            <TextField variant=\"filled\" color=\"secondary\" fullWidth value={image.name} label=\"Image\" />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {initialUrl && (\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label=\"URL\"\r\n                            value={url}\r\n                            onChange={(e) => setUrl(e.target.value)}\r\n                        />\r\n                    )}\r\n                    {settingsProvider.tags.length > 0 && (\r\n                        <TagsTextField\r\n                            variant=\"filled\"\r\n                            label=\"Tags\"\r\n                            helperText=\"Comma-separated list of strings\"\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            tags={tags}\r\n                            onTagsChange={(newTags) => setTags(newTags)}\r\n                        />\r\n                    )}\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{ flexGrow: 1 }}>\r\n                                <Slider\r\n                                    ValueLabelComponent={ValueLabelComponent}\r\n                                    value={timestampInterval}\r\n                                    valueLabelFormat={sliderValueLabelFormat}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button disabled={disabled} onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source ?? '',\r\n                            url ?? '',\r\n                            customFieldValues,\r\n                            tags,\r\n                            'gui'\r\n                        )\r\n                    }\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source ?? '',\r\n                            url ?? '',\r\n                            customFieldValues,\r\n                            tags,\r\n                            'updateLast'\r\n                        )\r\n                    }\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source ?? '',\r\n                            url ?? '',\r\n                            customFieldValues,\r\n                            tags,\r\n                            'default'\r\n                        )\r\n                    }\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-colored.cbc50e45.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\nimport { Theme } from '@material-ui/core';\r\n\r\ninterface StylesProps {\r\n    dragging: boolean;\r\n    appBarHidden: boolean;\r\n}\r\n\r\ninterface Props {\r\n    dragging: boolean;\r\n    appBarHidden: boolean;\r\n    loading: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, StylesProps>((theme) => ({\r\n    root: ({ dragging, appBarHidden }) => ({\r\n        position: 'absolute',\r\n        height: appBarHidden ? '100%' : 'calc(100% - 64px)',\r\n        width: '100%',\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? 'auto' : 'none',\r\n    }),\r\n    transparentBackground: ({ appBarHidden }) => ({\r\n        '&::before': {\r\n            content: \"' '\",\r\n            position: 'absolute',\r\n            height: appBarHidden ? '100vh' : 'calc(100vh - 64px)',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            backgroundSize: '300px 300px',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: 'rgba(0, 0, 0, .3)',\r\n            filter: 'drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))',\r\n        },\r\n        width: '100%',\r\n        height: '100%',\r\n    }),\r\n}));\r\n\r\nexport default function DragOverlay({ dragging, appBarHidden, loading }: Props) {\r\n    const classes = useStyles({ dragging, appBarHidden });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'start',\r\n        textAlign: 'left',\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    extensionUrl: string;\r\n    onClose: () => void;\r\n}\r\n\r\nexport default function HelpDialog({ open, extensionUrl, onClose }: Props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose}>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">Loading files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Drag and drop mkv, srt, ass, or mp3 files into the player.</li>\r\n                    <li>Multiple files can be dragged and dropped simultaneously e.g. mkv+srt, mp3+ass etc.</li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded, they\r\n                        can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Syncing with streaming video in another tab</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome{' '}\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                            extension\r\n                        </Link>\r\n                        .\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>Or, load a subtitle file into asbplayer and use the camera button in the bottom right.</li>\r\n                    <li>\r\n                        On supported sites you can sync detected subtitles via the extension keyboard shortcut\r\n                        (Ctrl+Shift+F by default), or via the \"automatically sync detected subtitles\" option. The same\r\n                        shortcut also allows you to sync an empty subtitle track, allowing you to mine media without\r\n                        accompanying subtitles.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine\r\n                        subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Supported streaming video sites for subtitle detection</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Netflix (on main /watch url)</li>\r\n                    <li>Youtube (on main /watch url)</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Anki</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.</li>\r\n                        <li>For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.</li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.</li>\r\n                        <li>For local file playback, copy the current subtitle by using Ctrl+Shift+A.</li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;\r\n                                <StarIcon fontSize=\"small\" />\r\n                                &nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard\r\n                        shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                        >\r\n                            video\r\n                        </Link>{' '}\r\n                        for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Changing subtitle offset</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.</li>\r\n                    <li>Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.</li>\r\n                    <li>Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Condensed playback of local media files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Load an audio/video file with a subtitle file.</li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;\r\n                            <SpeedIcon fontSize=\"small\" />\r\n                            &nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Keyboard shortcuts</Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+A</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Q</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Z (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+X (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+F (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Select video element to mine without a subtitle file, or with detected subtitles\r\n                                        on supported sites\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Space</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Play/pause</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitles</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S+1, S+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in video</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>D+1, D+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in asbplayer</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Seek to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Left/Right or Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset by +/- 100 ms</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">Common issues</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>asbplayer isn't detecting streaming video.</li>\r\n                    <ul>\r\n                        <li>Try refreshing both the asbplayer tab and the video in the other tab.</li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites. A lot of\r\n                            video players are loaded inside of iframes, so it's difficult to list every single URL that\r\n                            the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>The extension keyboard shortcuts aren't working.</li>\r\n                    <ul>\r\n                        <li>Try uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                        <li>Make sure the extension isn't installed twice.</li>\r\n                        <li>\r\n                            Verify the keyboard shortcut is bound as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/wYWbgovfNlI\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                    </ul>\r\n                    <li>asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'</li>\r\n                    <ul>\r\n                        <li>If you're using Brave, make sure asbplayer isn't being blocked by Shield.</li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start\r\n                            is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.</li>\r\n                    <ul>\r\n                        <li>Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).</li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">Demos</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\"\r\n                        >\r\n                            Sentence mining streaming video (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\"\r\n                        >\r\n                            Sentence mining streaming video (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=sgrJF99WX-Q\"\r\n                        >\r\n                            Sentence mining streaming video (no subtitle file)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=J3E82spYqIk\"\r\n                        >\r\n                            Sentence mining video files (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\"\r\n                        >\r\n                            Sentence mining video files (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Browser Compatibility</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely\r\n                        work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser. The{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://github.com/animebook/animebook.github.io#video-format-support\"\r\n                        >\r\n                            animebook\r\n                        </Link>{' '}\r\n                        readme has a detailed explanation of this and links to browsers that have good compatibility.\r\n                        Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are\r\n                        enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { compile as parseAss } from 'ass-compiler';\r\nimport { parseSync as parseSrt } from 'subtitle';\r\nimport { WebVTT } from 'vtt.js';\r\nimport { XMLParser } from 'fast-xml-parser';\r\n\r\nconst tagRegex = RegExp('</?([^>]*)>', 'ig');\r\nconst assNewLineRegex = RegExp(/\\\\[nN]/, 'ig');\r\nconst helperElement = document.createElement('div');\r\n\r\ninterface SubtitleNode {\r\n    start: number;\r\n    end: number;\r\n    text: string;\r\n    track: number;\r\n}\r\n\r\nexport default class SubtitleReader {\r\n    private xmlParser?: XMLParser;\r\n\r\n    async subtitles(files: File[]) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap((nodes) => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file: File, track: number): Promise<SubtitleNode[]> {\r\n        if (file.name.endsWith('.srt')) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map((node: any) => ({ ...node.data, track: track }));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt') || file.name.endsWith('.nfvtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const isFromNetflix = file.name.endsWith('.nfvtt');\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues: any[] = [];\r\n                parser.oncue = (c: any) => {\r\n                    if (isFromNetflix) {\r\n                        c.text = c.text.replace(tagRegex, '');\r\n\r\n                        const lines = c.text.split('\\n');\r\n                        const newLines = [];\r\n\r\n                        for (const line of lines) {\r\n                            newLines.push(this._fixRTL(line));\r\n                        }\r\n\r\n                        c.text = newLines.join('\\n');\r\n                    }\r\n                    cues.push(c);\r\n                };\r\n                parser.onflush = () =>\r\n                    resolve(\r\n                        cues.map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text as string,\r\n                            track: track,\r\n                        }))\r\n                    );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text(), {});\r\n            return nodes.dialogues.map((dialogue) => {\r\n                return {\r\n                    start: Math.round(dialogue.start * 1000),\r\n                    end: Math.round(dialogue.end * 1000),\r\n                    text: dialogue.slices\r\n                        .flatMap((slice) => slice.fragments.map((fragment) => fragment.text))\r\n                        .join('')\r\n                        .replace(assNewLineRegex, '\\n'),\r\n                    track: track,\r\n                };\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ytxml')) {\r\n            const text = await file.text();\r\n            const xml = this._xmlParser().parse(text);\r\n            \r\n            if (Object.keys(xml).length === 0) {\r\n                return [];\r\n            }\r\n            \r\n            const textNodes = xml['transcript']['text'];\r\n            const subtitles = [];\r\n\r\n            for (let index = 0, length = textNodes.length; index < length; index++) {\r\n                const elm = textNodes[index];\r\n                const start = parseFloat(elm['@_start']);\r\n\r\n                subtitles.push({\r\n                    start: Math.floor(start * 1000),\r\n                    end: Math.floor((start + parseFloat(elm['@_dur'])) * 1000),\r\n                    text: this._decodeHTML(String(elm['#text']).replace(tagRegex, '')),\r\n                    track,\r\n                });\r\n            }\r\n\r\n            return subtitles;\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    _fixRTL(line: string): string {\r\n        const index1 = line.indexOf('&lrm;');\r\n        const index2 = line.indexOf('&rlm;');\r\n        let newLine = '';\r\n\r\n        if (index1 > -1) {\r\n            newLine = line.substring(0, index1) + '\\u202a' + line.substring(index1 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        } else if (index2 > -1) {\r\n            newLine = line.substring(0, index2) + '\\u202b' + line.substring(index2 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        }\r\n\r\n        return line;\r\n    }\r\n\r\n    _decodeHTML(text: string): string {\r\n        helperElement.innerHTML = text;\r\n        return helperElement.childNodes.length === 0 ? '' : helperElement.childNodes[0].nodeValue!;\r\n    }\r\n\r\n    _xmlParser() {\r\n        if (this.xmlParser === undefined) {\r\n            this.xmlParser = new XMLParser({ ignoreAttributes: false });\r\n        }\r\n\r\n        return this.xmlParser;\r\n    }\r\n}\r\n","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip, { TooltipProps } from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ninterface BarProps {\r\n    drawerWidth: number;\r\n    drawerOpen: boolean;\r\n    hidden: boolean;\r\n    title: string;\r\n    onFileSelector: () => void;\r\n    onOpenHelp: () => void;\r\n    onOpenSettings: () => void;\r\n    onOpenCopyHistory: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, BarProps, string>((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({ drawerWidth }) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\ninterface CopyHistoryTooltipStylesProps {\r\n    show: boolean;\r\n}\r\n\r\ninterface CopyHistoryTooltipProps extends TooltipProps {\r\n    show: boolean;\r\n}\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles<Theme, CopyHistoryTooltipStylesProps, string>((theme) => ({\r\n    tooltip: ({ show }) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({ show, ...toolTipProps }: CopyHistoryTooltipProps) {\r\n    const classes = useCopyHistoryTooltipStyles({ show: show });\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props: BarProps) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n                [classes.hide]: props.hidden\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={props.onFileSelector}>\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Donate\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/sponsors/killergerbah?frequency=one-time\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenHelp}>\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenSettings}>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { AsbPlayerToVideoCommandV2, Message, VideoTabModel } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport interface ExtensionMessage {\r\n    data: Message;\r\n    tabId: number;\r\n    src: string;\r\n}\r\n\r\nexport default class ChromeExtension {\r\n    private readonly onMessageCallbacks: Array<(message: ExtensionMessage) => void>;\r\n    private readonly onTabsCallbacks: Array<(tabs: VideoTabModel[]) => void>;\r\n    private readonly versionPromise: Promise<string>;\r\n    private readonly id:string;\r\n\r\n    private tabs: VideoTabModel[];\r\n    private versionResolve?: (value: string | PromiseLike<string>) => void;\r\n\r\n    constructor(heartbeat: boolean) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n                return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve!(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage(\r\n            {\r\n                sender: 'asbplayerv2',\r\n                message: {\r\n                    command: 'heartbeat',\r\n                    id: this.id,\r\n                    receivedTabs: this.tabs,\r\n                },\r\n            },\r\n            '*'\r\n        );\r\n    }\r\n\r\n    async installedVersion(): Promise<string> {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message: Message, tabId: number, src: string) {\r\n        const command: AsbPlayerToVideoCommandV2<Message> = { sender: 'asbplayerv2', message: message, tabId: tabId, src: src };\r\n        window.postMessage(command, '*');\r\n    }\r\n\r\n    publishMessage(message: Message) {\r\n        for (const tab of this.tabs) {\r\n            const command: AsbPlayerToVideoCommandV2<Message> = { sender: 'asbplayerv2', message: message, tabId: tab.id, src: tab.src };\r\n            window.postMessage(command, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback: (tabs: VideoTabModel[]) => void) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback: (tabs: VideoTabModel[]) => void) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback: (message: ExtensionMessage) => void) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback: (message: ExtensionMessage) => void) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback: Function, callbacks: Function[]) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Rgb } from \"@project/common\";\r\n\r\nexport function arrayEquals(a: any[], b: any[], equals = (a: any, b: any) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a: any, b: any) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex: string): Rgb {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)!;\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n    };\r\n}\r\n\r\ninterface SubtitleStyle {\r\n    subtitleColor: string;\r\n    subtitleSize: number;\r\n    subtitleOutlineThickness: number;\r\n    subtitleOutlineColor: string;\r\n    subtitleBackgroundOpacity: number;\r\n    subtitleBackgroundColor: string;\r\n    subtitleFontFamily: string;\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily,\r\n}: SubtitleStyle) {\r\n    const styles: any = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles[\r\n            'textShadow'\r\n        ] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const { r, g, b } = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport function timeDurationDisplay(\r\n    milliseconds: number,\r\n    totalMilliseconds: number,\r\n    includeMilliseconds = true\r\n): string {\r\n    if (milliseconds < 0) {\r\n        return timeDurationDisplay(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n\r\n        if (includeMilliseconds) {\r\n            return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n        }\r\n\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs);\r\n    }\r\n\r\n    if (includeMilliseconds) {\r\n        return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs);\r\n}\r\n\r\nfunction pad(n: number) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n: number) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport { Theme } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AudioModel, ImageModel, SubtitleModel } from '@project/common';\r\n\r\nexport interface CopyHistoryItem extends SubtitleModel {\r\n    name: string;\r\n    id: string;\r\n    timestamp: number;\r\n    surroundingSubtitles: SubtitleModel[];\r\n    audioFile?: File;\r\n    audioTrack?: string;\r\n    videoFile?: File;\r\n    subtitleFile?: File;\r\n    audio?: AudioModel;\r\n    image?: ImageModel;\r\n    url?: string;\r\n}\r\n\r\ninterface CopyHistoryProps {\r\n    open: boolean;\r\n    drawerWidth: number;\r\n    items: CopyHistoryItem[];\r\n    onClose: () => void;\r\n    onDelete: (item: CopyHistoryItem) => void;\r\n    onAnki: (item: CopyHistoryItem) => void;\r\n    onSelect: (item: CopyHistoryItem) => void;\r\n    onClipAudio: (item: CopyHistoryItem) => void;\r\n    onDownloadImage: (item: CopyHistoryItem) => void;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, CopyHistoryProps, string>((theme) => ({\r\n    drawer: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20,\r\n    },\r\n    emptyState: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        padding: 15,\r\n    },\r\n    text: {\r\n        flexGrow: 1,\r\n    },\r\n    emptyText: {\r\n        flexGrow: 1,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    timestamp: {\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\ninterface MenuProps {\r\n    open: boolean;\r\n    item?: CopyHistoryItem;\r\n    anchorEl?: Element;\r\n    onClose: () => void;\r\n    onSelect: (item: CopyHistoryItem) => void;\r\n    onClipAudio: (item: CopyHistoryItem) => void;\r\n    onDownloadImage: (item: CopyHistoryItem) => void;\r\n    onDelete: (item: CopyHistoryItem) => void;\r\n}\r\n\r\nfunction Menu({ open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item }: MenuProps) {\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item!.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item!);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item!);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item!);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item!);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props: CopyHistoryProps) {\r\n    const onDelete = props.onDelete;\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback = useCallback((element) => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState<CopyHistoryItem>();\r\n    const [menuOpen, setMenuOpen] = useState<boolean>(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState<Element>();\r\n\r\n    const handleMenu = useCallback((e: React.MouseEvent, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback(() => {\r\n        setMenuItem(undefined);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(undefined);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback(\r\n        (item) => {\r\n            onDelete(item);\r\n        },\r\n        [onDelete]\r\n    );\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters: { [name: string]: number } = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push(\r\n                    <ListSubheader disableSticky={true} key={item.name + '-' + itemNameCounters[item.name]}>\r\n                        {item.name}\r\n                    </ListSubheader>\r\n                );\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push(\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{ gutters: classes.listItemGutters }}\r\n                >\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Grid wrap=\"nowrap\" container>\r\n                                <Grid item className={item.text === '' ? classes.emptyText : classes.text}>\r\n                                    {item.text === '' ? 'No text' : item.text}\r\n                                </Grid>\r\n                                <Grid item className={classes.timestamp}>\r\n                                    {timeDurationDisplay(item.start, item.start, false)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            );\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">See the help for keyboard shortcuts.</Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChromeExtension from '../services/ChromeExtension';\r\nimport { Theme } from '@material-ui/core/styles';\r\n\r\ninterface StylesProps {\r\n    appBarHidden: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, StylesProps>((theme) => ({\r\n    background: ({ appBarHidden }) => ({\r\n        position: 'absolute',\r\n        height: appBarHidden ? '100vh' : 'calc(100vh - 64px)',\r\n        width: '100%',\r\n        zIndex: 100,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    }),\r\n    browseLink: {\r\n        cursor: 'pointer',\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    extension: ChromeExtension;\r\n    latestExtensionVersion: string;\r\n    extensionUrl: string;\r\n    loading: boolean;\r\n    dragging: boolean;\r\n    appBarHidden: boolean;\r\n    onFileSelector: React.MouseEventHandler<HTMLAnchorElement> &\r\n        React.MouseEventHandler<HTMLSpanElement> &\r\n        React.MouseEventHandler<HTMLLabelElement>;\r\n}\r\n\r\nexport default function LandingPage({\r\n    extension,\r\n    latestExtensionVersion,\r\n    extensionUrl,\r\n    loading,\r\n    dragging,\r\n    appBarHidden,\r\n    onFileSelector,\r\n}: Props) {\r\n    const classes = useStyles({ appBarHidden });\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or{' '}\r\n                        <Link\r\n                            target=\"#\"\r\n                            className={classes.browseLink}\r\n                            onClick={onFileSelector}\r\n                            color=\"secondary\"\r\n                            component=\"label\"\r\n                        >\r\n                            browse\r\n                        </Link>\r\n                        .\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    Chrome extension\r\n                                </Link>{' '}\r\n                                to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    update\r\n                                </Link>{' '}\r\n                                is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { Message } from \"@project/common\";\r\nimport { VideoProtocol, VideoProtocolMessage } from \"./VideoProtocol\";\r\n\r\nexport default class BroadcastChannelVideoProtocol implements VideoProtocol {\r\n    private channel?: BroadcastChannel;\r\n\r\n    onMessage?: (message: VideoProtocolMessage) => void;\r\n    \r\n    constructor(channelId: string) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event as VideoProtocolMessage);\r\n        };\r\n    }\r\n\r\n    postMessage(message: Message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = undefined;\r\n    }\r\n}\r\n","import { Message } from '@project/common';\r\nimport ChromeExtension, { ExtensionMessage } from './ChromeExtension';\r\nimport { VideoProtocol, VideoProtocolMessage } from './VideoProtocol';\r\n\r\nexport default class ChromeTabVideoProtocol implements VideoProtocol {\r\n    private readonly tabId: number;\r\n    private readonly src: string;\r\n    private readonly extension: ChromeExtension;\r\n    private readonly listener: (message: ExtensionMessage) => void;\r\n\r\n    onMessage?: (message: VideoProtocolMessage) => void;\r\n\r\n    constructor(tabId: number, src: string, extension: ChromeExtension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data,\r\n                });\r\n            }\r\n        };\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message: Message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}\r\n","export default class Clock {\r\n    private accumulated: number;\r\n    private started: boolean;\r\n    private startTime?: number;\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max: number) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime!);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime!;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time: number) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max: number) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useRef, MutableRefObject } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport { AsbplayerSettingsProvider, AudioTrackModel, VideoTabModel } from '@project/common';\r\nimport Clock from '../services/Clock';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: '#fff',\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    timeDisplay: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: '#fff',\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto',\r\n    },\r\n    subContainer: {\r\n        background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))',\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto',\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto',\r\n    },\r\n    inactiveTopButton: {\r\n        color: 'rgba(255, 255, 255, 0.5)',\r\n        pointerEvents: 'auto',\r\n    },\r\n    progress: {\r\n        margin: 5,\r\n    },\r\n    topButton: {\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    },\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        width: 'calc(100% - 20px)',\r\n        marginLeft: 10,\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8,\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%',\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        bottom: 0,\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle',\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit',\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white',\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds: number) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element: HTMLElement) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\ninterface ProgressBarProps {\r\n    onSeek: (progress: number) => void;\r\n    value: number;\r\n}\r\n\r\nfunction ProgressBar({ onSeek, value }: ProgressBarProps) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n\r\n    const handleClick = useCallback(\r\n        (e) => {\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            // Account for margins by subtracting 10 from left/right sides\r\n            const width = rect.right - rect.left - 20;\r\n            const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? (elementWidth(containerRef.current) * value) / 100 : 0;\r\n    const fillStyle = { width: progressWidth };\r\n    const handleStyle = { marginLeft: progressWidth };\r\n    const fillContainerClassName = mouseOver\r\n        ? classes.fillContainer + ' ' + classes.fillContainerThick\r\n        : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + ' ' + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div ref={containerRef} className={classes.container}>\r\n                <div className={fillContainerClassName}>\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface AudioTrackSelectorProps {\r\n    open: boolean;\r\n    anchorEl?: Element;\r\n    audioTracks?: AudioTrackModel[];\r\n    selectedAudioTrack?: string;\r\n    onAudioTrackSelected: (id: string) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction AudioTrackSelector({\r\n    open,\r\n    anchorEl,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    onAudioTrackSelected,\r\n    onClose,\r\n}: AudioTrackSelectorProps) {\r\n    if (!audioTracks || audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === selectedAudioTrack}\r\n                button\r\n                onClick={() => onAudioTrackSelected(t.id)}\r\n            >\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface TabSelectorProps {\r\n    open: boolean;\r\n    anchorEl?: Element;\r\n    tabs?: VideoTabModel[];\r\n    selectedTab?: VideoTabModel;\r\n    onTabSelected: (tab: VideoTabModel) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction TabSelector({ open, anchorEl, onClose, tabs, selectedTab, onTabSelected }: TabSelectorProps) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button\r\n                onClick={() => onTabSelected(t)}\r\n            >\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface MediaUnloaderProps {\r\n    open: boolean;\r\n    anchorEl?: Element;\r\n    file?: string;\r\n    onUnload: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction MediaUnloader({ open, anchorEl, onUnload, onClose, file }: MediaUnloaderProps) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={(e) => onUnload()}>\r\n                        Unload {file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ninterface ControlsProps {\r\n    clock: Clock;\r\n    playing: boolean;\r\n    length: number;\r\n    offsetEnabled?: boolean;\r\n    displayLength?: number;\r\n    offset: number;\r\n    onAudioTrackSelected: (id: string) => void;\r\n    onSeek: (progress: number) => void;\r\n    mousePositionRef: MutableRefObject<Point>;\r\n    onShow?: (show: boolean) => void;\r\n    onPause: () => void;\r\n    onPlay: () => void;\r\n    onTabSelected?: (tab: VideoTabModel) => void;\r\n    onUnloadAudio?: () => void;\r\n    onUnloadVideo?: () => void;\r\n    onOffsetChange: (offset: number) => void;\r\n    onVolumeChange: (volume: number) => void;\r\n    disableKeyEvents?: boolean;\r\n    settingsProvider: AsbplayerSettingsProvider;\r\n    closeEnabled?: boolean;\r\n    onClose?: () => void;\r\n    volumeEnabled?: boolean;\r\n    condensedModeEnabled?: boolean;\r\n    condensedModeToggleEnabled?: boolean;\r\n    onCondensedModeToggle?: () => void;\r\n    subtitlesEnabled?: boolean;\r\n    subtitlesToggle?: boolean;\r\n    onSubtitlesToggle?: () => void;\r\n    videoFile?: string;\r\n    audioFile?: string;\r\n    audioTracks?: AudioTrackModel[];\r\n    selectedAudioTrack?: string;\r\n    tabs?: VideoTabModel[];\r\n    selectedTab?: VideoTabModel;\r\n    popOutEnabled?: boolean;\r\n    popOut?: boolean;\r\n    onPopOutToggle?: () => void;\r\n    fullscreenEnabled?: boolean;\r\n    fullscreen?: boolean;\r\n    onFullscreenToggle?: () => void;\r\n    hideSubtitlePlayerToggleEnabled?: boolean;\r\n    subtitlePlayerHidden?: boolean;\r\n    onHideSubtitlePlayerToggle?: () => void;\r\n    showOnMouseMovement: boolean;\r\n    theaterModeToggleEnabled?: boolean;\r\n    theaterModeEnabled?: boolean;\r\n    onTheaterModeToggle?: () => void;\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    showOnMouseMovement,\r\n    theaterModeToggleEnabled,\r\n    theaterModeEnabled,\r\n    onTheaterModeToggle\r\n}: ControlsProps) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState<boolean>(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState<boolean>(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState<Element>();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState<boolean>(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState<Element>();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState<boolean>(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState<Element>();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState<boolean>(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState<Element>();\r\n    const [showVolumeBar, setShowVolumeBar] = useState<boolean>(false);\r\n    const [volume, setVolume] = useState<number>(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState<number>(100);\r\n    const lastMousePositionRef = useRef<Point>({ x: 0, y: 0 });\r\n    const lastShowTimestampRef = useRef<number>(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef<number>(Date.now());\r\n    const lastShowRef = useRef<boolean>(true);\r\n    const forceShowRef = useRef<boolean>(false);\r\n    const offsetInputRef = useRef<HTMLInputElement>();\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const closeButtonRef = useRef<HTMLButtonElement>(null);\r\n    const [, updateState] = useState<any>();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    function handleMouseOver() {\r\n        forceShowRef.current = true;\r\n    }\r\n\r\n    function handleMouseOut() {\r\n        forceShowRef.current = false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            let currentShow: boolean;\r\n\r\n            if (showOnMouseMovement) {\r\n                currentShow =\r\n                    Date.now() - lastShowTimestampRef.current < 2000 ||\r\n                    Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2) +\r\n                        Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) >\r\n                        100;\r\n            } else {\r\n                currentShow =\r\n                    ((containerRef.current && mousePositionRef.current.y > containerRef.current.offsetTop - 20) ||\r\n                        (closeButtonRef.current &&\r\n                            mousePositionRef.current.y < closeButtonRef.current.offsetHeight + 20)) ??\r\n                    false;\r\n            }\r\n\r\n            currentShow =\r\n                currentShow ||\r\n                forceShowRef.current ||\r\n                offsetInputRef.current === document.activeElement ||\r\n                Date.now() - lastOffsetInputChangeTimestampRef.current < 2000;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, showOnMouseMovement]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event: KeyboardEvent) {\r\n            if (event.key === 'Enter') {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                    onOffsetChange(offset * 1000);\r\n                    offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate();\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = '';\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? '+' + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(undefined);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id: string) => {\r\n            onAudioTrackSelected(id);\r\n            setAudioTrackSelectorAnchorEl(undefined);\r\n            setAudioTrackSelectorOpen(false);\r\n        },\r\n        [onAudioTrackSelected]\r\n    );\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(undefined);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback(\r\n        (tab) => {\r\n            onTabSelected?.(tab);\r\n            setTabSelectorAnchorEl(undefined);\r\n            setTabSelectorOpen(false);\r\n        },\r\n        [onTabSelected]\r\n    );\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(undefined);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio?.();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback(() => {\r\n        setVideoUnloaderAnchorEl(undefined);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo?.();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback(\r\n        (e, value) => {\r\n            setVolume(value);\r\n            onVolumeChange(value / 100);\r\n        },\r\n        [onVolumeChange]\r\n    );\r\n\r\n    const handleVolumeChangeCommitted = useCallback(\r\n        (e, value) => {\r\n            if (value > 0) {\r\n                setLastCommittedVolume(value);\r\n            }\r\n\r\n            settingsProvider.volume = value;\r\n        },\r\n        [settingsProvider]\r\n    );\r\n\r\n    const handleVolumeToggle = useCallback(() => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={show} timeout={200}>\r\n                <Grid container style={{position: 'absolute', top: 0}}>\r\n                    <Grid item style={{flexGrow: 1}}>\r\n                        {closeEnabled && (\r\n                            <IconButton\r\n                                ref={closeButtonRef}\r\n                                color=\"inherit\"\r\n                                className={classes.topButton}\r\n                                onClick={onClose}\r\n                                onMouseOver={handleMouseOver}\r\n                                onMouseOut={handleMouseOut}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {theaterModeToggleEnabled && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                className={theaterModeEnabled ? classes.topButton : classes.inactiveTopButton}\r\n                                onClick={onTheaterModeToggle}\r\n                                onMouseOver={handleMouseOver}\r\n                                onMouseOut={handleMouseOut}\r\n                            >\r\n                                <AspectRatioIcon />\r\n                            </IconButton>\r\n                        )}\r\n                        {hideSubtitlePlayerToggleEnabled && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                className={classes.topButton}\r\n                                onClick={onHideSubtitlePlayerToggle}\r\n                                onMouseOver={handleMouseOver}\r\n                                onMouseOut={handleMouseOut}\r\n                            >\r\n                                {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                            </IconButton>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </Fade>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar onSeek={handleSeek} value={progress * 100} />\r\n                        <Grid container className={classes.gridContainer} direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton color=\"inherit\" onClick={() => (playing ? onPause() : onPlay())}>\r\n                                    {playing ? (\r\n                                        <PauseIcon className={classes.button} />\r\n                                    ) : (\r\n                                        <PlayArrowIcon className={classes.button} />\r\n                                    )}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid\r\n                                    item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={\r\n                                        showVolumeBar\r\n                                            ? classes.volumeInputContainerShown\r\n                                            : classes.volumeInputContainerHidden\r\n                                    }\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar\r\n                                                ? classes.volumeInputThumbShown\r\n                                                : classes.volumeInputThumbHidden,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={'±' + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{ flexGrow: 1 }}></Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon\r\n                                                className={\r\n                                                    condensedModeEnabled ? classes.button : classes.inactiveButton\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon\r\n                                            className={subtitlesEnabled ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon\r\n                                            className={selectedTab ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon\r\n                                            className={classes.button}\r\n                                            style={popOut ? { transform: 'rotateX(180deg)' } : {}}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen ? (\r\n                                            <FullscreenExitIcon className={classes.button} />\r\n                                        ) : (\r\n                                            <FullscreenIcon className={classes.button} />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { RefObject } from \"react\";\r\n\r\nexport interface MediaElement {\r\n    currentTime: number;\r\n    readyState: number;\r\n    oncanplay: ((ev: Event) => void) | null;\r\n    play: () => Promise<void>;\r\n    pause: () => void;\r\n    duration: number;\r\n}\r\n\r\nexport default class MediaAdapter {\r\n    private readonly ref: RefObject<MediaElement | undefined>;\r\n    private readonly readyResolves: (() => void)[];\r\n\r\n    constructor(ref: RefObject<MediaElement | undefined>) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time: number) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve(undefined));\r\n            } else {\r\n                resolve(undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve(undefined));\r\n            } else {\r\n                resolve(undefined);\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback: () => void) {\r\n        if (this.ref.current?.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n\r\n                if (this.ref.current) {\r\n                    this.ref.current.oncanplay = null;\r\n                }\r\n            };\r\n        }\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef, RefObject } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { AsbplayerSettingsProvider, KeyBindings, surroundingSubtitles, SubtitleModel } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow, { TableRowProps } from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Clock from '../services/Clock';\r\n\r\ninterface StylesProps {\r\n    compressed: boolean;\r\n    appBarHidden: boolean;\r\n    windowWidth: number;\r\n}\r\n\r\nconst useSubtitlePlayerStyles = makeStyles<Theme, StylesProps, string>((theme) => ({\r\n    container: {\r\n        height: ({appBarHidden}) => appBarHidden ? '100vh' : 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({ compressed, windowWidth }) => (compressed ? Math.max(350, 0.25 * windowWidth) : '100%'),\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5,\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5,\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nexport interface DisplaySubtitleModel extends SubtitleModel {\r\n    displayTime: string;\r\n}\r\n\r\ninterface SubtitleRowProps extends TableRowProps {\r\n    index: number;\r\n    compressed: boolean;\r\n    selected: boolean;\r\n    disabled: boolean;\r\n    subtitle: DisplaySubtitleModel;\r\n    subtitleRef: RefObject<HTMLTableRowElement>;\r\n    onClickSubtitle: (index: number) => void;\r\n    onCopySubtitle: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => void;\r\n}\r\n\r\nconst SubtitleRow = React.memo((props: SubtitleRowProps) => {\r\n    const {\r\n        index,\r\n        selected,\r\n        subtitleRef,\r\n        onClickSubtitle,\r\n        onCopySubtitle,\r\n        compressed,\r\n        disabled,\r\n        subtitle,\r\n        ...tableRowProps\r\n    } = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef<HTMLSpanElement>(null);\r\n    const [textSelected, setTextSelected] = useState<boolean>(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : '';\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp() {\r\n        const selection = document.getSelection();\r\n        const selected =\r\n            selection?.type === 'Range' && textRef.current?.isSameNode(selection.anchorNode?.parentNode ?? null);\r\n        setTextSelected(selected ?? false);\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={() => !textSelected && onClickSubtitle(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopySubtitle(e, index)}>\r\n                    <FileCopy fontSize={compressed ? 'small' : 'medium'} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>{subtitle.displayTime}</TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\ninterface SubtitlePlayerProps {\r\n    clock: Clock;\r\n    onSeek: (progress: number, shouldPlay: boolean) => void;\r\n    onCopy: (subtitle: SubtitleModel, surroundingSubtitles: SubtitleModel[], preventDuplicate: boolean) => void;\r\n    onOffsetChange: (offset: number) => void;\r\n    onAnkiDialogRequest: () => void;\r\n    onToggleSubtitleTrack: (track: number) => void;\r\n    playing: boolean;\r\n    subtitles?: DisplaySubtitleModel[];\r\n    length: number;\r\n    jumpToSubtitle?: SubtitleModel;\r\n    compressed: boolean;\r\n    loading: boolean;\r\n    drawerOpen: boolean;\r\n    appBarHidden: boolean;\r\n    displayHelp?: string;\r\n    disableKeyEvents: boolean;\r\n    lastJumpToTopTimestamp: number;\r\n    hidden: boolean;\r\n    disabledSubtitleTracks: { [track: number]: boolean };\r\n    settingsProvider: AsbplayerSettingsProvider;\r\n}\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    appBarHidden,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider,\r\n}: SubtitlePlayerProps) {\r\n    const playingRef = useRef<boolean>();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef<Clock>(clock);\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef<DisplaySubtitleModel[]>();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo<RefObject<HTMLTableRowElement>[]>(\r\n        () =>\r\n            subtitles\r\n                ? Array(subtitles.length)\r\n                      .fill(undefined)\r\n                      .map((_) => createRef<HTMLTableRowElement>())\r\n                : [],\r\n        [subtitles]\r\n    );\r\n    const subtitleRefsRef = useRef<RefObject<HTMLTableRowElement>[]>([]);\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef<boolean>();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState<{ [index: number]: boolean }>({});\r\n    const selectedSubtitleIndexesRef = useRef<{ [index: number]: boolean }>({});\r\n    const lengthRef = useRef<number>(0);\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef<boolean>(false);\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef<number>(0);\r\n    const requestAnimationRef = useRef<number>();\r\n    const containerRef = useRef<HTMLElement>();\r\n    const drawerOpenRef = useRef<boolean>();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({ compressed, windowWidth, appBarHidden });\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = () => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes: { [index: number]: boolean } = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: 'center',\r\n                            inline: 'nearest',\r\n                            behavior: 'smooth',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => {\r\n            if (requestAnimationRef.current !== undefined) {\r\n                cancelAnimationFrame(requestAnimationRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[Number(indexes[0])];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('visibilitychange', scrollIfVisible);\r\n\r\n        return () => document.removeEventListener('visibilitychange', scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll() {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        }\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                block: 'center',\r\n                inline: 'nearest',\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback(\r\n        (index) => {\r\n            if (!selectedSubtitleIndexesRef.current || !subtitles) {\r\n                return [];\r\n            }\r\n\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n        const index = Math.min(...Object.keys(selectedSubtitleIndexesRef.current).map((i) => Number(i)));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current ?? false,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current).map((i) => Number(i));\r\n\r\n                if (!subtitles || !subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return undefined;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current).map((i) => Number(i));\r\n\r\n                if (subtitles && subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback(\r\n        (index: number) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n            onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n        },\r\n        [subtitles, onSeek]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n        },\r\n        [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]\r\n    );\r\n\r\n    let subtitleTable = null;\r\n\r\n    if (!subtitles || subtitles.length === 0) {\r\n        if (!loading && displayHelp) {\r\n            subtitleTable = !loading && displayHelp && (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">{displayHelp}</Typography>\r\n                </div>\r\n            );\r\n        } else if (subtitles && subtitles.length === 0) {\r\n            subtitleTable = (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">No subtitles</Typography>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s: SubtitleModel, index: number) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClickSubtitle={handleClick}\r\n                                    onCopySubtitle={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} ref={containerRef} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","import {\r\n    AnkiDialogRequestFromVideoMessage,\r\n    AnkiSettings,\r\n    AnkiSettingsToVideoMessage,\r\n    AppBarToggleMessageToVideoMessage,\r\n    AudioModel,\r\n    AudioTrackModel,\r\n    AudioTrackSelectedFromVideoMessage,\r\n    AudioTrackSelectedToVideoMessage,\r\n    CondensedModeToggleToVideoMessage,\r\n    CopyMessage,\r\n    CurrentTimeFromVideoMessage,\r\n    CurrentTimeToVideoMessage,\r\n    FinishedAnkiDialogRequestToVideoMessage,\r\n    HideSubtitlePlayerToggleToVideoMessage,\r\n    ImageModel,\r\n    MiscSettings,\r\n    MiscSettingsToVideoMessage,\r\n    OffsetFromVideoMessage,\r\n    PauseFromVideoMessage,\r\n    PlayFromVideoMessage,\r\n    ReadyFromVideoMessage,\r\n    ReadyStateFromVideoMessage,\r\n    ReadyToVideoMessage,\r\n    SubtitleModel,\r\n    SubtitleSettings,\r\n    SubtitleSettingsToVideoMessage,\r\n    SubtitlesToVideoMessage,\r\n    ToggleSubtitleTrackInListFromVideoMessage,\r\n} from '@project/common';\r\nimport { VideoProtocol } from './VideoProtocol';\r\n\r\nexport default class VideoChannel {\r\n    private readonly protocol: VideoProtocol;\r\n    private time: number;\r\n    private isReady: boolean;\r\n    private readyCallbacks: ((paused: boolean) => void)[];\r\n    private playCallbacks: ((echo: boolean) => void)[];\r\n    private pauseCallbacks: ((echo: boolean) => void)[];\r\n    private audioTrackSelectedCallbacks: ((audioTrack: string) => void)[];\r\n    private currentTimeCallbacks: ((currentTime: number, echo: boolean) => void)[];\r\n    private exitCallbacks: (() => void)[];\r\n    private offsetCallbacks: ((offset: number) => void)[];\r\n    private popOutToggleCallbacks: (() => void)[];\r\n    private copyCallbacks: ((\r\n        subtitle: SubtitleModel,\r\n        surroundingSubtitles: SubtitleModel[],\r\n        audio: AudioModel | undefined,\r\n        image: ImageModel | undefined,\r\n        url: string | undefined,\r\n        preventDuplicate: boolean,\r\n        id: string | undefined\r\n    ) => void)[];\r\n    private condensedModeToggleCallbacks: (() => void)[];\r\n    private hideSubtitlePlayerToggleCallbacks: (() => void)[];\r\n    private appBarToggleCallbacks: (() => void)[];\r\n    private ankiDialogRequestCallbacks: ((forwardToVideo: boolean) => void)[];\r\n    private toggleSubtitleTrackInListCallbacks: ((track: number) => void)[];\r\n\r\n    readyState: number;\r\n    oncanplay: ((ev: Event) => void) | null = null;\r\n    audioTracks?: AudioTrackModel[];\r\n    selectedAudioTrack?: string;\r\n    duration: number;\r\n\r\n    constructor(protocol: VideoProtocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = undefined;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.appBarToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'ready':\r\n                    const readyMessage = event.data as ReadyFromVideoMessage;\r\n\r\n                    that.duration = readyMessage.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = readyMessage.audioTracks;\r\n                    that.selectedAudioTrack = readyMessage.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = readyMessage.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(readyMessage.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    const readyStateMessage = event.data as ReadyStateFromVideoMessage;\r\n\r\n                    that.readyState = readyStateMessage.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.(new Event('canplay'));\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    const playMessage = event.data as PlayFromVideoMessage;\r\n\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(playMessage.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    const pauseMessage = event.data as PauseFromVideoMessage;\r\n\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(pauseMessage.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    const audioTrackSelectedMessage = event.data as AudioTrackSelectedFromVideoMessage;\r\n\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = audioTrackSelectedMessage.id;\r\n                        callback(audioTrackSelectedMessage.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    const currentTimeMessage = event.data as CurrentTimeFromVideoMessage;\r\n\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(currentTimeMessage.value, currentTimeMessage.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    const offsetMessage = event.data as OffsetFromVideoMessage;\r\n\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(offsetMessage.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        const copyMessage = event.data as CopyMessage;\r\n\r\n                        callback(\r\n                            copyMessage.subtitle,\r\n                            copyMessage.surroundingSubtitles,\r\n                            copyMessage.audio,\r\n                            copyMessage.image,\r\n                            copyMessage.url,\r\n                            copyMessage.preventDuplicate ?? false,\r\n                            copyMessage.id\r\n                        );\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'appBarToggle':\r\n                    for (let callback of that.appBarToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    const ankiDialogRequestMessage = event.data as AnkiDialogRequestFromVideoMessage;\r\n\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(ankiDialogRequestMessage.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    const toggleSubtitleTrackInListMessage = event.data as ToggleSubtitleTrackInListFromVideoMessage;\r\n\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(toggleSubtitleTrackInListMessage.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        const message: CurrentTimeToVideoMessage = { command: 'currentTime', value: this.time };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    onReady(callback: (paused: boolean) => void) {\r\n        if (this.isReady) {\r\n            callback(false);\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback: (echo: boolean) => void) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback: (echo: boolean) => void) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback: (currentTime: number, echo: boolean) => void) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback: (id: string) => void) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback: () => void) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback: (offset: number) => void) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback: () => void) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(\r\n        callback: (\r\n            subtitle: SubtitleModel,\r\n            surroundingSubtitles: SubtitleModel[],\r\n            audio: AudioModel | undefined,\r\n            image: ImageModel | undefined,\r\n            url: string | undefined,\r\n            preventDuplicate: boolean,\r\n            id: string | undefined\r\n        ) => void\r\n    ) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback: () => void) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback: () => void) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAppBarToggle(callback: () => void) {\r\n        this.appBarToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback: (forwardToVideo: boolean) => void) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback: (track: number) => void) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration: number) {\r\n        const message: ReadyToVideoMessage = { command: 'ready', duration: duration };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({ command: 'init' });\r\n    }\r\n\r\n    // Return a promise to implement the analogous HTMLMediaElement method\r\n    play(): Promise<void> {\r\n        this.protocol.postMessage({ command: 'play' });\r\n        return new Promise((resolve, reject) => resolve());\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({ command: 'pause' });\r\n    }\r\n\r\n    audioTrackSelected(id: string) {\r\n        const message: AudioTrackSelectedToVideoMessage = { command: 'audioTrackSelected', id: id };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    subtitles(subtitles: SubtitleModel[], subtitleFileNames: string[]) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames,\r\n        } as SubtitlesToVideoMessage);\r\n    }\r\n\r\n    subtitleSettings(settings: SubtitleSettings) {\r\n        const message: SubtitleSettingsToVideoMessage = { command: 'subtitleSettings', value: settings };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    condensedModeToggle(enabled: boolean) {\r\n        const message: CondensedModeToggleToVideoMessage = {\r\n            command: 'condensedModeToggle',\r\n            value: enabled,\r\n        };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden: boolean) {\r\n        const message: HideSubtitlePlayerToggleToVideoMessage = {\r\n            command: 'hideSubtitlePlayerToggle',\r\n            value: hidden,\r\n        };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    appBarToggle(hidden: boolean) {\r\n        const message: AppBarToggleMessageToVideoMessage = {\r\n            command: 'appBarToggle',\r\n            value: hidden,\r\n        };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({ command: 'ankiDialogRequest' });\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume: boolean) {\r\n        const message: FinishedAnkiDialogRequestToVideoMessage = {\r\n            command: 'finishedAnkiDialogRequest',\r\n            resume: resume,\r\n        };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    ankiSettings(settings: AnkiSettings) {\r\n        const message: AnkiSettingsToVideoMessage = { command: 'ankiSettings', value: settings };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    miscSettings(settings: MiscSettings) {\r\n        const message: MiscSettingsToVideoMessage = { command: 'miscSettings', value: settings };\r\n        this.protocol.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({ command: 'close' });\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.appBarToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}\r\n","import { useEffect, useState, useMemo, useCallback, useRef, MutableRefObject } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n    AsbplayerSettingsProvider,\r\n    AudioModel,\r\n    AudioTrackModel,\r\n    ImageModel,\r\n    KeyBindings,\r\n    mockSurroundingSubtitles,\r\n    SubtitleModel,\r\n    VideoTabModel,\r\n} from '@project/common';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls, { Point } from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter, { MediaElement } from '../services/MediaAdapter';\r\nimport SubtitlePlayer, { DisplaySubtitleModel } from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\nimport ChromeExtension from '../services/ChromeExtension';\r\nimport SubtitleReader from '../services/SubtitleReader';\r\n\r\ninterface StylesProps {\r\n    appBarHidden: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, StylesProps>({\r\n    root: ({appBarHidden}) => ({\r\n        height: appBarHidden ? '100vh' : 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n    }),\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0,\r\n        display: 'block'\r\n    },\r\n});\r\n\r\nfunction trackLength(\r\n    audioRef: MutableRefObject<HTMLAudioElement | null>,\r\n    videoRef: MutableRefObject<MediaElement | undefined>,\r\n    subtitles: SubtitleModel[] | undefined,\r\n    useOffset?: boolean\r\n) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration ? 1000 * audioRef.current.duration : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration ? 1000 * videoRef.current.duration : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport interface MediaSources {\r\n    subtitleFiles: File[];\r\n    audioFile?: File;\r\n    audioFileUrl?: string;\r\n    videoFile?: File;\r\n    videoFileUrl?: string;\r\n}\r\n\r\nexport interface AnkiDialogFinishedRequest {\r\n    resume: boolean;\r\n    timestamp: number;\r\n}\r\n\r\ninterface PlayerProps {\r\n    sources: MediaSources;\r\n    subtitleReader: SubtitleReader;\r\n    settingsProvider: AsbplayerSettingsProvider;\r\n    extension: ChromeExtension;\r\n    videoFrameRef: MutableRefObject<HTMLIFrameElement | null>;\r\n    drawerOpen: boolean;\r\n    appBarHidden: boolean;\r\n    tab?: VideoTabModel;\r\n    availableTabs: VideoTabModel[];\r\n    ankiDialogRequestToVideo?: number;\r\n    ankiDialogRequested: boolean;\r\n    ankiDialogFinishedRequest: AnkiDialogFinishedRequest;\r\n    onError: (error: string) => void;\r\n    onUnloadAudio: (url: string) => void;\r\n    onUnloadVideo: (url: string) => void;\r\n    onCopy: (\r\n        subtitle: SubtitleModel,\r\n        surroundingSubtitles: SubtitleModel[],\r\n        audioFile: File | undefined,\r\n        videoFile: File | undefined,\r\n        subtitleFile: File | undefined,\r\n        audioTrack: string | undefined,\r\n        audio: AudioModel | undefined,\r\n        image: ImageModel | undefined,\r\n        url: string | undefined,\r\n        preventDuplicate: boolean | undefined,\r\n        id: string | undefined\r\n    ) => void;\r\n    onLoaded: () => void;\r\n    onTabSelected: (tab: VideoTabModel) => void;\r\n    onAnkiDialogRequest: (forwardToVideo?: boolean) => void;\r\n    onAppBarToggle: () => void;\r\n    disableKeyEvents: boolean;\r\n    jumpToSubtitle?: SubtitleModel;\r\n}\r\n\r\nexport default function Player({\r\n    sources: { subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl },\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    appBarHidden,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    onAppBarToggle,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n}: PlayerProps) {\r\n    const [subtitles, setSubtitles] = useState<DisplaySubtitleModel[]>();\r\n    const subtitlesRef = useRef<SubtitleModel[]>();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState<boolean>(false);\r\n    const [playing, setPlaying] = useState<boolean>(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState<number>(0);\r\n    const [offset, setOffset] = useState<number>(0);\r\n    const playingRef = useRef<boolean>();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState<any>();\r\n    const [audioTracks, setAudioTracks] = useState<AudioTrackModel[]>();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState<string>();\r\n    const [channelId, setChannelId] = useState<string>();\r\n    const [videoPopOut, setVideoPopOut] = useState<boolean>(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState<boolean>(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState<boolean>(false);\r\n    const hideSubtitlePlayerRef = useRef<boolean>();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState<{ [track: number]: boolean }>({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState<boolean>(false);\r\n    const condensedModeEnabledRef = useRef<boolean>();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef<Point>({ x: 0, y: 0 });\r\n    const audioRef = useRef<HTMLAudioElement>(null);\r\n    const videoRef = useRef<MediaElement>();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({ current: null });\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo<Clock>(() => new Clock(), []);\r\n    const classes = useStyles({appBarHidden});\r\n    const lengthRef = useRef<number>(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(\r\n        async (time, clock, forwardToMedia) => {\r\n            clock.setTime(time);\r\n            forceUpdate();\r\n\r\n            if (forwardToMedia) {\r\n                await mediaAdapter.seek(time / 1000);\r\n            }\r\n        },\r\n        [forceUpdate, mediaAdapter]\r\n    );\r\n\r\n    const applyOffset = useCallback(\r\n        (offset, forwardToVideo) => {\r\n            setOffset(offset);\r\n\r\n            setSubtitles((subtitles) => {\r\n                if (!subtitles) {\r\n                    return;\r\n                }\r\n\r\n                const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n                const newSubtitles = subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    displayTime: timeDurationDisplay(s.originalStart + offset, length),\r\n                    track: s.track,\r\n                }));\r\n\r\n                if (forwardToVideo) {\r\n                    if (videoRef.current instanceof VideoChannel) {\r\n                        videoRef.current.subtitles(\r\n                            newSubtitles,\r\n                            subtitleFiles.map((f) => f.name)\r\n                        );\r\n                    }\r\n                }\r\n\r\n                return newSubtitles;\r\n            });\r\n        },\r\n        [subtitleFiles]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let channel: VideoChannel | undefined = undefined;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            if (videoRef.current instanceof VideoChannel) {\r\n                videoRef.current.close();\r\n            }\r\n            videoRef.current = undefined;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(undefined);\r\n            setSelectedAudioTrack(undefined);\r\n            setCondensedModeEnabled(false);\r\n            if (audioRef.current) {\r\n                audioRef.current.currentTime = 0;\r\n                audioRef.current.pause();\r\n            }\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDurationDisplay(s.start, length),\r\n                        track: s.track,\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    if (e instanceof Error) {\r\n                        onError(e.message);\r\n                    } else {\r\n                        onError(String(e));\r\n                    }\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                } else {\r\n                    // Not possible\r\n                    // But throw error so typescript recognizes channel as defined\r\n                    throw new Error('Unreachable code');\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => videoFileUrl && onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut((popOut) => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer((hidden) => {\r\n                        channel?.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onAppBarToggle(() => {\r\n                    onAppBarToggle();\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel?.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel?.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel?.subtitles(\r\n                            subtitlesRef.current,\r\n                            subtitleFiles.map((f) => f.name)\r\n                        );\r\n                    }\r\n\r\n                    channel?.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel?.miscSettings(settingsProvider.miscSettings);\r\n                    channel?.condensedModeToggle(condensedModeEnabledRef.current ?? false);\r\n                    channel?.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current ?? false);\r\n\r\n                    if (channel?.audioTracks && channel?.audioTracks?.length > 1) {\r\n                        setAudioTracks(channel?.audioTracks);\r\n                        setSelectedAudioTrack(channel?.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(undefined);\r\n                        setSelectedAudioTrack(undefined);\r\n                    }\r\n\r\n                    if (videoRef.current) {\r\n                        clock.setTime(videoRef.current.currentTime * 1000);\r\n                    }\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel?.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel?.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel?.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel?.onCopy((subtitle, surroundingSubtitles, audio, image, url, preventDuplicate, id) =>\r\n                            onCopy(\r\n                                subtitle,\r\n                                surroundingSubtitles,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitle ? subtitleFiles[subtitle.track] : undefined,\r\n                                channel?.selectedAudioTrack,\r\n                                audio,\r\n                                image,\r\n                                url,\r\n                                preventDuplicate,\r\n                                id\r\n                            )\r\n                        );\r\n                        channel?.onCondensedModeToggle(() =>\r\n                            setCondensedModeEnabled((enabled) => {\r\n                                const newValue = !enabled;\r\n                                channel?.condensedModeToggle(newValue);\r\n                                return newValue;\r\n                            })\r\n                        );\r\n                        channel?.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel?.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel?.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel?.onToggleSubtitleTrackInList((track) =>\r\n                            setDisabledSubtitleTracks((tracks) => {\r\n                                const newTracks = { ...tracks };\r\n                                newTracks[track] = !tracks[track];\r\n                                return newTracks;\r\n                            })\r\n                        );\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [\r\n        subtitleReader,\r\n        extension,\r\n        settingsProvider,\r\n        clock,\r\n        mediaAdapter,\r\n        seek,\r\n        onLoaded,\r\n        onError,\r\n        onUnloadVideo,\r\n        onCopy,\r\n        onAnkiDialogRequest,\r\n        onAppBarToggle,\r\n        subtitleFiles,\r\n        audioFile,\r\n        audioFileUrl,\r\n        videoFile,\r\n        videoFileUrl,\r\n        tab,\r\n        forceUpdate,\r\n        videoFrameRef,\r\n        applyOffset,\r\n    ]);\r\n\r\n    function play(clock: Clock, mediaAdapter: MediaAdapter, forwardToMedia: boolean) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    }\r\n\r\n    function pause(clock: Clock, mediaAdapter: MediaAdapter, forwardToMedia: boolean) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo && videoRef.current instanceof VideoChannel) {\r\n            videoRef.current.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            if (videoRef.current instanceof VideoChannel) {\r\n                videoRef.current.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            }\r\n\r\n            setResumeOnFinishedAnkiDialogRequest((resumeOnFinishedAnkiDialogRequest) => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL +\r\n                    '/?video=' +\r\n                    encodeURIComponent(videoFileUrl) +\r\n                    '&channel=' +\r\n                    channelId +\r\n                    '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                'resizable,width=800,height=450'\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(\r\n        async (progress) => {\r\n            if (!lengthRef.current) {\r\n                return;\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(progress * lengthRef.current, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        },\r\n        [clock, seek]\r\n    );\r\n\r\n    const handleSeekToSubtitle = useCallback(\r\n        async (time, shouldPlay) => {\r\n            if (!shouldPlay) {\r\n                pause(clock, mediaAdapter, true);\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(time, clock, true);\r\n\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, seek, mediaAdapter]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (subtitle, surroundingSubtitles, preventDuplicate) => {\r\n            onCopy(\r\n                subtitle,\r\n                surroundingSubtitles,\r\n                audioFile,\r\n                videoFile,\r\n                subtitleFiles[subtitle.track],\r\n                selectedAudioTrack,\r\n                undefined,\r\n                undefined,\r\n                undefined,\r\n                preventDuplicate,\r\n                undefined\r\n            );\r\n        },\r\n        [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]\r\n    );\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        async (id) => {\r\n            if (videoRef.current instanceof VideoChannel) {\r\n                videoRef.current.audioTrackSelected(id);\r\n            }\r\n\r\n            pause(clock, mediaAdapter, true);\r\n\r\n            await seek(0, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, mediaAdapter, seek]\r\n    );\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n        },\r\n        [applyOffset]\r\n    );\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current instanceof HTMLMediaElement) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => setCondensedModeEnabled((v) => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback(\r\n        (track) =>\r\n            setDisabledSubtitleTracks((tracks) => {\r\n                const newTracks = { ...tracks };\r\n                newTracks[track] = !tracks[track];\r\n                return newTracks;\r\n            }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        if ((audioFile || videoFile) && (!subtitles || subtitles.length === 0)) {\r\n            const unbindCopy = KeyBindings.bindCopy(\r\n                (event, subtitle) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        undefined,\r\n                        selectedAudioTrack,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined\r\n                    );\r\n                },\r\n                () => disableKeyEvents,\r\n                () => {\r\n                    if (!lengthRef.current) {\r\n                        return undefined;\r\n                    }\r\n\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const end = Math.min(timestamp + 5000, lengthRef.current);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        originalStart: timestamp,\r\n                        end: end,\r\n                        originalEnd: end,\r\n                        track: 0,\r\n                    };\r\n                }\r\n            );\r\n\r\n            const unbindAnkiExport = KeyBindings.bindAnkiExport(\r\n                (event) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const end = Math.min(timestamp + 5000, lengthRef.current);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        originalStart: timestamp,\r\n                        end: end,\r\n                        originalEnd: end,\r\n                        track: 0,\r\n                    };\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        undefined,\r\n                        selectedAudioTrack,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined,\r\n                        undefined\r\n                    );\r\n\r\n                    onAnkiDialogRequest();\r\n                },\r\n                () => false\r\n            );\r\n\r\n            return () => {\r\n                unbindCopy();\r\n                unbindAnkiExport();\r\n            };\r\n        }\r\n    }, [audioFile, videoFile, subtitles, clock, selectedAudioTrack, disableKeyEvents, onCopy, onAnkiDialogRequest]);\r\n\r\n    useEffect(() => {\r\n        if (videoRef.current instanceof VideoChannel) {\r\n            videoRef.current.appBarToggle(appBarHidden);\r\n        }\r\n    }, [appBarHidden]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = Boolean(loaded && videoFileUrl && !videoPopOut);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" className={classes.container}>\r\n                {videoInWindow && (\r\n                    <Grid item style={{ flexGrow: 1, minWidth: 600 }}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={\r\n                                process.env.PUBLIC_URL +\r\n                                '/?video=' +\r\n                                encodeURIComponent(videoFileUrl!) +\r\n                                '&channel=' +\r\n                                channelId +\r\n                                '&popout=false'\r\n                            }\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || (subtitles && subtitles?.length > 0)) && (\r\n                    <Grid\r\n                        item\r\n                        style={{\r\n                            flexGrow: videoInWindow ? 0 : 1,\r\n                            width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto',\r\n                        }}\r\n                    >\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={(!videoFileUrl && !audioFileUrl && availableTabs) || undefined}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles && subtitles.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => audioFileUrl && onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => videoFileUrl && onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                                showOnMouseMovement={true}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            appBarHidden={appBarHidden}\r\n                            compressed={Boolean(videoFileUrl && !videoPopOut)}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name) || undefined}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onProceed: (fieldName: string) => void;\r\n    onCancel: () => void;\r\n    existingCustomFieldNames: string[];\r\n}\r\n\r\nexport default function CustomFieldDialog({ open, onProceed, onCancel, existingCustomFieldNames }: Props) {\r\n    const [fieldName, setFieldName] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        setFieldName('');\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio',\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onClose={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>Cancel</Button>\r\n                <Button disabled={fieldExists || fieldName.trim() === ''} onClick={() => onProceed(fieldName.trim())}>\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect, useMemo, ChangeEvent, ReactNode } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Theme } from '@material-ui/core/styles';\r\nimport { Anki, AsbplayerSettings } from '@project/common';\r\nimport { TagsTextField } from '@project/common/components';\r\n\r\nconst useStyles = makeStyles<Theme>((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10,\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles<Theme>((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'end',\r\n        alignItems: 'flex-end',\r\n    },\r\n}));\r\n\r\ninterface SelectableSettingProps {\r\n    label: string;\r\n    value: string;\r\n    selections?: string[];\r\n    removable?: boolean;\r\n    onChange: (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void;\r\n    onSelectionChange: (event: ChangeEvent<{name?: string | undefined, value: unknown}>, child: ReactNode) => void;\r\n    onRemoval?: () => void;\r\n}\r\n\r\nfunction SelectableSetting({\r\n    label,\r\n    value,\r\n    selections,\r\n    removable,\r\n    onChange,\r\n    onSelectionChange,\r\n    onRemoval,\r\n}: SelectableSettingProps) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select value={value} disabled={!selections} color=\"secondary\" onChange={onSelectionChange}>\r\n                    {selections &&\r\n                        selections.map((s) => (\r\n                            <MenuItem key={s} value={s}>\r\n                                {s}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface Props {\r\n    anki: Anki;\r\n    open: boolean;\r\n    settings: AsbplayerSettings;\r\n    onClose: (settings: AsbplayerSettings) => void;\r\n}\r\n\r\nexport default function SettingsDialog({ anki, open, settings, onClose }: Props) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState<string>(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState<string>();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState<number>(0);\r\n    const [deck, setDeck] = useState<string>(settings.deck || '');\r\n    const [deckNames, setDeckNames] = useState<string[]>();\r\n    const [noteType, setNoteType] = useState<string>(settings.noteType || '');\r\n    const [modelNames, setModelNames] = useState<string[]>();\r\n    const [sentenceField, setSentenceField] = useState<string>(settings.sentenceField || '');\r\n    const [definitionField, setDefinitionField] = useState<string>(settings.definitionField || '');\r\n    const [audioField, setAudioField] = useState<string>(settings.audioField || '');\r\n    const [imageField, setImageField] = useState<string>(settings.imageField || '');\r\n    const [wordField, setWordField] = useState<string>(settings.wordField || '');\r\n    const [sourceField, setSourceField] = useState<string>(settings.sourceField || '');\r\n    const [urlField, setUrlField] = useState<string>(settings.urlField || '');\r\n    const [customFields, setCustomFields] = useState<{ [key: string]: string }>(settings.customAnkiFields);\r\n    const [tags, setTags] = useState<string[]>(settings.tags);\r\n    const [preferMp3, setPreferMp3] = useState<boolean>(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState<string[]>();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState<boolean>(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState<number>(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState<number>(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState<number>(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState<number>(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState<string>(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState<number>(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState<string>(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState<number>(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState<string>(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState<number>(\r\n        settings.subtitleBackgroundOpacity\r\n    );\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState<string>(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState<string>(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState<\"dark\" | \"light\">(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleUrlFieldChange = useCallback((e) => setUrlField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName: string) => {\r\n        setCustomFields((oldCustomFields: { [key: string]: string }) => {\r\n            const newCustomFields: { [key: string]: string } = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = '';\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName: string, value: string) => {\r\n        setCustomFields((oldCustomFields: { [key: string]: string }) => {\r\n            const newCustomFields: { [key: string]: string } = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback(\r\n        (customFieldName: string) =>\r\n            setCustomFields((oldCustomFields: { [key: string]: string }) => {\r\n                const newCustomFields: { [key: string]: string } = {};\r\n                Object.assign(newCustomFields, oldCustomFields);\r\n                delete newCustomFields[customFieldName];\r\n                return newCustomFields;\r\n            }),\r\n        []\r\n    );\r\n    const handleTagsChange = useCallback((newTags) => {\r\n        setTags(newTags);\r\n    }, []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(\r\n        () =>\r\n            computeStyles({\r\n                subtitleColor: subtitleColor,\r\n                subtitleSize: subtitleSize,\r\n                subtitleOutlineThickness: subtitleOutlineThickness,\r\n                subtitleOutlineColor: subtitleOutlineColor,\r\n                subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n                subtitleBackgroundColor: subtitleBackgroundColor,\r\n                subtitleFontFamily: subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleColor,\r\n            subtitleSize,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleBackgroundColor,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(undefined);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(undefined);\r\n                setModelNames(undefined);\r\n\r\n                if (e instanceof Error) {\r\n                    setAnkiConnectUrlError(e.message);\r\n                } else if (typeof e === 'string') {\r\n                    setAnkiConnectUrlError(e);\r\n                } else {\r\n                    setAnkiConnectUrlError(String(e));\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return undefined;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(['', ...(await anki.modelFieldNames(noteType, ankiConnectUrl))]);\r\n                setAnkiConnectUrlError(undefined);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(undefined);\r\n\r\n                if (e instanceof Error) {\r\n                    setAnkiConnectUrlError(e.message);\r\n                } else if (typeof e === 'string') {\r\n                    setAnkiConnectUrlError(e);\r\n                } else {\r\n                    setAnkiConnectUrlError(String(e));\r\n                }\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => {\r\n            canceled = true;\r\n        };\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            urlField: urlField,\r\n            tags: tags.filter((t) => t !== ''),\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n            surroundingSubtitlesCountRadius: settings.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: settings.surroundingSubtitlesTimeRadius,\r\n            volume: settings.volume,\r\n            theaterMode: settings.theaterMode\r\n        });\r\n    }, [\r\n        onClose,\r\n        ankiConnectUrl,\r\n        deck,\r\n        noteType,\r\n        sentenceField,\r\n        definitionField,\r\n        audioField,\r\n        imageField,\r\n        wordField,\r\n        sourceField,\r\n        urlField,\r\n        customFields,\r\n        tags,\r\n        preferMp3,\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n        subtitlePreview,\r\n        themeType,\r\n        audioPaddingStart,\r\n        audioPaddingEnd,\r\n        maxImageWidth,\r\n        maxImageHeight,\r\n        settings.surroundingSubtitlesCountRadius,\r\n        settings.surroundingSubtitlesTimeRadius,\r\n        settings.volume,\r\n        settings.theaterMode\r\n    ]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map((customFieldName) => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames!}\r\n                onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={(e) => handleCustomFieldChange(customFieldName, e.target.value as string)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog open={open} maxWidth=\"xs\" fullWidth onClose={handleClose}>\r\n                <DialogTitle>Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + '//' + window.location.hostname} is in the\r\n                                    webCorsOriginList in your AnkiConnect settings as in this{' '}\r\n                                    <Link\r\n                                        color=\"secondary\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                                    >\r\n                                        video\r\n                                    </Link>\r\n                                    .\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"URL Field\"\r\n                                    value={urlField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleUrlFieldChange}\r\n                                    onSelectionChange={handleUrlFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <TagsTextField\r\n                                    label=\"Tags\"\r\n                                    helperText=\"Comma-separated list of strings\"\r\n                                    fullWidth\r\n                                    color=\"secondary\"\r\n                                    tags={tags}\r\n                                    onTagsChange={handleTagsChange}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1,\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1,\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { AsbplayerSettingsProvider } from '@project/common';\r\n\r\nconst defaultAnkiConnectUrl = 'http://127.0.0.1:8765';\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = '#ffffff';\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = '#000000';\r\nconst defaultSubtitleBackgroundColor = '#000000';\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = '';\r\nconst defaultSubtitlePreview = 'アあ安';\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = 'ankiConnectUrl';\r\nconst deckKey = 'deck';\r\nconst noteTypeKey = 'noteType';\r\nconst sentenceFieldKey = 'sentenceField';\r\nconst definitionFieldKey = 'definitionField';\r\nconst audioFieldKey = 'audioField';\r\nconst imageFieldKey = 'imageField';\r\nconst wordFieldKey = 'wordField';\r\nconst sourceFieldKey = 'sourceField';\r\nconst urlFieldKey = 'urlField';\r\nconst customAnkiFieldsKey = 'customAnkiFields';\r\nconst tagsKey = 'tags';\r\nconst subtitleSizeKey = 'subtitleSize';\r\nconst subtitleColorKey = 'subtitleColor';\r\nconst subtitleOutlineThicknessKey = 'subtitleOutlineThickness';\r\nconst subtitleOutlineColorKey = 'subtitleOutlineColor';\r\nconst subtitleBackgroundColorKey = 'subtitleBackgroundColor';\r\nconst subtitleBackgroundOpacityKey = 'subtitleBackgroundOpacity';\r\nconst subtitleFontFamilyKey = 'subtitleFontFamily';\r\nconst subtitlePreviewKey = 'subtitlePreview';\r\nconst audioPaddingStartKey = 'audioPaddingStart';\r\nconst audioPaddingEndKey = 'audioPaddingEnd';\r\nconst maxImageWidthKey = 'maxImageWidth';\r\nconst maxImageHeightKey = 'maxImageHeight';\r\nconst volumeKey = 'volume';\r\nconst theaterModeKey = 'theaterMode';\r\nconst preferMp3Key = 'preferMp3';\r\nconst themeTypeKey = 'themeType';\r\n\r\nexport default class SettingsProvider implements AsbplayerSettingsProvider {\r\n    private _tags?: string[];\r\n\r\n    constructor() {\r\n        // Cache tags so that it can be used in useEffect dependencies\r\n        this._tags = this.tags;\r\n    }\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n            volume: this.volume,\r\n            theaterMode: this.theaterMode,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.urlField = newSettings.urlField;\r\n        this.tags = newSettings.tags;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n        this.volume = newSettings.volume;\r\n        this.theaterMode = newSettings.theaterMode;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType,\r\n        };\r\n    }\r\n\r\n    _getNumberItem(key: string, defaultValue: number) {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value === null) {\r\n            return defaultValue;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    _setOptionalItem(key: string, value?: string) {\r\n        if (typeof value === 'undefined') {\r\n            localStorage.removeItem(key);\r\n        } else {\r\n            localStorage.setItem(key, value);\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey) ?? undefined;\r\n    }\r\n\r\n    set deck(deck) {\r\n        this._setOptionalItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey) ?? undefined;\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        this._setOptionalItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey) ?? undefined;\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        this._setOptionalItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey) ?? undefined;\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        this._setOptionalItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey) ?? undefined;\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        this._setOptionalItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey) ?? undefined;\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        this._setOptionalItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey) ?? undefined;\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        this._setOptionalItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey) ?? undefined;\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        this._setOptionalItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get urlField() {\r\n        return localStorage.getItem(urlFieldKey) ?? undefined;\r\n    }\r\n\r\n    set urlField(urlField) {\r\n        this._setOptionalItem(urlFieldKey, urlField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get tags() {\r\n        if (typeof this._tags !== 'undefined') {\r\n            return this._tags;\r\n        }\r\n\r\n        const tagsString = localStorage.getItem(tagsKey);\r\n\r\n        if (tagsString) {\r\n            this._tags = JSON.parse(tagsString) as string[];\r\n            return this._tags;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    set tags(tags) {\r\n        localStorage.setItem(tagsKey, JSON.stringify(tags));\r\n        this._tags = undefined;\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return this._getNumberItem(subtitleSizeKey, defaultSubtitleSize);\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, String(subtitleSize));\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return this._getNumberItem(subtitleOutlineThicknessKey, defaultSubtitleOutlineThickness);\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, String(subtitleOutlineThickness));\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return this._getNumberItem(subtitleBackgroundOpacityKey, defaultSubtitleBackgroundOpacity);\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, String(subtitleBackgroundOpacity));\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return this._getNumberItem(volumeKey, defaultVolume);\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, String(volume));\r\n    }\r\n\r\n    get theaterMode() {\r\n        return localStorage.getItem(theaterModeKey) === 'true' || false;\r\n    }\r\n\r\n    set theaterMode(theaterMode) {\r\n        localStorage.setItem(theaterModeKey, String(theaterMode));\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, String(preferMp3));\r\n    }\r\n\r\n    get themeType() {\r\n        const themeType = localStorage.getItem(themeTypeKey) as 'dark' | 'light' | null;\r\n\r\n        if (themeType === null) {\r\n            return 'dark';\r\n        }\r\n\r\n        return themeType;\r\n    }\r\n\r\n    set themeType(themeType: 'dark' | 'light') {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, String(audioPaddingStart));\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        return this._getNumberItem(audioPaddingEndKey, defaultAudioPaddingEnd);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, String(audioPaddingEnd));\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, String(maxImageWidth));\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        return this._getNumberItem(maxImageHeightKey, defaultMaxImageHeight);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, String(maxImageHeight));\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}\r\n","import {\r\n    AnkiDialogRequestFromVideoMessage,\r\n    AppBarToggleMessageToVideoMessage,\r\n    AudioTrackModel,\r\n    AudioTrackSelectedFromVideoMessage,\r\n    AudioTrackSelectedToVideoMessage,\r\n    CondensedModeToggleToVideoMessage,\r\n    CopyMessage,\r\n    CurrentTimeToVideoMessage,\r\n    FinishedAnkiDialogRequestToVideoMessage,\r\n    HideSubtitlePlayerToggleToVideoMessage,\r\n    OffsetFromVideoMessage,\r\n    PauseFromVideoMessage,\r\n    PlayFromVideoMessage,\r\n    ReadyFromVideoMessage,\r\n    ReadyStateFromVideoMessage,\r\n    ReadyToVideoMessage,\r\n    SubtitleModel,\r\n    SubtitlesToVideoMessage,\r\n    ToggleSubtitleTrackInListFromVideoMessage,\r\n} from '@project/common';\r\n\r\nexport default class PlayerChannel {\r\n    private channel?: BroadcastChannel;\r\n    private time: number;\r\n    private duration: number;\r\n    private readyCallbacks: ((duration: number) => void)[];\r\n    private playCallbacks: (() => void)[];\r\n    private pauseCallbacks: (() => void)[];\r\n    private currentTimeCallbacks: ((currentTime: number) => void)[];\r\n    private audioTrackSelectedCallbacks: ((id: string) => void)[];\r\n    private closeCallbacks: (() => void)[];\r\n    private subtitlesCallbacks: ((subtitles: SubtitleModel[]) => void)[];\r\n    private condensedModeToggleCallbacks: ((enabled: boolean) => void)[];\r\n    private hideSubtitlePlayerToggleCallbacks: ((hidden: boolean) => void)[];\r\n    private appBarToggleCallbacks: ((hidden: boolean) => void)[];\r\n    private ankiDialogRequestCallbacks: (() => void)[];\r\n    private finishedAnkiDialogRequestCallbacks: ((resume: boolean) => void)[];\r\n\r\n    constructor(channel: string) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.appBarToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    const readyMessage = event.data as ReadyToVideoMessage;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(readyMessage.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    const currentTimeMessage = event.data as CurrentTimeToVideoMessage;\r\n\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(currentTimeMessage.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    const audioTrackSelectedMessage = event.data as AudioTrackSelectedToVideoMessage;\r\n\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(audioTrackSelectedMessage.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    const subtitlesMessage = event.data as SubtitlesToVideoMessage;\r\n\r\n                    for (let callback of that.subtitlesCallbacks) {\r\n                        callback(subtitlesMessage.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    const condensedModeToggleMessage = event.data as CondensedModeToggleToVideoMessage;\r\n\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback(condensedModeToggleMessage.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    const hideSubtitlePlayerToggleMessage = event.data as HideSubtitlePlayerToggleToVideoMessage;\r\n\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(hideSubtitlePlayerToggleMessage.value);\r\n                    }\r\n                    break;\r\n                case 'appBarToggle':\r\n                    const appBarToggleMessage = event.data as AppBarToggleMessageToVideoMessage;\r\n\r\n                    for (let callback of that.appBarToggleCallbacks) {\r\n                        callback(appBarToggleMessage.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    const finishedAnkiDialogRequestMessage = event.data as FinishedAnkiDialogRequestToVideoMessage;\r\n\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(finishedAnkiDialogRequestMessage.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({ command: 'currentTime', value: this.time, echo: true });\r\n    }\r\n\r\n    onPlay(callback: () => void) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback: () => void) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback: (currentTime: number) => void) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback: (id: string) => void) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback: () => void) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback: (duration: number) => void) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback: (subtitles: SubtitleModel[]) => void) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback: (enabled: boolean) => void) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback: (hidden: boolean) => void) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAppBarToggle(callback: (hidden: boolean) => void) {\r\n        this.appBarToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback: () => void) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback: (resume: boolean) => void) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(\r\n        duration: number,\r\n        paused: boolean,\r\n        audioTracks: AudioTrackModel[] | undefined,\r\n        selectedAudioTrack: string | undefined\r\n    ) {\r\n        const message: ReadyFromVideoMessage = {\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack,\r\n            playbackRate: 1,\r\n        };\r\n\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    readyState(readyState: number) {\r\n        const message: ReadyStateFromVideoMessage = { command: 'readyState', value: readyState };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    play() {\r\n        const message: PlayFromVideoMessage = { command: 'play', echo: true };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    pause() {\r\n        const message: PauseFromVideoMessage = { command: 'pause', echo: true };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    audioTrackSelected(id: string) {\r\n        const message: AudioTrackSelectedFromVideoMessage = { command: 'audioTrackSelected', id: id };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    offset(offset: number) {\r\n        const message: OffsetFromVideoMessage = { command: 'offset', value: offset };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({ command: 'popOutToggle' });\r\n    }\r\n\r\n    copy(subtitle: SubtitleModel, surroundingSubtitles: SubtitleModel[], preventDuplicate?: boolean) {\r\n        const message: CopyMessage = {\r\n            command: 'copy',\r\n            subtitle: subtitle,\r\n            surroundingSubtitles: surroundingSubtitles,\r\n            preventDuplicate: preventDuplicate,\r\n        };\r\n\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({ command: 'condensedModeToggle' });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({ command: 'hideSubtitlePlayerToggle' });\r\n    }\r\n\r\n    appBarToggle() {\r\n        this.channel?.postMessage({ command: 'appBarToggle' });\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo: boolean) {\r\n        const message: AnkiDialogRequestFromVideoMessage = {\r\n            command: 'ankiDialogRequest',\r\n            forwardToVideo: forwardToVideo,\r\n        };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track: number) {\r\n        const message: ToggleSubtitleTrackInListFromVideoMessage = {\r\n            command: 'toggleSubtitleTrackInList',\r\n            track: track,\r\n        };\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({ command: 'exit' });\r\n            this.channel.close();\r\n            this.channel = undefined;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.appBarToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util';\r\nimport {\r\n    KeyBindings,\r\n    surroundingSubtitles,\r\n    mockSurroundingSubtitles,\r\n    humanReadableTime,\r\n    SubtitleSettings,\r\n    SubtitleModel,\r\n    AudioTrackModel,\r\n} from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls, { Point } from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\nimport SettingsProvider from '../services/SettingsProvider';\r\n\r\ninterface ExperimentalHTMLVideoElement extends HTMLVideoElement {\r\n    readonly audioTracks: any;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    video: {\r\n        margin: 'auto',\r\n    },\r\n    cursorHidden: {\r\n        cursor: 'none',\r\n    },\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings: SubtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings),\r\n    };\r\n}\r\n\r\nfunction notifyReady(\r\n    element: ExperimentalHTMLVideoElement,\r\n    playerChannel: PlayerChannel,\r\n    setAudioTracks: React.Dispatch<React.SetStateAction<AudioTrackModel[] | undefined>>,\r\n    setSelectedAudioTrack: React.Dispatch<React.SetStateAction<string | undefined>>\r\n) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks: AudioTrackModel[] | undefined;\r\n    let selectedTrack: string | undefined;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language,\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = undefined;\r\n        selectedTrack = undefined;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element: HTMLVideoElement) {\r\n    let error;\r\n    switch (element.error?.code) {\r\n        case 1:\r\n            error = 'Aborted';\r\n            break;\r\n        case 2:\r\n            error = 'Network error';\r\n            break;\r\n        case 3:\r\n            error = 'Decoding error';\r\n            break;\r\n        case 4:\r\n            error = 'Source not supported';\r\n            break;\r\n        default:\r\n            error = 'Unknown error';\r\n            break;\r\n    }\r\n\r\n    return error + ': ' + (element.error?.message || '<details missing>');\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\ninterface Props {\r\n    settingsProvider: SettingsProvider;\r\n    videoFile: string;\r\n    channel: string;\r\n    popOut: boolean;\r\n    onError: (error: string) => void;\r\n}\r\n\r\ninterface IndexedSubtitleModel extends SubtitleModel {\r\n    index: number;\r\n}\r\n\r\nexport default function VideoPlayer(props: Props) {\r\n    const classes = useStyles();\r\n    const { settingsProvider, videoFile, channel, popOut, onError } = props;\r\n    const poppingInRef = useRef<boolean>();\r\n    const videoRef = useRef<ExperimentalHTMLVideoElement>();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState<boolean>(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef<boolean>();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef<boolean>();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState<number>(0);\r\n    const [offset, setOffset] = useState<number>(0);\r\n    const [audioTracks, setAudioTracks] = useState<AudioTrackModel[]>();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState<string>();\r\n    const [subtitles, setSubtitles] = useState<SubtitleModel[]>([]);\r\n    const [showSubtitles, setShowSubtitles] = useState<IndexedSubtitleModel[]>([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState<{ [index: number]: boolean }>({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState<boolean>(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState<boolean>(false);\r\n    const [appBarHidden, setAppBarHidden] = useState<boolean>(settingsProvider.theaterMode);\r\n    const showSubtitlesRef = useRef<IndexedSubtitleModel[]>([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo<Clock>(() => new Clock(), []);\r\n    const mousePositionRef = useRef<Point>({ x: 0, y: 0 });\r\n    const [showCursor, setShowCursor] = useState<boolean>(false);\r\n    const lastMouseMovementTimestamp = useRef<number>(0);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [alert, setAlert] = useState<string>();\r\n    const [alertOpen, setAlertOpen] = useState<boolean>(false);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] =\r\n        useState<boolean>(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef<boolean>();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(\r\n        (element) => {\r\n            if (element) {\r\n                const videoElement = element as ExperimentalHTMLVideoElement;\r\n                videoRef.current = videoElement;\r\n\r\n                if (videoElement.readyState === 4) {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                } else {\r\n                    videoElement.onloadeddata = (event) => {\r\n                        notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                    };\r\n                }\r\n\r\n                videoElement.oncanplay = (event) => {\r\n                    playerChannel.readyState(4);\r\n\r\n                    if (playingRef.current) {\r\n                        clock.start();\r\n                    }\r\n                };\r\n\r\n                videoElement.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n                videoElement.onerror = (event) => onError(errorMessage(element));\r\n            }\r\n        },\r\n        [clock, playerChannel, onError]\r\n    );\r\n\r\n    function selectAudioTrack(id: string) {\r\n        const audioTracks = videoRef.current?.audioTracks;\r\n\r\n        if (!audioTracks) {\r\n            return;\r\n        }\r\n\r\n        // @ts-ignore\r\n        for (const t of audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current?.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current?.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            setSelectedAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAppBarToggle((hidden) => setAppBarHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            const time = progress * length;\r\n            playerChannel.currentTime = time / 1000;\r\n        },\r\n        [length, clock, playerChannel]\r\n    );\r\n\r\n    function handleMouseMove(e: React.MouseEvent<HTMLDivElement>) {\r\n        lastMouseMovementTimestamp.current = Date.now();\r\n\r\n        if (!containerRef.current) {\r\n            return;\r\n        }\r\n\r\n        var bounds = containerRef.current.getBoundingClientRect();\r\n        mousePositionRef.current.x = e.clientX - bounds.left;\r\n        mousePositionRef.current.y = e.clientY - bounds.top;\r\n    }\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n                playerChannel.pause();\r\n            }\r\n\r\n            selectAudioTrack(id);\r\n            setSelectedAudioTrack(id);\r\n            playerChannel.currentTime = 0;\r\n            playerChannel.audioTrackSelected(id);\r\n        },\r\n        [playerChannel, clock]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({ ...s, index: i });\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50);\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            setOffset(offset);\r\n            setSubtitles((subtitles) =>\r\n                subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    track: s.track,\r\n                }))\r\n            );\r\n            playerChannel.offset(offset);\r\n        },\r\n        [playerChannel]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(\r\n        (index: number) => {\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy<IndexedSubtitleModel>(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const noSubtitles = !subtitles || subtitles.length === 0;\r\n\r\n                playerChannel.copy(\r\n                    subtitle,\r\n                    noSubtitles\r\n                        ? mockSurroundingSubtitles(subtitle, length, 5000)\r\n                        : calculateSurroundingSubtitles(subtitle.index)\r\n                );\r\n\r\n                if (fullscreen) {\r\n                    setAlert(\r\n                        subtitle.text === ''\r\n                            ? `Saved ${humanReadableTime(subtitle.start)}`\r\n                            : `Copied: \"${subtitle.text}\"`\r\n                    );\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const end = Math.min(timestamp + 5000, length);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        originalStart: timestamp,\r\n                        end: end,\r\n                        originalEnd: end,\r\n                        track: 0,\r\n                        index: 0,\r\n                    };\r\n                }\r\n\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return undefined;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, clock, length, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled((enabled) => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks((tracks) => {\r\n                    const newTracks = { ...tracks };\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const end = Math.min(timestamp + 5000, length);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        originalStart: timestamp,\r\n                        end: end,\r\n                        originalEnd: end,\r\n                        track: 0,\r\n                    };\r\n\r\n                    playerChannel.copy(subtitle, mockSurroundingSubtitles(subtitle, length, 5000), false);\r\n                } else if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, clock, length, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled((subtitlesEnabled) => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleTheaterModeToggle = useCallback(() => {\r\n        playerChannel.appBarToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () =>\r\n            makeSubtitleStyles({\r\n                subtitleSize,\r\n                subtitleColor,\r\n                subtitleOutlineThickness,\r\n                subtitleOutlineColor,\r\n                subtitleBackgroundColor,\r\n                subtitleBackgroundOpacity,\r\n                subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (Date.now() - lastMouseMovementTimestamp.current > 300) {\r\n                if (showCursor) {\r\n                    setShowCursor(false);\r\n                }\r\n            } else if (!showCursor) {\r\n                setShowCursor(true);\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [showCursor]);\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                controls={false}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={showCursor ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile}\r\n            />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map((s) => (\r\n                        <React.Fragment key={s.index}>\r\n                            {s.text}\r\n                            <br />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n                showOnMouseMovement={false}\r\n                theaterModeToggleEnabled={true}\r\n                theaterModeEnabled={appBarHidden}\r\n                onTheaterModeToggle={handleTheaterModeToggle}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport {\r\n    Anki,\r\n    AudioClip,\r\n    Image,\r\n    humanReadableTime,\r\n    AnkiDialogSliderContext,\r\n    SubtitleModel,\r\n    VideoTabModel,\r\n    SubtitleSettingsToVideoMessage,\r\n    AnkiSettingsToVideoMessage,\r\n    MiscSettingsToVideoMessage,\r\n    LegacyPlayerSyncMessage,\r\n    PlayerSyncMessage,\r\n    AudioModel,\r\n    ImageModel,\r\n} from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert';\r\nimport { AnkiDialog, ImageDialog } from '@project/common/components';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay';\r\nimport HelpDialog from './HelpDialog';\r\nimport SubtitleReader from '../services/SubtitleReader';\r\nimport Bar from './Bar';\r\nimport ChromeExtension, { ExtensionMessage } from '../services/ChromeExtension';\r\nimport CopyHistory, { CopyHistoryItem } from './CopyHistory';\r\nimport LandingPage from './LandingPage';\r\nimport Player, { AnkiDialogFinishedRequest, MediaSources } from './Player';\r\nimport SettingsDialog from './SettingsDialog';\r\nimport SettingsProvider from '../services/SettingsProvider';\r\nimport VideoPlayer from './VideoPlayer';\r\nimport { Color } from '@material-ui/lab';\r\n\r\nconst latestExtensionVersion = '0.17.0';\r\nconst extensionUrl = 'https://github.com/killergerbah/asbplayer/releases/latest';\r\n\r\nconst useContentStyles = makeStyles<Theme, ContentProps>((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    contentShift: ({ drawerWidth }) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files: File[]): MediaSources {\r\n    let subtitleFiles = [];\r\n    let audioFile = undefined;\r\n    let videoFile = undefined;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf('.');\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case 'ass':\r\n            case 'srt':\r\n            case 'vtt':\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case 'mkv':\r\n            case 'mp4':\r\n            case 'avi':\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case 'mp3':\r\n            case 'm4a':\r\n            case 'aac':\r\n            case 'flac':\r\n            case 'ogg':\r\n            case 'wav':\r\n            case 'opus':\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported extension ' + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error('Cannot load both an audio and video file simultaneously');\r\n    }\r\n\r\n    return { subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile };\r\n}\r\n\r\nfunction audioClipFromItem(\r\n    item: CopyHistoryItem,\r\n    sliderContext: AnkiDialogSliderContext | undefined,\r\n    paddingStart: number,\r\n    paddingEnd: number\r\n) {\r\n    if (item.audio) {\r\n        const start = item.audio.start ?? item.start;\r\n        const end = item.audio.end ?? item.end;\r\n\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile!.name,\r\n            Math.max(0, start - (item.audio.paddingStart ?? 0)),\r\n            end + (item.audio.paddingEnd ?? 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            (item.audioFile || item.videoFile)!,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nfunction imageFromItem(item: CopyHistoryItem, maxWidth: number, maxHeight: number) {\r\n    if (item.image) {\r\n        return Image.fromBase64(item.subtitleFile!.name, item.start, item.image.base64, item.image.extension);\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(item.videoFile, item.start, maxWidth, maxHeight);\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nfunction itemSourceString(item: CopyHistoryItem | undefined) {\r\n    if (!item) {\r\n        return undefined;\r\n    }\r\n\r\n    const source = item.subtitleFile?.name ?? item.audioFile?.name ?? item.videoFile?.name;\r\n\r\n    if (!source) {\r\n        return undefined;\r\n    }\r\n\r\n    return `${source} (${humanReadableTime(item.start)})`;\r\n}\r\n\r\nfunction itemSliderContext(item: CopyHistoryItem) {\r\n    if (!item) {\r\n        return undefined;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [\r\n            { start: item.start, end: item.end, text: item.text, track: item.track },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources: MediaSources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\ninterface ContentProps {\r\n    drawerOpen: boolean;\r\n    drawerWidth: number;\r\n    children: React.ReactNode[];\r\n}\r\n\r\nfunction Content(props: ContentProps) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo<SubtitleReader>(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo<SettingsProvider>(() => new SettingsProvider(), []);\r\n    const theme = useMemo<Theme>(\r\n        () =>\r\n            createTheme({\r\n                palette: {\r\n                    primary: {\r\n                        main: '#49007a',\r\n                    },\r\n                    secondary: {\r\n                        main: '#ff1f62',\r\n                    },\r\n                    error: {\r\n                        main: red.A400,\r\n                    },\r\n                    type: settingsProvider.themeType,\r\n                },\r\n            }),\r\n        [settingsProvider.themeType]\r\n    );\r\n    const anki = useMemo<Anki>(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo<ChromeExtension>(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef<HTMLIFrameElement>(null);\r\n    const [width] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? 0.2 : 0.3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState<CopyHistoryItem[]>([]);\r\n    const copiedSubtitlesRef = useRef<CopyHistoryItem[]>([]);\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState<boolean>(false);\r\n    const [theaterMode, setTheaterMode] = useState<boolean>(settingsProvider.theaterMode);\r\n    const [alert, setAlert] = useState<string>();\r\n    const [alertOpen, setAlertOpen] = useState<boolean>(false);\r\n    const [alertSeverity, setAlertSeverity] = useState<Color>();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState<SubtitleModel>();\r\n    const [sources, setSources] = useState<MediaSources>({ subtitleFiles: [] });\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [dragging, setDragging] = useState<boolean>(false);\r\n    const dragEnterRef = useRef<Element | null>(null);\r\n    const [fileName, setFileName] = useState<string>();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState<boolean>(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState<boolean>(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState<CopyHistoryItem>();\r\n    const ankiDialogItemSliderContext = useMemo<AnkiDialogSliderContext | undefined>(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo<AudioClip | undefined>(\r\n        () =>\r\n            ankiDialogItem &&\r\n            audioClipFromItem(\r\n                ankiDialogItem,\r\n                ankiDialogItemSliderContext,\r\n                settingsProvider.audioPaddingStart,\r\n                settingsProvider.audioPaddingEnd\r\n            ),\r\n        [\r\n            ankiDialogItem,\r\n            ankiDialogItemSliderContext,\r\n            settingsProvider.audioPaddingStart,\r\n            settingsProvider.audioPaddingEnd,\r\n        ]\r\n    );\r\n    const ankiDialogImage = useMemo<Image | undefined>(\r\n        () =>\r\n            ankiDialogItem &&\r\n            imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState<number>();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState<boolean>(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState<AnkiDialogFinishedRequest>({\r\n        timestamp: 0,\r\n        resume: false,\r\n    });\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState<boolean>(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState<boolean>(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState<boolean>(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState<boolean>(false);\r\n    const [image, setImage] = useState<Image>();\r\n    const [tab, setTab] = useState<VideoTabModel>();\r\n    const [availableTabs, setAvailableTabs] = useState<VideoTabModel[]>([]);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const { subtitleFiles } = sources;\r\n\r\n    const handleCopy = useCallback(\r\n        (\r\n            subtitle: SubtitleModel,\r\n            surroundingSubtitles: SubtitleModel[],\r\n            audioFile: File | undefined,\r\n            videoFile: File | undefined,\r\n            subtitleFile: File | undefined,\r\n            audioTrack: string | undefined,\r\n            audio: AudioModel | undefined,\r\n            image: ImageModel | undefined,\r\n            url: string | undefined,\r\n            preventDuplicate: boolean | undefined,\r\n            id: string | undefined\r\n        ) => {\r\n            if (subtitle) {\r\n                navigator.clipboard.writeText(subtitle.text);\r\n            }\r\n\r\n            setCopiedSubtitles((copiedSubtitles) => {\r\n                if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                    const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                    if (\r\n                        subtitle.start === last.start &&\r\n                        subtitle.end === last.end &&\r\n                        subtitle.text === last.text &&\r\n                        subtitleFile?.name === last.subtitleFile?.name\r\n                    ) {\r\n                        return copiedSubtitles;\r\n                    }\r\n                }\r\n\r\n                const newCopiedSubtitles: CopyHistoryItem[] = [];\r\n                let updated = false;\r\n\r\n                for (const copiedSubtitle of copiedSubtitles) {\r\n                    if (id && copiedSubtitle.id === id) {\r\n                        const newCopiedSubtitle = {\r\n                            ...copiedSubtitle,\r\n                            ...subtitle,\r\n                            ...(surroundingSubtitles && { surroundingSubtitles: surroundingSubtitles }),\r\n                            ...(subtitleFile && { subtitleFile: subtitleFile }),\r\n                            ...(audioFile && { audioFile: audioFile }),\r\n                            ...(videoFile && { videoFile: videoFile }),\r\n                            ...(audioTrack && { audioTrack: audioTrack }),\r\n                            ...(audio && { audio: audio }),\r\n                            ...(image && { image: image }),\r\n                            ...(url && { url: url }),\r\n                        };\r\n                        newCopiedSubtitles.push(newCopiedSubtitle);\r\n                        updated = true;\r\n                    } else {\r\n                        newCopiedSubtitles.push(copiedSubtitle);\r\n                    }\r\n                }\r\n\r\n                if (!updated) {\r\n                    newCopiedSubtitles.push({\r\n                        ...subtitle,\r\n                        surroundingSubtitles: surroundingSubtitles,\r\n                        timestamp: Date.now(),\r\n                        id: id || uuidv4(),\r\n                        name: fileName!,\r\n                        subtitleFile: subtitleFile,\r\n                        audioFile: audioFile,\r\n                        videoFile: videoFile,\r\n                        audioTrack: audioTrack,\r\n                        audio: audio,\r\n                        image: image,\r\n                        url: url,\r\n                    });\r\n                }\r\n\r\n                return newCopiedSubtitles;\r\n            });\r\n\r\n            if (subtitle) {\r\n                setAlertSeverity('success');\r\n                setAlert(\r\n                    subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`\r\n                );\r\n                setAlertOpen(true);\r\n            }\r\n        },\r\n        [fileName]\r\n    );\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen((copyHistoryOpen) => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleAppBarToggle = useCallback(() => {\r\n        settingsProvider.theaterMode = !settingsProvider.theaterMode;\r\n        setTheaterMode(settingsProvider.theaterMode);\r\n    }, [settingsProvider]);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback(\r\n        (newSettings) => {\r\n            settingsProvider.settings = newSettings;\r\n            setSettingsDialogOpen(false);\r\n            setDisableKeyEvents(false);\r\n            const subtitleSettingsMessage: SubtitleSettingsToVideoMessage = {\r\n                command: 'subtitleSettings',\r\n                value: settingsProvider.subtitleSettings,\r\n            };\r\n            const ankiSettingsMessage: AnkiSettingsToVideoMessage = {\r\n                command: 'ankiSettings',\r\n                value: settingsProvider.ankiSettings,\r\n            };\r\n            const miscSettingsMessage: MiscSettingsToVideoMessage = {\r\n                command: 'miscSettings',\r\n                value: settingsProvider.miscSettings,\r\n            };\r\n            extension.publishMessage(subtitleSettingsMessage);\r\n            extension.publishMessage(ankiSettingsMessage);\r\n            extension.publishMessage(miscSettingsMessage);\r\n        },\r\n        [extension, settingsProvider]\r\n    );\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            const newCopiedSubtitles = [];\r\n\r\n            for (let subtitle of copiedSubtitles) {\r\n                if (item.id !== subtitle.id) {\r\n                    newCopiedSubtitles.push(subtitle);\r\n                }\r\n            }\r\n\r\n            setCopiedSubtitles(newCopiedSubtitles);\r\n        },\r\n        [copiedSubtitles]\r\n    );\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity('error');\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(\r\n        (audioFileUrl) => {\r\n            if (audioFileUrl !== sources.audioFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(audioFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: undefined,\r\n                    audioFileUrl: undefined,\r\n                    videoFile: previous.videoFile,\r\n                    videoFileUrl: previous.videoFileUrl,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleUnloadVideo = useCallback(\r\n        (videoFileUrl) => {\r\n            if (videoFileUrl !== sources.videoFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(videoFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: previous.audioFile,\r\n                    audioFileUrl: previous.audioFileUrl,\r\n                    videoFile: undefined,\r\n                    videoFileUrl: undefined,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleClipAudio = useCallback(\r\n        async (item) => {\r\n            try {\r\n                const clip = await audioClipFromItem(\r\n                    item,\r\n                    undefined,\r\n                    settingsProvider.audioPaddingStart,\r\n                    settingsProvider.audioPaddingEnd\r\n                );\r\n\r\n                if (settingsProvider.preferMp3) {\r\n                    clip!.toMp3().download();\r\n                } else {\r\n                    clip!.download();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                if (e instanceof Error) {\r\n                    handleError(e.message);\r\n                } else {\r\n                    handleError(String(e));\r\n                }\r\n            }\r\n        },\r\n        [handleError, settingsProvider]\r\n    );\r\n\r\n    const handleDownloadImage = useCallback(\r\n        async (item) => {\r\n            try {\r\n                (await imageFromItem(\r\n                    item,\r\n                    settingsProvider.maxImageWidth,\r\n                    settingsProvider.maxImageHeight\r\n                ))!.download();\r\n            } catch (e) {\r\n                console.error(e);\r\n                if (e instanceof Error) {\r\n                    handleError(e.message);\r\n                } else {\r\n                    handleError(String(e));\r\n                }\r\n            }\r\n        },\r\n        [handleError, settingsProvider]\r\n    );\r\n\r\n    const handleSelectCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            if (subtitleFiles.filter((f) => f.name === item.subtitleFile.name).length === 0) {\r\n                handleError('Subtitle file ' + item.subtitleFile.name + ' is not open.');\r\n                return;\r\n            }\r\n\r\n            setJumpToSubtitle(item);\r\n        },\r\n        [subtitleFiles, handleError]\r\n    );\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(\r\n        async (text, definition, audioClip, image, word, source, url, customFieldValues, tags, mode) => {\r\n            setAnkiDialogDisabled(true);\r\n\r\n            try {\r\n                const result = await anki.export(\r\n                    text,\r\n                    definition,\r\n                    audioClip,\r\n                    image,\r\n                    word,\r\n                    source,\r\n                    url,\r\n                    customFieldValues,\r\n                    tags,\r\n                    mode\r\n                );\r\n\r\n                if (mode !== 'gui') {\r\n                    if (mode === 'default') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Export succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    } else if (mode === 'updateLast') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Update succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    }\r\n\r\n                    setAnkiDialogOpen(false);\r\n\r\n                    if (ankiDialogRequested) {\r\n                        setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n                        setAnkiDialogRequested(false);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                if (e instanceof Error) {\r\n                    handleError(e.message);\r\n                } else {\r\n                    handleError(String(e));\r\n                }\r\n            } finally {\r\n                setAnkiDialogDisabled(false);\r\n                setDisableKeyEvents(false);\r\n            }\r\n        },\r\n        [anki, handleError, ankiDialogRequested]\r\n    );\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current!.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs: VideoTabModel[]) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id || t1.title !== t2.title || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter((t) => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(undefined);\r\n                handleError('Lost connection with tab ' + tab!.id + ' ' + tab!.title);\r\n            }\r\n        }\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback(\r\n        (files) => {\r\n            try {\r\n                let { subtitleFiles, audioFile, videoFile } = extractSources(files);\r\n\r\n                setSources((previous) => {\r\n                    setLoading(true);\r\n\r\n                    let videoFileUrl = undefined;\r\n                    let audioFileUrl = undefined;\r\n\r\n                    if (videoFile || audioFile) {\r\n                        revokeUrls(previous);\r\n\r\n                        if (videoFile) {\r\n                            videoFileUrl = URL.createObjectURL(videoFile);\r\n                        } else if (audioFile) {\r\n                            audioFileUrl = URL.createObjectURL(audioFile);\r\n                        }\r\n\r\n                        setTab(undefined);\r\n                    } else {\r\n                        videoFile = previous.videoFile;\r\n                        videoFileUrl = previous.videoFileUrl;\r\n                        audioFile = previous.audioFile;\r\n                        audioFileUrl = previous.audioFileUrl;\r\n                    }\r\n\r\n                    const sources = {\r\n                        subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                        audioFile: audioFile,\r\n                        audioFileUrl: audioFileUrl,\r\n                        videoFile: videoFile,\r\n                        videoFileUrl: videoFileUrl,\r\n                    };\r\n\r\n                    return sources;\r\n                });\r\n\r\n                if (subtitleFiles.length > 0) {\r\n                    const subtitleFileName = subtitleFiles[0].name;\r\n                    setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                if (e instanceof Error) {\r\n                    handleError(e.message);\r\n                } else {\r\n                    handleError(String(e));\r\n                }\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message: ExtensionMessage) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter((t) => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' +\r\n                                message.tabId +\r\n                                ' with src ' +\r\n                                message.src +\r\n                                ' was not found'\r\n                        );\r\n                    } else {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' + message.tabId + ' was not found'\r\n                        );\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles: File[];\r\n\r\n                if (message.data.command === 'sync') {\r\n                    const syncMessage = message.data as LegacyPlayerSyncMessage;\r\n                    subtitleFiles = [\r\n                        new File(\r\n                            [await (await fetch('data:text/plain;base64,' + syncMessage.subtitles.base64)).blob()],\r\n                            syncMessage.subtitles.name\r\n                        ),\r\n                    ];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    const syncMessage = message.data as PlayerSyncMessage;\r\n                    subtitleFiles = await Promise.all(\r\n                        syncMessage.subtitles.map(\r\n                            async (s) =>\r\n                                new File([await (await fetch('data:text/plain;base64,' + s.base64)).blob()], s.name)\r\n                        )\r\n                    );\r\n                } else {\r\n                    console.error('Unknown message ' + message.data.command);\r\n                    return;\r\n                }\r\n\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: undefined,\r\n                    audioFileUrl: undefined,\r\n                    videoFile: undefined,\r\n                    videoFileUrl: undefined,\r\n                });\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback(\r\n        (e: React.DragEvent) => {\r\n            e.preventDefault();\r\n\r\n            if (inVideoPlayer) {\r\n                handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n                return;\r\n            }\r\n\r\n            setDragging(false);\r\n            dragEnterRef.current = null;\r\n\r\n            if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n                return;\r\n            }\r\n\r\n            handleFiles(e.dataTransfer.files);\r\n        },\r\n        [inVideoPlayer, handleError, handleFiles]\r\n    );\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback(\r\n        (e: React.DragEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer) {\r\n                dragEnterRef.current = e.target as Element;\r\n                setDragging(true);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleDragLeave = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n                setDragging(false);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded =\r\n        (loading && !videoFrameRef.current) ||\r\n        (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n    const appBarHidden = sources.videoFile !== undefined && theaterMode;\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity={alertSeverity}>\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout');\r\n\r\n                            if (videoFile && channel) {\r\n                                return (\r\n                                    <Redirect\r\n                                        to={\r\n                                            '/video?video=' +\r\n                                            encodeURIComponent(videoFile) +\r\n                                            '&channel=' +\r\n                                            channel +\r\n                                            '&popout=' +\r\n                                            popOut\r\n                                        }\r\n                                    />\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <CopyHistory\r\n                                        items={copiedSubtitles}\r\n                                        open={copyHistoryOpen}\r\n                                        drawerWidth={drawerWidth}\r\n                                        onClose={handleCloseCopyHistory}\r\n                                        onDelete={handleDeleteCopyHistoryItem}\r\n                                        onClipAudio={handleClipAudio}\r\n                                        onDownloadImage={handleDownloadImage}\r\n                                        onSelect={handleSelectCopyHistoryItem}\r\n                                        onAnki={handleAnki}\r\n                                    />\r\n                                    <AnkiDialog\r\n                                        open={ankiDialogOpen}\r\n                                        disabled={ankiDialogDisabled}\r\n                                        text={ankiDialogItem?.text}\r\n                                        audioClip={ankiDialogAudioClip}\r\n                                        image={ankiDialogImage}\r\n                                        source={itemSourceString(ankiDialogItem)}\r\n                                        url={ankiDialogItem?.url}\r\n                                        sliderContext={ankiDialogItemSliderContext}\r\n                                        customFields={settingsProvider.customAnkiFields}\r\n                                        anki={anki}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCancel={handleAnkiDialogCancel}\r\n                                        onProceed={handleAnkiDialogProceed}\r\n                                        onViewImage={handleViewImage}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                    />\r\n                                    <ImageDialog\r\n                                        open={imageDialogOpen}\r\n                                        image={image}\r\n                                        onClose={handleImageDialogClosed}\r\n                                    />\r\n                                    <SettingsDialog\r\n                                        anki={anki}\r\n                                        open={settingsDialogOpen}\r\n                                        onClose={handleCloseSettings}\r\n                                        settings={settingsProvider.settings}\r\n                                    />\r\n                                    <HelpDialog\r\n                                        open={helpDialogOpen}\r\n                                        extensionUrl={extensionUrl}\r\n                                        onClose={handleCloseHelp}\r\n                                    />\r\n                                    <Bar\r\n                                        title={fileName || 'asbplayer'}\r\n                                        drawerWidth={drawerWidth}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        hidden={appBarHidden}\r\n                                        onOpenCopyHistory={handleOpenCopyHistory}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                        onOpenHelp={handleOpenHelp}\r\n                                        onFileSelector={handleFileSelector}\r\n                                    />\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        onChange={handleFileInputChange}\r\n                                        type=\"file\"\r\n                                        accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                        multiple\r\n                                        hidden\r\n                                    />\r\n                                    <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                        {nothingLoaded && (\r\n                                            <LandingPage\r\n                                                latestExtensionVersion={latestExtensionVersion}\r\n                                                extensionUrl={extensionUrl}\r\n                                                extension={extension}\r\n                                                loading={loading}\r\n                                                dragging={dragging}\r\n                                                appBarHidden={appBarHidden}\r\n                                                onFileSelector={handleFileSelector}\r\n                                            />\r\n                                        )}\r\n                                        <DragOverlay dragging={dragging} appBarHidden={appBarHidden} loading={loading} />\r\n                                        <Player\r\n                                            subtitleReader={subtitleReader}\r\n                                            settingsProvider={settingsProvider}\r\n                                            onCopy={handleCopy}\r\n                                            onError={handleError}\r\n                                            onUnloadAudio={handleUnloadAudio}\r\n                                            onUnloadVideo={handleUnloadVideo}\r\n                                            onLoaded={handleSourcesLoaded}\r\n                                            onTabSelected={handleTabSelected}\r\n                                            onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                            onAppBarToggle={handleAppBarToggle}\r\n                                            tab={tab}\r\n                                            availableTabs={availableTabs}\r\n                                            sources={sources}\r\n                                            jumpToSubtitle={jumpToSubtitle}\r\n                                            videoFrameRef={videoFrameRef}\r\n                                            extension={extension}\r\n                                            drawerOpen={copyHistoryOpen}\r\n                                            appBarHidden={appBarHidden}\r\n                                            disableKeyEvents={disableKeyEvents}\r\n                                            ankiDialogRequested={ankiDialogRequested}\r\n                                            ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                            ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                        />\r\n                                    </Content>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/video\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video')!;\r\n                            const channel = params.get('channel')!;\r\n                            const popOut = params.get('popout') === 'true';\r\n\r\n                            return (\r\n                                <VideoPlayer\r\n                                    settingsProvider={settingsProvider}\r\n                                    videoFile={videoFile}\r\n                                    popOut={popOut}\r\n                                    channel={channel}\r\n                                    onError={handleError}\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import '@fontsource/roboto';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}