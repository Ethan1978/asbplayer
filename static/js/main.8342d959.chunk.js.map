{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","Util.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","combined","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","useState","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","offsetInput","marginLeft","secondary","background","inactiveButton","disabled","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","displayLength","offsetValue","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","offset","Number","isNaN","blur","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","clock","onMouseOver","onMouseOut","Fade","Grid","direction","Input","inputRef","disableUnderline","placeholder","toFixed","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","backgroundColor","default","table","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","Object","keys","handleScroll","jumpToIndex","subtitleTable","handleClick","subtitleIndex","stopPropagation","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffsetValue","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","originalStart","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","o","newSubtitles","offsetSeconds","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","arrayEquals","handleSubtitlesToggle","nocontrols","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"uWAKMA,EAAiBC,YAAW,CAC9BC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QACVC,IAAK,GACLC,MAAO,OACPC,cAAe,OACfC,OAAQ,OAID,SAASC,EAAMC,GAC1B,IAAMC,EAAUZ,IAWhB,OATAa,qBAAU,WACN,GAAIF,EAAMG,KAAM,CACZ,IAAMC,EAAUC,WAAWL,EAAMM,QAASN,EAAMO,kBAChD,OAAO,kBAAMC,aAAaJ,IAG9B,OAAO,OACR,CAACJ,EAAMG,KAAMH,EAAMO,iBAAkBP,EAAMM,UAG1C,qBAAKG,UAAWR,EAAQV,KAAxB,SACI,cAACmB,EAAA,EAAD,CAAMC,GAAIX,EAAMG,KAAhB,SACG,cAAC,IAAD,CAAUS,SAAUZ,EAAMY,SAA1B,SACKZ,EAAMa,e,sCC9BLC,E,kGAEPC,GACN,GAAIA,EAAKC,KAAKC,SAAS,QACnB,OAAOF,EAAKG,OACPC,MAAK,SAAAD,GACF,OAAOE,YAAUF,MAEpBC,MAAK,SAAAE,GACF,OAAOA,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAEnC,GAAIT,EAAKC,KAAKC,SAAS,QAC1B,OAAOF,EAAKG,OACPC,MAAK,SAAAD,GACF,OAAOO,YAAMP,MAEhBC,MAAK,SAAAO,GACF,OAAOA,EAAOC,OAAOC,SAASN,KAAI,SAAAO,GAC9B,MAAO,CACHC,MAAOC,KAAKC,MAAoB,IAAdH,EAAMI,OACxBC,IAAKH,KAAKC,MAAkB,IAAZH,EAAMM,KACtBjB,KAAMW,EAAMO,KAAKC,gBAMrC,MAAM,IAAIC,MAAM,sC,6CAGGvB,EAAMe,EAAOI,EAAKK,GAAU,IAAD,OAC9C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAQC,SAASC,cAAc,SACrC,EAAKC,WAAWH,EAAO5B,EAAMe,EAAOI,EAAKK,EAASE,Q,6CAInC1B,EAAMe,EAAOI,EAAKK,GAAU,IAAD,OAC9C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMK,EAAQH,SAASC,cAAc,SACrC,EAAKC,WAAWC,EAAOhC,EAAMe,EAAOI,EAAKK,EAASE,Q,iCAI/CO,EAAOjC,EAAMe,EAAOI,EAAKK,EAASE,GAAU,IAAD,OAKlD,GAJAO,EAAMC,IAAMC,IAAIC,gBAAgBpC,GAChCiC,EAAMI,QAAU,OAGZb,GAAWS,EAAMK,aAAeL,EAAMK,YAAYC,OAAS,EAAG,CAAC,IAAD,gBAC9CN,EAAMK,aADwC,IAC9D,2BAAmC,CAAC,IAAzBE,EAAwB,QAC/BA,EAAEC,QAAUjB,IAAYgB,EAAEE,IAFgC,+BAMlET,EAAMU,YAAc5B,EAAQ,IAC5BkB,EAAMW,OAENX,EAAMY,UAAY,SAACC,GACfb,EAAMc,OACN,IAFqB,EAEfC,EAASf,EAAMgB,gBAFA,cAILD,EAAOE,kBAJF,IAIrB,2BAAyC,SACnCT,SAAU,GALK,8BAQrB,IAAMU,EAAW,IAAIC,cAAcJ,GAC7BK,EAAS,GACfF,EAASG,gBAAkB,SAACR,GACxBO,EAAOE,KAAKT,EAAErC,OAElB0C,EAASK,OAAS,SAACV,GACf,EAAKW,YACD,IAAIC,KAAKL,GACT,EAAKM,sBAAsB3D,EAAKC,MAAQ,IAAMc,EAAQ,IAAMI,EAAM,QAGtEO,KAEJyB,EAASpC,QACTzB,YAAW,WACP2C,EAAM2B,QACNT,EAASU,OACT,IAAM3B,EAAMD,EAAMC,IAClBD,EAAMC,IAAM,KACZC,IAAI2B,gBAAgB5B,KACrBf,EAAMJ,EAAQ,Q,4CAIHgD,GAClB,OAAOA,EAASC,UAAU,EAAGD,EAASE,YAAY,Q,kCAG1CC,EAAMjE,GACd,IAAMkE,EAAMC,OAAOjC,IAAIC,gBAAgB8B,GACjCG,EAAIxC,SAASC,cAAc,KACjCD,SAASyC,KAAKC,YAAYF,GAC1BA,EAAEG,MAAQ,gBACVH,EAAEI,KAAON,EACTE,EAAEK,SAAWzE,EACboE,EAAEM,QACFxC,IAAI2B,gBAAgBK,GACpBE,EAAEO,a,0DC3EK,SAASC,EAAI5F,GACxB,IAxBe6F,EAwBT5F,GAxBS4F,EAwBW7F,EAAM6F,YAxBDvG,aAAW,SAACwG,GAAD,MAAY,CACtDC,MAAO,CACHC,SAAU,GAEdC,OAAQ,CACJC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,iBAG7CC,YAAa,CACT7G,MAAM,eAAD,OAAiBiG,EAAjB,OACLK,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOK,QACjCH,SAAUT,EAAMK,YAAYI,SAASI,iBAEvCC,YAAaf,GAEjBgB,KAAM,CACFrH,QAAS,eAOb,OACI,cAACsH,EAAA,EAAD,CACIpH,SAAS,SACTe,UAAWsG,YAAK9G,EAAQgG,OAAT,eACVhG,EAAQwG,YAAczG,EAAMgH,aAHrC,SAKI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK1G,UAAWR,EAAQ8F,MAA5C,SACK/F,EAAM+F,QAEX,cAACqB,EAAA,EAAD,CACIC,KAAK,MACLC,MAAM,UACNC,aAAW,OACXC,QAASxH,EAAMyH,kBACfhH,UAAWsG,YAAK/G,EAAMgH,YAAc/G,EAAQ4G,MALhD,SAMI,cAAC,IAAD,W,IClDCa,E,WAEjB,aAAe,IAAD,2BACVC,KAAKC,mBAAqB,GAC1BD,KAAKE,KAAO,GACZ1C,OAAO2C,iBAAiB,WAAW,SAACjG,GAChC,GAAIA,EAAMkG,SAAW5C,QAIK,kCAAtBtD,EAAML,KAAKwG,QACPnG,EAAML,KAAKyG,QACX,GAAmC,SAA/BpG,EAAML,KAAKyG,QAAQC,QACnB,EAAKL,KAAOhG,EAAML,KAAKyG,QAAQJ,SAC5B,CAAC,IAAD,gBACW,EAAKD,oBADhB,IACH,2BAAuC,EACnCO,EADmC,SACjC,CACE3G,KAAMK,EAAML,KAAKyG,QACjBG,MAAOvG,EAAML,KAAK4G,SAJvB,mC,wDAaXH,EAASG,GACjBjD,OAAOkD,YAAY,CAACL,OAAQ,YAAaC,QAASA,EAASG,MAAOA,GAAQ,O,gCAGpEE,GACNX,KAAKC,mBAAmBtD,KAAKgE,K,kCAGrBA,GACR,IAAK,IAAIC,EAAIZ,KAAKC,mBAAmBtE,OAAS,EAAGiF,GAAK,IAAKA,EACvD,GAAID,IAAaX,KAAKC,mBAAmBW,GAAI,CACzCZ,KAAKC,mBAAmBY,OAAOD,EAAG,GAClC,W,2ICIhB,SAASE,EAAKzI,GAAQ,IACXG,EAAwDH,EAAxDG,KAAMuI,EAAkD1I,EAAlD0I,SAAUpI,EAAwCN,EAAxCM,QAASqI,EAA+B3I,EAA/B2I,SAAUC,EAAqB5I,EAArB4I,YAAaC,EAAQ7I,EAAR6I,KAEjDC,EAAaC,uBAAY,WAC3BC,UAAUC,UAAUC,UAAUL,EAAK3H,MACnCZ,MACD,CAACuI,EAAMvI,IAEJ6I,EAAeJ,uBAAY,WAC7BJ,EAASE,GACTvI,MACD,CAACuI,EAAMF,EAAUrI,IAEd8I,EAAkBL,uBAAY,WAChCH,EAAYC,GACZvI,MACD,CAACuI,EAAMD,EAAatI,IAEvB,OAAKuI,EAKD,cAACQ,EAAA,EAAD,CACIC,qBAAqB,EACrBnJ,KAAMA,EACNuI,SAAUA,EACVpI,QAASA,EACTiJ,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAaI,eAAC,IAAD,WACI,cAACE,EAAA,EAAD,CAAUC,QAAM,EAACpC,QAASsB,EAA1B,SACI,cAACe,EAAA,EAAD,CAAcC,uBAAwB,CAAC3C,QAAS,SAAU4C,QAAQ,WAEtE,cAACJ,EAAA,EAAD,CAAUC,QAAM,EAACpC,QAAS2B,EAA1B,SACI,cAACU,EAAA,EAAD,CAAcC,uBAAwB,CAAC3C,QAAS,SAAU4C,QAAQ,eAEpElB,EAAKmB,WAAanB,EAAKoB,YACrB,cAACN,EAAA,EAAD,CAAUC,QAAM,EAACpC,QAAS4B,EAA1B,SACI,cAACS,EAAA,EAAD,CAAcC,uBAAwB,CAAC3C,QAAS,SAAU4C,QAAQ,sBA1B3E,KAkCA,SAASG,EAAYlK,GAChC,IAlFe6F,EAkFT5F,GAlFS4F,EAkFW7F,EAAM6F,YAlFDvG,aAAW,SAACwG,GAAD,MAAY,CACtDqE,OAAQ,CACJvK,MAAOiG,EACPuE,WAAY,GAEhBC,YAAa,CACTzK,MAAOiG,GAEXyE,aAAa,yBACT9K,QAAS,OACT+K,WAAY,SACZ7K,SAAU,SACV8K,QAAS1E,EAAM2E,QAAQ,EAAG,IAEvB3E,EAAM4E,OAAOC,SANR,IAORlL,eAAgB,eAEpBmL,cAAe,CACXlL,SAAU,WACVmL,OAAQ,OACRC,UAAW,OACXC,UAAW,UAEfC,iBAAkB,CACdC,SAAU,WA2DRC,EAA6BnC,uBAAY,SAAAoC,GACvCA,GACAA,EAAQC,mBAEb,IANoC,EAOPC,qBAPO,mBAOhCC,EAPgC,KAOtBC,EAPsB,OAQPF,oBAAS,GARF,mBAQhCG,EARgC,KAQtBC,EARsB,OASCJ,qBATD,mBAShCK,EATgC,KASlBC,EATkB,KAWjCC,EAAa7C,uBAAY,SAAClF,EAAGgF,GAC/B0C,EAAY1C,GACZ4C,GAAY,GACZE,EAAgB9H,EAAEgI,iBACnB,IAEGC,EAAmB/C,uBAAY,SAAClF,EAAGgF,GACrC0C,EAAY,MACZE,GAAY,GACZE,EAAgB,QACjB,IAEGI,EAAehD,uBAAY,SAACF,GAC9B7I,EAAMgM,SAASnD,KAChB,CAAC7I,IAEAiM,EAAU,KAEd,GAAIjM,EAAMkM,MAAM5I,OAAS,EAAG,CACxB2I,EAAU,GACV,IAFwB,EAEpBE,EAAmB,KACnB5D,EAAI,EAHgB,cAKLvI,EAAMkM,OALD,yBAKbrD,EALa,QAMK,OAArBsD,GAA6BA,IAAqBtD,EAAK7H,OACvDmL,EAAmBtD,EAAK7H,KACxBiL,EAAQ3H,KAAM,cAAC8H,EAAA,EAAD,CAAeC,eAAe,EAA9B,SAAqDxD,EAAK7H,MAAjB6H,EAAK7H,QAGhE,IAAMsL,EAAM/D,IAAMvI,EAAMkM,MAAM5I,OAAS,EAAI4H,EAA4B,KAEvEe,EAAQ3H,KACJ,eAACqF,EAAA,EAAD,CAAU2C,IAAKA,EAAf,UACI,cAACC,EAAA,EAAD,CAActM,QAAS,CAACV,KAAMU,EAAQ+K,kBAAtC,SACI,cAAC5D,EAAA,EAAD,CAAYI,QAAS,SAAC3D,GAAD,OAAO+H,EAAW/H,EAAGgF,IAA1C,SACI,cAAC,IAAD,CAAc2D,SAAS,cAG/B,cAAC3C,EAAA,EAAD,UAAehB,EAAK3H,OACpB,cAACqL,EAAA,EAAD,CAActM,QAAS,CAACV,KAAMU,EAAQ+K,kBAAtC,SACI,cAAC5D,EAAA,EAAD,CAAYI,QAAS,kBAAMuE,EAAalD,IAAxC,SACI,cAAC,IAAD,CAAY2D,SAAS,gBATR3D,EAAK4D,cAehClE,GAxBN,2BAAiC,IALT,oCAiCxB0D,EAAW,cAACtC,EAAA,EAAD,qCAGf,IAAM+C,EAAQ,cAAC,IAAD,UAAOT,IAErB,OACI,eAAC,IAAMU,SAAP,WACI,eAACC,EAAA,EAAD,CACIzF,QAAQ,aACR0F,OAAO,QACP1M,KAAMH,EAAMG,KACZM,UAAWR,EAAQkK,OACnBlK,QAAS,CACL6M,MAAO7M,EAAQoK,aANvB,UAQI,qBAAK5J,UAAWR,EAAQqK,aAAxB,SACI,cAAClD,EAAA,EAAD,CAAYI,QAASxH,EAAMM,QAA3B,SACI,cAAC,IAAD,QAGR,cAACyM,EAAA,EAAD,IACA,qBAAKtM,UAAWR,EAAQ2K,cAAxB,SACK8B,OAGT,cAACjE,EAAD,CACItI,KAAMH,EAAMG,MAAQqL,EACpB9C,SAAUgD,EACV7C,KAAMyC,EACNhL,QAASwL,EACTnD,SAAU3I,EAAM2I,SAChBC,YAAa5I,EAAM4I,iB,IC7LdoE,E,WAEjB,WAAYC,GAAY,oBACpBtF,KAAKuF,QAAU,IAAIC,iBAAiBF,GACpC,IAAMG,EAAOzF,KACbA,KAAKuF,QAAQG,UAAY,SAACxL,GAAW,IAAD,EAChC,UAAAuL,EAAKE,iBAAL,cAAAF,EAAiBvL,I,wDAIboG,GACRN,KAAKuF,QAAQ7E,YAAYJ,K,8BAIzBN,KAAKuF,QAAQK,Y,KCfAC,E,WAEjB,WAAYpF,EAAOqF,GAAY,IAAD,2BAC1B9F,KAAKS,MAAQA,EACbT,KAAK+F,SAAW,SAACzF,GACiB,IAAD,EAAzBA,EAAQG,QAAUA,IAClB,YAAKkF,iBAAL,gBAAiB,CACb9L,KAAMyG,EAAQzG,SAK1BiM,EAAUE,UAAUhG,KAAK+F,UACzB/F,KAAK8F,UAAYA,E,wDAGTxF,GACRN,KAAK8F,UAAUG,YAAY3F,EAASN,KAAKS,S,8BAIzCT,KAAK8F,UAAUI,YAAYlG,KAAK+F,c,KCrBnBI,E,WAEjB,aAAe,oBACXnG,KAAKoG,YAAc,EACnBpG,KAAKqG,SAAU,E,iDAGdC,GACD,OAAItG,KAAKqG,QACEjM,KAAKmM,IAAID,EAAKtG,KAAKoG,YAAcI,KAAKC,MAAQzG,KAAK0G,WAGvDtM,KAAKmM,IAAID,EAAKtG,KAAKoG,e,6BAIrBpG,KAAKqG,UAIVrG,KAAKqG,SAAU,EACfrG,KAAKoG,aAAeI,KAAKC,MAAQzG,KAAK0G,a,8BAItC1G,KAAK0G,UAAYF,KAAKC,MACtBzG,KAAKqG,SAAU,I,8BAGXM,GACA3G,KAAKqG,SACLrG,KAAK0G,UAAYF,KAAKC,MACtBzG,KAAKoG,YAAcO,GAEnB3G,KAAKoG,YAAcO,I,+BAIlBL,GACL,OAAe,IAARA,EAAY,EAAIlM,KAAKmM,IAAI,EAAGvG,KAAK2G,KAAKL,GAAOA,O,gKCvBtDM,GAAmBjP,aAAW,SAACwG,GAAD,MAAY,CAC5C0I,UAAW,CACP9O,SAAU,WACV+O,KAAM,MACN7O,MAAO,MACP8O,OAAQ,GAEZC,gBAAiB,CACbC,cAAe,OAEnBC,YAAa,CACTvH,MAAOxB,EAAMgJ,QAAQC,OAAOC,OAC5BxP,QAAS,OACToP,cAAe,SACfnP,eAAgB,SAChBoL,OAAQ,OACRoE,OAAQ,UACRzC,SAAU,IAEd0C,YAAa,CACTrE,OAAQ,OACRrL,QAAS,OACToP,cAAe,SACfnP,eAAgB,SAChB+M,SAAU,GACV2C,WAAY,GACZvP,MAAO,IACP0H,MAAOxB,EAAMgJ,QAAQ5N,KAAKkO,WAE9BtC,MAAO,CACHuC,WAAY,gEACZ3P,SAAU,WACV+O,KAAM,QACN7O,MAAO,OACPE,OAAQ,GACR0K,QAAS,IAEbZ,OAAQ,CACJtC,MAAOxB,EAAMgJ,QAAQC,OAAOC,QAEhCM,eAAgB,CACZhI,MAAOxB,EAAMgJ,QAAQC,OAAOQ,UAEhCC,SAAU,CACNC,OAAQ,GAEZC,gBAAiB,CACbxJ,WAAY,OACZmJ,WAAY,kDAIdM,GAAuBrQ,aAAW,SAACwG,GAAD,MAAY,CAChD0I,UAAW,CACP5O,MAAO,OACPyP,WAAY,qBACZxE,OAAQ,EACR+E,aAAc,EACdX,OAAQ,WAEZY,cAAe,CACXjQ,MAAO,QAEXkQ,KAAM,CACFT,WAAY,6CACZxE,OAAQ,QAEZkF,gBAAiB,CACbrQ,SAAU,WACVE,MAAO,EACPiL,OAAQ,GAEZmF,OAAQ,CACJC,aAAc,MACdrQ,MAAO,GACPiL,OAAQ,GACRwE,WAAY,QACZ3P,SAAU,WACVC,IAAK,EACL8O,KAAM,EACNyB,OAAQ,gDAIhB,SAASC,GAAYC,GACjB,IAAMC,EAAUtO,KAAKuO,MAAMF,EAAe,KACpCG,EAAUxO,KAAKuO,MAAMD,EAAU,IAC/BG,EAAkBH,EAAU,GAClC,OAAOI,OAAOF,GAAW,IAAME,OAAOD,GAAiBE,SAAS,EAAG,KAGvE,SAASC,GAAaxF,GAClB,IAAMyF,EAAOzF,EAAQ0F,wBACrB,OAAOD,EAAKE,MAAQF,EAAKnC,KAG7B,SAASsC,GAAY/Q,GACjB,IAAMC,EAAU0P,KACVqB,EAAeC,iBAAO,MAU5B,IAAMC,EAAY,CAACtR,MAAOI,EAAMmR,MAAQ,KAClCC,EAAc,CAACjC,WAAY6B,EAAaK,QAAUV,GAAaK,EAAaK,SAAWrR,EAAMmR,MAAQ,IAAM,GAEjH,OACI,sBAAK7E,IAAK0E,EAAcxJ,QAZ5B,SAAqB3D,GACjB,IAAM+M,EAAO/M,EAAEgI,cAAcgF,wBACvBjR,EAAQgR,EAAKE,MAAQF,EAAKnC,KAC1Be,GAAY3L,EAAEyN,MAAQV,EAAKnC,MAAQ7O,EAEzCI,EAAMuR,OAAO/B,IAOiC/O,UAAWR,EAAQuO,UAAjE,UACI,qBAAK/N,UAAWR,EAAQ6P,KAAMvK,MAAO2L,IACrC,qBAAKzQ,UAAWR,EAAQuR,aAAxB,SACI,qBAAK/Q,UAAWR,EAAQ+P,OAAQzK,MAAO6L,SAMvD,SAASK,GAAmBzR,GACxB,IAAKA,EAAMqD,aAA4C,IAA7BrD,EAAMqD,YAAYC,OACxC,OAAO,KAGX,IAAMoJ,EAAO1M,EAAMqD,YAAY/B,KAAI,SAACiC,GAChC,OACI,eAACoG,EAAA,EAAD,CAEI+H,SAAUnO,EAAEE,KAAOzD,EAAM2R,mBACzB/H,QAAM,EAACpC,QAAS,kBAAMxH,EAAM4R,qBAAqBrO,EAAEE,KAHvD,UAIKF,EAAEsO,SAJP,IAIkBtO,EAAEuO,QAHXvO,EAAEE,OAQnB,OACI,8BACI,cAAC4F,EAAA,EAAD,CACIC,qBAAqB,EACrBnJ,KAAMH,EAAMG,KACZuI,SAAU1I,EAAM0I,SAChBpI,QAASN,EAAMM,QACfiJ,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,IAAD,UAAOiD,QAMvB,SAASqF,GAAY/R,GACjB,IAAKA,EAAM6H,MAA8B,IAAtB7H,EAAM6H,KAAKvE,OAC1B,OAAO,KAGX,IAAMoJ,EAAO1M,EAAM6H,KAAKvG,KAAI,SAACiC,GACzB,OACI,eAACoG,EAAA,EAAD,CAEI+H,SAAUnO,EAAEE,KAAOzD,EAAMgS,YACzBpI,QAAM,EAACpC,QAAS,kBAAMxH,EAAMiS,cAAc1O,EAAEE,KAHhD,UAIKF,EAAEE,GAJP,IAIYF,EAAEwC,MAJd,IAIsBxC,EAAEN,MAHfM,EAAEE,OAQnB,OACI,8BACI,cAAC4F,EAAA,EAAD,CACIC,qBAAqB,EACrBnJ,KAAMH,EAAMG,KACZuI,SAAU1I,EAAM0I,SAChBpI,QAASN,EAAMM,QACfiJ,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,IAAD,UAAOiD,QAMvB,SAASwF,GAAclS,GACnB,OACI,8BACI,cAACqJ,EAAA,EAAD,CACIC,qBAAqB,EACrBnJ,KAAMH,EAAMG,KACZuI,SAAU1I,EAAM0I,SAChBpI,QAASN,EAAMM,QACfiJ,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,IAAD,UACI,eAACE,EAAA,EAAD,CAAUC,QAAM,EAACpC,QAAS,SAAC3D,GAAD,OAAO7D,EAAMmS,YAAvC,oBACYnS,EAAMe,cAQvB,SAASqR,GAASpS,GAC7B,IAAMC,EAAUsO,KACT8D,EAA6KrS,EAA7KqS,QAAS/O,EAAoKtD,EAApKsD,OAAQgP,EAA4JtS,EAA5JsS,cAAeC,EAA6IvS,EAA7IuS,YAAaX,EAAgI5R,EAAhI4R,qBAAsBL,EAA0GvR,EAA1GuR,OAAQiB,EAAkGxS,EAAlGwS,iBAAkBC,EAAgFzS,EAAhFyS,QAASC,EAAuE1S,EAAvE0S,OAAQT,EAA+DjS,EAA/DiS,cAAeU,EAAgD3S,EAAhD2S,cAAeC,EAAiC5S,EAAjC4S,cAAeC,EAAkB7S,EAAlB6S,eAF9H,EAGZxH,oBAAS,GAHG,mBAG7ByH,EAH6B,KAGvBC,EAHuB,OAIwB1H,oBAAS,GAJjC,mBAI7B2H,EAJ6B,KAILC,EAJK,OAKgC5H,qBALhC,mBAK7B6H,EAL6B,KAKDC,EALC,OAMU9H,oBAAS,GANnB,mBAM7B+H,EAN6B,KAMZC,EANY,OAOkBhI,qBAPlB,mBAO7BiI,EAP6B,KAORC,EAPQ,OAQclI,oBAAS,GARvB,mBAQ7BmI,EAR6B,KAQVC,EARU,OASsBpI,qBATtB,mBAS7BqI,EAT6B,KASNC,EATM,OAUctI,oBAAS,GAVvB,mBAU7BuI,EAV6B,KAUVC,EAVU,OAWsBxI,qBAXtB,mBAW7ByI,EAX6B,KAWNC,GAXM,KAY9BC,GAAuB/C,iBAAO,CAACgD,EAAG,EAAGC,EAAG,IACxCC,GAAuBlD,iBAAO9C,KAAKC,OACnCgG,GAAcnD,kBAAO,GACrBoD,GAAepD,kBAAO,GACtBqD,GAAiBrD,mBAhBa,GAiBZ5F,qBAAfkJ,GAjB2B,qBAkB9BC,GAAczL,uBAAY,kBAAMwL,GAAY,MAAK,IAEjDE,GAAa1L,uBAAY,SAACyG,GAC5B+B,EAAO/B,KACR,CAAC+B,IAUJrR,qBAAU,WACN,IAAMwU,EAAWC,aAAY,WACzB,IAAMC,EAAczG,KAAKC,MAAQ+F,GAAqB9C,QAAU,KACzDtP,KAAK8S,IAAIrC,EAAiBnB,QAAQ4C,EAAID,GAAqB3C,QAAQ4C,EAAG,GACnElS,KAAK8S,IAAIrC,EAAiBnB,QAAQ6C,EAAIF,GAAqB3C,QAAQ6C,EAAG,GAAK,KAC9EG,GAAahD,SACbiD,GAAejD,UAAYzO,SAASkS,cAEvCF,IAAgBR,GAAY/C,SAC5B8C,GAAqB9C,QAAUlD,KAAKC,MACpC2E,EAAQ6B,KACAA,GAAeR,GAAY/C,SACnC0B,EAAQ6B,GAGZR,GAAY/C,QAAUuD,EACtBZ,GAAqB3C,QAAQ4C,EAAIzB,EAAiBnB,QAAQ4C,EAC1DD,GAAqB3C,QAAQ6C,EAAI1B,EAAiBnB,QAAQ6C,IAC3D,KACH,OAAO,kBAAMa,cAAcL,MAC5B,CAAClC,EAAkBO,EAASD,IAE/B5S,qBAAU,WACN,SAAS8U,EAAUnT,GACf,GAAsB,KAAlBA,EAAMoT,QACNpT,EAAMqT,iBAEF7C,EACAI,IAEAC,SAED,GAAsB,KAAlB7Q,EAAMoT,SACTX,GAAejD,UAAYzO,SAASkS,cAAe,CACnD,IAAMK,EAASC,OAAOd,GAAejD,QAAQF,OAE7C,GAAIiE,OAAOC,MAAMF,GACb,OAGHtC,EAAwB,IAATsC,GACfb,GAAejD,QAAQiE,QAOpC,OAFAnQ,OAAO2C,iBAAiB,UAAWkN,GAE5B,WACH7P,OAAOoQ,oBAAoB,UAAWP,MAE3C,CAAC3C,EAASI,EAASC,EAAQG,IAE9B3S,qBAAU,WACN,IAAMwU,EAAWC,aAAY,WACzBH,OACD,KAEH,OAAO,kBAAMO,cAAcL,MAC5B,CAACF,KAEJtU,qBAAU,WACFoU,GAAejD,UACfiD,GAAejD,QAAQF,MAAOoB,KAEnC,CAACA,IAEJ,IAAMiD,GAAiCzM,uBAAY,WAC/CoK,EAA8B,MAC9BF,GAA0B,KAC3B,IAEGwC,GAAiC1M,uBAAY,SAAClF,GAChDsP,EAA8BtP,EAAEgI,eAChCoH,GAA0B,KAC3B,IAEGyC,GAA2B3M,uBAAY,SAACtF,GAC1CmO,EAAqBnO,GACrB0P,EAA8B,MAC9BF,GAA0B,KAC3B,CAACrB,IAEE+D,GAA0B5M,uBAAY,WACxCwK,EAAuB,MACvBF,GAAmB,KACpB,IAEGuC,GAA0B7M,uBAAY,SAAClF,GACzC0P,EAAuB1P,EAAEgI,eACzBwH,GAAmB,KACpB,IAEGwC,GAAoB9M,uBAAY,SAACtF,GACnCwO,EAAcxO,GACd8P,EAAuB,MACvBF,GAAmB,KACpB,CAACpB,IAEE6D,GAA4B/M,uBAAY,WAC1C4K,EAAyB,MACzBF,GAAqB,KACtB,IAEGsC,GAA4BhN,uBAAY,SAAClF,GAC3C8P,EAAyB9P,EAAEgI,eAC3B4H,GAAqB,KACtB,IAEGuC,GAAoBjN,uBAAY,WAClC4J,IACAc,GAAqB,KACtB,CAACd,IAEEsD,GAA4BlN,uBAAY,SAAClF,GAC3CkQ,GAAyB,MACzBF,GAAqB,KACtB,IAEGqC,GAA4BnN,uBAAY,SAAClF,GAC3CkQ,GAAyBlQ,EAAEgI,eAC3BgI,GAAqB,KACtB,IAEGsC,GAAoBpN,uBAAY,WAClC6J,IACAiB,GAAqB,KACtB,CAACjB,IAEEpD,GAAWxP,EAAMoW,MAAM5G,SAASlM,GAEtC,OACI,sBAAK7C,UAAWR,EAAQuO,UAAW6H,YA5IvC,SAAyBxS,GACrBwQ,GAAahD,SAAU,GA2I0CiF,WAxIrE,SAAwBzS,GACpBwQ,GAAahD,SAAU,GAuIvB,UACI,cAACkF,GAAA,EAAD,CAAM5V,GAAImS,EAAM1S,QAAS,IAAzB,SACI,sBAAKK,UAAWR,EAAQ6M,MAAxB,UACI,cAACiE,GAAD,CACIQ,OAAQkD,GACRtD,MAAkB,IAAX3B,KAEX,eAACgH,GAAA,EAAD,CAAMhI,WAAS,EAACiI,UAAU,MAA1B,UACI,cAACD,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACI,cAACzB,EAAA,EAAD,CACII,QAAS,kBAAM6K,EAAUI,IAAYC,KADzC,SAGKL,EACK,cAAC,KAAD,CAAW5R,UAAWR,EAAQ2J,SAC9B,cAAC,KAAD,CAAenJ,UAAWR,EAAQ2J,aAGhD,cAAC4M,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACI,sBAAKpI,UAAWR,EAAQ4O,YAAxB,UACKsB,GAAYX,GAAWlM,GAD5B,MACwC6M,GAAYmC,QAGxD,cAACkE,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACI,cAAC6N,GAAA,EAAD,CACIC,SAAUrC,GACVsC,kBAAkB,EAClBnW,UAAWR,EAAQiP,YACnB2H,YAAa,OAAMzB,OAAO,GAAG0B,QAAQ,OAG7C,cAACN,GAAA,EAAD,CAAMjR,MAAO,CAACS,SAAU,GAAI6C,MAAI,IAEhC,cAAC2N,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACK7I,EAAM+W,iBACH,cAAC3P,EAAA,EAAD,CAAYI,QAAS,SAAC3D,GAAD,OAAO7D,EAAMgX,qBAAlC,SACI,cAAC,KAAD,CAAevW,UAAWT,EAAMiX,iBAAmBhX,EAAQ2J,OAAS3J,EAAQqP,qBAIxF,cAACkH,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACK7I,EAAMgK,WACH,cAAC5C,EAAA,EAAD,CAAYI,QAAS0O,GAArB,SACI,cAAC,KAAD,CAAczV,UAAWR,EAAQ2J,aAI7C,cAAC4M,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACK7I,EAAMiK,WACH,cAAC7C,EAAA,EAAD,CAAYI,QAASuO,GAArB,SACI,cAAC,KAAD,CAAgBtV,UAAWR,EAAQ2J,aAI/C,cAAC4M,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACK7I,EAAMqD,aAAerD,EAAMqD,YAAYC,OAAS,GAC7C,cAAC8D,EAAA,EAAD,CAAYI,QAASiO,GAArB,SACI,cAAC,KAAD,CAAgBhV,UAAWR,EAAQ2J,aAI/C,cAAC4M,GAAA,EAAD,CAAM3N,MAAI,EAAV,SACK7I,EAAM6H,MAAQ7H,EAAM6H,KAAKvE,OAAS,GAC/B,cAAC8D,EAAA,EAAD,CAAYI,QAASoO,GAArB,SACI,cAAC,KAAD,CAAcnV,UAAWT,EAAMgS,YAAc/R,EAAQ2J,OAAS3J,EAAQqP,6BAO9F,cAACyC,GAAD,CACI5R,KAAMiT,GAAmBN,EACzBpK,SAAU4K,EACVzL,KAAM7H,EAAM6H,KACZmK,YAAahS,EAAMgS,YACnB1R,QAASqV,GACT1D,cAAe4D,KAEnB,cAACpE,GAAD,CACItR,KAAM6S,GAA0BF,EAChCpK,SAAUwK,EACV7P,YAAarD,EAAMqD,YACnBsO,mBAAoB3R,EAAM2R,mBAC1BrR,QAASkV,GACT5D,qBAAsB8D,KAE1B,cAACxD,GAAD,CACI/R,KAAMqT,EACN9K,SAAUgL,EACV3S,KAAMf,EAAMiK,UACZ3J,QAASwV,GACT3D,SAAU6D,KAEd,cAAC9D,GAAD,CACI/R,KAAMyT,EACNlL,SAAUoL,EACV/S,KAAMf,EAAMgK,UACZ1J,QAAS2V,GACT9D,SAAUgE,Q,ICnfLe,G,WAEjB,WAAY5K,GAAM,oBACd3E,KAAK2E,IAAMA,EACX3E,KAAKwP,cAAgB,G,iDAGpB7I,GAAO,IAAD,OACP,OAAO,IAAI9L,SAAQ,SAACC,EAASC,GACrB,EAAK4J,IAAI+E,SACT,EAAK/E,IAAI+E,QAAQ3N,YAAc4K,EAC/B,EAAK8I,iBAAgB,kBAAM3U,QAE3BA,S,gCAKD,IAAD,OACN,OAAO,IAAID,SAAQ,SAACC,EAASC,GACrB,EAAK4J,IAAI+E,QACT,EAAK+F,iBAAgB,kBAAM3U,OAE3BA,S,sCAKI6F,GAAW,IAAD,OACM,IAAxBX,KAAK2E,IAAI+K,YAKT1P,KAAK2E,IAAI+E,UAAY1J,KAAK2E,IAAI+E,QAAQzN,YACtC+D,KAAK2E,IAAI+E,QAAQzN,UAAY,SAACC,GAAO,IAAD,gBACV,EAAKsT,eADK,IAChC,2BAA0C,EACtC1U,EADsC,YADV,8BAKhC,EAAK0U,cAAc7T,OAAS,EAC5B,EAAKgJ,IAAI+E,QAAQzN,UAAY,OAKrC+D,KAAKwP,cAAc7S,KAAKgE,IAhBpBA,M,6BAmBA,IAAD,EACH,UAAAX,KAAK2E,IAAI+E,eAAT,SAAkBvN,S,8BAGb,IAAD,EACJ,UAAA6D,KAAK2E,IAAI+E,eAAT,SAAkB1M,Y,oGCvCpB2S,GAA0BhY,aAAW,SAACwG,GAAD,MAAY,CACnD0I,UAAW,CACP3D,OAAQ,qBACRnL,SAAU,WACVqL,UAAW,SACXwM,gBAAiBzR,EAAMgJ,QAAQO,WAAWmI,SAE9CC,MAAO,CACHF,gBAAiBzR,EAAMgJ,QAAQO,WAAWmI,QAC1C5H,aAAc,IAElB8H,iBAAkB,CACdlL,SAAU,IAEdmL,SAAU,CACNnL,SAAU,GACV5M,MAAO,QAEX6M,UAAW,CACPD,SAAU,GACVlF,MAAO,UACPsQ,UAAW,SAEfC,WAAY,CACRD,UAAW,QACXpN,QAAS,GAEbsN,YAAa,CACTjN,OAAQ,OACRrL,QAAS,OACToP,cAAe,SACfnP,eAAgB,SAChB8K,WAAY,cAIL,SAASwN,GAAe/X,GAAQ,IACpCoW,EAAqEpW,EAArEoW,MAAO7E,EAA8DvR,EAA9DuR,OAAQyG,EAAsDhY,EAAtDgY,OAAQ3F,EAA8CrS,EAA9CqS,QAAS4F,EAAqCjY,EAArCiY,UAAW3U,EAA0BtD,EAA1BsD,OAAQ4U,EAAkBlY,EAAlBkY,eACpDC,EAAWlH,mBACjBkH,EAAS9G,QAAU+E,EACnB,IAAMgC,EAAkBnH,mBACxBmH,EAAgB/G,QAAU4G,EAC1B,IAAMI,EAAeC,mBAAQ,kBAAML,EAC7BM,MAAMN,EAAU3U,QAAQwM,OAAOxO,KAAI,SAACkX,EAAGjQ,GAAJ,OAAUkQ,yBAC7C,KAAI,CAACR,IACLS,EAAkBzH,mBACxByH,EAAgBrH,QAAUgH,EAVgB,MAWoBhN,mBAAS,IAX7B,mBAWnCsN,EAXmC,KAWVC,EAXU,KAYpCC,EAA6B5H,iBAAO,IACpC6H,EAAY7H,mBAClB6H,EAAUzH,QAAUrR,EAAMsD,OAdgB,MAeA+H,oBAAS,GAfT,mBAenC0N,EAfmC,KAepBC,EAfoB,OAgBU3N,mBAAS,MAhBnB,mBAgBnC4N,EAhBmC,KAgBfC,EAhBe,KAiBpCC,EAAyBlI,iBAAO,GAChCmI,EAAsBnI,mBACtBoI,EAAWZ,sBACXxY,EAAUqX,KAIhBpX,qBAAU,WA2DN,OAFAkZ,EAAoB/H,QAAUiI,uBAxDf,SAATC,EAAUjL,GAWZ,IAVA,IAAM2J,EAAYG,EAAgB/G,SAAW,GACvCgH,EAAeK,EAAgBrH,QAC/B/N,EAASwV,EAAUzH,QAEnB7B,EADQ2I,EAAS9G,QACA7B,SAASsJ,EAAUzH,SAEtCmI,EAAgBpE,OAAOqE,iBACvBC,GAAiB,EACfC,EAAyB,GAEtBpR,EAAI0P,EAAU3U,OAAS,EAAGiF,GAAK,IAAKA,EAAG,CAC5C,IAAMqR,EAAI3B,EAAU1P,GACdzG,EAAQ8X,EAAE9X,MAAQwB,EAClBpB,EAAM0X,EAAE1X,IAAMoB,EAEpB,GAAIkM,GAAY1N,EACR0N,EAAWtN,IACXsX,EAAgBjR,EAAIiR,EAAgBjR,EAAIiR,EACxCG,EAAuBpR,IAAK,IAGT,IAAnBmR,IACAA,EAAgBnR,QAEjB,GAAIiR,IAAkBpE,OAAOqE,iBAChC,MASR,GAJID,IAAkBpE,OAAOqE,mBAAuC,IAAnBC,IAC7CC,EAAuBD,IAAiB,IC9FjD,SAAsBtU,EAAGyU,GAC5B,IAAK,IAAIC,KAAO1U,EACZ,KAAM0U,KAAOD,GACT,OAAO,EAIf,IAAK,IAAIC,KAAOD,EACZ,KAAMC,KAAO1U,GACT,OAAO,EAIf,OAAO,EDoFM2U,CAAaJ,EAAwBd,EAA2BxH,WACjEwH,EAA2BxH,QAAUsI,EACrCf,EAA2Be,GAEvBH,IAAkBpE,OAAOqE,kBAAkB,CAC3C,IAAMO,EAAsB3B,EAAamB,GACnCS,EAAc9L,KAAKC,MAAQ+K,EAAuB9H,QAAU,KAE3C,OAAnB2I,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB3I,UAAW4I,GAChCD,EAAoB3I,QAAQjG,eAAe,CACvC8O,MAAO,SACPC,OAAQ,UACRC,SAAU,WAM1BhB,EAAoB/H,QAAUiI,sBAAsBC,MAKjD,kBAAMc,qBAAqBjB,EAAoB/H,YACvD,IAEHnR,qBAAU,WACN,SAAS8U,EAAUnT,GACf,GAAKoW,GAAkC,IAArBA,EAAU3U,OAA5B,CAIA,IAAIgX,EACE5I,EAAW6I,OAAOC,KAAK7B,GAE7B,GAAsB,KAAlB9W,EAAMoT,QACNqF,EAAmB5I,EAASpO,OAAS,EAC/BvB,KAAKkM,IAAI,EAAGlM,KAAKmM,IAAL,MAAAnM,KAAI,YAAQ2P,IAAY,IACnC,MACJ,IAAsB,KAAlB7P,EAAMoT,QAKb,OAJAqF,EAAmB5I,EAASpO,OAAS,EAC/BvB,KAAKmM,IAAI+J,EAAU3U,OAAS,EAAGvB,KAAKkM,IAAL,MAAAlM,KAAI,YAAQ2P,IAAY,IACtD,EAKX,IAA0B,IAAtB4I,EAAyB,CACzBzY,EAAMqT,iBACN,IAAM1F,EAAWyI,EAAUqC,GAAkBxY,MAAQwB,EACrDiO,EAAO/B,GAAU,KAMzB,OAFArK,OAAO2C,iBAAiB,UAAWkN,GAE5B,WACH7P,OAAOoQ,oBAAoB,UAAWP,MAE3C,CAACzD,EAAQoH,EAAyBV,EAAW3U,IAEhDpD,qBAAU,WACN,SAASua,EAAa5Y,GAClBsX,EAAuB9H,QAAUlD,KAAKC,MAG1C,IAAMqJ,EAAQ4B,EAAShI,QAGvB,OAFK,OAALoG,QAAK,IAALA,KAAO3P,iBAAiB,QAAS2S,GAE1B,WACE,OAALhD,QAAK,IAALA,KAAOlC,oBAAoB,QAASkF,MAEzC,CAACpB,EAAUF,IAEdjZ,qBAAU,WACN,GAAKgY,GAAmBD,EAAxB,CAIA,IALY,EAKRyC,GAAe,EACfnS,EAAI,EANI,cAQE0P,GARF,IAQZ,2BAAyB,CAAC,IAAjB2B,EAAgB,QACjBA,EAAE9X,QAAUoW,EAAepW,OAAS8X,EAAE1Y,OAASgX,EAAehX,OAC9DwZ,EAAcnS,KAGhBA,GAbM,+BAgBS,IAAjBmS,GACArC,EAAaqC,GAAarJ,QAAQjG,eAAe,CAC5C8O,MAAO,SACPC,OAAQ,UACRC,SAAU,cAGpB,CAAClC,EAAgBD,EAAWI,IAE/B,IAmBIsC,EAnBEC,EAAc7R,uBAAY,SAAC8R,GAC7B,IAAMrL,EAAWyI,EAAU4C,GAAe/Y,MAAQwB,EAClDiO,EAAO/B,GAAW6C,GAAWwI,KAAiBlC,KAC/C,CAACV,EAAW3U,EAAQ+O,EAASd,EAAQoH,IAElC7P,EAAaC,uBAAY,SAAClH,EAAOgZ,GACnChZ,EAAMiZ,kBACN,IAAMnD,EAAWM,EAAU4C,GACrB3Z,EAAOyW,EAASzW,KACtB8H,UAAUC,UAAUC,UAAUhI,GAC9B8W,EAAO9W,EAAMyW,EAAS7V,MAAO6V,EAASzV,KACtCgX,EAAsBhY,GACtB8X,GAAiB,KAClB,CAACf,EAAWD,IAET+C,EAAwBhS,uBAAY,WACtCiQ,GAAiB,KAClB,CAACA,IAyDJ,OAzCI2B,EAZC1C,EAW2B,IAArBA,EAAU3U,OACD,KAGZ,cAAC0X,GAAA,EAAD,CAAgBva,UAAWR,EAAQwX,MAAOnL,IAAK+M,EAA/C,SACI,cAAC4B,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACKjD,EAAU3W,KAAI,SAACsY,EAAGuB,GACf,IAAMzJ,EAAWyJ,KAASxC,EACpBlY,EAAYiR,EAAWzR,EAAQyX,iBAAmBzX,EAAQ0X,SAEhE,OAAIiC,EAAE9X,MAAQ,GAAK8X,EAAE1X,IAAM,EAChB,KAIR,eAACkZ,GAAA,EAAD,CACI5T,QAAS,SAAC3D,GAAD,OAAO+W,EAAYO,IAE5B7O,IAAK+L,EAAa8C,GAClBzJ,SAAUA,EAJd,UAMK,cAAC2J,GAAA,EAAD,CAAW5a,UAAWA,EAAtB,SACKmZ,EAAE1Y,OAEP,cAACma,GAAA,EAAD,CAAW5a,UAAWR,EAAQ4X,WAA9B,SACI,cAACzQ,EAAA,EAAD,CAAYI,QAAS,SAAC3D,GAAD,OAAOiF,EAAWjF,EAAGsX,IAA1C,SACI,cAAC,KAAD,QAGR,cAACE,GAAA,EAAD,CAAW5a,UAAWR,EAAQwM,UAA9B,SACKmN,EAAEzJ,gBAbHgL,YA3B5B,sBAAK1a,UAAWR,EAAQ6X,YAAxB,UACI,cAAC5Q,EAAA,EAAD,yDAGA,eAACA,EAAA,EAAD,0BACgB,cAACoU,GAAA,EAAD,CAAMhU,MAAM,YAAYiU,OAAO,SAASC,IAAI,aAAahW,KAAK,gEAA9D,uBADhB,sDAgDR,eAACiW,GAAA,EAAD,CAAOC,QAAM,EAACC,UAAW,EAAGlb,UAAWR,EAAQuO,UAA/C,UACKmM,EACD,eAAC,EAAD,CAAOxa,KAAM4Y,EAAezY,QAASya,EAAuBxa,iBAAkB,IAAMK,SAAS,UAA7F,oBACYqY,Q,IEhSH2C,G,WAEjB,WAAYC,GAAW,oBACnBlU,KAAKkU,SAAWA,EAChBlU,KAAK2G,KAAO,EACZ3G,KAAKpB,SAAW,EAChBoB,KAAKmU,SAAU,EACfnU,KAAK0P,WAAa,EAClB1P,KAAKoU,eAAiB,GACtBpU,KAAKqU,cAAgB,GACrBrU,KAAKsU,eAAiB,GACtBtU,KAAKuU,qBAAuB,GAC5BvU,KAAKwU,4BAA8B,GACnCxU,KAAKyU,cAAgB,GAErB,IAAMhP,EAAOzF,KAEbA,KAAKkU,SAASvO,UAAY,SAACzL,GACvB,OAAOA,EAAML,KAAK0G,SACd,IAAK,QACDkF,EAAK7G,SAAW1E,EAAML,KAAK+E,SAC3B6G,EAAK0O,SAAU,EACf1O,EAAK/J,YAAcxB,EAAML,KAAK6B,YAC9B+J,EAAKuE,mBAAqB9P,EAAML,KAAKmQ,mBACrCvE,EAAKiK,WAAa,EAClBjK,EAAKkB,KAAOzM,EAAML,KAAKkC,YAN3B,oBAQyB0J,EAAK2O,gBAR9B,IAQI,2BAA0C,EACtCzT,EADsC,SAC7BzG,EAAML,KAAK6a,SAT5B,8BAWI,MACJ,IAAK,aAE2B,IAAD,EAA3B,GADAjP,EAAKiK,WAAaxV,EAAML,KAAK2P,MACL,IAApB/D,EAAKiK,WACL,UAAAjK,EAAKxJ,iBAAL,cAAAwJ,GAEJ,MACJ,IAAK,OAAL,oBACyBA,EAAK4O,eAD9B,IACI,2BAAyC,EACrC1T,EADqC,SAC5BzG,EAAML,KAAK8a,OAF5B,8BAII,MACJ,IAAK,QAAL,oBACyBlP,EAAK6O,gBAD9B,IACI,2BAA0C,EACtC3T,EADsC,SAC7BzG,EAAML,KAAK8a,OAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyBlP,EAAK+O,6BAD9B,IACI,2BAAuD,EACnD7T,EADmD,SAC1CzG,EAAML,KAAKiC,KAF5B,8BAII,MACJ,IAAK,cAAL,oBACyB2J,EAAK8O,sBAD9B,IACI,2BAAgD,EAC5C5T,EAD4C,SACnCzG,EAAML,KAAK2P,MAAOtP,EAAML,KAAK8a,OAF9C,8BAII,MACJ,IAAK,OAAL,oBACyBlP,EAAKgP,eAD9B,IACI,2BAAyC,EACrC9T,EADqC,YAD7C,8BAII,MACJ,QACIiU,QAAQC,MAAM,sBAAwB3a,EAAML,KAAK0G,W,oDAezDI,GACAX,KAAKmU,SACLxT,IAEJX,KAAKoU,eAAezX,KAAKgE,K,6BAGtBA,GACHX,KAAKqU,cAAc1X,KAAKgE,K,8BAGpBA,GACJX,KAAKsU,eAAe3X,KAAKgE,K,oCAGfA,GACVX,KAAKuU,qBAAqB5X,KAAKgE,K,2CAGdA,GACjBX,KAAKwU,4BAA4B7X,KAAKgE,K,6BAGnCA,GACHX,KAAKyU,cAAc9X,KAAKgE,K,4BAGtB/B,GACFoB,KAAKkU,SAASxT,YAAY,CAACH,QAAS,QAAS3B,SAAUA,M,6BAIvDoB,KAAKkU,SAASxT,YAAY,CAACH,QAAS,W,6BAIpCP,KAAKkU,SAASxT,YAAY,CAACH,QAAS,W,8BAIpCP,KAAKkU,SAASxT,YAAY,CAACH,QAAS,Y,yCAGrBzE,GACfkE,KAAKkU,SAASxT,YAAY,CAACH,QAAS,qBAAsBzE,GAAIA,M,gCAGxDwU,GACNtQ,KAAKkU,SAASxT,YAAY,CAACH,QAAS,YAAaiJ,MAAO8G,M,8BAIxDtQ,KAAKkU,SAASxT,YAAY,CAACH,QAAS,UACpCP,KAAKkU,SAAStO,U,kCA9Dd,OAAO5F,KAAK2G,M,aAGA6C,GACZxJ,KAAK2G,KAAO6C,EACZxJ,KAAK0P,WAAa,EAClB1P,KAAKkU,SAASxT,YAAY,CAACH,QAAS,cAAeiJ,MAAOxJ,KAAK2G,W,KCjEjEmO,GAAYnd,YAAW,CACzBC,KAAM,CACFsL,OAAQ,qBACRnL,SAAU,WACVqL,UAAW,YAInB,SAAS2R,GAAatM,EAAcuM,GAChC,GAAIvM,EAAe,EACf,OAAOsM,GAAa,EAAGC,GAG3B,IAAMC,EAAKxM,EAAe,IAEpByM,GADNzM,GAAgBA,EAAewM,GAAM,KACT,GAEtBE,GADN1M,GAAgBA,EAAeyM,GAAQ,IACX,GAE5B,OAAIF,GAAqB,KAEdI,IADM3M,EAAe0M,GAAQ,IAClB,IAAMC,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGhEG,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGtD,SAASG,GAAIE,GACT,OAAOxM,OAAOwM,GAAGvM,SAAS,EAAG,KAGjC,SAASsM,GAAOC,GACZ,OAAOxM,OAAOwM,GAAGD,OAAO,EAAG,KAG/B,SAASE,GAAYC,EAAUC,EAAUnF,EAAWoF,GAChD,IAAIC,EAGIA,EAFJrF,GAAaA,EAAU3U,OAAS,EAC5B+Z,EACkBpF,EAAUA,EAAU3U,OAAS,GAAGpB,IAEhC+V,EAAUA,EAAU3U,OAAS,GAAGia,YAGpC,EAGtB,IAAMC,EAAcL,EAAS9L,SAAW8L,EAAS9L,QAAQ9K,SACnD,IAAO4W,EAAS9L,QAAQ9K,SACxB,EAEAkX,EAAcL,EAAS/L,SAAW+L,EAAS/L,QAAQ9K,SACnD,IAAO6W,EAAS/L,QAAQ9K,SACxB,EAEN,OAAOxE,KAAKkM,IAAIwP,EAAa1b,KAAKkM,IAAIqP,EAAiBE,IAG5C,SAASE,GAAO1d,GAAQ,IAC3B2d,EAA2C3d,EAA3C2d,IAAKlQ,EAAsCzN,EAAtCyN,UAAWmQ,EAA2B5d,EAA3B4d,QAAShL,EAAkB5S,EAAlB4S,cADC,EAEuC5S,EAAM6d,QAAxEC,EAF2B,EAE3BA,aAAc7T,EAFa,EAEbA,UAAW8T,EAFE,EAEFA,aAAc/T,EAFZ,EAEYA,UAAWgU,EAFvB,EAEuBA,aAFvB,EAGZ3S,qBAHY,mBAG3B4S,EAH2B,KAGtBC,EAHsB,OAIA7S,qBAJA,mBAI3B4M,EAJ2B,KAIhBkG,EAJgB,OAKJ9S,oBAAS,GALL,mBAK3BgH,EAL2B,KAKlB+L,EALkB,KAM5BC,EAAapN,mBACnBoN,EAAWhN,QAAUgB,EAPa,MAQVhH,qBAAfkJ,EARyB,sBASIlJ,qBATJ,mBAS3BhI,EAT2B,KASdib,EATc,OAUkBjT,qBAVlB,mBAU3BsG,EAV2B,KAUP4M,EAVO,OAWIlT,qBAXJ,mBAW3BkH,EAX2B,KAWdiM,EAXc,KAY5BhK,EAAczL,uBAAY,kBAAMwL,EAAY,MAAK,IACjD/B,EAAmBvB,iBAAO,CAACgD,EAAE,EAAGC,EAAE,IAClCiJ,EAAWlM,mBACXmM,EAAWnM,mBACXwN,EAAenG,mBAAQ,WACzB,OACW,IAAIpB,GADX6G,EACwBZ,EACjBa,GAAgBC,EACCb,EAGJ,MACzB,CAACW,EAAcC,EAAcC,IAC1B7H,EAAQkC,mBAAQ,kBAAM,IAAIxK,IAAS,IACnC7N,EAAUwc,KA1BkB,EA2BQpR,mBAAS,IA3BjB,mBA2B3BqT,EA3B2B,KA2BZC,GA3BY,KA4B5B7F,GAAY7H,iBAAO,GACzB6H,GAAUzH,QAAU6L,GAAYC,EAAUC,EAAUnF,GAAW,GAE/D,IAAM2G,GAAO7V,uBAAY,SAACyG,EAAU4G,EAAOkG,EAAMhU,GAC7C,IAAMgG,EAAOkB,EAAWsJ,GAAUzH,QAClC+E,EAAMyI,QAAQvQ,GACdkG,IAEI8H,EACAmC,EAAaG,KAAKtQ,EAAO,KAAMnN,MAAK,SAAC2d,GAAD,OAAOxW,OAE3CA,MAEL,CAACkM,EAAaiK,IAmIjB,SAAS3a,GAAKsS,EAAOqI,EAAcnC,GAC/B8B,GAAW,GACXhI,EAAMtU,QAEFwa,GACAmC,EAAa3a,OAIrB,SAASa,GAAMyR,EAAOqI,EAAcnC,GAChC8B,GAAW,GACXhI,EAAMxR,OAEF0X,GACAmC,EAAa9Z,QA/IrBzE,qBAAU,WAAO,IAAD,EAYR6e,EAXJ,UAAA3B,EAAS/L,eAAT,SAAkB9D,QAClB6P,EAAS/L,QAAU,KACnB+E,EAAMyI,QAAQ,GACdzI,EAAMxR,OACNwZ,GAAW,GACXE,EAAe,MACfC,EAAsB,MACtBC,EAAe,MACfrB,EAAS9L,QAAQ3N,YAAc,EAC/ByZ,EAAS9L,QAAQ1M,QAKboa,EADAjB,EACmBH,EAAI1F,UAAU6F,GAC5B3c,MAAK,SAAAE,GACF,IAAMiC,EAASjC,EAAMiC,OAAS,EAAIjC,EAAMA,EAAMiC,OAAS,GAAGpB,IAAM,EAE1D+V,EAAY5W,EAAMC,KAAI,SAACsY,GACzB,MAAO,CACH1Y,KAAM0Y,EAAE1Y,KACRY,MAAO8X,EAAE9X,MACTkd,cAAepF,EAAE9X,MACjBI,IAAK0X,EAAE1X,IACPqb,YAAa3D,EAAE1X,IACfiO,YAAauM,GAAa9C,EAAE9X,MAAOwB,OAI3C,OADA6a,EAAalG,GACNA,KAEVgH,OAAM,SAAApb,GAAC,OAAI+Z,EAAQ/Z,MAEL,IAAIrB,SAAQ,SAACC,EAASC,GAAV,OAAqBD,OAGpDsb,EACAU,EAAaS,UAAU/d,MAAK,kBAAMqT,QAC3BwJ,GAAgBC,IACvBc,EAAiB5d,MAAK,SAAA8W,GAClB,IAAI/K,EAEJ,GAAI8Q,EAAc,CACd,IAAM/Q,EAAYwD,OAAOtC,KAAKC,OAC9BlB,EAAU,IAAI0O,GAAa,IAAI5O,EAA8BC,IAC7D9H,OAAOhF,KACHgf,qBAAsCC,mBAAmBpB,GAAgB,YAAc/Q,EACvF,mBAAqB+Q,EACrB,uCAEGC,IACP/Q,EAAU,IAAI0O,GAAa,IAAIpO,EAAuByQ,EAAIxa,GAAIgK,KACtD4R,OAGZjC,EAAS/L,QAAUnE,EAEnBA,EAAQgS,SAAQ,SAAC7C,GACbvD,GAAUzH,QAAU6L,GAAYC,EAAUC,EAAUnF,GACpD/K,EAAQoS,MAAMxG,GAAUzH,SAEpB4G,GACA/K,EAAQ+K,UAAUA,GAGtB/K,EAAQwF,QAAO,SAAC4J,GACZxY,GAAKsS,EAAOqI,EAAcnC,MAG9BpP,EAAQuF,SAAQ,SAAC6J,GACb3X,GAAMyR,EAAOqI,EAAcnC,MAG/BpP,EAAQqS,eAAc,SAAC7b,EAAa4Y,GAChC,IAAM9M,EAAyB,IAAd9L,EAAqBoV,GAAUzH,QAE5CgN,EAAWhN,SACX+E,EAAMxR,OAGVga,GAAKpP,EAAU4G,EAAOkG,GAAM,SAACwC,GACrBT,EAAWhN,SACX+E,EAAMtU,cAKlBoL,EAAQ0E,sBAAqB,SAACnO,GACtB4a,EAAWhN,SACX+E,EAAMxR,OAGV6Z,EAAaS,UACR/d,MAAK,WACEkd,EAAWhN,SACX+E,EAAMtU,WAIlByc,EAAsB9a,MAG1ByJ,EAAQsS,QAAO,WACX5M,EAAcoL,MAGd9Q,EAAQ7J,aAAe6J,EAAQ7J,YAAYC,OAAS,GACpDgb,EAAelB,EAAS/L,QAAQhO,aAChCkb,EAAsBnB,EAAS/L,QAAQM,sBAEvC2M,EAAe,MACfC,EAAsB,OAG1BnI,EAAMyI,QAAuC,IAA/BzB,EAAS/L,QAAQ3N,aAE3B2Y,EACAjG,EAAMxR,OAENwR,EAAMtU,QAGVsc,GAAY/B,WAIzB,CAACsB,EAAKlQ,EAAW2I,EAAOqI,EAAcG,GAAMhB,EAAShL,EAAekL,EAAcC,EAAcC,EAAcC,EAAKzJ,IAoBtH,IAAMiL,GAAa1W,uBAAY,WAC3BjF,GAAKsS,EAAOqI,GAAc,KAC3B,CAACrI,EAAOqI,IAELiB,GAAc3W,uBAAY,WAC5BpE,GAAMyR,EAAOqI,GAAc,KAC5B,CAACrI,EAAOqI,IAELhK,GAAa1L,uBAAY,SAACyG,GACxB6O,EAAWhN,SACX+E,EAAMxR,OAGVga,GAAKpP,EAAU4G,GAAO,GAAM,WACpBiI,EAAWhN,SACX+E,EAAMtU,aAGf,CAACsU,EAAOwI,KAELe,GAAuB5W,uBAAY,SAACyG,EAAUoQ,GAC3CA,GACDjb,GAAMyR,EAAOqI,GAAc,GAG3BJ,EAAWhN,SACX+E,EAAMxR,OAGVga,GAAKpP,EAAU4G,GAAO,GAAM,WACpBwJ,IAAevB,EAAWhN,SAE1BvN,GAAKsS,EAAOqI,GAAc,QAGnC,CAACrI,EAAOwI,GAAMH,IAEX3V,GAAaC,uBAAY,SAAC7H,EAAMY,EAAOI,GACzClC,EAAMgY,OACF9W,EACAY,EACAI,EACA+H,EACAD,EACA8T,EACAnM,KAEL,CAAC3R,EAAOiK,EAAWD,EAAW8T,EAAcnM,IAO/C,IAAM+D,GAA2B3M,uBAAY,SAACtF,GACtC2Z,EAAS/L,SACT+L,EAAS/L,QAAQwO,mBAAmBpc,GAGxCkB,GAAMyR,EAAOqI,GAAc,GAE3BG,GAAK,EAAGxI,GAAO,GAAM,WACbiI,EAAWhN,SACXvN,GAAKsS,EAAOqI,GAAc,QAGnC,CAACrI,EAAOqI,EAAcG,KAEnB/I,GAAoB9M,uBAAY,SAACtF,GACnC,IAAMwa,EAAMS,EAAcxO,QAAO,SAAA3M,GAAC,OAAIA,EAAEE,KAAOA,KAAI,GACnDya,EAAOD,KACR,CAACS,IAEEoB,GAAqB/W,uBAAY,SAACgX,GAAO,IAAD,IACpC5K,EAASpT,KAAKkM,IAAL,WAAU6K,GAAUzH,eAApB,QAA+B,EAAG0O,GAC3Czc,EAAS2U,EAAU3U,OAAS,EAAI2U,EAAUA,EAAU3U,OAAS,GAAGpB,IAAMiT,EAAS,EAE/E6K,EAAe/H,EAAU3W,KAAI,SAAAsY,GAAC,MAAK,CACrC1Y,KAAM0Y,EAAE1Y,KACRY,MAAO8X,EAAEoF,cAAgB7J,EACzB6J,cAAepF,EAAEoF,cACjB9c,IAAK0X,EAAE2D,YAAcpI,EACrBoI,YAAa3D,EAAE2D,YACfpN,YAAauM,GAAa9C,EAAEoF,cAAgB7J,EAAQ7R,OAGxD6a,EAAa6B,GACb,UAAA5C,EAAS/L,eAAT,SAAkB4G,UAAU+H,GAE5B,IAAMC,EAAgB9K,EAAS,IACzBhE,EAAQ8O,GAAiB,EAAI,IAAMA,EAAcnJ,QAAQ,GAAKrG,OAAOwP,EAAcnJ,QAAQ,IACjG0H,EAAerN,KAChB,CAAC8G,IAEJ/X,qBAAU,WACN,IAAMwU,EAAWC,aAAY,WACzB,IAAMrR,EAASwV,GAAUzH,QACR+E,EAAM5G,SAASlM,IAEhB,IACZ8S,EAAMyI,QAAQ,GACdzI,EAAMxR,OACN6Z,EAAa9Z,QACbyZ,GAAW,MAEhB,KAEH,OAAO,kBAAMrJ,cAAcL,MAC5B,CAAC0B,EAAO6B,EAAWwG,IAEtBve,qBAAU,WACN,IAAMwU,EAAWC,aAAY,WACzB,GAAI3U,EAAMyN,UAAU5F,KAAKvE,SAAWob,EAAcpb,OAC9Cqb,GAAiB3e,EAAMyN,UAAU5F,UAC9B,CAGH,IAFA,IAAI0R,GAAS,EAEJhR,EAAI,EAAGA,EAAImW,EAAcpb,SAAUiF,EAAG,CAC3C,IAAM2X,EAAKxB,EAAcnW,GACnB4X,EAAKngB,EAAMyN,UAAU5F,KAAKU,GAChC,GAAI2X,EAAGzc,KAAO0c,EAAG1c,IACVyc,EAAGna,QAAUoa,EAAGpa,OAChBma,EAAGjd,MAAQkd,EAAGld,IAAK,CACtBsW,GAAS,EACT,OAIJA,GACAoF,GAAiB3e,EAAMyN,UAAU5F,MAIhBoW,GAAyF,IAAlFje,EAAMyN,UAAU5F,KAAKqI,QAAO,SAAA3M,GAAC,OAAIA,EAAEE,KAAOwa,EAAIxa,IAAMF,EAAEN,MAAQgb,EAAIhb,OAAKK,SAGnG4a,EAAO,MACPle,EAAM4d,QAAQ,4BAA8BK,EAAIxa,GAAK,IAAMwa,EAAIlY,UAEpE,KAEH,OAAO,kBAAMgP,cAAcL,MAC5B,CAACgK,EAAeT,EAAKje,IAExBE,qBAAU,WACNge,EAAO,QACR,CAACjU,EAAWD,IAEf,IAAM1G,GAASwV,GAAUzH,QACnB+O,GAASrC,GAAgBC,GAAgB/F,EAE/C,OACI,sBACIoI,YAxGR,SAAyBxc,GACrB2O,EAAiBnB,QAAQ4C,EAAIpQ,EAAEyc,QAC/B9N,EAAiBnB,QAAQ6C,EAAIrQ,EAAE0c,SAuG3B9f,UAAWR,EAAQV,KAFvB,UAIK6gB,IAAW,cAAChO,GAAD,CACRI,iBAAkBA,EAClBH,QAASA,EACT+D,MAAOA,EACP9S,OAAQA,GACRgP,cAAe4K,GAAYC,EAAUC,EAAUnF,GAAW,GAC1D5U,YAAaA,EACbsO,mBAAoBA,EACpB9J,MAAOmW,IAAiBD,GAAgBW,EACxC1M,YAAaiM,GAAOA,EAAIxa,GACxBwG,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWjJ,KACtBgJ,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWhJ,KACtBuR,YAAaA,EACbG,OAAQ+M,GACRhN,QAASiN,GACTnO,OAAQkD,GACR7C,qBAAsB8D,GACtBzD,cAAe4D,GACflD,cAAe,kBAAM3S,EAAM2S,cAAcoL,IACzCnL,cAAe,kBAAM5S,EAAM4S,cAAcoL,IACzCnL,eAAgBiN,KAEpB,cAAC/H,GAAD,CACI1F,QAASA,EACT4F,UAAWA,EACX7B,MAAOA,EACP9S,OAAQA,GACR4U,eAAgBlY,EAAMkY,eACtB3G,OAAQoO,GACR3H,OAAQlP,KAEZ,uBAAOwD,IAAK6Q,EAAUla,IAAK8a,O,IC7blByC,G,WAEjB,WAAYtT,GAAU,oBAClBvF,KAAKuF,QAAU,IAAIC,iBAAiBD,GACpCvF,KAAK2G,KAAO,EACZ3G,KAAKpB,SAAW,EAChBoB,KAAKqU,cAAgB,GACrBrU,KAAKsU,eAAiB,GACtBtU,KAAKuU,qBAAuB,GAC5BvU,KAAKwU,4BAA8B,GACnCxU,KAAK8Y,eAAiB,GACtB9Y,KAAKoU,eAAiB,GACtBpU,KAAK+Y,mBAAqB,GAE1B,IAAMtT,EAAOzF,KAEbA,KAAKuF,QAAQG,UAAY,SAACxL,GACtB,OAAOA,EAAML,KAAK0G,SACd,IAAK,OAED,MACJ,IAAK,QAAL,oBACyBkF,EAAK2O,gBAD9B,IACI,2BAA0C,EACtCzT,EADsC,SAC7BzG,EAAML,KAAK+E,WAF5B,8BAII,MACJ,IAAK,OAAL,oBACyB6G,EAAK4O,eAD9B,IACI,2BAAyC,EACrC1T,EADqC,YAD7C,8BAII,MACJ,IAAK,QAAL,oBACyB8E,EAAK6O,gBAD9B,IACI,2BAA0C,EACtC3T,EADsC,YAD9C,8BAII,MACJ,IAAK,cAAL,oBACyB8E,EAAK8O,sBAD9B,IACI,2BAAgD,EAC5C5T,EAD4C,SACnCzG,EAAML,KAAK2P,QAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyB/D,EAAK+O,6BAD9B,IACI,2BAAuD,EACnD7T,EADmD,SAC1CzG,EAAML,KAAKiC,KAF5B,8BAII,MACJ,IAAK,QAAL,oBACyB2J,EAAKqT,gBAD9B,IACI,2BAA0C,EACtCnY,EADsC,YAD9C,8BAII,MACJ,IAAK,YAAL,oBAC0B8E,EAAKsT,oBAD/B,IACI,2BAA+C,EAC3CpY,EAD2C,SAClCzG,EAAML,KAAK2P,QAF5B,8BAII,MACJ,QACIoL,QAAQC,MAAM,sBAAwB3a,EAAML,KAAK0G,W,mDAc1DI,GACHX,KAAKqU,cAAc1X,KAAKgE,K,8BAGpBA,GACJX,KAAKsU,eAAe3X,KAAKgE,K,oCAGfA,GACVX,KAAKuU,qBAAqB5X,KAAKgE,K,2CAGdA,GACjBX,KAAKwU,4BAA4B7X,KAAKgE,K,8BAGlCA,GACJX,KAAK8Y,eAAenc,KAAKgE,K,8BAGrBA,GACJX,KAAKoU,eAAezX,KAAKgE,K,kCAGjBA,GACRX,KAAK+Y,mBAAmBpc,KAAKgE,K,4BAG3B/B,EAAU8V,EAAQhZ,EAAasO,GACjChK,KAAKuF,QAAQ7E,YAAY,CACrBH,QAAS,QACT3B,SAAUA,EACV8V,OAAQA,EACR3Y,YAAa,EACbL,YAAaA,EACbsO,mBAAoBA,M,iCAIjB0F,GACP1P,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,aAAciJ,MAAOkG,M,6BAIxD1P,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,OAAQoU,MAAM,M,8BAIjD3U,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,QAASoU,MAAM,M,yCAGnC7Y,GACfkE,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,qBAAsBzE,GAAIA,M,8BAIzDkE,KAAKuF,UACLvF,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,SACnCP,KAAKuF,QAAQK,QACb5F,KAAKuF,QAAU,Q,kCAnEnB,OAAOvF,KAAK2G,M,aAGA6C,GACZxJ,KAAK2G,KAAO6C,EACZxJ,KAAKuF,QAAQ7E,YAAY,CAACH,QAAS,cAAeiJ,MAAOxJ,KAAK2G,KAAMgO,MAAM,Q,KC7D5EG,GAAYnd,YAAW,CACzBC,KAAM,CACFG,SAAU,WACV6X,gBAAiB,QACjB3X,MAAO,OACPiL,OAAQ,QACR8V,SAAU,UAEd5d,MAAO,CACH6d,UAAW,QACXlhB,SAAU,WACVE,MAAO,OACPiL,OAAQ,QAEZ8M,SAAU,CACNjY,SAAU,WACVmhB,YAAa,GACbC,aAAc,GACdlhB,MAAO,OACP8O,OAAQ,IACRkJ,UAAW,SACXtQ,MAAO,QACPyZ,WAAY,6DACZvU,SAAU,MAIlB,SAASwU,GAAY7V,EAAS8V,EAAe3C,EAAgBC,GACzD,GAAIpZ,OAAO+b,YAAc/V,EAAQgW,WAAa,GAAKhW,EAAQiW,YAAc,EAAG,CACxE,IAAMC,EAAalc,OAAOmc,OAAOD,YAAclc,OAAO+b,WAAa/b,OAAOoc,YACpEC,EAAcrc,OAAOmc,OAAOE,aAAerc,OAAOsc,YAActc,OAAOuc,aACvEC,EAAc5f,KAAKmM,IAAI,EAAGnM,KAAKmM,IAAImT,EAAalW,EAAQgW,WAAYK,EAAcrW,EAAQiW,cAEhGjc,OAAOyc,SACHD,EAAcxW,EAAQgW,YAAchc,OAAO+b,WAAa/b,OAAOoc,YAC/DI,EAAcxW,EAAQiW,aAAejc,OAAOsc,YAActc,OAAOuc,cAIzE,IAAIG,EACAC,EAEJ,GAAI3W,EAAQ9H,YAAa,CACrBwe,EAAS,GADY,oBAGP1W,EAAQ9H,aAHD,IAGrB,2BAAmC,CAAC,IAA3BE,EAA0B,QAC/Bse,EAAOvd,KAAK,CACRb,GAAIF,EAAEE,GACNqO,MAAOvO,EAAEuO,MACTD,SAAUtO,EAAEsO,WAGZtO,EAAEC,UACFse,EAAgBve,EAAEE,KAXL,oCAerBoe,EAAS,KACTC,EAAgB,KAGpBxD,EAAeuD,GACftD,EAAsBuD,GACtBb,EAAc3B,MAAMnU,EAAQ5E,SAAU4E,EAAQkR,OAAQwF,EAAQC,GA0BnD,SAASC,GAAY/hB,GAChC,IAAMC,EAAUwc,KADuB,EAERnE,mBAAQ,WACnC,IAAM0J,EAAS,IAAIC,gBAAgB9c,OAAO+c,SAASC,QACnD,MAAO,CACHnY,UAAWgY,EAAOI,IAAI,SACtBlV,QAAS8U,EAAOI,IAAI,cAEzB,IANKpY,EAF+B,EAE/BA,UAAWkD,EAFoB,EAEpBA,QAOb+T,EAAgB3I,mBAAQ,kBAAM,IAAIkI,GAActT,KAAU,CAACA,IAT1B,EAUT7B,oBAAS,GAVA,mBAUhCgH,EAVgC,KAUvB+L,EAVuB,KAWjCC,EAAapN,mBACnBoN,EAAWhN,QAAUgB,EAZkB,MAaXhH,mBAAS,GAbE,mBAahC/H,EAbgC,KAaxB+e,EAbwB,OAcDhX,qBAdC,mBAchChI,EAdgC,KAcnBib,EAdmB,OAeajT,qBAfb,mBAehCsG,EAfgC,KAeZ4M,EAfY,OAgBLlT,mBAAS,IAhBJ,mBAgBhC4M,EAhBgC,KAgBrBkG,EAhBqB,OAiBG9S,mBAAS,IAjBZ,mBAiBhCiX,EAjBgC,KAiBjBC,EAjBiB,OAkBSlX,oBAAS,GAlBlB,mBAkBhC4L,EAlBgC,KAkBduL,EAlBc,KAmBjCC,EAAmBxR,iBAAO,IAChCwR,EAAiBpR,QAAUiR,EAC3B,IAAMlM,EAAQkC,mBAAQ,kBAAM,IAAIxK,IAAS,IACnC0E,EAAmBvB,iBAAO,CAACgD,EAAE,EAAGC,EAAE,IAClCkJ,EAAWnM,mBACXyR,EAAmB3Z,uBAAY,SAAAoC,GAC7BA,IACAiS,EAAS/L,QAAUlG,EAEQ,IAAvBA,EAAQkM,WACR2J,GAAY7V,EAAS8V,EAAe3C,EAAgBC,GAEpDpT,EAAQwX,aAAe,SAAC9gB,GACpBmf,GAAY7V,EAAS8V,EAAe3C,EAAgBC,IAI5DpT,EAAQvH,UAAY,SAAC/B,GACjBof,EAAc5J,WAAW,GAErBgH,EAAWhN,SACX+E,EAAMtU,SAIdqJ,EAAQyX,QAAU,SAAC/gB,GACf7B,EAAM4d,QApEtB,SAAsBzS,GAClB,IAAIqR,EACJ,OAAQrR,EAAQqR,MAAMqG,MAClB,KAAK,EACDrG,EAAQ,UACR,MACJ,KAAK,EACDA,EAAQ,gBACR,MACJ,KAAK,EACDA,EAAQ,iBACR,MACJ,KAAK,EACDA,EAAQ,uBACR,MACJ,QACIA,EAAQ,gBAIhB,OAAOA,EAAQ,MAAQrR,EAAQqR,MAAMvU,SAAW,qBAgDtB6a,CAAa3X,QAGpC,CAACmT,EAAgBC,EAAuBnI,EAAO6K,EAAejhB,IAEjE,SAAS+iB,EAAiBtf,GAAK,IAAD,gBACZ2Z,EAAS/L,QAAQhO,aADL,IAC1B,2BAA4C,CAAC,IAApCE,EAAmC,QACpCA,EAAEE,KAAOA,EACTF,EAAEC,SAAU,EAEZD,EAAEC,SAAU,GALM,+BAU9BtD,qBAAU,WA8CN,OA7CA+gB,EAAc/B,SAAQ,SAAC3Y,GACnB8b,EAAU9b,MAGd0a,EAAcvO,QAAO,WACjB0K,EAAS/L,QAAQvN,OACjBsS,EAAMtU,QACNsc,GAAW,MAGf6C,EAAcxO,SAAQ,WAClB2K,EAAS/L,QAAQ1M,QACjByR,EAAMxR,OACNwZ,GAAW,MAGf6C,EAAc1B,eAAc,SAAC7b,GAAiB,IAAD,EACrC0Z,EAAS/L,UACT+L,EAAS/L,QAAQ3N,YAAcA,GAGE,KAAjC,UAAA0Z,EAAS/L,eAAT,eAAkBgG,aAClB4J,EAAc5J,WAAW,GAG7BjB,EAAMxR,OACNwR,EAAMyI,QAAsB,IAAdnb,MAGlBud,EAAcrP,sBAAqB,SAACnO,GAChCsf,EAAiBtf,GACjBwd,EAAcpB,mBAAmBpc,MAGrCwd,EAAc3gB,SAAQ,WAClB2gB,EAAc1T,QACdpI,OAAOoI,WAGX0T,EAAc+B,aAAY,SAAC/K,GACvBkG,EAAalG,MAGjB9S,OAAO8d,eAAiB,SAACpf,GAAD,OAAOod,EAAc1T,SAEtC,WACH0T,EAAc1T,WAEnB,CAAC6I,EAAOgI,EAAY6C,IAEvB,IAAMxB,EAAa1W,uBAAY,WACvBqU,EAAS/L,SACT4P,EAAcnd,SAEnB,CAACmd,IAEEvB,EAAc3W,uBAAY,WAC5BkY,EAActc,UACf,CAACsc,IAEExM,EAAa1L,uBAAY,SAACyG,GACxB6O,EAAWhN,SACX+E,EAAMxR,OAGV,IAAM0J,EAAOkB,EAAWlM,EACxB2d,EAAcvd,YAAc4K,EAAO,MACpC,CAAChL,EAAQ8S,EAAO6K,IAOnB,IAAMvL,EAA2B3M,uBAAY,SAACtF,GACtC4a,EAAWhN,UACX+E,EAAMxR,OACNqc,EAActc,SAGlBoe,EAAiBtf,GACjB8a,EAAsB9a,GACtBwd,EAAcvd,YAAc,EAC5Bud,EAAcpB,mBAAmBpc,KAClC,CAACwd,EAAe7K,IAEnBlW,qBAAU,WACN,GAAK+X,GAAkC,IAArBA,EAAU3U,OAA5B,CAIA,IAAMoR,EAAWC,aAAY,WAIzB,IAHA,IAAMvG,EAAM,IAAOgP,EAAS/L,QAAQ3N,YAC9B4e,EAAgB,GAEb/Z,EAAI,EAAGA,EAAI0P,EAAU3U,SAAUiF,EAAG,CACvC,IAAMqR,EAAI3B,EAAU1P,GAMpB,GAJI6F,GAAOwL,EAAE9X,OAASsM,EAAMwL,EAAE1X,KAC1BogB,EAAche,KAAd,2BAAuBsV,GAAvB,IAA0BuB,MAAO5S,KAGjC6F,EAAMwL,EAAE9X,MACR,OJpQb,SAAqBsD,EAAGyU,GAC3B,GAAIzU,EAAE9B,SAAWuW,EAAEvW,OACf,OAAO,EAGX,IAAK,IAAIiF,EAAI,EAAGA,EAAInD,EAAE9B,SAAUiF,EAC5B,GAAInD,EAAEmD,KAAOsR,EAAEtR,GACX,OAAO,EAIf,OAAO,GI6PM2a,CAAYZ,EAAeG,EAAiBpR,UAC7CkR,EAAiBD,KAEtB,IAEH,OAAO,kBAAM9hB,aAAakU,OAC3B,CAACuD,IAEJ,IAAMkL,EAAwBpa,uBAAY,WACtCyZ,GAAoB,SAAAvL,GAAgB,OAAKA,OAC1C,IAEH,OACI,sBAAKoJ,YAnDT,SAAyBxc,GACrB2O,EAAiBnB,QAAQ4C,EAAIpQ,EAAEyc,QAC/B9N,EAAiBnB,QAAQ6C,EAAIrQ,EAAE0c,SAiDI9f,UAAWR,EAAQV,KAAtD,UACI,uBACI6D,QAAQ,OACRggB,WAAY,EACZ3iB,UAAWR,EAAQ8C,MACnBuJ,IAAKoW,EACLzf,IAAK+G,IACRiN,GACG,qBAAKxW,UAAWR,EAAQ0X,SAAxB,SACK2K,EAAchhB,KAAI,SAAAsY,GAAC,OAAK,eAAC,IAAMjN,SAAP,WAA+BiN,EAAE1Y,KAAK,yBAAjB0Y,EAAEuB,YAGxD,cAAC/I,GAAD,CACII,iBAAkBA,EAClBH,QAASA,EACT+D,MAAOA,EACP9S,OAAQA,EACRD,YAAaA,EACbsO,mBAAoBA,EACpBoF,gBAAiBkB,GAAaA,EAAU3U,OAAS,EACjD2T,iBAAkBA,EAClBvE,OAAQ+M,EACRhN,QAASiN,EACTnO,OAAQkD,EACR7C,qBAAsB8D,EACtBsB,kBAAmBmM,OChRnC,SAASE,GAAQrjB,GACb,IAnBc6F,EAmBR5F,GAnBQ4F,EAmBY7F,EAAM6F,YAnBHvG,aAAW,SAACwG,GAAD,MAAY,CACpDmG,QAAS,CACLjG,SAAU,EACVE,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC3CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEzCI,YAAa,GAEjB0c,aAAc,CACVpd,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC3CC,OAAQP,EAAMK,YAAYE,OAAOK,QACjCH,SAAUT,EAAMK,YAAYI,SAASI,iBAEzCC,YAAaf,UAMjB,OACI,sBACIpF,UAAWsG,YAAK9G,EAAQgM,QAAT,eACVhM,EAAQqjB,aAAetjB,EAAMgH,aAFtC,SAIChH,EAAMa,WAkTA0iB,OA3Rf,WACI,IAAM5F,EAAMrF,mBAAQ,kBAAM,IAAIxX,IAAO,IAC/B2M,EAAY6K,mBAAQ,kBAAM,IAAI5Q,IAAmB,IAF5C,EAjBf,SAAuB8b,GAAM,IAAD,EACAnY,mBAAS,CAAC,EAAG,IADb,mBACjBoY,EADiB,KACXC,EADW,KAcxB,OAZAC,2BAAgB,WACZ,SAASC,IACDJ,GAIJE,EAAQ,CAACve,OAAOoc,WAAYpc,OAAOuc,cAIvC,OAFAvc,OAAO2C,iBAAiB,SAAU8b,GAClCA,IACO,kBAAMze,OAAOoQ,oBAAoB,SAAUqO,MACnD,CAACJ,IACGC,EAOWI,CAAoC,WADrCC,cACwBC,UAAlCnkB,EAJI,oBAKLiG,EAAc9D,KAAKkM,IAAI,IAAa,GAARrO,GALvB,EAMmCyL,mBAAS,IAN5C,mBAMJ2Y,EANI,KAMaC,EANb,OAOmC5Y,oBAAS,GAP5C,mBAOJ6Y,EAPI,KAOaC,EAPb,OAQe9Y,qBARf,mBAQJmR,EARI,KAQG4H,EARH,OASiC/Y,oBAAS,GAT1C,mBASJgZ,EATI,KASYC,EATZ,OAUiCjZ,qBAVjC,mBAUJ6M,EAVI,KAUYqM,EAVZ,OAWmBlZ,mBAAS,IAX5B,mBAWJwS,EAXI,KAWK2G,EAXL,OAYqBnZ,qBAZrB,mBAYJvG,EAZI,KAYM2f,EAZN,KAaH3G,EAAiBD,EAAjBC,aAEFhV,EAAaC,uBAAY,SAAC7H,EAAMY,EAAOI,EAAK+H,EAAWD,EAAW8T,EAAc4G,GAClFT,GAAmB,SAAAD,GAAe,4BAAQA,GAAR,CAAyB,CACvDvX,UAAW0B,KAAKC,MAChBlN,KAAMA,EACNY,MAAOA,EACPI,IAAKA,EACLlB,KAAM8D,EACNgZ,aAAcA,EACd7T,UAAWA,EACXD,UAAWA,EACX0a,WAAYA,UAEjB,CAAC5f,IAEE6f,EAAwB5b,uBAAY,SAAClH,GACvCsiB,GAAoBD,KACrB,CAACA,IAEEU,EAAyB7b,uBAAY,WACvCob,GAAmB,KACpB,CAACA,IAEEU,EAA8B9b,uBAAY,SAAAF,GAC5C,IADoD,EAC9Cic,EAAqB,GADyB,cAG/Bd,GAH+B,IAGpD,2BAAsC,CAAC,IAA9BrM,EAA6B,QAC9B9O,EAAK4D,YAAckL,EAASlL,WAC5BqY,EAAmBxgB,KAAKqT,IALoB,8BASpDsM,EAAmBa,KACpB,CAACd,IAEEe,EAAyBhc,uBAAY,WACvCub,GAAkB,KACnB,IAEGU,EAAcjc,uBAAY,SAACd,GAC7Bmc,EAASnc,GACTqc,GAAkB,KACnB,IAEGtO,EAAoBjN,uBAAY,SAACgV,GAC/BA,IAAiBF,EAAQE,cAI7ByG,GAAW,SAAAS,GAGP,OAFA/hB,IAAI2B,gBAAgBkZ,GAEb,CACHD,aAAcmH,EAASnH,aACvB7T,UAAW,KACX8T,aAAc,KACd/T,UAAWib,EAASjb,UACpBgU,aAAciH,EAASjH,mBAGhC,CAACH,IAEE1H,EAAoBpN,uBAAY,SAACiV,GAC/BA,IAAiBH,EAAQG,cAI7BwG,GAAW,SAAAS,GAGP,OAFA/hB,IAAI2B,gBAAgBmZ,GAEb,CACHF,aAAcmH,EAASnH,aACvB7T,UAAWgb,EAAShb,UACpB8T,aAAckH,EAASlH,aACvB/T,UAAW,KACXgU,aAAc,WAGvB,CAACH,IAEEzU,EAAkBL,uBAAY,SAAAF,GAC5BA,EAAKoB,UACL0T,EAAIuH,uBAAuBrc,EAAKoB,UAAWpB,EAAK/G,MAAO+G,EAAK3G,KACvD+c,OAAM,SAAApb,GACHmhB,EAAYnhB,EAAEoE,YAEfY,EAAKmB,WACZ2T,EAAIwH,uBAAuBtc,EAAKmB,UAAWnB,EAAK/G,MAAO+G,EAAK3G,IAAK2G,EAAK6b,YACjEzF,OAAM,SAAApb,GACHmhB,EAAYnhB,EAAEoE,cAG3B,CAAC0V,EAAKqH,IAEHI,GAA8Brc,uBAAY,SAACF,GACzCiV,EAAa9c,OAAS6H,EAAKiV,aAAa9c,KAK5CujB,EAAkB,CAACrjB,KAAM2H,EAAK3H,KAAMY,MAAO+G,EAAK/G,QAJ5CkjB,EAAY,iBAAmBnc,EAAKiV,aAAa9c,KAAO,mBAK7D,CAAC8c,EAAckH,IAyDZK,GAAatc,uBAAY,SAAClF,GAG5B,GAFAA,EAAEqR,iBAEGrR,EAAEyhB,aAAaC,OAAyC,IAAhC1hB,EAAEyhB,aAAaC,MAAMjiB,OAIlD,IAAK,IAAD,EApDR,SAAwBiiB,GACpB,IAD2B,EACvBzH,EAAe,KACf7T,EAAY,KACZD,EAAY,KAHW,cAKZub,GALY,IAK3B,IAAI,EAAJ,qBAAsB,CAAC,IAAbC,EAAY,QACZC,EAAsBD,EAAExkB,KAAKgE,YAAY,KAE/C,IAA6B,IAAzBygB,EACA,MAAM,IAAInjB,MAAM,oCAAsCkjB,EAAExkB,MAG5D,IAAMyM,EAAY+X,EAAExkB,KAAK+D,UAAU0gB,EAAsB,EAAGD,EAAExkB,KAAKsC,QACnE,OAAQmK,GACJ,IAAK,MACL,IAAK,MACD,GAAIqQ,EACA,MAAM,IAAIxb,MAAM,iDAEpBwb,EAAe0H,EACf,MACJ,IAAK,MACD,GAAIxb,EACA,MAAM,IAAI1H,MAAM,8CAEpB0H,EAAYwb,EACZ,MACJ,IAAK,MACD,GAAIvb,EACA,MAAM,IAAI3H,MAAM,8CAEpB2H,EAAYub,EACZ,MACJ,QACI,MAAM,IAAIljB,MAAM,yBAA2BmL,KAlC5B,8BAsC3B,GAAIzD,GAAaC,EACb,MAAM,IAAI3H,MAAM,2DAGpB,MAAO,CAACwb,aAAcA,EAAc7T,UAAWA,EAAWD,UAAWA,GAWtB0b,CAAe7hB,EAAEyhB,aAAaC,OAApEzH,EADL,EACKA,aAAc7T,EADnB,EACmBA,UAAWD,EAD9B,EAC8BA,UAE9Bwa,GAAW,SAAAS,GACP,IAAIjH,EAAe,KACfD,EAAe,KAyBnB,OAvBI/T,GAAaC,IArE7B,SAAoB4T,GACZA,EAAQE,cACR7a,IAAI2B,gBAAgBgZ,EAAQE,cAG5BF,EAAQG,cACR9a,IAAI2B,gBAAgBgZ,EAAQG,cAgEpB2H,CAAWV,GAEPjb,EACAgU,EAAe9a,IAAIC,gBAAgB6G,GAC5BC,IACP8T,EAAe7a,IAAIC,gBAAgB8G,MAGvCD,EAAYib,EAASjb,UACrBgU,EAAeiH,EAASjH,aACxB/T,EAAYgb,EAAShb,UACrB8T,EAAekH,EAASlH,cAGZ,CACZD,aAAcA,GAAgBmH,EAASnH,aACvC7T,UAAWA,EACX8T,aAAcA,EACd/T,UAAWA,EACXgU,aAAcA,MAMlBF,GACA2G,EAAY3G,EAAa9c,MAE/B,MAAO6C,GACLmhB,EAAYnhB,EAAEoE,YAEnB,CAAC+c,IAEJ,OACI,sBACIY,OAAQP,GACRQ,WAAY,SAAAhiB,GAAC,OAAIA,EAAEqR,kBAFvB,UAII,cAAC,EAAD,CACI/U,KAAMkkB,EACN/jB,QAASykB,EACTxkB,iBAAkB,IAClBK,SAAS,QAJb,SAMK4b,IAEL,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC1B,IAAMhE,EAAS,IAAIC,gBAAgB9c,OAAO+c,SAASC,QAC7CnY,EAAYgY,EAAOI,IAAI,SACvBlV,EAAU8U,EAAOI,IAAI,WAE3B,OAAIpY,GAAakD,EACL,cAAC,IAAD,CAAU+Y,GAAI,gBAAkB7G,mBAAmBpV,GAAa,YAAckD,IAItF,gCACI,cAAChD,EAAD,CACIgC,MAAO8X,EACP7jB,KAAM+jB,EACNre,YAAaA,EACbvF,QAASskB,EACT5Y,SAAU6Y,EACVjc,YAAaQ,EACbT,SAAUyc,KAEd,cAACxf,EAAD,CACIG,MAAOjB,GAAY,oBACnBe,YAAaA,EACbmB,WAAYkd,EACZzc,kBAAmBkd,IAEvB,cAACtB,GAAD,CAASxd,YAAaA,EAAamB,WAAYkd,EAA/C,SACI,cAACxG,GAAD,CACIC,IAAKA,EACL3F,OAAQlP,EACR8U,QAASoH,EACTrS,cAAeqD,EACfpD,cAAeuD,EACf0H,QAASA,EACT3F,eAAgBA,EAChBzK,UAAWA,YAM/B,cAAC,IAAD,CAAOqY,OAAK,EAACC,KAAK,SAAlB,SACI,cAAChE,GAAD,CAAapE,IAAKA,EAAKC,QAASoH,a,mBC7TrClf,GAfDogB,aAAe,CAC3BpX,QAAS,CACP/E,QAAS,CACPoc,KAAM,WAER/W,UAAW,CACT+W,KAAM,WAER3J,MAAO,CACL2J,KAAMC,KAAIC,MAEZC,KAAM,UCHKC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtlB,MAAK,YAAkD,IAA/CulB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCGdO,IAASf,OACL,cAAC,KAAD,CAAegB,SAAU7H,aAAwB8H,cAAc,EAA/D,SACI,eAACC,EAAA,EAAD,CAAephB,MAAOA,GAAtB,UAEA,cAACqhB,EAAA,EAAD,IACA,cAAC,GAAD,SAGJvkB,SAASwkB,cAAc,UAM3Bb,O","file":"static/js/main.8342d959.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, displayLength, offsetValue, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            offsetInputRef.current.value= offsetValue;\r\n        }\r\n    }, [offsetValue]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => playing ? onPause() : onPlay()}\r\n                            >\r\n                                {playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <div className={classes.timeDisplay}>\r\n                                {displayTime(progress * length)} / {displayTime(displayLength)}\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Input\r\n                                inputRef={offsetInputRef}\r\n                                disableUnderline={true}\r\n                                className={classes.offsetInput}\r\n                                placeholder={\"±\" + Number(0).toFixed(2)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.subtitlesToggle && (\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.videoFile && (\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioFile && (\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75 // so the last row doesn't collide with controls\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n            const selected = Object.keys(selectedSubtitleIndexes);\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.start === jumpToSubtitle.start && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(text, subtitle.start, subtitle.end);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offsetValue, setOffsetValue] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffsetValue(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((text, start, end) => {\r\n        props.onCopy(\r\n            text,\r\n            start,\r\n            end,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((o) => {\r\n        const offset = Math.max(-lengthRef.current ?? 0, o);\r\n        const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n        const newSubtitles = subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            displayTime: timeDuration(s.originalStart + offset, length)\r\n        }));\r\n\r\n        setSubtitles(newSubtitles);\r\n        videoRef.current?.subtitles(newSubtitles);\r\n\r\n        const offsetSeconds = offset / 1000;\r\n        const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n        setOffsetValue(value);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                offsetValue={offsetValue}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                onOffsetChange={handleOffsetChange}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { arrayEquals } from './Util';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((text, start, end, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            timestamp: Date.now(),\n            text: text,\n            start: start,\n            end: end,\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, start: item.start});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e00cf',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}