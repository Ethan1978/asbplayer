{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","image","word","source","customFieldValues","fields","_appendField","sentenceField","definitionField","wordField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","customFields","setDefinition","setText","setWord","setCustomFieldValues","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","rowsMax","label","onChange","target","rows","map","onClick","DialogActions","Button","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","backgroundSize","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","onload","fetchImage","Card","CardMedia","title","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","background","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","condensedModeToggleEnabled","onCondensedModeToggle","condensedModeEnabled","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","copy","subtitleIndex","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","condensedModeToggle","onExit","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","includes","helperText","trim","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","fieldValue","Tabs","newIndex","Tab","DialogContentText","location","hostname","type","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.cabf234b.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip, image, word, source, customFieldValues) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            params.note.picture = {\r\n                filename: image.name,\r\n                data: await image.base64(),\r\n                fields: [\r\n                    this.settingsProvider.imageField\r\n                ]\r\n            }\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, audioClip, image, source, customFields} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onShow, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents, settingsProvider} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {props.condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={(e) => props.onCondensedModeToggle()}>\r\n                                            <SpeedIcon className={props.condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon className={classes.button} style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                {subtitle.text}\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles({removable: removable});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {removable && (\r\n                <IconButton onClick={(e) => onRemoval?.()}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(ankiConnectUrl, noteType)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={fieldValue => handleCustomFieldChange(customFieldName, fieldValue)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <Tabs\r\n                    value={tabIndex}\r\n                    variant=\"fullWidth\"\r\n                    onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n                >\r\n                    <Tab label=\"Anki\" />\r\n                    <Tab label=\"In-Video Subtitles\" />\r\n                </Tabs>\r\n                {tabIndex === 0 && (\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                            Leaving a field blank is fine.\r\n                        </DialogContentText>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Anki Connect URL\"\r\n                                        value={ankiConnectUrl}\r\n                                        error={Boolean(ankiConnectUrlError)}\r\n                                        helperText={ankiConnectUrlError}\r\n                                        onChange={handleAnkiConnectUrlChange}\r\n                                    />\r\n                                </div>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                {tabIndex === 1 && (\r\n                    <DialogContent>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        value={subtitleColor}\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        value={subtitleSize}\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        value={subtitleOutlineColor}\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        value={subtitleBackgroundColor}\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                <DialogActions>\r\n                    {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.1\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: ({drawerWidth}) => drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props);\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}