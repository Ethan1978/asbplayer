{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","../../common/src/Util.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","services/Util.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","name","floor","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","substring","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","ankiQuerySpecialCharacters","fileNameSpecialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","sanitizedName","_sanitizeFileName","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","sanitized","action","version","error","humanReadableTime","totalSeconds","seconds","minutes","hours","String","padStart","surroundingSubtitles","index","countRadius","timeRadius","startIndex","endIndex","atBoundary","mockSurroundingSubtitles","middleSubtitle","maxTimestamp","afterTimestamp","track","beforeTimestamp","unshift","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","trim","label","mark","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","initialSource","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","timestampInterval","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","lastAppliedTimestampIntervalToText","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","round","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","handleCustomFieldChange","newCustomFieldValues","assign","disableApplyTextSelection","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","onChange","InputProps","endAdornment","InputAdornment","Tooltip","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","Start","End","Text","combined","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","opacity","hex","exec","r","parseInt","g","b","hexToRgb","timeDurationDisplay","milliseconds","totalMilliseconds","includeMilliseconds","ms","secs","mins","hrs","pad","padEnd","n","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","emptyText","secondary","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","wrap","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","secondsInMinute","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","unbindCopy","unbindAnkiExport","loaded","videoInWindow","onMouseMove","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","nocontrols","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","Content","App","createMuiTheme","main","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.9d32d467.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n\r\n    constructor({up, holding, canceledBy, map}) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return {result: result, extra: extra};\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57]});\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({holding: [83], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({holding: [68], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(onToggleSubtitleTrack, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(onToggleSubtitleTrackInList, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(baseName, start, end, base64, extension) {\r\n        this.name = baseName + \"_\" + Math.floor(start) + \"_\" + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        return new AudioClip(new Base64AudioData(subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")), start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}","export default class CanvasResizer {\r\n\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, {resizeWidth: newWidth, resizeHeight: newHeight})\r\n                    .then(sprite => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + Math.floor(timestamp) + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + Math.floor(timestamp) + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst ankiQuerySpecialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\nconst fileNameSpecialCharacters = [':', '/', '\\\\', '<', '>', '\"', '|', '?', '*', '^'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (ankiQuerySpecialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`;\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            const sanitizedName = this._sanitizeFileName(audioClip.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: sanitizedName,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            const sanitizedName = this._sanitizeFileName(image.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: sanitizedName,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    _sanitizeFileName(name) {\r\n        let sanitized = \"\";\r\n\r\n        for (let i = 0; i < name.length; ++i) {\r\n            const char = name[i];\r\n\r\n            if (fileNameSpecialCharacters.includes(char)) {\r\n                sanitized += \"_\";\r\n            } else {\r\n                sanitized += char;\r\n            }\r\n        }\r\n\r\n        return sanitized;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","export function humanReadableTime(timestamp) {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    const seconds = totalSeconds % 60;\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + \"h\" + String(minutes).padStart(2, '0') + \"m\" + String(seconds).padStart(2, '0') + \"s\";\r\n    }\r\n\r\n    return minutes + \"m\" + String(seconds).padStart(2, '0') + \"s\";\r\n}\r\n\r\nexport function surroundingSubtitles(subtitles, index, countRadius, timeRadius) {\r\n    let startIndex;\r\n    let endIndex;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nexport function mockSurroundingSubtitles(middleSubtitle, maxTimestamp, timeRadius) {\r\n    const subtitles = [middleSubtitle];\r\n\r\n    if (middleSubtitle.end < maxTimestamp) {\r\n        const afterTimestamp = Math.min(maxTimestamp, middleSubtitle.end + timeRadius);\r\n        subtitles.push({\r\n            text: '',\r\n            start: middleSubtitle.end,\r\n            end: afterTimestamp,\r\n            track: 0\r\n        });\r\n    }\r\n\r\n    if (middleSubtitle.start > 0) {\r\n        const beforeTimestamp = Math.max(0, middleSubtitle.start - timeRadius);\r\n        subtitles.unshift({\r\n            text: '',\r\n            start: beforeTimestamp,\r\n            end: middleSubtitle.start,\r\n            track: 0\r\n        });\r\n    }\r\n\r\n    return subtitles;\r\n}\r\n\r\nfunction atBoundary(subtitles, index, initialIndex, countRadius, timeRadius, sign) {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (Math.abs(initialIndex - index) >= countRadius\r\n        && (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min !== null && max !== null && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext, boundary) {\r\n    const seenTimestamps = {};\r\n\r\n    return sliderContext.subtitles\r\n        .filter((s) => s.text.trim() !== \"\")\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`\r\n            };\r\n        })\r\n        .filter(mark => mark !== null)\r\n        .filter(mark => mark.value >= boundary[0] && mark.value <= boundary[1]);\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [source, setSource] = useState(initialSource);\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [timestampInterval, setTimestampInterval] = useState();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState();\r\n    const [timestampMarks, setTimestampMarks] = useState();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState();\r\n    const [audioClip, setAudioClip] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setSource(initialSource);\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText, initialSource]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval = sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd];\r\n        const timestampBoundaryInterval = sliderContext && boundaryIntervalFromSliderContext(sliderContext);\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval));\r\n    }, [sliderContext]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(null);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [initialAudioClip, settingsProvider.preferMp3, lastAppliedTimestampIntervalToAudio, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n\r\n        for (const s of sliderContext.subtitles) {\r\n            if ((s.start >= timestampInterval[0] && s.start <= timestampInterval[1])\r\n                || (s.end >= timestampInterval[0] && s.end <= timestampInterval[1])\r\n                || (timestampInterval[0] >= s.start && timestampInterval[0] <= s.end)\r\n                || (timestampInterval[1] >= s.start && timestampInterval[1] <= s.end)) {\r\n                    intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join(\"\\n\"));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback((e) => {\r\n        e.stopPropagation();\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n    }, [timestampInterval]);\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval));\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    const disableApplyTextSelection = !sliderContext || sliderContext.subtitles.filter(s => s.text.trim() !== \"\").length === 0;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={(timestampInterval[0] === lastAppliedTimestampIntervalToText[0]\r\n                                                    && timestampInterval[1] === lastAppliedTimestampIntervalToText[1])\r\n                                                    || disableApplyTextSelection}\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            rowsMax={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <Tooltip title=\"Apply Selection\">\r\n                                                <span>\r\n                                                    <IconButton\r\n                                                        disabled={(timestampInterval[0] === lastAppliedTimestampIntervalToAudio[0]\r\n                                                            && timestampInterval[1] === lastAppliedTimestampIntervalToAudio[1])\r\n                                                            || !audioClip.isSliceable(timestampInterval[0], timestampInterval[1])}\r\n                                                        onClick={handleApplyTimestampIntervalToAudio}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <DoneIcon />\r\n                                                    </IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                                <Slider\r\n                                    value={timestampInterval}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{marginTop: -8}}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{marginTop: -8}}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.b54dc59d.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"350px 450px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass etc.\r\n                    </li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded,\r\n                        they can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer and use the camera button in the bottom right.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.\r\n                        </li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, copy the current subtitle by using Ctrl+Shift+A.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S+1, S+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in video</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>D+1, D+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in asbplayer</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right or Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Common issues\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        asbplayer isn't detecting streaming video.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try refreshing both the asbplayer tab and the video in the other tab.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites.\r\n                            A lot of video players are loaded inside of iframes, so it's difficult to\r\n                            list every single URL that the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        The extension keyboard shortcuts aren't working.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try uninstalling and reinstalling the extension and restarting Chrome.\r\n                        </li>\r\n                        <li>\r\n                            Make sure the extension isn't installed twice.\r\n                        </li>\r\n                        <li>\r\n\r\n                            Verify the keyboard shortcut is bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            If you're using Brave, make sure asbplayer isn't being blocked by Shield.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser.\r\n                        The <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/animebook/animebook.github.io#video-format-support\">animebook</Link> readme has a detailed explanation of this and links\r\n                        to browsers that have good compatibility. Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap(nodes => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => ({...node.data, track: track}));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track\r\n                        }))\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport function timeDurationDisplay(milliseconds, totalMilliseconds, includeMilliseconds = true) {\r\n    if (milliseconds < 0) {\r\n        return timeDurationDisplay(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n\r\n        if (includeMilliseconds) {\r\n            return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n        }\r\n\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs);\r\n    }\r\n\r\n    if (includeMilliseconds) {\r\n        return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    },\r\n    text: {\r\n        flexGrow: 1\r\n    },\r\n    emptyText: {\r\n        flexGrow: 1,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    timestamp: {\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        color: theme.palette.text.secondary,\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\r\n                        <Grid wrap=\"nowrap\" container>\r\n                            <Grid item className={item.text === '' ? classes.emptyText : classes.text}>{item.text === '' ? 'No text' : item.text}</Grid>\r\n                            <Grid item className={classes.timestamp}>{timeDurationDisplay(item.start, item.start, false)}</Grid>\r\n                        </Grid>\r\n                    }/>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : \"\";\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(\r\n            selection?.type === 'Range'\r\n            && textRef.current?.isSameNode(selection.anchorNode.parentNode)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback((index) => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        return surroundingSubtitles(subtitles, index, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius);\r\n    }, [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        const index = Math.min(Object.keys(selectedSubtitleIndexesRef.current));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents,\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n    }, [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]);\r\n\r\n    let subtitleTable = null;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        if (!loading && displayHelp) {\r\n            subtitleTable = !loading && displayHelp && (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">\r\n                        {displayHelp}\r\n                    </Typography>\r\n                </div>\r\n            );\r\n        } else if (subtitles && subtitles.length === 0) {\r\n            subtitleTable = (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">\r\n                        No subtitles\r\n                    </Typography>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.surroundingSubtitles, event.data.audio, event.data.image, event.data.preventDuplicate, event.data.id);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest', resume: resume});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({command: 'miscSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings, mockSurroundingSubtitles } from '@project/common';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDurationDisplay(s.originalStart + offset, length),\r\n                track: s.track\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFiles.map(f => f.name));\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFiles]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDurationDisplay(s.start, length),\r\n                        track: s.track\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFiles.map(f => f.name));\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, surroundingSubtitles, audio, image, preventDuplicate, id) => onCopy(\r\n                            subtitle,\r\n                            surroundingSubtitles,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitle ? subtitleFiles[subtitle.track] : null,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate,\r\n                            id\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) => setDisabledSubtitleTracks(tracks => {\r\n                            const newTracks = {...tracks};\r\n                            newTracks[track] = !tracks[track];\r\n                            return newTracks;\r\n                        }));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, surroundingSubtitles, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            surroundingSubtitles,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFiles[subtitle.track],\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate,\r\n            null\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback((track) => setDisabledSubtitleTracks(tracks => {\r\n        const newTracks = {...tracks};\r\n        newTracks[track] = !tracks[track];\r\n        return newTracks;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        if ((audioFile || videoFile) && (!subtitles || subtitles.length === 0)) {\r\n            const unbindCopy = KeyBindings.bindCopy(\r\n                (event, subtitle) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(\r\n                        subtitle,\r\n                        lengthRef.current,\r\n                        5000\r\n                    );\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n                },\r\n                () => disableKeyEvents,\r\n                () => {\r\n                    if (!lengthRef.current) {\r\n                        return null;\r\n                    }\r\n\r\n                    const timestamp = clock.time(lengthRef.current);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0\r\n                    };\r\n                }\r\n            );\r\n\r\n            const unbindAnkiExport = KeyBindings.bindAnkiExport(\r\n                (event) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0\r\n                    };\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(\r\n                        subtitle,\r\n                        lengthRef.current,\r\n                        5000\r\n                    );\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n\r\n                    onAnkiDialogRequest();\r\n                },\r\n                () => false\r\n            );\r\n\r\n            return () => {\r\n                unbindCopy();\r\n                unbindAnkiExport();\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }, [audioFile, videoFile, subtitles, clock, selectedAudioTrack, disableKeyEvents, onCopy, onAnkiDialogRequest]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType, audioPaddingStart, audioPaddingEnd, maxImageWidth, maxImageHeight]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst audioPaddingStartKey = \"audioPaddingStart\";\r\nconst audioPaddingEndKey = \"audioPaddingEnd\";\r\nconst maxImageWidthKey = \"maxImageWidth\";\r\nconst maxImageHeightKey = \"maxImageHeight\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, maxImageWidth);\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        const value = localStorage.getItem(maxImageHeightKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageHeight;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, maxImageHeight);\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, surroundingSubtitles, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, surroundingSubtitles: surroundingSubtitles, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({command: 'toggleSubtitleTrackInList', track: track});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings, surroundingSubtitles, mockSurroundingSubtitles, humanReadableTime } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            track: s.track\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback((index) => {\r\n        return surroundingSubtitles(subtitles, index, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius);\r\n    }, [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const noSubtitles = !subtitles || subtitles.length === 0;\r\n\r\n                playerChannel.copy(\r\n                    subtitle,\r\n                    noSubtitles\r\n                        ? mockSurroundingSubtitles(subtitle, length, 5000)\r\n                        : calculateSurroundingSubtitles(subtitle.index)\r\n                    );\r\n\r\n                if (fullscreen) {\r\n                    setAlert(subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0\r\n                    };\r\n                }\r\n\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, clock, length, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled(enabled => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks(tracks => {\r\n                    const newTracks = {...tracks};\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0\r\n                    };\r\n\r\n                    playerChannel.copy(subtitle, mockSurroundingSubtitles(subtitle, length, 5000), false);\r\n                } else if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, clock, length, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n                \r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image, humanReadableTime } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider.js';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = \"0.16.0\";\r\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    contentShift: ({drawerWidth}) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case \"ass\":\r\n            case \"srt\":\r\n            case \"vtt\":\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case \"mkv\":\r\n            case \"mp4\":\r\n            case \"avi\":\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case \"mp3\":\r\n            case \"m4a\":\r\n            case \"aac\":\r\n            case \"flac\":\r\n            case \"ogg\":\r\n            case \"wav\":\r\n            case \"opus\":\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unsupported extension \" + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\r\n    }\r\n\r\n    return {subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile}\r\n}\r\n\r\nfunction audioClipFromItem(item, sliderContext, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        const start = item.audio.start ?? item.start;\r\n        const end = item.audio.end ?? item.end;\r\n\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, start - (item.audio.paddingStart ?? 0)),\r\n            end + (item.audio.paddingEnd ?? 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(\r\n            item.subtitleFile.name,\r\n            item.start,\r\n            item.image.base64,\r\n            item.image.extension\r\n        );\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(\r\n            item.videoFile,\r\n            item.start,\r\n            maxWidth,\r\n            maxHeight\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction itemSourceString(item) {\r\n    const source = item?.subtitleFile?.name ?? item?.audioFile?.name ?? item?.videoFile?.name;\r\n\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    return `${source} (${humanReadableTime(item.start)})`\r\n}\r\n\r\nfunction itemSliderContext(item) {\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [{start: item.start, end: item.end, text: item.text, track: item.track}]\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}>\r\n        {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(() => createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#49007a',\r\n            },\r\n            secondary: {\r\n                main: '#ff1f62',\r\n            },\r\n            error: {\r\n                main: red.A400,\r\n            },\r\n            type: settingsProvider.themeType,\r\n        }\r\n    }), [settingsProvider.themeType]);\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width, ] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({subtitleFiles: []});\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogItemSliderContext = useMemo(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo(\r\n        () => ankiDialogItem && audioClipFromItem(ankiDialogItem, ankiDialogItemSliderContext, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd),\r\n        [ankiDialogItem, ankiDialogItemSliderContext, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () => ankiDialogItem && imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({timestamp: 0, resume: false});\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const {subtitleFiles} = sources;\r\n\r\n    const handleCopy = useCallback((subtitle, surroundingSubtitles, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate, id) => {\r\n        if (subtitle) {\r\n            navigator.clipboard.writeText(subtitle.text);\r\n        }\r\n\r\n        setCopiedSubtitles(copiedSubtitles => {\r\n            if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                if (subtitle.start === last.start\r\n                    && subtitle.end === last.end\r\n                    && subtitle.text === last.text\r\n                    && subtitleFile.name === last.subtitleFile.name) {\r\n                        return copiedSubtitles;\r\n                    }\r\n            }\r\n\r\n            const newCopiedSubtitles = [];\r\n            let updated = false;\r\n\r\n            for (const s of copiedSubtitles) {\r\n                if (id && s.id === id) {\r\n                    const newCopiedSubtitle = {\r\n                        ...s,\r\n                        ...subtitle,\r\n                        ...(surroundingSubtitles && {surroundingSubtitles: surroundingSubtitles}),\r\n                        ...(subtitleFile && {subtitleFile: subtitleFile}),\r\n                        ...(audioFile && {audioFile: audioFile}),\r\n                        ...(videoFile && {videoFile: videoFile}),\r\n                        ...(audioTrack && {audioTrack: audioTrack}),\r\n                        ...(audio && {audio: audio}),\r\n                        ...(image && {image: image}),\r\n                    };\r\n                    newCopiedSubtitles.push(newCopiedSubtitle);\r\n                    updated = true;\r\n                } else {\r\n                    newCopiedSubtitles.push(s);\r\n                }\r\n            }\r\n\r\n            if (!updated) {\r\n                newCopiedSubtitles.push({\r\n                    ...subtitle,\r\n                    surroundingSubtitles: surroundingSubtitles,\r\n                    timestamp: Date.now(),\r\n                    id: id || uuidv4(),\r\n                    name: fileName,\r\n                    subtitleFile: subtitleFile,\r\n                    audioFile: audioFile,\r\n                    videoFile: videoFile,\r\n                    audioTrack: audioTrack,\r\n                    audio: audio,\r\n                    image: image,\r\n                });\r\n            }\r\n\r\n            return newCopiedSubtitles;\r\n        });\r\n\r\n        if (subtitle) {\r\n            setAlertSeverity(\"success\");\r\n            setAlert(subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`);\r\n            setAlertOpen(true);\r\n        }\r\n    }, [fileName]);\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback((newSettings) => {\r\n        settingsProvider.settings = newSettings;\r\n        setSettingsDialogOpen(false);\r\n        setDisableKeyEvents(false);\r\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\r\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\r\n        extension.publishMessage({command: 'miscSettings', value: settingsProvider.miscSettings});\r\n    }, [extension, settingsProvider]);\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(item => {\r\n        const newCopiedSubtitles = [];\r\n\r\n        for (let subtitle of copiedSubtitles) {\r\n            if (item.id !== subtitle.id) {\r\n                newCopiedSubtitles.push(subtitle);\r\n            }\r\n        }\r\n\r\n        setCopiedSubtitles(newCopiedSubtitles);\r\n    }, [copiedSubtitles]);\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity(\"error\");\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\r\n        if (audioFileUrl !== sources.audioFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(audioFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: null,\r\n                audioFileUrl: null,\r\n                videoFile: previous.videoFile,\r\n                videoFileUrl: previous.videoFileUrl\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\r\n        if (videoFileUrl !== sources.videoFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(videoFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: previous.audioFile,\r\n                audioFileUrl: previous.audioFileUrl,\r\n                videoFile: null,\r\n                videoFileUrl: null\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleClipAudio = useCallback(async (item) => {\r\n        try {\r\n            const clip = await audioClipFromItem(item);\r\n\r\n            if (settingsProvider.preferMp3) {\r\n                clip.toMp3().download();\r\n            } else {\r\n                clip.download();\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError, settingsProvider]);\r\n\r\n    const handleDownloadImage = useCallback(async (item) => {\r\n        try {\r\n            await imageFromItem(item).download();\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    const handleSelectCopyHistoryItem = useCallback((item) => {\r\n        if (subtitleFiles.filter(f => f.name === item.subtitleFile.name).length === 0) {\r\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\r\n            return;\r\n        }\r\n\r\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\r\n    }, [subtitleFiles, handleError]);\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\r\n        setAnkiDialogDisabled(true);\r\n\r\n        try {\r\n            const result = await anki.export(\r\n                text,\r\n                definition,\r\n                audioClip,\r\n                image,\r\n                word,\r\n                source,\r\n                customFieldValues,\r\n                mode\r\n            );\r\n\r\n            if (mode !== 'gui') {\r\n                if (mode === 'default') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Export succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                } else if (mode === 'updateLast') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Update succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                }\r\n\r\n                setAnkiDialogOpen(false);\r\n\r\n                if (ankiDialogRequested) {\r\n                    setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n                    setAnkiDialogRequested(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        } finally {\r\n            setAnkiDialogDisabled(false);\r\n            setDisableKeyEvents(false);\r\n        }\r\n    }, [anki, handleError, ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        };\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback((files) => {\r\n        try {\r\n            let {subtitleFiles, audioFile, videoFile} = extractSources(files);\r\n\r\n            setSources(previous => {\r\n                setLoading(true);\r\n\r\n                let videoFileUrl = null;\r\n                let audioFileUrl = null;\r\n\r\n                if (videoFile || audioFile) {\r\n                    revokeUrls(previous);\r\n\r\n                    if (videoFile) {\r\n                        videoFileUrl = URL.createObjectURL(videoFile);\r\n                    } else if (audioFile) {\r\n                        audioFileUrl = URL.createObjectURL(audioFile);\r\n                    }\r\n\r\n                    setTab(null);\r\n                } else {\r\n                    videoFile = previous.videoFile;\r\n                    videoFileUrl = previous.videoFileUrl;\r\n                    audioFile = previous.audioFile;\r\n                    audioFileUrl = previous.audioFileUrl;\r\n                }\r\n\r\n                const sources = {\r\n                    subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                    audioFile: audioFile,\r\n                    audioFileUrl: audioFileUrl,\r\n                    videoFile: videoFile,\r\n                    videoFileUrl: videoFileUrl\r\n                };\r\n\r\n                return sources;\r\n            });\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")));\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter(t => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\r\n                    } else {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\r\n                        message.data.subtitles.name\r\n                    )];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(message.data.subtitles.map(async (s) => new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + s.base64)).blob()],\r\n                        s.name\r\n                    )));\r\n                }\r\n\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")));\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null\r\n                })\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        if (inVideoPlayer) {\r\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n            return;\r\n        }\r\n\r\n        setDragging(false);\r\n        dragEnterRef.current = null;\r\n\r\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handleFiles(e.dataTransfer.files);\r\n    }, [inVideoPlayer, handleError, handleFiles]);\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer) {\r\n            dragEnterRef.current = e.target;\r\n            setDragging(true);\r\n        }\r\n\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleDragLeave = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n            setDragging(false);\r\n        }\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded = (loading && !videoFrameRef.current) || (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity={alertSeverity}\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout');\r\n\r\n                        if (videoFile && channel) {\r\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\r\n                        }\r\n\r\n                        return (\r\n                            <div>\r\n                                <CopyHistory\r\n                                    items={copiedSubtitles}\r\n                                    open={copyHistoryOpen}\r\n                                    drawerWidth={drawerWidth}\r\n                                    onClose={handleCloseCopyHistory}\r\n                                    onDelete={handleDeleteCopyHistoryItem}\r\n                                    onClipAudio={handleClipAudio}\r\n                                    onDownloadImage={handleDownloadImage}\r\n                                    onSelect={handleSelectCopyHistoryItem}\r\n                                    onAnki={handleAnki}\r\n                                />\r\n                                <AnkiDialog\r\n                                    open={ankiDialogOpen}\r\n                                    disabled={ankiDialogDisabled}\r\n                                    text={ankiDialogItem?.text}\r\n                                    audioClip={ankiDialogAudioClip}\r\n                                    image={ankiDialogImage}\r\n                                    source={itemSourceString(ankiDialogItem)}\r\n                                    sliderContext={ankiDialogItemSliderContext}\r\n                                    customFields={settingsProvider.customAnkiFields}\r\n                                    anki={anki}\r\n                                    settingsProvider={settingsProvider}\r\n                                    onCancel={handleAnkiDialogCancel}\r\n                                    onProceed={handleAnkiDialogProceed}\r\n                                    onViewImage={handleViewImage}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                />\r\n                                <ImageDialog\r\n                                    open={imageDialogOpen}\r\n                                    image={image}\r\n                                    onClose={handleImageDialogClosed}\r\n                                />\r\n                                <SettingsDialog\r\n                                    anki={anki}\r\n                                    open={settingsDialogOpen}\r\n                                    onClose={handleCloseSettings}\r\n                                    settings={settingsProvider.settings}\r\n                                />\r\n                                <HelpDialog\r\n                                    open={helpDialogOpen}\r\n                                    extensionUrl={extensionUrl}\r\n                                    onClose={handleCloseHelp}\r\n                                />\r\n                                <Bar\r\n                                    title={fileName || \"asbplayer\"}\r\n                                    drawerWidth={drawerWidth}\r\n                                    drawerOpen={copyHistoryOpen}\r\n                                    onOpenCopyHistory={handleOpenCopyHistory}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                    onOpenHelp={handleOpenHelp}\r\n                                    onFileSelector={handleFileSelector}\r\n                                />\r\n                                <input\r\n                                    ref={fileInputRef}\r\n                                    onChange={handleFileInputChange}\r\n                                    type=\"file\"\r\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                    multiple\r\n                                    hidden\r\n                                />\r\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                    {nothingLoaded && (\r\n                                        <LandingPage\r\n                                            latestExtensionVersion={latestExtensionVersion}\r\n                                            extensionUrl={extensionUrl}\r\n                                            extension={extension}\r\n                                            loading={loading}\r\n                                            dragging={dragging}\r\n                                            onFileSelector={handleFileSelector}\r\n                                        />\r\n                                    )}\r\n                                    <DragOverlay dragging={dragging} loading={loading} />\r\n                                    <Player\r\n                                        subtitleReader={subtitleReader}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCopy={handleCopy}\r\n                                        onError={handleError}\r\n                                        onUnloadAudio={handleUnloadAudio}\r\n                                        onUnloadVideo={handleUnloadVideo}\r\n                                        onLoaded={handleSourcesLoaded}\r\n                                        onTabSelected={handleTabSelected}\r\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                        tab={tab}\r\n                                        availableTabs={availableTabs}\r\n                                        sources={sources}\r\n                                        jumpToSubtitle={jumpToSubtitle}\r\n                                        videoFrameRef={videoFrameRef}\r\n                                        extension={extension}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        disableKeyEvents={disableKeyEvents}\r\n                                        ankiDialogRequested={ankiDialogRequested}\r\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                    />\r\n                                </Content>\r\n                            </div>\r\n                        );\r\n                    }} />\r\n                    <Route exact path=\"/video\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout') === 'true';\r\n\r\n                        return (\r\n                            <VideoPlayer\r\n                                settingsProvider={settingsProvider}\r\n                                videoFile={videoFile}\r\n                                popOut={popOut}\r\n                                channel={channel}\r\n                                onError={handleError}\r\n                            />\r\n                        );\r\n                    }} />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '@fontsource/roboto';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}