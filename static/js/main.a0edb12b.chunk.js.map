{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/SubtitleReader.js","services/MediaClipper.js","components/Bar.js","components/ChromeExtension.js","components/CopyHistory.js","components/BroadcastChannelVideoProtocol.js","components/ChromeTabVideoProtocol.js","components/Clock.js","components/Controls.js","components/MediaAdapter.js","components/KeyEvents.js","components/background.png","components/SubtitlePlayer.js","components/Util.js","components/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","components/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioBlob","audioFileName","audioFileExtension","_blobToBase64","audioBase64","fields","sentenceField","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audio","filename","Date","now","data","audioField","action","body","version","fetch","method","JSON","stringify","json","error","Error","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","base64","substr","indexOf","AnkiDialog","disabled","onProceed","onCancel","setDefinition","Dialog","disableEnforceFocus","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","color","TextField","variant","multiline","rows","label","value","onChange","e","target","DialogActions","Button","onClick","SubtitleReader","file","name","endsWith","then","parseSync","nodes","map","node","sort","n1","n2","start","parse","parsed","events","dialogue","event","Math","round","Start","end","End","Text","combined","AUDIO_TYPES","MediaClipper","trackId","clipAudio","extension","_saveToFile","_nameWithoutExtension","media","Audio","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","play","stream","_captureStream","getVideoTracks","stop","_findMediaType","mimeType","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","Blob","pause","revokeObjectURL","fileName","substring","lastIndexOf","url","a","document","createElement","appendChild","style","href","download","click","remove","Object","keys","filter","isTypeSupported","captureStream","mozCaptureStream","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","IconButton","edge","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","background","inactiveButton","progress","margin","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","Fade","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","loading","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","subtitleRow","subtitle","overflowWrap","compressedSubtitle","textAlign","copyButton","noSubtitles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","copySubtitle","subtitleIndexes","index","TableContainer","Table","TableBody","TableRow","TableCell","Link","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","useStyles","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","loadingSubtitles","setLoadingSubtitles","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","finally","onReady","init","subscribed","ready","onCurrentTime","onExit","onOffset","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","SettingsDialog","anki","settings","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","handleAnkiConnectUrlChange","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","modelFieldNames","refreshFieldNames","handleClose","helperText","defaultAnkiConnectUrl","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","nocontrols","Content","contentShift","App","mediaClipper","location","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clipAndSaveAudio","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","mediaFile","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.a0edb12b.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioBlob, audioFileName, audioFileExtension) {\r\n        const audioBase64 = audioBlob ? await this._blobToBase64(audioBlob) : null;\r\n\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text;\r\n        fields[this.settingsProvider.definitionField] = definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioBase64 && audioFileName) {\r\n            params.note.audio = {\r\n                filename: audioFileName + \"_\" + Date.now() + \".\" + audioFileExtension,\r\n                data: audioBase64,\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        this._executeAction(ankiConnectUrl, 'addNote', params);\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n\r\n    async _blobToBase64(blob) {\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AnkiDialog(props) {\r\n    const {open, disabled, text, onProceed, onCancel} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open])\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText color=\"textPrimary\">\r\n                    {text}\r\n                </DialogContentText>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    multiline\r\n                    fullWidth\r\n                    rows={8}\r\n                    label=\"Definition\"\r\n                    value={definition}\r\n                    onChange={(e) => setDefinition(e.target.value)}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(definition)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    })\r\n                    .sort((n1, n2) => n1.start - n2.start)\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\n\r\nexport default class MediaClipper {\r\n\r\n    async clipAndSaveAudio(file, start, end, trackId) {\r\n        const [blob, extension] = await this.clipAudio(file, start, end, trackId);\r\n        await this._saveToFile(blob,  this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".\" + extension);\r\n    }\r\n\r\n    async clipAudio(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n                const media = new Audio();\r\n                media.src = URL.createObjectURL(file);\r\n                media.preload = \"none\";\r\n\r\n                // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n                if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n                    for (const t of media.audioTracks) {\r\n                        t.enabled = trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                media.currentTime = start / 1000;\r\n                media.load();\r\n\r\n                media.oncanplay = (e) => {\r\n                    media.play();\r\n                    const stream = this._captureStream(media);\r\n\r\n                    for (const t of stream.getVideoTracks()) {\r\n                        t.stop();\r\n                    }\r\n\r\n                    const [mimeType, extension] = this._findMediaType();\r\n                    const recorder = new MediaRecorder(stream, { mimeType: mimeType });\r\n                    const chunks = [];\r\n                    recorder.ondataavailable = (e) => {\r\n                        chunks.push(e.data);\r\n                    };\r\n                    recorder.onstop = (e) => {\r\n                        resolve([new Blob(chunks), extension]);\r\n                    };\r\n                    recorder.start();\r\n                    setTimeout(() => {\r\n                        media.pause();\r\n                        recorder.stop();\r\n                        const src = media.src;\r\n                        media.src = null;\r\n                        URL.revokeObjectURL(src);\r\n                    }, end - start + 100);\r\n                };\r\n        });\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    _findMediaType() {\r\n        return Object.keys(AUDIO_TYPES)\r\n                .filter(MediaRecorder.isTypeSupported)\r\n                .map(t => [t, AUDIO_TYPES[t]])[0];\r\n    }\r\n\r\n    _captureStream(media) {\r\n        if (typeof media.captureStream === \"function\") {\r\n            return media.captureStream();\r\n        }\r\n\r\n        if (typeof media.mozCaptureStream === \"function\") {\r\n            return media.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from media\");\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    onClick={props.onOpenSettings}\r\n                >\r\n                    <SettingsIcon/>\r\n                </IconButton>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onAnki(item)}>\r\n                            <StarIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport { detectCopy } from './KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundImage: \"url(\" + background + \")\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles && compressed && loading) {\r\n        subtitleTable = null;\r\n    } else if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                    {!compressed && (\r\n                        <Fade in={!loading} timeout={500}>\r\n                            <Typography>\r\n                                Drag and drop srt, ass, mp3, or mkv files. <br />\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.1\">extension</Link> to sync subtitles with videos in other tabs.\r\n                            </Typography>\r\n                        </Fade>\r\n                    )}\r\n                    {compressed && !loading && (\r\n                        <Typography>\r\n                            No subtitles loaded. Drag and drop to load.\r\n                        </Typography>\r\n                    )}\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffset(0);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            setLoadingSubtitles(true);\r\n\r\n            subtitlesPromise = subtitleReader.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e))\r\n                .finally(() => setLoadingSubtitles(false))\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => {\r\n                            play(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onPause((echo) => {\r\n                            pause(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onCurrentTime((currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            seek(progress, clock, echo, (v) => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        channel.onAudioTrackSelected((id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            mediaAdapter.onReady()\r\n                                .then(() => {\r\n                                    if (playingRef.current) {\r\n                                        clock.start();\r\n                                    }\r\n                                });\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        channel.onExit(() => {\r\n                            onUnloadVideo(videoFileUrl);\r\n                        });\r\n\r\n                        channel.onOffset((offset) => {\r\n                            setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n                        });\r\n\r\n                        channel.onPopOutToggle(() => {\r\n                            setVideoPopOut(popOut => !popOut);\r\n                        });\r\n\r\n                        channel.onCopy((subtitle) => {\r\n                            onCopy(\r\n                                subtitle,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitleFile,\r\n                                channel.selectedAudioTrack\r\n                            );\r\n                        })\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType) {\r\n            return;\r\n        }\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n        >\r\n            <DialogTitle>\r\n                Settings\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Anki Connect URL\"\r\n                            color=\"secondary\"\r\n                            value={ankiConnectUrl}\r\n                            error={Boolean(ankiConnectUrlError)}\r\n                            helperText={ankiConnectUrlError}\r\n                            onChange={handleAnkiConnectUrlChange}\r\n                        />\r\n                    </div>\r\n                    <SelectableSetting\r\n                        label=\"Deck\"\r\n                        value={deck}\r\n                        selections={deckNames}\r\n                        onChange={handleDeckChange}\r\n                        onSelectionChange={handleDeckSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Note Type\"\r\n                        value={noteType}\r\n                        selections={modelNames}\r\n                        onChange={handleNoteTypeChange}\r\n                        onSelectionChange={handleNoteTypeSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Sentence Field\"\r\n                        value={sentenceField}\r\n                        selections={fieldNames}\r\n                        onChange={handleSentenceFieldChange}\r\n                        onSelectionChange={handleSentenceFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Definition Field\"\r\n                        value={definitionField}\r\n                        selections={fieldNames}\r\n                        onChange={handleDefinitionFieldChange}\r\n                        onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Audio Field\"\r\n                        value={audioField}\r\n                        selections={fieldNames}\r\n                        onChange={handleAudioFieldChange}\r\n                        onSelectionChange={handleAudioFieldSelectionChange}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey)\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from './Util'\r\nimport { detectCopy } from './KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => {\r\n        setAlertOpen(false);\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js'\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport MediaClipper from '../services/MediaClipper.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const mediaClipper = useMemo(() => new MediaClipper(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(location.pathname !== '/video');\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen);\n    }, []);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, []);\n\n    const handleOpenSettings = useCallback(() => {\n        setSettingsDialogOpen(true);\n    }, []);\n\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleAlertClosed = useCallback(() => {\n        setAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        const offset = offsetRef.current || 0;\n        try {\n            await mediaClipper.clipAndSaveAudio(\n                item.audioFile || item.videoFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [mediaClipper, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback(async (item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogItem(null);\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (definition) => {\n        setAnkiDialogDisabled(true);\n        const item = ankiDialogItem;\n        const offset = offsetRef.current || 0;\n\n        try {\n            const mediaFile = item.audioFile || item.videoFile;\n            const [blob, extension] = await mediaClipper.clipAudio(\n                mediaFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            );\n            await anki.export(settingsProvider.ankiConnectUrl, item.text, definition, blob, mediaFile.name, extension);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogItem(null);\n            setAnkiDialogOpen(false);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, mediaClipper, handleError, ankiDialogItem]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}