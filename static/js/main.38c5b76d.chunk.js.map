{"version":3,"sources":["Util.js","Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","combined","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","background","inactiveButton","disabled","progress","margin","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","filter","VolumeSlider","withStyles","verticalAlign","thumb","backgroundColor","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","Fade","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChange","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","table","marginBottom","selectedSubtitle","paddingRight","subtitle","compressedSelectedSubtitle","compressedSubtitle","textAlign","paddingLeft","copyButton","noSubtitles","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","tableRef","drawerOpenRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","Object","keys","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","TableContainer","Table","TableBody","index","compressed","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","paused","echo","console","error","useStyles","maxHeight","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","resizeVideoFrame","windowWidth","ratio","Player","api","offsetRef","propsVideoFrameRef","videoFrameRef","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","init","subscribed","ready","onCurrentTime","onExit","onOffset","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","t1","t2","loaded","onMouseMove","screenX","screenY","flexWrap","border","Boolean","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleClose","nocontrols","Content","contentShift","App","location","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alert","setAlert","alertOpen","setAlertOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","params","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.38c5b76d.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\nexport function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75 // so the last row doesn't collide with controls\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    compressedSelectedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll && !drawerOpenRef.current) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n            const selected = Object.keys(selectedSubtitleIndexes);\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className;\r\n                            if (props.compressed) {\r\n                                className = selected ? classes.compressedSelectedSubtitle : classes.compressedSubtitle;\r\n                            } else {\r\n                                className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n                            }\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\nimport { useWindowSize } from './Util';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nfunction resizeVideoFrame(element, drawerOpen, windowWidth) {\r\n    if (element) {\r\n        const ratio = drawerOpen ? .5 : .7;\r\n        element.width = ratio * windowWidth;\r\n    }\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {api, extension, offsetRef, videoFrameRef: propsVideoFrameRef, drawerOpen, onError, onUnloadVideo} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const videoFrameRef = useRef();\r\n    resizeVideoFrame(videoFrameRef.current, drawerOpen, windowWidth);\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffset(0);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n        propsVideoFrameRef.current = null;\r\n        videoFrameRef.current = null;\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => {\r\n                            play(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onPause((echo) => {\r\n                            pause(clock, mediaAdapter, echo);\r\n                        });\r\n\r\n                        channel.onCurrentTime((currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            seek(progress, clock, echo, (v) => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n                        });\r\n\r\n                        channel.onAudioTrackSelected((id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            mediaAdapter.onReady()\r\n                                .then(() => {\r\n                                    if (playingRef.current) {\r\n                                        clock.start();\r\n                                    }\r\n                                });\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        channel.onExit(() => {\r\n                            onUnloadVideo(videoFileUrl);\r\n                        });\r\n\r\n                        channel.onOffset((offset) => {\r\n                            setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n                        });\r\n\r\n                        channel.onPopOutToggle(() => {\r\n                            setVideoPopOut(popOut => !popOut);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate, propsVideoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            propsVideoFrameRef.current = null;\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, propsVideoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        props.onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                style={{flexWrap: 'nowrap'}}\r\n            >\r\n                <Grid item>\r\n                    {loaded && videoFileUrl && channelId && !videoPopOut && (\r\n                        <iframe\r\n                            ref={(ref) => {\r\n                                resizeVideoFrame(ref, drawerOpen, windowWidth);\r\n                                videoFrameRef.current = ref;\r\n                                propsVideoFrameRef.current = ref;\r\n                            }}\r\n                            style={{border: 0}}\r\n                            height=\"100%\"\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                <Grid style={{flexGrow: 1}} item>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { arrayEquals, useWindowSize } from './Util';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from './Util';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(location.pathname !== '/video');\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 300 : 400;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleAlertClosed = useCallback(() => {\n        setAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        const offset = offsetRef.current || 0;\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(\n                item.audioFile,\n                item.originalStart + offset,\n                item.originalEnd + offset\n            )\n            .catch(e => {\n                handleError(e.message);\n            });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(\n                item.videoFile,\n                item.originalStart + offset,\n                item.originalEnd + offset,\n                item.audioTrack\n            )\n            .catch(e => {\n                handleError(e.message);\n            });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    offsetRef={offsetRef}\n                                    videoFrameRef={videoFrameRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            api={api}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}