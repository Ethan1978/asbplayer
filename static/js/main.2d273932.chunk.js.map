{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","Date","now","trimmedWord","trim","a","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","id","currentTime","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","tabId","tab","callback","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","defaultBackground","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","handleMouseOver","handleMouseOut","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onMouseOver","onMouseOut","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","copy","subtitleIndex","scrollIfVisible","visibilityState","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","paused","echo","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","preferMp3","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","fileInputRef","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","toMp3","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"8WAGO,SAASA,EAAcC,GAAU,IAAD,EACXC,mBAAS,CAAC,EAAG,IADF,mBAC5BC,EAD4B,KACtBC,EADsB,KAgBnC,OAbAC,2BAAgB,WACZ,SAASC,IACDL,GACAG,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAO3C,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,CAACL,IAEGE,E,6BCdLS,EAAiBC,YAAW,CAC9BC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QACVC,IAAK,GACLC,MAAO,OACPC,cAAe,OACfC,OAAQ,OAID,SAASC,EAAMC,GAC1B,IAAMC,EAAUZ,IAWhB,OATAa,qBAAU,WACN,GAAIF,EAAMG,KAAM,CACZ,IAAMC,EAAUC,WAAWL,EAAMM,QAASN,EAAMO,kBAChD,OAAO,kBAAMC,aAAaJ,IAG9B,OAAO,OACR,CAACJ,EAAMG,KAAMH,EAAMO,iBAAkBP,EAAMM,UAG1C,qBAAKG,UAAWR,EAAQV,KAAxB,SACI,cAACmB,EAAA,EAAD,CAAMC,GAAIX,EAAMG,KAAhB,SACG,cAAC,IAAD,CAAUS,SAAUZ,EAAMY,SAA1B,SACKZ,EAAMa,e,oBCjCpBC,EAAoB,CAAC,IAAK,IAAK,IAAK,KAAM,KAE3BC,E,WAEjB,WAAYC,GAAmB,oBAC3BC,KAAKD,iBAAmBA,E,+FAGZE,G,uFACWD,KAAKE,eAAe,YAAa,KAAMD,G,cAAxDE,E,yBACCA,EAASC,Q,iLAGHH,G,uFACUD,KAAKE,eAAe,aAAc,KAAMD,G,cAAzDE,E,yBACCA,EAASC,Q,sLAGEC,EAAWJ,G,uFACND,KAAKE,eAAe,kBAAmB,CAACG,UAAWA,GAAYJ,G,cAAhFE,E,yBACCA,EAASC,Q,0LAGIE,EAAML,G,uFACHD,KAAKE,eACxB,YACA,CAACK,MAAOP,KAAKD,iBAAiBS,UAAY,IAAMR,KAAKS,aAAaH,IAClEL,G,cAHEE,E,yBAKCA,EAASC,Q,6LAGOE,EAAML,G,uFACND,KAAKE,eACxB,YACA,CAACK,MAAOP,KAAKD,iBAAiBS,UAAY,IAAMR,KAAKS,aAAaH,IAClEL,G,cAHEE,E,yBAKCA,EAASC,Q,4IAGPG,GAGT,IAFA,IAAIG,EAAU,GAELC,EAAI,EAAGA,EAAIJ,EAAMK,SAAUD,EAAG,CACnC,IAAME,EAAON,EAAMI,GACfd,EAAkBiB,SAASD,GAC3BH,GAAO,YAASG,GAEhBH,GAAWG,EAInB,MAAM,IAAN,OAAWH,EAAX,O,sEAGSK,EAAMC,EAAYC,EAAWC,EAAOZ,EAAMa,EAAQC,EAAmBC,EAAKpB,G,qFAQnF,GAPMqB,EAAS,GAEftB,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiByB,cAAeT,GAAM,GACrEf,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiB0B,gBAAiBT,GAAY,GAC7EhB,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiBS,UAAWF,GAAM,GACjEN,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiB2B,YAAaP,GAAQ,GAEjEC,EACA,UAA8BO,OAAOC,KAAKR,GAA1C,eAAWS,EAAmD,KAC1D7B,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiB+B,iBAAiBD,GAAkBT,EAAkBS,IAAkB,G,GAIzHE,EAAS,CACXC,KAAM,CACFC,SAAUjC,KAAKD,iBAAiBmC,KAChC7B,UAAWL,KAAKD,iBAAiBoC,SACjCC,QAAS,CACLC,gBAAgB,EAChBC,eAAgB,OAChBC,sBAAuB,CACnBN,SAAUjC,KAAKD,iBAAiBmC,KAChCM,eAAe,OAM3BxC,KAAKD,iBAAiB0C,aAAcxB,E,qBAChCI,E,6BACwBrB,K,KAAqBiB,EAAUyB,K,UAAYzB,EAAU0B,S,gCAAU1C,E,eAA1D2C,gB,kCAAvBC,E,OAAkGzC,OACxGJ,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiB0C,WAAhD,iBAAsEI,EAAtE,MAAmF,G,oCAGrE5B,EAAUyB,K,UACRzB,EAAU0B,S,yBACd,CACJ3C,KAAKD,iBAAiB0C,YAJ9BV,EAAOC,KAAKc,M,CACRC,S,KACAC,K,KACA1B,O,kBAORtB,KAAKD,iBAAiBkD,aAAc/B,E,qBAChCG,E,6BACwBrB,K,KAAqBkB,EAAMwB,K,UAAYxB,EAAMyB,S,iCAAU1C,E,eAAlD2C,gB,mCAAvBC,E,OAA0FzC,OAChGJ,KAAKuB,aAAaD,EAAQtB,KAAKD,iBAAiBkD,WAAhD,yBAA8EJ,EAA9E,aAAkG,G,qCAGpF3B,EAAMwB,K,UACJxB,EAAMyB,S,2BACV,CACJ3C,KAAKD,iBAAiBkD,YAJ9BlB,EAAOC,KAAKkB,Q,CACRH,S,MACAC,K,MACA1B,O,sBAOZS,EAAOC,KAAKV,OAASA,E,UACEtB,KAAKE,eAAemB,EAAM,cAAgB,UAAWU,EAAQ9B,G,eAA9EE,E,yBACCA,EAASC,Q,2JAGPkB,EAAQ6B,EAAWC,EAAOC,GACnC,GAAKF,GAAcC,EAAnB,CAIA,IAAIE,EAAYD,EAAYD,EAAMG,MAAM,MAAMC,KAAK,QAAUJ,EACvDK,EAAgBnC,EAAO6B,GAEzBM,IACAH,EAAWG,EAAgB,OAASH,GAGxChC,EAAO6B,GAAaG,K,+EAGFZ,EAAMC,EAAQ1C,G,0FACzBD,KAAKE,eAAe,iBAAkB,CAAC6C,SAAUL,EAAMM,KAAML,GAAS1C,I,yLAG5DyD,EAAQ3B,EAAQ9B,G,kFAC3B0D,EAAO,CACTD,OAAQA,EACRE,QAAS,GAGT7B,IACA4B,EAAK5B,OAASA,G,SAGK8B,MAAM5D,GAAkBD,KAAKD,iBAAiBE,eAAgB,CACjF6D,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,K,cAFnBxD,E,gBAKaA,EAAS8D,O,YAAtBA,E,QAEGC,M,uBACC,IAAIC,MAAMF,EAAKC,O,iCAGlBD,G,wPCjJTG,EAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrC/F,KAAM,CACF,uBAAwB,CACpBgG,aAAcD,EAAME,QAAQ,KAGpCC,MAAO,CACHC,SAAU,GAEdC,WAAY,CACRC,OAAQ,UACR,UAAW,CACPA,OAAQ,gBAKL,SAASC,EAAW7F,GAC/B,IAAMC,EAAUoF,IACTlF,EAAuJH,EAAvJG,KAAM2F,EAAiJ9F,EAAjJ8F,SAAgBC,EAAiI/F,EAAvIgC,KAAmBgE,EAAoHhG,EAApHgG,UAAWC,EAAyGjG,EAAzGiG,SAAUC,EAA+FlG,EAA/FkG,YAAaC,EAAkFnG,EAAlFmG,eAAgBjE,EAAkElC,EAAlEkC,UAAWC,EAAuDnC,EAAvDmC,MAAOC,EAAgDpC,EAAhDoC,OAAQgE,EAAwCpG,EAAxCoG,aAAcpF,EAA0BhB,EAA1BgB,iBAAkBqF,EAAQrG,EAARqG,KAFhH,EAGF1H,mBAAS,IAHP,mBAG/BsD,EAH+B,KAGnBqE,EAHmB,OAId3H,qBAJc,mBAI/BqD,EAJ+B,KAIzBuE,EAJyB,OAKd5H,qBALc,mBAK/B4C,EAL+B,KAKzBiF,EALyB,OAMU7H,qBANV,mBAM/B8H,EAN+B,KAMbC,EANa,OAOM/H,mBAAS,IAPf,mBAO/BgI,EAP+B,KAOfC,EAPe,OAQIjI,mBAAS,GARb,oBAQ/BkI,GAR+B,MAQhBC,GARgB,SASYnI,mBAAS,IATrB,qBAS/B0D,GAT+B,MASZ0E,GATY,MAWtC7G,qBAAU,WACNqG,EAAQR,KACT,CAACA,IAEJ7F,qBAAU,WACFC,IACCmG,EAAc,IACdE,EAAQ,IACRI,EAAkB,IAClBG,GAAqB,OAE3B,CAAC5G,IAEJD,qBAAU,WACN4G,GAAiBE,KAAKC,SACvB,CAAC1F,IAEJrB,qBAAU,WACN,GAAKqB,GAASP,EAAiBS,UAA/B,CAIA,IAAMyF,EAAc3F,EAAK4F,OAEzB,GAAoB,KAAhBD,GAAsBA,IAAgBT,EAA1C,CAIA,IAAMrG,EAAUC,WAAU,sBAAC,sBAAA+G,EAAA,2EAEnBR,EAFmB,SAEKP,EAAKgB,kBAAkBH,GAF5B,kCAGnBR,EAAoBQ,GAHD,gDAKnBI,QAAQnC,MAAR,MALmB,yDAOxB,KAEH,OAAO,kBAAM3E,aAAaJ,QAC3B,CAACmB,EAAMsF,GAAeJ,EAAkBJ,EAAMrF,EAAiBS,YAElE,IAmBI8F,GAnBEC,GAAkBC,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBACF1F,EAAU2F,SACX,CAAC3F,IAEE4F,GAAkBL,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBACF1B,EAAY/D,KACb,CAACA,EAAO+D,IAEL6B,GAA0BN,uBAAY,SAAC3E,EAAiBuB,GAC1D,IAAM2D,EAAuB,GAC7BpF,OAAOqF,OAAOD,EAAsB3F,IACpC2F,EAAqBlF,GAAmBuB,EACxC0C,GAAqBiB,KACtB,CAAC3F,KAYJ,OAPIkF,GADAhG,GAAQA,EAAK4F,SAAWV,GAAoBzF,EAAiBS,UAC5CkF,EAAe9E,OAAS,EAAxB,gBACF8E,EAAe9E,OADb,6BACwCN,EADxC,uBAC2DP,EAAiBS,UAD5E,yCAEkBF,EAAK4F,OAFvB,uBAE4CnG,EAAiBS,UAF7D,KAIA,GAIjB,eAACyG,EAAA,EAAD,CACI/H,KAAMA,EACNgI,qBAAmB,EACnBC,WAAS,EACTC,SAAS,KACTC,gBAAiB,kBAAMrC,KAL3B,UAOI,eAACsC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CACIC,QAAQ,KACRhI,UAAWR,EAAQwF,MAFvB,yBAMA,cAACiD,EAAA,EAAD,CACIC,KAAK,MACLC,QAAS,kBAAMzC,KAFnB,SAII,cAAC,IAAD,SAGJ,cAAC0C,EAAA,EAAD,UACI,uBAAMpI,UAAWR,EAAQV,KAAzB,UACI,cAACuJ,EAAA,EAAD,CACIL,QAAQ,SACRnE,WAAS,EACT8D,WAAS,EACTW,QAAS,EACTC,MAAM,WACN3E,MAAOrC,EACPiH,SAAU,SAACvB,GAAD,OAAOnB,EAAQmB,EAAEwB,OAAO7E,UAEtC,cAACyE,EAAA,EAAD,CACIL,QAAQ,SACRnE,WAAS,EACT8D,WAAS,EACTe,KAAM,EACNH,MAAM,aACN3E,MAAOpC,EACPgH,SAAU,SAACvB,GAAD,OAAOpB,EAAcoB,EAAEwB,OAAO7E,UAE5C,cAACyE,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACTY,MAAM,OACN3E,MAAO9C,EACP0H,SAAU,SAACvB,GAAD,OAAOlB,EAAQkB,EAAEwB,OAAO7E,QAClC+E,WAAY7B,GACZ8B,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgB7J,SAAS,MAAzB,SACA,cAAC8J,EAAA,EAAD,CAAS/D,MAAM,iBAAf,SACI,+BACA,cAACiD,EAAA,EAAD,CACI5C,SAAUA,IAAa9E,EAAiBS,YAAcF,GAAwB,KAAhBA,EAAK4F,OACnEyB,QAAS,kBAAMvC,EAAKoD,qBAAqBlI,EAAK4F,SAC9CwB,KAAK,MAHT,SAKI,cAAC,IAAD,eAQnB/F,OAAOC,KAAKuD,GAAcsD,KAAI,SAAC5G,GAAD,OAC3B,cAACgG,EAAA,EAAD,CAEIL,QAAQ,SACRL,WAAS,EACTY,MAAOlG,EACPuB,MAAOhC,GAAkBS,IAAoB,GAC7CmG,SAAU,SAACvB,GAAD,OAAOK,GAAwBjF,EAAiB4E,EAAEwB,OAAO7E,SAL9DvB,MAQZZ,GACG,qBACIzB,UAAWR,EAAQ0F,WACnBiD,QAASpB,GAFb,SAII,cAACsB,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACT/D,MAAOnC,EAAUyB,KACjBqF,MAAM,YAIjB7G,GACG,qBACI1B,UAAWR,EAAQ0F,WACnBiD,QAASd,GAFb,SAII,cAACgB,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACT/D,MAAOlC,EAAMwB,KACbqF,MAAM,YAIlB,cAACF,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACTY,MAAM,SACN3E,MAAOjC,SAInB,eAACuH,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACI9D,SAAUA,EACV8C,QAAS,kBAAM3C,KAFnB,oBAKA,cAAC2D,EAAA,EAAD,CACI9D,SAAUA,EACV8C,QAAS,kBAAM5C,EAAUhE,EAAMC,EAAYC,EAAWC,EAAOZ,EAAMa,EAAQC,IAAmB,IAFlG,0BAMA,cAACuH,EAAA,EAAD,CACI9D,SAAUA,EACV8C,QAAS,kBAAM5C,EAAUhE,EAAMC,EAAYC,EAAWC,EAAOZ,EAAMa,EAAQC,IAAmB,IAFlG,0BC3OD,SAASwH,IACtB,OAAO,IAAIC,OAAO,IAA0B,mDCE9C,IAAMC,EAAe,IAAIC,aAEJC,E,6IAEGC,G,0FACT,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAjD,EAAA,uDACXkD,EAAS,IAAIC,YACVC,OAAP,uCAAgB,WAAO9C,GAAP,qBAAAN,EAAA,+EAEkB2C,EAAaU,gBAAgB/C,EAAEwB,OAAO7H,QAFxD,OAKR,IAHMqJ,EAFE,OAGFC,EAAW,GAER/I,EAAI,EAAGA,EAAI8I,EAAYE,mBAAoBhJ,EAChD+I,EAASE,KAAKH,EAAYI,eAAelJ,KAGvCmJ,EAAS,IAAIjB,GACZkB,YAAY,CACfC,QAAS,SACTP,YAAa,CACTC,SAAUA,EACVC,iBAAkBF,EAAYE,iBAC9B/I,OAAQ6I,EAAY7I,OACpBqJ,WAAYR,EAAYQ,cAGhCH,EAAOI,UAAY,SAACzD,GAChB0C,EAAQ,IAAIgB,KAAK1D,EAAEzD,KAAKoH,OAAQ,CAACC,KAAM,eACvCP,EAAOQ,aAEXR,EAAOS,QAAU,WACbnB,EAAO,uBACPU,EAAOQ,aAzBH,kDA4BRlB,EAAO,EAAD,IA5BE,0DAAhB,sDA+BAC,EAAOmB,kBAAkBvB,GAjCV,2CAAZ,0D,yGCPTwB,EAAc,CAAC,wBAAyB,MAAO,yBAA0B,Q,cACjC9I,OAAOC,KAAK6I,GAAaC,OAAOC,cAAcC,iBAAiBnC,KAAI,SAAAoC,GAAC,MAAI,CAACA,EAAGJ,EAAYI,OAAK,G,GAApIC,E,KAAkBC,E,KAEnBC,G,WAEF,WAAYtI,EAAMuI,EAAOC,EAAKvI,EAAQwI,GAAY,oBAC9CnL,KAAK0C,KAAOA,EACZ1C,KAAKiL,MAAQA,EACbjL,KAAKkL,IAAMA,EACXlL,KAAKoL,QAAUzI,EACf3C,KAAKmL,UAAYA,E,wLAIVnL,KAAKoL,S,6PAICpL,KAAKqL,Q,oTAICrL,KAAKqL,Q,cAAlBpC,E,QACAnG,EAAQ,IAAIwI,OACZC,IAAMC,IAAIC,gBAAgBxC,GAChCnG,EAAM4I,QAAU,OAChB5I,EAAM6I,O,SAEA7I,EAAM8D,O,gCAEL,IAAIsC,SAAQ,SAACC,EAASC,GACzBhK,YAAW,WACP0D,EAAM8I,QACN,IAAML,EAAMzI,EAAMyI,IAClBzI,EAAMyI,IAAM,KACZC,IAAIK,gBAAgBN,GACpBpC,MACD,EAAK+B,IAAM,EAAKD,MAAQ,S,kPAK1BjL,KAAK8L,W,gCACyBjI,MAAM,cAAgB7D,KAAKmL,UAAY,WAAanL,KAAKoL,S,8BAAUnC,O,OAAlGjJ,KAAK8L,W,uCAGF9L,KAAK8L,Y,6GAIdC,G,WAEF,WAAYC,EAAMf,EAAOC,EAAKe,GAAU,oBACpCjM,KAAKgM,KAAOA,EACZhM,KAAK0C,KAAOsJ,EAAKtJ,KAAO,IAAMuI,EAAQ,IAAMC,EAC5ClL,KAAKiL,MAAQA,EACbjL,KAAKkL,IAAMA,EACXlL,KAAKiM,QAAUA,EACfjM,KAAKmL,UAAYJ,E,mMAIV,IAAI7B,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAjD,EAAA,6DACXkD,EAAS,IAAIC,WADF,KAEfD,EAFe,SAEY,EAAKJ,OAFjB,wBAERiD,cAFQ,gBAGf7C,EAAO8C,UAAY,WACf,IAAM/L,EAASiJ,EAAOjJ,OAChBuC,EAASvC,EAAOgM,OAAOhM,EAAOiM,QAAQ,KAAO,GACnDlD,EAAQxG,IANG,2CAAZ,0D,iPAYF3C,KAAKqL,M,gCACarL,KAAKsM,a,cAAxBtM,KAAKqL,M,wCAIHvI,EAAQ9C,KAAKuM,cAAcvM,KAAKqL,O,SAChCvI,EAAM8D,O,wBACN5G,KAAKwM,WAAW1J,G,iPAIjB9C,KAAKqL,M,gCACarL,KAAKsM,a,OAAxBtM,KAAKqL,M,uCAGFrL,KAAKqL,O,uRAIL,IAAInC,SAAQ,SAACC,EAASC,GACzB,IAAMtG,EAAQ,EAAKyJ,cAAc,EAAKP,MAEtClJ,EAAM2J,UAAN,+BAAAtG,EAAA,MAAkB,WAAOM,GAAP,uBAAAN,EAAA,sDACdrD,EAAM8D,OACA8F,EAAS,EAAKC,eAAe7J,GAFrB,cAIE4J,EAAOE,kBAJT,IAId,2BAAyC,QACnCC,OALQ,qCAQRC,EAAW,IAAInC,cAAc+B,EAAQ,CAAEK,SAAUjC,IACjDkC,EAAS,GAEfF,EAASG,gBAAkB,SAACxG,GACxBuG,EAAOpD,KAAKnD,EAAEzD,OAGlB8J,EAASI,OAAS,SAACzG,GACf0C,EAAQ,IAAIgB,KAAK6C,KAGrBF,EAAS7B,QAnBK,UAoBR,EAAKuB,WAAW1J,GApBR,QAqBdgK,EAASD,OArBK,4CAAlB,0D,qIA0BM1L,GACV,IAAM2B,EAAQ,IAAIwI,MAKlB,GAJAxI,EAAMyI,IAAMC,IAAIC,gBAAgBtK,GAChC2B,EAAM4I,QAAU,OAGZ1L,KAAKiM,SAAWnJ,EAAMqK,aAAerK,EAAMqK,YAAYvM,OAAS,EAAG,CAAC,IAAD,gBACnDkC,EAAMqK,aAD6C,IACnE,2BAAmC,CAAC,IAAzBtC,EAAwB,QAC/BA,EAAEpN,QAAUuC,KAAKiM,UAAYpB,EAAEuC,IAFgC,+BASvE,OAHAtK,EAAMuK,YAAcrN,KAAKiL,MAAQ,IACjCnI,EAAM6I,OAEC7I,I,qCAGIA,GACX,GAAmC,oBAAxBA,EAAMwK,cACb,OAAOxK,EAAMwK,gBAGjB,GAAsC,oBAA3BxK,EAAMyK,iBACb,OAAOzK,EAAMyK,mBAGjB,MAAM,IAAIpJ,MAAM,yC,0EAGHrB,G,qGACN,IAAIoG,SAAQ,SAACC,EAASC,GACzBhK,YAAW,WACP0D,EAAM8I,QACN,IAAML,EAAMzI,EAAMyI,IAClBzI,EAAMyI,IAAM,KACZC,IAAIK,gBAAgBN,GACpBpC,MACD,EAAK+B,IAAM,EAAKD,MAAQ,S,yGAKjCuC,G,WAEF,WAAYxK,GAAO,oBACfhD,KAAKgD,KAAOA,E,mMAYL,IAAIkG,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAjD,EAAA,6DACXkD,EAAS,IAAIC,WADF,KAEfD,EAFe,SAEY,EAAKJ,OAFjB,wBAERiD,cAFQ,gBAGf7C,EAAO8C,UAAY,WACf,IAAM/L,EAASiJ,EAAOjJ,OAChBuC,EAASvC,EAAOgM,OAAOhM,EAAOiM,QAAQ,KAAO,GACnDlD,EAAQxG,IANG,2CAAZ,0D,wPAYD3C,KAAKgD,KAAK4D,O,gPAIX5G,KAAKqL,M,4BACarC,E,SAAwBhJ,KAAKgD,KAAKiG,O,wCAAvBwE,O,uBAA9BzN,KAAKqL,M,uCAGFrL,KAAKqL,O,iIA5BZ,OAAOrL,KAAKgD,KAAKN,O,gCAIjB,MAAO,U,KA4BMgL,G,WAEjB,WAAY1K,GAAO,oBACfhD,KAAKgD,KAAOA,E,6KAiBNhD,KAAKgD,KAAK4D,O,+PAIH5G,KAAKgD,KAAKL,S,mTAIJ3C,KAAKgD,KAAKiG,O,OAAvBA,E,OACA0E,EAAM5P,OAAOyN,IAAIC,gBAAgBxC,GACjC9C,EAAIyH,SAASC,cAAc,KACjCD,SAASjK,KAAKmK,YAAY3H,GAC1BA,EAAE4H,MAAQ,gBACV5H,EAAE6H,KAAOL,EACTxH,EAAE8H,SAAWjO,KAAK0C,KAClByD,EAAE+H,QACF1C,IAAIK,gBAAgB8B,GACpBxH,EAAEgI,S,qIAIF,OAAO,IAAIT,EAAU,IAAIF,GAAaxN,KAAKgD,S,2BAzB3C,OAAOhD,KAAKgD,KAAKN,KAAO,IAAM1C,KAAKgD,KAAKmI,a,kCAV1BiD,EAAcnD,EAAOC,EAAKvI,EAAQwI,GAChD,IAAMkD,EAAYD,EAAa1L,KAAK4L,UAAU,EAAGF,EAAa1L,KAAK6L,YAAY,MAAQ,IAAMtD,EAAQ,IAAMC,EAC3G,OAAO,IAAIwC,EAAU,IAAI1C,GAAgBqD,EAAWpD,EAAOC,EAAKvI,EAAQwI,M,+BAG5Da,EAAMf,EAAOC,EAAKe,GAC9B,OAAO,IAAIyB,EAAU,IAAI3B,GAAcC,EAAMf,EAAOC,EAAKe,Q,eCzNlD,OAA0B,+CCInC7H,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrC/F,KAAM,kBAAiB,CACnBG,SAAU,WACV+P,OAAQ,oBACR7P,MAAO,OACPE,OAAQ,IACRD,cALE,EAAE6P,SAKsB,OAAS,SAEvCC,sBAAuB,CACnB,YAAa,CACTC,QAAS,MACTlQ,SAAU,WACV+P,OAAQ,qBACR7P,MAAO,OACPJ,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChBqQ,WAAY,SACZC,UAAW,SACXC,eAAgB,cAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAAD,OAASC,GAAT,KACfC,oBAAqB,UACrBC,WAAY,oBACZ3E,OAAQ,gDAEZ/L,MAAO,OACP6P,OAAQ,YAID,SAASc,GAAT,GAA2C,IAArBb,EAAoB,EAApBA,SAAUc,EAAU,EAAVA,QACrCvQ,EAAUoF,GAAU,CAACqK,SAAUA,IAErC,OACI,qBAAKjP,UAAWR,EAAQV,KAAxB,SACI,cAACkR,GAAA,EAAD,CAAM9P,GAAI+O,GAAYc,EAAtB,SACI,qBAAK/P,UAAWR,EAAQ0P,4B,4HC1BlCtK,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrCoL,WAAY,CACRrI,SAAU,MACVoH,OAAQ,GACRjQ,QAAS,cACTqQ,cAAe,SACfc,SAAU,OACVb,WAAY,QACZC,UAAW,YAGJ,SAASa,GAAW5Q,GAC/B,IAAMC,EAAUoF,KACTlF,EAA+BH,EAA/BG,KAAM0Q,EAAyB7Q,EAAzB6Q,aAAcvQ,EAAWN,EAAXM,QAE3B,OACI,eAAC4H,EAAA,EAAD,CACI/H,KAAMA,EACNmI,gBAAiB,kBAAMhI,KAF3B,UAII,eAACuI,EAAA,EAAD,WACI,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,4FAGA,yHAKJ,uBACA,cAACtI,EAAA,EAAD,CAAYC,QAAQ,KAApB,yDAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,qDACuB,cAACC,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAM4B,EAA/D,uBADvB,OAGA,uDAGA,6BACI,sBAAKpQ,UAAWR,EAAQyQ,WAAxB,yBACkB,cAAC,KAAD,CAAcQ,SAAS,UADzC,wCAIJ,2GAIJ,uBACA,cAAC1I,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,6BACI,sBAAKrQ,UAAWR,EAAQyQ,WAAxB,yBACkB,cAAC,KAAD,CAAUQ,SAAS,UADrC,wCAIJ,wIAGA,uGAIJ,uBACA,cAAC1I,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,2FAGA,oEAIJ,uBACA,cAACtI,EAAA,EAAD,CAAYC,QAAQ,KAApB,qDAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,gFAGA,6BACI,sBAAKrQ,UAAWR,EAAQyQ,WAAxB,yBACkB,cAAC,KAAD,CAAWQ,SAAS,UADtC,2CAKR,uBACA,cAAC1I,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAGA,cAAC0I,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAOxS,KAAK,QAAZ,SACI,eAACyS,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,2BACX,cAAC+I,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,0CAEf,eAAC8I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,sBACX,cAAC+I,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,8BAEf,eAAC8I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,6BACX,cAAC+I,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,yCAEf,eAAC8I,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,6BACX,cAAC+I,GAAA,EAAD,UAAW,cAAC/I,EAAA,EAAD,iFAK3B,uBACA,cAACA,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAGA,eAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,UACI,6BACI,cAACC,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAK,8CAA9D,2CAEJ,6BACI,cAAC8B,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAK,8CAA9D,kDAGR,uBACA,cAACzG,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAGA,cAACD,EAAA,EAAD,CAAYsI,UAAU,KAAtB,SACI,6BACI,cAACC,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAK,4CAA9D,uDAIZ,cAACtF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQhB,QAAS,kBAAMtI,KAAvB,qB,wBCzJV+E,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrCnD,MAAO,kBAAsB,CACzBvC,MADG,EAAEA,MAEL6P,OAFG,EAASA,OAGZO,eAAgB,gBAIT,SAASwB,GAAYxR,GAAQ,IAOpCyR,EANGtR,EAAwBH,EAAxBG,KAAMgC,EAAkBnC,EAAlBmC,MAAO7B,EAAWN,EAAXM,QADmB,EAET3B,qBAFS,mBAEhC+S,EAFgC,KAEvBC,EAFuB,OAGbhT,qBAHa,mBAGhCiB,EAHgC,KAGzBgS,EAHyB,OAIXjT,qBAJW,mBAIhC8Q,EAJgC,KAIxBoC,EAJwB,OAKHpT,GAAc,GALX,mBAKhCqT,EALgC,KAKnBC,EALmB,KAUnCN,EADA7R,EAAQ,GAAK6P,EAAS,EACRuC,KAAKC,IAAI,EAAGD,KAAKC,IAAIH,GAAe,EAAIlS,GAAQmS,GAAgB,EAAItC,KAEpE,EAGlB,IAAMxP,EAAUoF,GAAU,CAACzF,MAAOA,EAAQ6R,EAAahC,OAAQA,EAASgC,IA6BxE,OA3BAvR,qBAAU,WAAM,4CAKZ,8BAAAkH,EAAA,sEAC0BjF,EAAMuP,UADhC,OACUA,EADV,QAEUQ,EAAM,IAAIC,OACZ3H,OAAS,WACToH,EAASM,EAAItS,OACbiS,EAAUK,EAAIzC,QACdkC,EAAWD,IAEfQ,EAAI1F,IAAMkF,EARd,4CALY,sBACPvP,GADO,mCAgBZiQ,KACD,CAACjQ,IAEJjC,qBAAU,WACDC,IACDyR,EAAS,GACTC,EAAU,GACVF,EAAW,SAEhB,CAACxR,IAECgC,GAAUuP,EAKX,cAACxJ,EAAA,EAAD,CACI/H,KAAMA,EACNmI,gBAAiB,kBAAMhI,KACvB+H,SAAS,KAHb,SAKI,cAACgK,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACI7R,UAAWR,EAAQkC,MACnBA,MAAOuP,EACPjM,MAAOtD,EAAMwB,KACbqL,MAAO,CAACpP,MAAOA,EAAQ6R,EAAahC,OAAQA,EAASgC,SAd1D,K,kCCzDMc,G,2IAEDtF,G,6EACRA,EAAKtJ,KAAK6O,SAAS,Q,4BACLC,K,SAAexF,EAAKjL,O,0BAA5B0Q,G,gCACCA,EAAMhJ,KAAI,SAAAiJ,GAAI,OAAIA,EAAK1O,QAAM2O,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG3G,MAAQ4G,EAAG5G,U,WAGnEe,EAAKtJ,KAAK6O,SAAS,Q,yCACZ,IAAIrI,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAjD,EAAA,6DACT2L,EAAS,IAAIC,UAAOC,OAAOjU,OAAQgU,UAAOE,iBAC1CC,EAAO,GACbJ,EAAOK,MAAQ,SAACC,GAAD,OAAOF,EAAKtI,KAAKwI,IAChCN,EAAOO,QAAU,kBAAMlJ,EACnB+I,EACKzJ,KAAI,SAAC2J,GAAD,MAAQ,CACTnH,MAAO8F,KAAKuB,MAAoB,IAAdF,EAAEG,WACpBrH,IAAK6F,KAAKuB,MAAkB,IAAZF,EAAEI,SAClBzR,KAAMqR,EAAErR,SAEX4Q,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG3G,MAAQ4G,EAAG5G,WAXzB,KAaf6G,EAbe,SAaI9F,EAAKjL,OAbT,wBAaR0R,MAbQ,gBAcfX,EAAOY,QAdQ,4CAAZ,0D,WAkBP1G,EAAKtJ,KAAK6O,SAAS,Q,6BACLoB,K,UAAe3G,EAAKjL,O,2BAA5B0Q,G,gCACCA,EAAMmB,OAAOC,SAASpK,KAAI,SAAAqK,GAAK,MAAK,CACvC7H,MAAO8F,KAAKgC,MAAoB,IAAdD,EAAME,OACxB9H,IAAK6F,KAAKgC,MAAkB,IAAZD,EAAMG,KACtBlS,KAAM+R,EAAMI,KAAKC,aAEpBxB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAG3G,MAAQ4G,EAAG5G,U,cAG9B,IAAI9G,MAAM,oC,wMC5BlBC,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrCG,MAAO,CACHC,SAAU,GAEd2O,OAAQ,CACJC,WAAYhP,EAAMiP,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAASC,iBAG7CC,YAAa,CACTjV,MAAO,gBAAEkV,EAAF,EAAEA,YAAF,4BAAkCA,EAAlC,QACPR,WAAYhP,EAAMiP,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQnP,EAAMiP,YAAYE,OAAOM,QACjCJ,SAAUrP,EAAMiP,YAAYI,SAASK,iBAEvCC,YAAa,qBAAEH,cAEnBI,kBAAmB,CACfC,UAAW,YACXvV,MAAO,GACPwV,QAAS,GACTd,WAAYhP,EAAMiP,YAAYC,OAAO,CAAC,YAAa,UAAW,SAAU,CACpEC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAASC,iBAG7CS,uBAAwB,CACpBF,UAAW,YACXvV,MAAO,EACPwV,QAAS,EACTd,WAAYhP,EAAMiP,YAAYC,OAAO,CAAC,YAAa,UAAW,SAAU,CACpEC,OAAQnP,EAAMiP,YAAYE,OAAOM,QACjCJ,SAAUrP,EAAMiP,YAAYI,SAASK,kBAG7CM,KAAM,CACF9V,QAAS,YAIF,SAAS+V,GAAIvV,GACxB,IAAMC,EAAUoF,GAAUrF,GAC1B,OACI,cAACwV,GAAA,EAAD,CACI9V,SAAS,SACTe,UAAWgV,YAAKxV,EAAQoU,OAAT,eACVpU,EAAQ4U,YAAc7U,EAAM0V,aAHrC,SAMI,eAACnN,EAAA,EAAD,WACI,cAACiB,EAAA,EAAD,CAAS/D,MAAM,aAAf,SACI,cAACiD,EAAA,EAAD,CACIC,KAAK,QACLC,QAAS5I,EAAM2V,eAFnB,SAII,cAAC,KAAD,QAGR,cAACnN,EAAA,EAAD,CAAYC,QAAQ,KAAKhI,UAAWR,EAAQwF,MAA5C,SACKzF,EAAMyF,QAEX,cAAC+D,EAAA,EAAD,CAAS/D,MAAM,eAAf,SACI,cAACiD,EAAA,EAAD,CACIC,KAAK,MACLmI,UAAU,IACV7B,KAAK,mDACL/F,OAAO,SACP+H,IAAI,aALR,SAOI,cAAC,KAAD,QAGR,cAACzH,EAAA,EAAD,CAAS/D,MAAM,OAAf,SACI,cAACiD,EAAA,EAAD,CACIC,KAAK,MACLC,QAAS5I,EAAM4V,WAFnB,SAII,cAAC,KAAD,QAGR,cAACpM,EAAA,EAAD,CAAS/D,MAAM,WAAf,SACI,cAACiD,EAAA,EAAD,CACIC,KAAK,MACLC,QAAS5I,EAAMmG,eAFnB,SAII,cAAC,IAAD,QAGR,cAACqD,EAAA,EAAD,CAAS/D,MAAM,eAAf,SACI,cAACiD,EAAA,EAAD,CACIC,KAAK,MACLqI,MAAM,UACN6E,aAAW,OACXjN,QAAS5I,EAAM8V,kBACfrV,UAAWgV,YAAKxV,EAAQiV,kBAAT,eACVjV,EAAQoV,uBAAyBrV,EAAM0V,aANhD,SASI,cAAC,KAAD,a,IChHHK,G,WAEjB,aAAe,IAAD,2BACV9U,KAAK+U,mBAAqB,GAC1B/U,KAAKgV,KAAO,GACZhV,KAAKiV,eAAiB,IAAI/L,SAAQ,SAACC,EAASC,GACxC,EAAK8L,eAAiB/L,KAG1BpL,OAAOG,iBAAiB,WAAW,SAAC4U,GAChC,GAAIA,EAAM3R,SAAWpD,QAIK,kCAAtB+U,EAAM9P,KAAKmS,QACPrC,EAAM9P,KAAKoS,QAAS,CACpB,GAAmC,SAA/BtC,EAAM9P,KAAKoS,QAAQpL,QAEnB,YADA,EAAKgL,KAAOlC,EAAM9P,KAAKoS,QAAQJ,MAInC,GAAmC,YAA/BlC,EAAM9P,KAAKoS,QAAQpL,QAEnB,YADA,EAAKkL,eAAepC,EAAM9P,KAAKoS,QAAQxR,SAPvB,oBAWN,EAAKmR,oBAXC,IAWpB,2BAAuC,EACnC3C,EADmC,SACjC,CACEpP,KAAM8P,EAAM9P,KAAKoS,QACjBC,MAAOvC,EAAM9P,KAAKqS,SAdN,mC,yLAuBnBrV,KAAKiV,e,gLAGVG,EAASC,GACjBtX,OAAOgM,YAAY,CAACoL,OAAQ,YAAaC,QAASA,EAASC,MAAOA,GAAQ,O,qCAG/DD,GAAU,IAAD,gBACFpV,KAAKgV,MADH,IACpB,2BAA6B,CAAC,IAAnBM,EAAkB,QACzBvX,OAAOgM,YAAY,CAACoL,OAAQ,YAAaC,QAASA,EAASC,MAAOC,EAAIlI,IAAK,MAF3D,iC,gCAMdmI,GACNvV,KAAK+U,mBAAmBnL,KAAK2L,K,kCAGrBA,GACR,IAAK,IAAI5U,EAAIX,KAAK+U,mBAAmBnU,OAAS,EAAGD,GAAK,IAAKA,EACvD,GAAI4U,IAAavV,KAAK+U,mBAAmBpU,GAAI,CACzCX,KAAK+U,mBAAmBS,OAAO7U,EAAG,GAClC,W,oJC1CVyD,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrCoR,OAAQ,CACJ9W,MAAO,qBAAEkV,aACT6B,WAAY,GAEhBC,YAAa,CACThX,MAAO,qBAAEkV,cAEb+B,aAAa,yBACTrX,QAAS,OACTsQ,WAAY,SACZpQ,SAAU,SACV0V,QAAS9P,EAAME,QAAQ,EAAG,IAEvBF,EAAMwR,OAAOC,SANR,IAORtX,eAAgB,eAEpBuX,cAAe,CACXtX,SAAU,WACV+P,OAAQ,OACRwH,UAAW,OACXC,UAAW,UAEfC,SAAU,CACN,UAAW,CACPC,gBAAiB9R,EAAM+R,QAAQ1S,OAAO2S,QAG9CC,gBAAiB,CACbC,YAAa,EACbC,aAAc,GAElBC,iBAAkB,CACdC,SAAU,QAIlB,SAASC,GAAK5X,GAAQ,IACXG,EAAyEH,EAAzEG,KAAM0X,EAAmE7X,EAAnE6X,SAAUvX,EAAyDN,EAAzDM,QAASwX,EAAgD9X,EAAhD8X,SAAUC,EAAsC/X,EAAtC+X,YAAaC,EAAyBhY,EAAzBgY,gBAAiBC,EAAQjY,EAARiY,KAElEC,EAAazQ,uBAAY,WAC3B0Q,UAAUC,UAAUC,UAAUJ,EAAKjW,MACnC1B,MACD,CAAC2X,EAAM3X,IAEJgY,EAAe7Q,uBAAY,WAC7BqQ,EAASG,GACT3X,MACD,CAAC2X,EAAMH,EAAUxX,IAEdiY,EAAkB9Q,uBAAY,WAChCsQ,EAAYE,GACZ3X,MACD,CAAC2X,EAAMF,EAAazX,IAEjBkY,EAAsB/Q,uBAAY,WACpCuQ,EAAgBC,GAChB3X,MACD,CAAC2X,EAAMD,EAAiB1X,IAE3B,OAAK2X,EAKD,cAACQ,GAAA,EAAD,CACItQ,qBAAqB,EACrBhI,KAAMA,EACN0X,SAAUA,EACVvX,QAASA,EACToY,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAaI,eAAC,KAAD,WACI,cAACE,GAAA,EAAD,CAAUC,QAAM,EAACnQ,QAASsP,EAA1B,SACI,cAACc,GAAA,EAAD,CAAcC,uBAAwB,CAACxQ,QAAS,SAAUyQ,QAAQ,WAEtE,cAACJ,GAAA,EAAD,CAAUC,QAAM,EAACnQ,QAAS0P,EAA1B,SACI,cAACU,GAAA,EAAD,CAAcC,uBAAwB,CAACxQ,QAAS,SAAUyQ,QAAQ,eAEpEjB,EAAKkB,WAAalB,EAAKmB,WAAanB,EAAKlU,QACvC,cAAC+U,GAAA,EAAD,CAAUC,QAAM,EAACnQ,QAAS2P,EAA1B,SACI,cAACS,GAAA,EAAD,CAAcC,uBAAwB,CAACxQ,QAAS,SAAUyQ,QAAQ,sBAGxEjB,EAAKkB,WAAalB,EAAK9V,QACrB,cAAC2W,GAAA,EAAD,CAAUC,QAAM,EAACnQ,QAAS4P,EAA1B,SACI,cAACQ,GAAA,EAAD,CAAcC,uBAAwB,CAACxQ,QAAS,SAAUyQ,QAAQ,0BA/B3E,KAuCA,SAASG,GAAYrZ,GAChC,IAAMC,EAAUoF,GAAUrF,GACpBsZ,EAA6B7R,uBAAY,SAAA8R,GACvCA,GACAA,EAAQC,mBAEb,IANoC,EAOP7a,qBAPO,mBAOhC8a,EAPgC,KAOtBC,EAPsB,OAQP/a,oBAAS,GARF,mBAQhCgb,EARgC,KAQtBC,EARsB,OASCjb,qBATD,mBAShCkb,EATgC,KASlBC,EATkB,KAWjCC,EAAatS,uBAAY,SAACC,EAAGuQ,GAC/ByB,EAAYzB,GACZ2B,GAAY,GACZE,EAAgBpS,EAAEsS,iBACnB,IAEGC,EAAmBxS,uBAAY,SAACC,EAAGuQ,GACrCyB,EAAY,MACZE,GAAY,GACZE,EAAgB,QACjB,IAEGI,EAAezS,uBAAY,SAACwQ,GAC9BjY,EAAMma,SAASlC,KAChB,CAACjY,IAEA4P,EAAU,KAEd,GAAI5P,EAAMoa,MAAMvY,OAAS,EAAG,CACxB+N,EAAU,GACV,IAFwB,EAEpByK,EAAmB,KACnBzY,EAAI,EAHgB,cAKL5B,EAAMoa,OALD,yBAKbnC,EALa,QAMK,OAArBoC,GAA6BA,IAAqBpC,EAAKtU,OACvD0W,EAAmBpC,EAAKtU,KACxBiM,EAAQ/E,KAAM,cAACyP,GAAA,EAAD,CAAeC,eAAe,EAA9B,SAAqDtC,EAAKtU,MAAjBsU,EAAKtU,QAGhE,IAAM6W,EAAM5Y,IAAM5B,EAAMoa,MAAMvY,OAAS,EAAIyX,EAA4B,KAEvE1J,EAAQ/E,KACJ,eAACiO,GAAA,EAAD,CACI0B,IAAKA,EAEL/Z,UAAWR,EAAQkX,SACnBlX,QAAS,CAACwa,QAASxa,EAAQsX,iBAJ/B,UAMI,cAACmD,GAAA,EAAD,CAAcza,QAAS,CAACV,KAAMU,EAAQyX,kBAAtC,SACI,cAAClO,EAAA,EAAD,CAAS/D,MAAM,iBAAf,SACI,cAACiD,EAAA,EAAD,CAAYE,QAAS,kBAAM5I,EAAM2a,OAAO1C,IAAxC,SACI,cAAC,KAAD,CAAU/G,SAAS,gBAI/B,cAACwJ,GAAA,EAAD,CAAcza,QAAS,CAACV,KAAMU,EAAQyX,kBAAtC,SACI,cAAChP,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAOqS,EAAWrS,EAAGuQ,IAA1C,SACI,cAAC,KAAD,CAAc/G,SAAS,cAG/B,cAAC8H,GAAA,EAAD,UAAef,EAAKjW,OACpB,cAAC0Y,GAAA,EAAD,CAAcza,QAAS,CAACV,KAAMU,EAAQyX,kBAAtC,SACI,cAAChP,EAAA,EAAD,CAAYE,QAAS,kBAAMsR,EAAajC,IAAxC,SACI,cAAC,KAAD,CAAY/G,SAAS,gBAnBxB+G,EAAK2C,cAyBhBhZ,GApCN,2BAAiC,IALT,oCA6CxBgO,EAAW,cAACkJ,GAAA,EAAD,qCAGf,IAAM+B,EAAQ,cAAC,KAAD,UAAOjL,IAErB,OACI,eAAC,IAAMkL,SAAP,WACI,eAACC,GAAA,EAAD,CACItS,QAAQ,aACRuS,OAAO,QACP7a,KAAMH,EAAMG,KACZM,UAAWR,EAAQyW,OACnBzW,QAAS,CACLgb,MAAOhb,EAAQ2W,aANvB,UAQI,qBAAKnW,UAAWR,EAAQ4W,aAAxB,SACI,cAACnO,EAAA,EAAD,CAAYE,QAAS5I,EAAMM,QAA3B,SACI,cAAC,KAAD,QAGR,cAAC4a,GAAA,EAAD,IACA,qBAAKza,UAAWR,EAAQ+W,cAAxB,SACK6D,OAGT,cAACjD,GAAD,CACIzX,KAAMH,EAAMG,MAAQwZ,EACpB9B,SAAUgC,EACV5B,KAAMwB,EACNnZ,QAAS2Z,EACTnC,SAAU9X,EAAM8X,SAChBC,YAAa/X,EAAM+X,YACnBC,gBAAiBhY,EAAMgY,qB,IC/NjCmD,G,WAEF,WAAYxX,EAAMC,EAAQwI,GAAY,oBAClCnL,KAAK0C,KAAOA,EACZ1C,KAAKoL,QAAUzI,EACf3C,KAAKmL,UAAYA,E,wLAIVnL,KAAKoL,S,6PAICpL,KAAKqL,Q,yRAIbrL,KAAK8L,W,gCACyBjI,MAAM7D,KAAKma,Y,8BAAalR,O,OAAvDjJ,KAAK8L,W,uCAGF9L,KAAK8L,Y,yQAIL9L,KAAKma,Y,uIAIZ,MAAO,cAAgBna,KAAKmL,UAAY,WAAanL,KAAKoL,Y,KAI5DgP,G,WAEF,WAAYpO,EAAM2N,GAAY,oBAC1B3Z,KAAKgM,KAAOA,EACZhM,KAAK0C,KAAOsJ,EAAKtJ,KAAO,IAAMiX,EAAY,QAC1C3Z,KAAK2Z,UAAYA,E,mMAIV,IAAIzQ,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAjD,EAAA,sEACM,EAAKkU,UADX,OACTC,EADS,OAET7J,EAAU6J,EAAOC,UAAU,cACjCpR,EAAQsH,EAAQrE,OAAOqE,EAAQpE,QAAQ,KAAO,IAH/B,2CAAZ,0D,4QAQA,IAAInD,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAjD,EAAA,sEACM,EAAKkU,UADX,cAERG,QAAO,SAACvR,GACX,EAAKoC,MAAQpC,EACbE,EAAQF,KACT,cALY,2CAAZ,0D,iQAUcjJ,KAAKqa,U,cAApBC,E,yBACCA,EAAOC,a,oRAIP,IAAIrR,SAAQ,SAACC,EAASC,GACzB,IAAMqR,EAAQ,EAAKC,cAAc,EAAK1O,MAEtCyO,EAAMhO,UAAN,uCAAkB,WAAOhG,GAAP,eAAAN,EAAA,uDACRmU,EAAS1M,SAASC,cAAc,WAC/BlP,MAAQ8b,EAAME,WACrBL,EAAO9L,OAASiM,EAAMG,YACVN,EAAOO,WAAW,MAC1BC,UAAUL,EAAO,EAAG,EAAGH,EAAO3b,MAAO2b,EAAO9L,QAChDrF,EAAQmR,GACR9O,IAAIK,gBAAgB4O,EAAMlP,KAPZ,2CAAlB,0D,qIAYMpK,GACV,IAAMsZ,EAAQ7M,SAASC,cAAc,SAMrC,OALA4M,EAAMlP,IAAMC,IAAIC,gBAAgBtK,GAChCsZ,EAAM/O,QAAU,OAChB+O,EAAMpN,YAAcrN,KAAK2Z,UAAY,IACrCc,EAAM9O,OAEC8O,M,KAIMvJ,G,WAEjB,WAAYlO,GAAO,oBACfhD,KAAKgD,KAAOA,E,+KAiBChD,KAAKgD,KAAKL,S,wSAIV3C,KAAKgD,KAAKyN,U,mTAIJzQ,KAAKgD,KAAKiG,O,OAAvBA,E,OACA0E,EAAM5P,OAAOyN,IAAIC,gBAAgBxC,GACjC9C,EAAIyH,SAASC,cAAc,KACjCD,SAASjK,KAAKmK,YAAY3H,GAC1BA,EAAE4H,MAAQ,gBACV5H,EAAE6H,KAAOL,EACTxH,EAAE8H,SAAWjO,KAAKgD,KAAKN,KACvByD,EAAE+H,QACF1C,IAAIK,gBAAgB8B,GACpBxH,EAAEgI,S,kIArBF,OAAOnO,KAAKgD,KAAKN,Q,kCAVH0L,EAAcuL,EAAWhX,EAAQwI,GAC/C,IAAM4P,EAAY3M,EAAa1L,KAAK4L,UAAU,EAAGF,EAAa1L,KAAK6L,YAAY,MAAQ,IAAMoL,EAAY,IAAMxO,EAC/G,OAAO,IAAI+F,EAAM,IAAIgJ,GAAgBa,EAAWpY,EAAQwI,M,+BAG5Ca,EAAM2N,GAClB,OAAO,IAAIzI,EAAM,IAAIkJ,GAAcpO,EAAM2N,Q,KCvGlC,OAA0B,uCCQnCvV,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrCgL,WAAY,CACR5Q,SAAU,WACV+P,OAAQ,qBACR7P,MAAO,OACPE,OAAQ,IACRN,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChBqQ,WAAY,SACZsF,QAAS,GACTrF,UAAW,SACXC,eAAgB,cAChBC,iBAAkB,YAClBC,mBAAoB,UAExB+L,kBAAmB,CACf9L,gBAAgB,OAAD,OAASG,GAAT,MAEnBF,kBAAmB,CACfD,gBAAgB,OAAD,OAASC,GAAT,MAEnB8L,WAAY,CACRtW,OAAQ,eAID,SAASuW,GAAT,GAA4G,IAAtF/P,EAAqF,EAArFA,UAAWgQ,EAA0E,EAA1EA,uBAAwBvL,EAAkD,EAAlDA,aAAcL,EAAoC,EAApCA,QAASd,EAA2B,EAA3BA,SAAUiG,EAAiB,EAAjBA,eAC/F1V,EAAUoF,KADsG,EAEpD1G,qBAFoD,mBAE/G0d,EAF+G,KAEpFC,EAFoF,KAItHpc,qBAAU,WAAM,4CACZ,sBAAAkH,EAAA,kEACIkV,EADJ,SACuClQ,EAAUmQ,mBADjD,8EADY,uBAAC,WAAD,wBAKZC,KACD,CAACpQ,IAEJ,IAAMqQ,EAA2BL,EAAyBC,EACpDK,GAAyBL,EAE/B,OACI,cAAC,IAAMvB,SAAP,UACI,cAACrK,GAAA,EAAD,CAAM9P,IAAK6P,IAAYd,EAAUtP,QAAS,IAA1C,SACI,qBAAKK,UAAS,UAAKR,EAAQqQ,WAAb,YAA2BrQ,EAAQgc,mBAAjD,SACI,eAACzT,EAAA,EAAD,sEAC4D,cAACuI,GAAA,EAAD,CAAM7H,OAAO,IAAIzI,UAAWR,EAAQic,WAAYtT,QAAS+M,EAAgB3E,MAAM,YAAYF,UAAU,QAArG,oBAD5D,IAEI,uBACC4L,GACG,gDACgB,cAAC3L,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAM4B,EAA/D,uBADhB,mDAIH4L,GACG,iDACiB,cAAC1L,GAAA,EAAD,CAAMC,MAAM,YAAY9H,OAAO,SAAS+H,IAAI,aAAahC,KAAM4B,EAA/D,oBADjB,6B,IC/DP8L,G,WAEjB,WAAYC,GAAY,oBACpB3b,KAAK4b,QAAU,IAAIC,iBAAiBF,GACpC,IAAMG,EAAO9b,KACbA,KAAK4b,QAAQ1R,UAAY,SAAC4I,GAAW,IAAD,EAChC,UAAAgJ,EAAKC,iBAAL,cAAAD,EAAiBhJ,I,wDAIbsC,GACRpV,KAAK4b,QAAQ7R,YAAYqL,K,8BAIzBpV,KAAK4b,QAAQI,Y,KCfAC,G,WAEjB,WAAY5G,EAAOlK,GAAY,IAAD,2BAC1BnL,KAAKqV,MAAQA,EACbrV,KAAKkc,SAAW,SAAC9G,GACiB,IAAD,EAAzBA,EAAQC,QAAUA,IAClB,YAAK0G,iBAAL,gBAAiB,CACb/Y,KAAMoS,EAAQpS,SAK1BmI,EAAUgR,UAAUnc,KAAKkc,UACzBlc,KAAKmL,UAAYA,E,wDAGTiK,GACRpV,KAAKmL,UAAUiR,YAAYhH,EAASpV,KAAKqV,S,8BAIzCrV,KAAKmL,UAAUkR,YAAYrc,KAAKkc,c,KCrBnBI,G,WAEjB,aAAe,oBACXtc,KAAKuc,YAAc,EACnBvc,KAAKwc,SAAU,E,iDAGdC,GACD,OAAIzc,KAAKwc,QACEzL,KAAKC,IAAIyL,EAAKzc,KAAKuc,YAAcxW,KAAKC,MAAQhG,KAAKuS,WAGvDxB,KAAKC,IAAIyL,EAAKzc,KAAKuc,e,6BAIrBvc,KAAKwc,UAIVxc,KAAKwc,SAAU,EACfxc,KAAKuc,aAAexW,KAAKC,MAAQhG,KAAKuS,a,8BAItCvS,KAAKuS,UAAYxM,KAAKC,MACtBhG,KAAKwc,SAAU,I,8BAGXE,GACA1c,KAAKwc,SACLxc,KAAKuS,UAAYxM,KAAKC,MACtBhG,KAAKuc,YAAcG,GAEnB1c,KAAKuc,YAAcG,I,+BAIlBD,GACL,OAAe,IAARA,EAAY,EAAI1L,KAAKC,IAAI,EAAGhR,KAAK0c,KAAKD,GAAOA,O,4TCZtDE,GAAmBte,aAAW,SAACgG,GAAD,MAAY,CAC5CuY,UAAW,CACPne,SAAU,WACVoe,KAAM,MACNle,MAAO,MACPme,OAAQ,EACRle,cAAe,QAEnBme,gBAAiB,CACbnO,cAAe,OAEnBoO,YAAa,CACTjN,MAAO1L,EAAM+R,QAAQ1S,OAAOuZ,OAC5B1e,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChBgQ,OAAQ,OACR7J,OAAQ,UACRsL,SAAU,GACViN,WAAY,IAEhBC,YAAa,CACT3O,OAAQ,OACRjQ,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChByR,SAAU,GACViN,WAAY,GACZve,MAAO,IACPoR,MAAO1L,EAAM+R,QAAQrV,KAAKqc,UAC1Bxe,cAAe,QAEnBye,0BAA2B,CACvBhK,WAAYhP,EAAMiP,YAAYC,OAAO,SAAU,CAC3CC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzCtJ,YAAa,EACbpV,cAAe,QAEnB2e,2BAA4B,CACxBlK,WAAYhP,EAAMiP,YAAYC,OAAO,SAAU,CAC3CC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzCtJ,YAAa,EACbpV,cAAe,QAEnB4e,kBAAmB,CACfnK,WAAYhP,EAAMiP,YAAYC,OAAO,QAAS,CAC1CC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzC3e,MAAO,EACPC,cAAe,QAEnB6e,iBAAkB,CACdpK,WAAYhP,EAAMiP,YAAYC,OAAO,QAAS,CAC1CC,OAAQnP,EAAMiP,YAAYE,OAAOM,QACjCJ,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzC3e,MAAO,IACPC,cAAe,QAEnB8e,uBAAwB,CACpBrK,WAAYhP,EAAMiP,YAAYC,OAAO,aAAc,CAC/CC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzCK,QAAS,EACT/e,cAAe,QAEnBgf,sBAAuB,CACnBvK,WAAYhP,EAAMiP,YAAYC,OAAO,aAAc,CAC/CC,OAAQnP,EAAMiP,YAAYE,OAAOM,QACjCJ,SAAUrP,EAAMiP,YAAYI,SAAS4J,QAEzCK,QAAS,EACT/e,cAAe,QAEnBif,aAAc,CACVxO,WAAY,6DACZ5Q,SAAU,WACVoe,KAAM,QACNle,MAAO,OACPE,OAAQ,GACRsV,QAAS,IAEb2D,OAAQ,CACJ/H,MAAO1L,EAAM+R,QAAQ1S,OAAOuZ,OAC5Bre,cAAe,QAEnBkf,eAAgB,CACZ/N,MAAO1L,EAAM+R,QAAQ1S,OAAOmB,SAC5BjG,cAAe,QAEnBmf,SAAU,CACNC,OAAQ,GAEZC,YAAa,CACTxf,SAAU,WACVC,IAAK,EACLme,KAAM,EACNje,cAAe,QAEnBsf,+BAAgC,CAC5Bzf,SAAU,WACVC,IAAK,EACLyf,MAAO,EACPvf,cAAe,QAEnBwf,cAAe,CACXxf,cAAe,YAIjByf,GAAuBhgB,aAAW,SAACgG,GAAD,MAAY,CAChDuY,UAAW,CACPvN,WAAY,qBACZb,OAAQ,EACRwP,OAAQ,kBACRrZ,OAAQ,UACR/F,cAAe,QAEnB0f,cAAe,CACX3f,MAAO,QAEX4f,KAAM,CACFlP,WAAY,6CACZb,OAAQ,QAEZgQ,gBAAiB,CACb/f,SAAU,WACVE,MAAO,EACP6P,OAAQ,GAEZiQ,OAAQ,CACJC,aAAc,MACd/f,MAAO,GACP6P,OAAQ,GACRa,WAAY,QACZ5Q,SAAU,WACVC,IAAK,EACLme,KAAM,GACNnS,OAAQ,gDAIViU,GAAeC,cAAW,SAACva,GAAD,MAAY,CACxC/F,KAAM,CACFyR,MAAO1L,EAAM+R,QAAQrV,KAAKqc,UAC1ByB,cAAe,UAEnBC,MAAO,CACH3I,gBAAiB,QACjBpG,MAAO1L,EAAM+R,QAAQrV,KAAKqc,UAC1B,UAAW,CACP2B,UAAW,WAEf,oBAAqB,CACjBA,UAAW,6CAGnB9B,OAAQ,CACJlN,MAAO1L,EAAM+R,QAAQrV,KAAKqc,cAhBbwB,CAkBjBI,MAEJ,SAASC,GAAYC,GACjB,IAAMC,EAAUpO,KAAKuB,MAAM4M,EAAe,KACpCE,EAAUrO,KAAKuB,MAAM6M,EAAU,IAC/BE,EAAkBF,EAAU,GAClC,OAAOG,OAAOF,GAAW,IAAME,OAAOD,GAAiBE,SAAS,EAAG,KAGvE,SAASC,GAAalH,GAClB,IAAMmH,EAAOnH,EAAQoH,wBACrB,OAAOD,EAAKtB,MAAQsB,EAAK5C,KAG7B,SAAS8C,GAAY5gB,GACjB,IAAMC,EAAUqf,KACVuB,EAAeC,iBAAO,MAU5B,IAAMC,EAAY,CAACnhB,MAAOI,EAAMqE,MAAQ,KAClC2c,EAAc,CAAC7C,WAAY0C,EAAaI,QAAUR,GAAaI,EAAaI,SAAWjhB,EAAMqE,MAAQ,IAAM,GAEjH,OACI,sBAAKmW,IAAKqG,EAAcjY,QAZ5B,SAAqBlB,GACjB,IAAMgZ,EAAOhZ,EAAEsS,cAAc2G,wBACvB/gB,EAAQ8gB,EAAKtB,MAAQsB,EAAK5C,KAC1BkB,EAAWhN,KAAKC,IAAI,EAAGD,KAAK0L,IAAI,GAAIhW,EAAEwZ,MAAQR,EAAK5C,MAAQle,IAEjEI,EAAMmhB,OAAOnC,IAOiCve,UAAWR,EAAQ4d,UAAjE,UACI,qBAAKpd,UAAWR,EAAQuf,KAAMxQ,MAAO+R,IACrC,qBAAKtgB,UAAWR,EAAQmhB,aAAxB,SACI,qBAAK3gB,UAAWR,EAAQyf,OAAQ1Q,MAAOgS,SAMvD,SAASK,GAAmBrhB,GACxB,IAAKA,EAAMoO,aAA4C,IAA7BpO,EAAMoO,YAAYvM,OACxC,OAAO,KAGX,IAAMgZ,EAAO7a,EAAMoO,YAAY1E,KAAI,SAACoC,GAChC,OACI,eAACgN,GAAA,EAAD,CAEIwI,SAAUxV,EAAEuC,KAAOrO,EAAMuhB,mBACzBxI,QAAM,EAACnQ,QAAS,kBAAM5I,EAAMwhB,qBAAqB1V,EAAEuC,KAHvD,UAIKvC,EAAE2V,SAJP,IAIkB3V,EAAE9C,QAHX8C,EAAEuC,OAQnB,OACI,8BACI,cAACoK,GAAA,EAAD,CACItQ,qBAAqB,EACrBhI,KAAMH,EAAMG,KACZ0X,SAAU7X,EAAM6X,SAChBvX,QAASN,EAAMM,QACfoY,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UAAOiC,QAMvB,SAAS6G,GAAY1hB,GACjB,IAAKA,EAAMiW,MAA8B,IAAtBjW,EAAMiW,KAAKpU,OAC1B,OAAO,KAGX,IAAMgZ,EAAO7a,EAAMiW,KAAKvM,KAAI,SAACoC,GACzB,OACI,eAACgN,GAAA,EAAD,CAEIwI,SAAUxV,EAAEuC,KAAOrO,EAAM2hB,YACzB5I,QAAM,EAACnQ,QAAS,kBAAM5I,EAAM4hB,cAAc9V,EAAEuC,KAHhD,UAIKvC,EAAEuC,GAJP,IAIYvC,EAAErG,MAJd,IAIsBqG,EAAEU,MAHfV,EAAEuC,OAQnB,OACI,8BACI,cAACoK,GAAA,EAAD,CACItQ,qBAAqB,EACrBhI,KAAMH,EAAMG,KACZ0X,SAAU7X,EAAM6X,SAChBvX,QAASN,EAAMM,QACfoY,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UAAOiC,QAMvB,SAASgH,GAAc7hB,GACnB,OACI,8BACI,cAACyY,GAAA,EAAD,CACItQ,qBAAqB,EACrBhI,KAAMH,EAAMG,KACZ0X,SAAU7X,EAAM6X,SAChBvX,QAASN,EAAMM,QACfoY,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UACI,eAACE,GAAA,EAAD,CAAUC,QAAM,EAACnQ,QAAS,SAAClB,GAAD,OAAO1H,EAAM8hB,YAAvC,oBACY9hB,EAAMiN,cAQvB,SAAS8U,GAAT,GA4CP,IA3CJC,EA2CG,EA3CHA,MACAC,EA0CG,EA1CHA,QACApgB,EAyCG,EAzCHA,OACAqgB,EAwCG,EAxCHA,cACAC,EAuCG,EAvCHA,cACAC,EAsCG,EAtCHA,OACAZ,EAqCG,EArCHA,qBACAL,EAoCG,EApCHA,OACAkB,EAmCG,EAnCHA,iBACAC,EAkCG,EAlCHA,OACAC,EAiCG,EAjCHA,QACAC,EAgCG,EAhCHA,OACAZ,EA+BG,EA/BHA,cACAa,EA8BG,EA9BHA,cACAC,EA6BG,EA7BHA,cACAC,EA4BG,EA5BHA,eACAC,EA2BG,EA3BHA,eACAC,EA0BG,EA1BHA,iBACA7hB,EAyBG,EAzBHA,iBACA8hB,EAwBG,EAxBHA,aACAxiB,EAuBG,EAvBHA,QACAyiB,EAsBG,EAtBHA,cACAC,EAqBG,EArBHA,qBACAC,EAoBG,EApBHA,2BACAC,EAmBG,EAnBHA,sBACAC,EAkBG,EAlBHA,iBACAC,EAiBG,EAjBHA,gBACAC,EAgBG,EAhBHA,kBACAlK,EAeG,EAfHA,UACAC,EAcG,EAdHA,UACAhL,EAaG,EAbHA,YACAmT,EAYG,EAZHA,mBACAtL,EAWG,EAXHA,KACA0L,EAUG,EAVHA,YACA2B,EASG,EATHA,cACAC,EAQG,EARHA,OACAC,EAOG,EAPHA,eACAC,EAMG,EANHA,kBACAC,EAKG,EALHA,WACAC,EAIG,EAJHA,mBACAC,EAGG,EAHHA,gCACAC,EAEG,EAFHA,qBACAC,EACG,EADHA,2BAEM7jB,EAAU2d,KADb,EAEqBjf,oBAAS,GAF9B,mBAEIolB,EAFJ,KAEUC,GAFV,QAGyDrlB,oBAAS,GAHlE,qBAGIslB,GAHJ,MAG4BC,GAH5B,SAIiEvlB,qBAJjE,qBAIIwlB,GAJJ,MAIgCC,GAJhC,SAK2CzlB,oBAAS,GALpD,qBAKI0lB,GALJ,MAKqBC,GALrB,SAMmD3lB,qBANnD,qBAMI4lB,GANJ,MAMyBC,GANzB,SAO+C7lB,oBAAS,GAPxD,qBAOI8lB,GAPJ,MAOuBC,GAPvB,SAQuD/lB,qBARvD,qBAQIgmB,GARJ,MAQ2BC,GAR3B,SAS+CjmB,oBAAS,GATxD,qBASIkmB,GATJ,MASuBC,GATvB,SAUuDnmB,qBAVvD,qBAUIomB,GAVJ,MAU2BC,GAV3B,SAWuCrmB,oBAAS,GAXhD,qBAWIsmB,GAXJ,MAWmBC,GAXnB,SAYyBvmB,mBAAS,KAZlC,qBAYIwmB,GAZJ,MAYYC,GAZZ,SAamDzmB,mBAAS,KAb5D,qBAaI0mB,GAbJ,MAayBC,GAbzB,MAcGC,GAAuBzE,iBAAO,CAAC0E,EAAG,EAAGC,EAAG,IACxCC,GAAuB5E,iBAAO9Z,KAAKC,OACnC0e,GAAc7E,kBAAO,GACrB8E,GAAe9E,kBAAO,GACtB+E,GAAiB/E,mBAlBpB,GAmBqBniB,qBAAfmnB,GAnBN,qBAoBGC,GAActe,uBAAY,kBAAMqe,GAAY,MAAK,IAEjDE,GAAave,uBAAY,SAACuX,GAC5BmC,EAAOnC,KACR,CAACmC,IAEJ,SAAS8E,GAAgBve,GACrBke,GAAa3E,SAAU,EAG3B,SAASiF,GAAexe,GACpBke,GAAa3E,SAAU,EAG3B/gB,qBAAU,WACN,IAAMimB,EAAcC,OAAOplB,EAAiBmkB,QAC5CC,GAAUe,GACVvD,EAAeuD,EAAc,KAEzBA,EAAc,GACdb,GAAuBa,KAE5B,CAACnlB,EAAkB4hB,IAEtB1iB,qBAAU,WACN,IAAMmmB,EAAWC,aAAY,WACzB,IAAMC,EAAcvf,KAAKC,MAAQye,GAAqBzE,QAAU,KACzDjP,KAAKwU,IAAInE,EAAiBpB,QAAQuE,EAAID,GAAqBtE,QAAQuE,EAAG,GACnExT,KAAKwU,IAAInE,EAAiBpB,QAAQwE,EAAIF,GAAqBtE,QAAQwE,EAAG,GAAK,KAC9EG,GAAa3E,SACb4E,GAAe5E,UAAYpS,SAAS4X,cAEvCF,IAAgBZ,GAAY1E,SAC5ByE,GAAqBzE,QAAUja,KAAKC,MACpC+c,GAAQuC,KACAA,GAAeZ,GAAY1E,SACnC+C,GAAQuC,GAGZZ,GAAY1E,QAAUsF,EACtBhB,GAAqBtE,QAAQuE,EAAInD,EAAiBpB,QAAQuE,EAC1DD,GAAqBtE,QAAQwE,EAAIpD,EAAiBpB,QAAQwE,IAC3D,KACH,OAAO,kBAAMiB,cAAcL,MAC5B,CAAChE,EAAkB2B,GAASD,IAE/B7jB,qBAAU,yBAAMoiB,QAAN,IAAMA,OAAN,EAAMA,EAASyB,KAAO,CAACzB,EAAQyB,IAEzC7jB,qBAAU,WACN,IAAI2iB,EA6BJ,OAFA7jB,OAAOG,iBAAiB,UAAWwnB,GAE5B,WACH3nB,OAAOI,oBAAoB,UAAWunB,IA1B1C,SAASA,EAAU5S,GACf,GAAsB,KAAlBA,EAAM6S,QACN7S,EAAMpM,iBAEFsa,EACAM,IAEAC,SAED,GAAsB,KAAlBzO,EAAM6S,SACTf,GAAe5E,UAAYpS,SAAS4X,cAAe,CACnD,IAAMrE,EAASgE,OAAOP,GAAe5E,QAAQ5c,OAE7C,GAAI+hB,OAAOS,MAAMzE,GACb,OAGHO,EAAwB,IAATP,GACfyD,GAAe5E,QAAQ6F,WAUrC,CAAC7E,EAASM,EAASC,EAAQG,EAAgBE,IAE9C,IAAMkE,GAA2Btf,uBAAY,SAACC,GAAD,aAAOA,EAAEwB,OAAO8d,kBAAkB,GAAG,UAAAtf,EAAEwB,OAAO7E,aAAT,eAAgBxC,SAAU,KAAI,IAEhH3B,qBAAU,WACN,IAAMmmB,EAAWC,aAAY,WACzBP,OACD,KAEH,OAAO,kBAAMW,cAAcL,MAC5B,CAACN,KAEJ7lB,qBAAU,WACN,GAAI2lB,GAAe5E,QACf,GAAe,IAAXmB,EACAyD,GAAe5E,QAAQ5c,MAAQ,SAC5B,CACH,IAAM4iB,EAAgB7E,EAAS,IACzB/d,EAAQ4iB,GAAiB,EAAI,IAAMA,EAAcC,QAAQ,GAAK3G,OAAO0G,EAAcC,QAAQ,IACjGrB,GAAe5E,QAAQ5c,MAAQA,KAGxC,CAAC+d,IAEJ,IAAM+E,GAAiC1f,uBAAY,WAC/C2c,GAA8B,MAC9BF,IAA0B,KAC3B,IAEGkD,GAAiC3f,uBAAY,SAACC,GAChD0c,GAA8B1c,EAAEsS,eAChCkK,IAA0B,KAC3B,IAEGmD,GAA2B5f,uBAAY,SAAC4G,GAC1CmT,EAAqBnT,GACrB+V,GAA8B,MAC9BF,IAA0B,KAC3B,CAAC1C,IAEE8F,GAA0B7f,uBAAY,WACxC+c,GAAuB,MACvBF,IAAmB,KACpB,IAEGiD,GAA0B9f,uBAAY,SAACC,GACzC8c,GAAuB9c,EAAEsS,eACzBsK,IAAmB,KACpB,IAEGkD,GAAoB/f,uBAAY,SAAC4G,GACnCuT,EAAcvT,GACdmW,GAAuB,MACvBF,IAAmB,KACpB,CAAC1C,IAEE6F,GAA4BhgB,uBAAY,WAC1Cmd,GAAyB,MACzBF,IAAqB,KACtB,IAEGgD,GAA4BjgB,uBAAY,SAACC,GAC3Ckd,GAAyBld,EAAEsS,eAC3B0K,IAAqB,KACtB,IAEGiD,GAAoBlgB,uBAAY,WAClCgb,IACAiC,IAAqB,KACtB,CAACjC,IAEEmF,GAA4BngB,uBAAY,SAACC,GAC3Csd,GAAyB,MACzBF,IAAqB,KACtB,IAEG+C,GAA4BpgB,uBAAY,SAACC,GAC3Csd,GAAyBtd,EAAEsS,eAC3B8K,IAAqB,KACtB,IAEGgD,GAAoBrgB,uBAAY,WAClCib,IACAoC,IAAqB,KACtB,CAACpC,IAEEqF,GAAuBtgB,uBAAY,kBAAMyd,IAAiB,KAAQ,IAClE8C,GAAwBvgB,uBAAY,kBAAMyd,IAAiB,KAAO,IAElE+C,GAAqBxgB,uBAAY,SAACC,EAAGrD,GACvC+gB,GAAU/gB,GACVue,EAAeve,EAAQ,OACxB,CAACue,IAEEsF,GAA8BzgB,uBAAY,SAACC,EAAGrD,GAC5CA,EAAQ,GACRihB,GAAuBjhB,GAG3BrD,EAAiBmkB,OAAS9gB,IAC3B,CAACrD,IAEEmnB,GAAqB1gB,uBAAY,SAACC,EAAGrD,GACvC+gB,IAAU,SAACD,GACP,IAAMiD,EAAYjD,EAAS,EAAI,EAAIE,GAEnC,OADAzC,EAAewF,EAAY,KACpBA,OAEZ,CAACxF,EAAgByC,KAEdrG,GAAWgD,EAAMhD,SAASnd,GAEhC,OACI,eAAC,IAAMiZ,SAAP,WACKgI,GACG,cAACrS,GAAA,EAAD,CAAM9P,GAAIojB,EAAM3jB,QAAS,IAAzB,SACI,cAACsI,EAAA,EAAD,CACIjI,UAAWR,EAAQif,YACnBtW,QAAStI,EACT+nB,YAAapC,GACbqC,WAAYpC,GAJhB,SAMI,cAAC,KAAD,QAIXtC,GACG,cAACnT,GAAA,EAAD,CAAM9P,GAAIojB,EAAM3jB,QAAS,IAAzB,SACI,cAACsI,EAAA,EAAD,CACIjI,UAAWR,EAAQkf,+BACnBvW,QAASkb,EACTuE,YAAapC,GACbqC,WAAYpC,GAJhB,SAMKrC,EAAuB,cAAC,KAAD,IAAoB,cAAC,KAAD,QAIxD,sBACIpjB,UAAWR,EAAQ4d,UACnBwK,YAAapC,GACbqC,WAAYpC,GAHhB,UAKI,cAACzV,GAAA,EAAD,CAAM9P,GAAIojB,EAAM3jB,QAAS,IAAzB,SACI,sBAAKK,UAAWR,EAAQ6e,aAAxB,UACI,cAAC8B,GAAD,CACIO,OAAQ6E,GACR3hB,MAAkB,IAAX2a,KAEX,eAACuJ,GAAA,EAAD,CACI1K,WAAS,EACTpd,UAAWR,EAAQof,cACnBmJ,UAAU,MAHd,UAKI,cAACD,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CACIE,QAAS,kBAAMqZ,EAAUM,IAAYC,KADzC,SAGKP,EACK,cAAC,KAAD,CAAWxhB,UAAWR,EAAQ8Y,SAC9B,cAAC,KAAD,CAAetY,UAAWR,EAAQ8Y,aAG/CgK,GACG,eAACwF,GAAA,EAAD,CAAMtQ,MAAI,EACNoQ,YAAaL,GACbM,WAAYP,GACZtnB,UAAWwkB,GAAgBhlB,EAAQqe,0BAA4Bre,EAAQue,2BAH3E,UAKI,cAAC9V,EAAA,EAAD,CAAYE,QAASuf,GAArB,SACgB,IAAXhD,GAAgB,cAAC,KAAD,IAAsB,cAAC,KAAD,MAE3C,cAACvF,GAAD,CACI3W,SAAUgf,GACVQ,kBAAmBP,GACnB7jB,MAAO8gB,GACPuD,aAAc,IACdzoB,QAAS,CACLV,KAAM0lB,GAAgBhlB,EAAQye,iBAAmBze,EAAQwe,kBACzDsB,MAAOkF,GAAgBhlB,EAAQ4e,sBAAwB5e,EAAQ0e,6BAK/E,cAAC4J,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,sBAAKxX,UAAWR,EAAQge,YAAxB,UACKiC,GAAYlB,GAAWnd,GAD5B,MACwCqe,GAAYiC,GAAiBtgB,QAGxEqgB,GACG,cAACqG,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAAC0Q,GAAA,EAAD,CACIC,SAAU/C,GACVgD,kBAAkB,EAClBpoB,UAAWR,EAAQme,YACnB0K,YAAa,OAAM1C,OAAO,GAAGc,QAAQ,GACrCte,QAASme,OAIrB,cAACwB,GAAA,EAAD,CAAMtQ,MAAI,EAACjJ,MAAO,CAACtJ,SAAU,KAE5Bud,GACG,cAACsF,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACzO,EAAA,EAAD,CAAS/D,MAAM,iBAAf,SACI,cAACiD,EAAA,EAAD,CAAYE,QAASsa,EAArB,SACI,cAAC,KAAD,CAAWziB,UAAWuiB,EAAuB/iB,EAAQ8Y,OAAS9Y,EAAQ8e,uBAKrFqE,GACG,cAACmF,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAASya,EAArB,SACI,cAAC,KAAD,CAAe5iB,UAAW0iB,EAAmBljB,EAAQ8Y,OAAS9Y,EAAQ8e,qBAIjF5F,GACG,cAACoP,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAASif,GAArB,SACI,cAAC,KAAD,CAAcpnB,UAAWR,EAAQ8Y,aAI5CK,GACG,cAACmP,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAAS8e,GAArB,SACI,cAAC,KAAD,CAAgBjnB,UAAWR,EAAQ8Y,aAI9C3K,GAAeA,EAAYvM,OAAS,GACjC,cAAC0mB,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAASwe,GAArB,SACI,cAAC,KAAD,CAAgB3mB,UAAWR,EAAQ8Y,aAI9C9C,GAAQA,EAAKpU,OAAS,GACnB,cAAC0mB,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAAS2e,GAArB,SACI,cAAC,KAAD,CAAc9mB,UAAWkhB,EAAc1hB,EAAQ8Y,OAAS9Y,EAAQ8e,qBAI3EuE,GACG,cAACiF,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAAS4a,EAArB,SACI,cAAC,KAAD,CAAe/iB,UAAWR,EAAQ8Y,OAAQ/J,MAAOuU,EAAS,CAACpO,UAAW,mBAAqB,SAItGsO,GACG,cAAC8E,GAAA,EAAD,CAAMtQ,MAAI,EAAV,SACI,cAACvP,EAAA,EAAD,CAAYE,QAAS+a,EAArB,SACKD,EACM,cAAC,KAAD,CAAoBjjB,UAAWR,EAAQ8Y,SACvC,cAAC,KAAD,CAAgBtY,UAAWR,EAAQ8Y,qBAOlE,cAAC2I,GAAD,CACIvhB,KAAMkkB,IAAmBN,EACzBlM,SAAU0M,GACVtO,KAAMA,EACN0L,YAAaA,EACbrhB,QAASgnB,GACT1F,cAAe4F,KAEnB,cAACnG,GAAD,CACIlhB,KAAM8jB,IAA0BF,EAChClM,SAAUsM,GACV/V,YAAaA,EACbmT,mBAAoBA,EACpBjhB,QAAS6mB,GACT3F,qBAAsB6F,KAE1B,cAACxF,GAAD,CACI1hB,KAAMskB,GACN5M,SAAU8M,GACV1X,KAAMmM,EACN9Y,QAASmnB,GACT3F,SAAU6F,KAEd,cAAC9F,GAAD,CACI1hB,KAAM0kB,GACNhN,SAAUkN,GACV9X,KAAMkM,EACN7Y,QAASsnB,GACT9F,SAAUgG,W,IClwBTiB,G,WAEjB,WAAYvO,GAAM,oBACdvZ,KAAKuZ,IAAMA,EACXvZ,KAAK+nB,cAAgB,G,0FAGdrL,G,qGACA,IAAIxT,SAAQ,SAACC,EAASC,GACrB,EAAKmQ,IAAIyG,SACT,EAAKzG,IAAIyG,QAAQ3S,YAAcqP,EAC/B,EAAKsL,iBAAgB,kBAAM7e,QAE3BA,Q,gRAMD,IAAID,SAAQ,SAACC,EAASC,GACrB,EAAKmQ,IAAIyG,QACT,EAAKgI,iBAAgB,kBAAM7e,OAE3BA,Q,uIAKIoM,GAAW,IAAD,OACM,IAAxBvV,KAAKuZ,IAAI0O,YAKTjoB,KAAKuZ,IAAIyG,UAAYhgB,KAAKuZ,IAAIyG,QAAQvT,YACtCzM,KAAKuZ,IAAIyG,QAAQvT,UAAY,SAAChG,GAAO,IAAD,gBACV,EAAKshB,eADK,IAChC,2BAA0C,EACtC5e,EADsC,YADV,8BAKhC,EAAK4e,cAAcnnB,OAAS,EAC5B,EAAK2Y,IAAIyG,QAAQvT,UAAY,OAKrCzM,KAAK+nB,cAAcne,KAAK2L,IAhBpBA,M,6BAmBA,IAAD,EACH,UAAAvV,KAAKuZ,IAAIyG,eAAT,SAAkBpZ,S,8BAGb,IAAD,EACJ,UAAA5G,KAAKuZ,IAAIyG,eAAT,SAAkBpU,Y,eCtDnB,SAASsc,GAAWpV,GAEvB,OAAOA,EAAMqV,SAAWrV,EAAMsV,UAA8B,KAAlBtV,EAAM6S,Q,mCCa9C0C,GAA0BhqB,aAAW,SAACgG,GAAD,MAAY,CACnDuY,UAAW,CACPpO,OAAQ,qBACR/P,SAAU,WACVwX,UAAW,SACXE,gBAAiB9R,EAAM+R,QAAQ/G,WAAWiZ,QAC1C3pB,MAAO,gBAAE4pB,EAAF,EAAEA,WAAY1X,EAAd,EAAcA,YAAd,OAA+B0X,EAAaxX,KAAK0L,IAAI,IAAK,IAAM5L,GAAe,SAE1F2X,MAAO,CACHrS,gBAAiB9R,EAAM+R,QAAQ/G,WAAWiZ,QAC1ChkB,aAAc,IAElBmkB,YAAa,CACTja,OAAQ,OACRjQ,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChBqQ,WAAY,SACZsF,QAAS,GACTrF,UAAW,cAIb4Z,GAAuBrqB,aAAW,SAACgG,GAAD,MAAY,CAChDskB,YAAa,CACT,UAAW,CACPxS,gBAAiB9R,EAAM+R,QAAQ1S,OAAO2S,QAG9CuS,SAAU,CACN3Y,SAAU,GACVuG,aAAc,EACdE,SAAU,IACV/X,MAAO,OACPkqB,aAAc,YAElBC,mBAAoB,CAChB7Y,SAAU,GACVuG,aAAc,EACdE,SAAU,IACV/X,MAAO,OACPkqB,aAAc,YAElBlP,UAAW,CACP1J,SAAU,GACVF,MAAO,UACPjB,UAAW,QACX0H,aAAc,GACdD,YAAa,GAEjBwS,WAAY,CACRja,UAAW,QACXqF,QAAS,OAIX6U,GAAcC,IAAMC,MAAK,SAACnqB,GAAW,IAChCoqB,EAAyFpqB,EAAzFoqB,MAAOZ,EAAkFxpB,EAAlFwpB,WAAYlI,EAAsEthB,EAAtEshB,SAAUuI,EAA4D7pB,EAA5D6pB,SAAUQ,EAAkDrqB,EAAlDqqB,YAAazhB,EAAqC5I,EAArC4I,QAAS0hB,EAA4BtqB,EAA5BsqB,OAAWC,EADzC,aAC0DvqB,EAD1D,+EAEhCC,EAAU0pB,KAEZlpB,EAAY+oB,EAAavpB,EAAQ8pB,mBAAqB9pB,EAAQ4pB,SAElE,OAAIA,EAAS3d,MAAQ,GAAK2d,EAAS1d,IAAM,EAC9B,KAIP,eAACmF,GAAA,EAAD,yBACI1I,QAAS,SAAClB,GAAD,OAAOkB,EAAQwhB,IACxB5P,IAAK6P,EACL5pB,UAAWR,EAAQ2pB,YACnBtI,SAAUA,GACNiJ,GALR,cAOI,cAAChZ,GAAA,EAAD,CAAW9Q,UAAWA,EAAtB,SACI,sBAAMmI,QAAS,SAAClB,GAAD,OAAOA,EAAEE,mBAAxB,SACKiiB,EAAS7nB,SAGlB,cAACuP,GAAA,EAAD,CAAW9Q,UAAWR,EAAQ+pB,WAA9B,SACI,cAACthB,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAO4iB,EAAO5iB,EAAG0iB,IAAtC,SACI,cAAC,KAAD,CAAUlZ,SAAUsY,EAAa,QAAU,gBAGnD,cAACjY,GAAA,EAAD,CAAW9Q,UAAWR,EAAQ2a,UAA9B,SACKiP,EAAS3J,qBAMX,SAASsK,GAAT,GAeP,IAdJxI,EAcG,EAdHA,MACAb,EAaG,EAbHA,OACAmJ,EAYG,EAZHA,OACArI,EAWG,EAXHA,QACAwI,EAUG,EAVHA,UACA5oB,EASG,EATHA,OACA6oB,EAQG,EARHA,eACAlB,EAOG,EAPHA,WACAhZ,EAMG,EANHA,QACAkF,EAKG,EALHA,WACAiV,EAIG,EAJHA,YACA9H,EAGG,EAHHA,iBACA+H,EAEG,EAFHA,uBACAC,EACG,EADHA,OAEMC,EAAahK,mBACnBgK,EAAW7J,QAAUgB,EACrB,IAAM8I,EAAWjK,mBACjBiK,EAAS9J,QAAUe,EACnB,IAAMgJ,EAAkBlK,mBACxBkK,EAAgB/J,QAAUwJ,EAC1B,IAAMQ,EAAeC,mBAAQ,kBAAMT,EAC7BU,MAAMV,EAAU5oB,QAAQ2d,OAAO9V,KAAI,SAAC0hB,EAAGxpB,GAAJ,OAAUypB,yBAC7C,KAAI,CAACZ,IACLa,EAAkBxK,mBACxBwK,EAAgBrK,QAAUgK,EAXvB,MAY2DtsB,mBAAS,IAZpE,mBAYI4sB,EAZJ,KAY6BC,EAZ7B,KAaGC,EAA6B3K,iBAAO,IACpC4K,EAAY5K,mBAClB4K,EAAUzK,QAAUpf,EACpB,IAAM8pB,EAAY7K,mBAClB6K,EAAU1K,QAAU4J,EACpB,IAAMe,EAAyB9K,iBAAO,GAChC+K,EAAsB/K,mBACtBD,EAAeC,mBACCA,mBACRG,QAAUvL,EAtBrB,MAuBqBjX,GAAc,GAA/BqT,EAvBJ,oBAwBG7R,EAAUqpB,GAAwB,CAACE,aAAY1X,gBAIrD5R,qBAAU,WA2DN,OAFA2rB,EAAoB5K,QAAU6K,uBAxDf,SAATC,EAAUpO,GAWZ,IAVA,IAAM8M,EAAYO,EAAgB/J,SAAW,GACvCgK,EAAeK,EAAgBrK,QAC/Bpf,EAAS6pB,EAAUzK,QAEnBjC,EADQ+L,EAAS9J,QACAjC,SAAS0M,EAAUzK,SAEtC+K,EAAgB5F,OAAO6F,iBACvBC,GAAiB,EACfC,EAAyB,GAEtBvqB,EAAI6oB,EAAU5oB,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAC5C,IAAMwqB,EAAI3B,EAAU7oB,GACdsK,EAAQkgB,EAAElgB,MAAQrK,EAClBsK,EAAMigB,EAAEjgB,IAAMtK,EAEpB,GAAImd,GAAY9S,EACR8S,EAAW7S,IACX6f,EAAgBpqB,EAAIoqB,EAAgBpqB,EAAIoqB,EACxCG,EAAuBvqB,IAAK,IAGT,IAAnBsqB,IACAA,EAAgBtqB,QAEjB,GAAIoqB,IAAkB5F,OAAO6F,iBAChC,MASR,GAJID,IAAkB5F,OAAO6F,mBAAuC,IAAnBC,IAC7CC,EAAuBD,IAAiB,ICxKjD,SAAsB9kB,EAAGilB,GAC5B,IAAK,IAAIC,KAAOllB,EACZ,KAAMklB,KAAOD,GACT,OAAO,EAIf,IAAK,IAAIC,KAAOD,EACZ,KAAMC,KAAOllB,GACT,OAAO,EAIf,OAAO,ED8JMmlB,CAAaJ,EAAwBV,EAA2BxK,WACjEwK,EAA2BxK,QAAUkL,EACrCX,EAA2BW,GAEvBH,IAAkB5F,OAAO6F,kBAAkB,CAC3C,IAAMO,EAAsBvB,EAAae,GACnCS,GAAed,EAAU1K,SAAYja,KAAKC,MAAQ2kB,EAAuB3K,QAAU,KAElE,OAAnBuL,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBvL,UAAWwL,GAChCD,EAAoBvL,QAAQzH,eAAe,CACvCkT,MAAO,SACPC,OAAQ,UACRC,SAAU,WAM1Bf,EAAoB5K,QAAU6K,sBAAsBC,MAKjD,kBAAMc,qBAAqBhB,EAAoB5K,YACvD,IAEH,IAAM6L,EAA0BrlB,uBAAY,WAAO,IAAD,EACxC8jB,EAA0BE,EAA2BxK,QAE3D,GAAKsK,EAAL,CAIA,IAAMwB,EAAUnqB,OAAOC,KAAK0oB,GAE5B,GAAuB,IAAnBwB,EAAQlrB,OAMZ,UAF4BopB,EAAa8B,EAAQ,IAE7B9L,eAApB,SAA6BzH,eAAe,CACxCkT,MAAO,SACPC,OAAQ,UACRC,SAAU,cAEf,CAAC3B,IA0HJ,SAAS+B,EAAKjZ,EAAO0W,EAAWwC,EAAe3C,GAC3CvW,EAAMnM,kBACN,IAAMiiB,EAAWY,EAAUwC,GACrBjrB,EAAO6nB,EAAS7nB,KACtBmW,UAAUC,UAAUC,UAAUrW,GAC9BsoB,EAAOT,GA7HX3pB,qBAAU,WACN,IAAI2qB,EAYJ,OAFAhc,SAAS1P,iBAAiB,mBAAoB+tB,GAEvC,kBAAMre,SAASzP,oBAAoB,mBAAoB8tB,IAR9D,SAASA,IAC4B,YAA7Bre,SAASse,iBACTL,OAOT,CAACjC,EAAQU,EAAyBN,EAAc6B,IAEnD5sB,qBAAU,WACD2qB,GACDiC,MAEL,CAACjC,EAAQiC,IAEZ5sB,qBAAU,WAAO,IAAD,EACZ,IAAIyrB,EAAU1K,QAAd,CAIA,IAAMgK,EAAeK,EAAgBrK,QAErC,GAAKgK,GAAwC,IAAxBA,EAAappB,OAKlC,UADyBopB,EAAa,GACrBhK,eAAjB,SAA0BzH,eAAe,CACrCkT,MAAO,SACPC,OAAQ,UACRC,SAAU,cAEf,CAAChC,IAEJ1qB,qBAAU,WACN,SAASymB,EAAU5S,GACf,IAAI8O,GAIC4H,GAAkC,IAArBA,EAAU5oB,OAA5B,CAIA,IAAIurB,EAEJ,GAAsB,KAAlBrZ,EAAM6S,QAAgB,CACtB,IAAMtF,EAAW1e,OAAOC,KAAK0oB,GAC7B6B,EAAmB9L,EAASzf,OAAS,EAC/BmQ,KAAK0L,IAAI,EAAG1L,KAAKC,IAAL,MAAAD,KAAI,YAAQsP,IAAY,IACnC,MACJ,IAAsB,KAAlBvN,EAAM6S,QAMb,OALA,IAAMtF,EAAW1e,OAAOC,KAAK0oB,GAC7B6B,EAAmB9L,EAASzf,OAAS,EAC/BmQ,KAAKC,IAAIwY,EAAU5oB,OAAS,EAAGmQ,KAAK0L,IAAL,MAAA1L,KAAI,YAAQsP,IAAY,IACtD,EAKX,IAA0B,IAAtB8L,EAAyB,CACzBrZ,EAAMpM,iBACN,IAAMqX,EAAWyL,EAAU2C,GAAkBlhB,MAAQrK,EACrDsf,EAAOnC,GAAU,KAMzB,OAFAhgB,OAAOG,iBAAiB,UAAWwnB,GAE5B,kBAAM3nB,OAAOI,oBAAoB,UAAWunB,MACpD,CAACxF,EAAQoK,EAAyBd,EAAW5oB,EAAQghB,IAExD3iB,qBAAU,WACN,SAASmtB,EAAatZ,GAClB6X,EAAuB3K,QAAUja,KAAKC,MAG1C,IAAMwiB,EAAQ5I,EAAaI,QAG3B,OAFK,OAALwI,QAAK,IAALA,KAAOtqB,iBAAiB,QAASkuB,GAE1B,yBAAM5D,QAAN,IAAMA,OAAN,EAAMA,EAAOrqB,oBAAoB,QAASiuB,MAClD,CAACxM,EAAc+K,IAElB1rB,qBAAU,WACN,IAAI2qB,GAICH,GAAmBD,EAAxB,CAIA,IATY,EAqBY,EAZpB6C,GAAe,EACf1rB,EAAI,EAVI,cAYE6oB,GAZF,IAYZ,2BAAyB,CAAC,IAAjB2B,EAAgB,QACrB,GAAIA,EAAEmB,gBAAkB7C,EAAe6C,eAAiBnB,EAAEpqB,OAAS0oB,EAAe1oB,KAAM,CACpFsrB,EAAc1rB,EACd,QAGFA,GAlBM,8BAqBZ,IAAqB,IAAjB0rB,EACA,UAAArC,EAAaqC,GAAarM,eAA1B,SAAmCzH,eAAe,CAC7CkT,MAAO,SACPC,OAAQ,UACRC,SAAU,cAGpB,CAAC/B,EAAQH,EAAgBD,EAAWQ,IAUvC/qB,qBAAU,WACN,SAASstB,EAAazZ,GAClB,IAAM0Z,EAAkB7qB,OAAOC,KAAK4oB,EAA2BxK,SAE/D,GAA+B,IAA3BwM,EAAgB5rB,QAIfsnB,GAAWpV,GAAhB,CAIA,IAAMqW,EAAQpY,KAAKC,IAAL,MAAAD,KAAI,YAAQyb,IAC1BT,EAAKjZ,EAAO0W,EAAWL,EAAOE,IAKlC,OAFAtrB,OAAOG,iBAAiB,UAAWquB,GAE5B,kBAAMxuB,OAAOI,oBAAoB,UAAWouB,MACpD,CAAC/C,EAAWH,IAEf,IAOIoD,EAPEC,EAAclmB,uBAAY,SAAC2iB,GAC7B,IAAMpL,EAAWyL,EAAUL,GAAOle,MAAQrK,EAC1Csf,EAAOnC,GAAW8L,EAAW7J,SAAWmJ,KAASmB,KAClD,CAACd,EAAW5oB,EAAQsf,EAAQoK,IAEzBrT,EAAazQ,uBAAY,SAACC,EAAG0iB,GAAJ,OAAc4C,EAAKtlB,EAAG+iB,EAAWL,EAAOE,KAAS,CAACG,EAAWH,IAuC5F,OA1BIoD,EATCjD,GAAiC,IAApBA,EAAU5oB,OAUpB,cAACsP,GAAA,EAAD,CAAgB1Q,UAAWR,EAAQwpB,MAAnC,SACI,cAACrY,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACKoZ,EAAU/gB,KAAI,SAAC0iB,EAAGhC,GACf,IAAM9I,EAAW8I,KAASmB,EAE1B,OACI,cAACtB,GAAD,CAEIG,MAAOA,EACPZ,WAAYA,EACZlI,SAAUA,EACVuI,SAAUY,EAAUL,GACpBC,YAAaY,EAAab,GAC1BxhB,QAAS+kB,EACTrD,OAAQpS,GAPHkS,aAjBhB5Z,GAAWma,GACxB,qBAAKlqB,UAAWR,EAAQypB,YAAxB,SACI,cAAClhB,EAAA,EAAD,UACKmiB,MAgCb,cAACiD,GAAA,EAAD,CACIC,QAAM,EACNC,UAAW,EACXtT,IAAKqG,EACLpgB,UAAWR,EAAQ4d,UAJvB,SAMK6P,I,IEjbQK,G,WAEjB,WAAYC,GAAW,oBACnB/sB,KAAK+sB,SAAWA,EAChB/sB,KAAK0c,KAAO,EACZ1c,KAAK0T,SAAW,EAChB1T,KAAKgtB,SAAU,EACfhtB,KAAKioB,WAAa,EAClBjoB,KAAKsgB,mBAAqB,KAC1BtgB,KAAKitB,eAAiB,GACtBjtB,KAAKktB,cAAgB,GACrBltB,KAAKmtB,eAAiB,GACtBntB,KAAKotB,qBAAuB,GAC5BptB,KAAKqtB,4BAA8B,GACnCrtB,KAAKstB,cAAgB,GACrBttB,KAAKutB,gBAAkB,GACvBvtB,KAAKwtB,sBAAwB,GAC7BxtB,KAAKytB,cAAgB,GACrBztB,KAAK0tB,6BAA+B,GACpC1tB,KAAK2tB,kCAAoC,GAEzC,IAAM7R,EAAO9b,KAEbA,KAAK+sB,SAAShR,UAAY,SAACjJ,GACvB,OAAOA,EAAM9P,KAAKgH,SACd,IAAK,QACD8R,EAAKpI,SAAWZ,EAAM9P,KAAK0Q,SAC3BoI,EAAKkR,SAAU,EACflR,EAAK3O,YAAc2F,EAAM9P,KAAKmK,YAC9B2O,EAAKwE,mBAAqBxN,EAAM9P,KAAKsd,mBACrCxE,EAAKmM,WAAa,EAClBnM,EAAKY,KAAO5J,EAAM9P,KAAKqK,YAN3B,oBAQyByO,EAAKmR,gBAR9B,IAQI,2BAA0C,EACtC1X,EADsC,SAC7BzC,EAAM9P,KAAK4qB,SAT5B,8BAWI,MACJ,IAAK,aAE2B,IAAD,EAA3B,GADA9R,EAAKmM,WAAanV,EAAM9P,KAAKI,MACL,IAApB0Y,EAAKmM,WACL,UAAAnM,EAAKrP,iBAAL,cAAAqP,GAEJ,MACJ,IAAK,OAAL,oBACyBA,EAAKoR,eAD9B,IACI,2BAAyC,EACrC3X,EADqC,SAC5BzC,EAAM9P,KAAK6qB,OAF5B,8BAII,MACJ,IAAK,QAAL,oBACyB/R,EAAKqR,gBAD9B,IACI,2BAA0C,EACtC5X,EADsC,SAC7BzC,EAAM9P,KAAK6qB,OAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyB/R,EAAKuR,6BAD9B,IACI,2BAAuD,CAAC,IAA/C9X,EAA8C,QACnDuG,EAAKwE,mBAAqBxN,EAAM9P,KAAKoK,GACrCmI,EAASzC,EAAM9P,KAAKoK,KAH5B,8BAKI,MACJ,IAAK,cAAL,oBACyB0O,EAAKsR,sBAD9B,IACI,2BAAgD,EAC5C7X,EAD4C,SACnCzC,EAAM9P,KAAKI,MAAO0P,EAAM9P,KAAK6qB,OAF9C,8BAII,MACJ,IAAK,OAAL,oBACyB/R,EAAKwR,eAD9B,IACI,2BAAyC,EACrC/X,EADqC,YAD7C,8BAII,MACJ,IAAK,SAAL,oBACyBuG,EAAKyR,iBAD9B,IACI,2BAA2C,EACvChY,EADuC,SAC9BzC,EAAM9P,KAAKI,QAF5B,8BAII,MACJ,IAAK,eAAL,oBACyB0Y,EAAK0R,uBAD9B,IACI,2BAAiD,EAC7CjY,EAD6C,YADrD,8BAII,MACJ,IAAK,OAAL,oBACyBuG,EAAK2R,eAD9B,IACI,2BAAyC,EACrClY,EADqC,SAC5BzC,EAAM9P,KAAK4lB,SAAU9V,EAAM9P,KAAKF,MAAOgQ,EAAM9P,KAAK9B,QAFnE,8BAII,MACJ,IAAK,sBAAL,oBACyB4a,EAAK4R,8BAD9B,IACI,2BAAwD,EACpDnY,EADoD,YAD5D,8BAII,MACJ,IAAK,2BAAL,oBACyBuG,EAAK6R,mCAD9B,IACI,2BAA6D,EACzDpY,EADyD,YADjE,8BAII,MACJ,QACIlP,QAAQnC,MAAM,sBAAwB4O,EAAM9P,KAAKgH,W,oDAezDuL,GACAvV,KAAKgtB,SACLzX,IAEJvV,KAAKitB,eAAerjB,KAAK2L,K,6BAGtBA,GACHvV,KAAKktB,cAActjB,KAAK2L,K,8BAGpBA,GACJvV,KAAKmtB,eAAevjB,KAAK2L,K,oCAGfA,GACVvV,KAAKotB,qBAAqBxjB,KAAK2L,K,2CAGdA,GACjBvV,KAAKqtB,4BAA4BzjB,KAAK2L,K,6BAGnCA,GACHvV,KAAKstB,cAAc1jB,KAAK2L,K,+BAGnBA,GACLvV,KAAKutB,gBAAgB3jB,KAAK2L,K,qCAGfA,GACXvV,KAAKwtB,sBAAsB5jB,KAAK2L,K,6BAG7BA,GACHvV,KAAKytB,cAAc7jB,KAAK2L,K,4CAGNA,GAClBvV,KAAK0tB,6BAA6B9jB,KAAK2L,K,iDAGhBA,GACvBvV,KAAK2tB,kCAAkC/jB,KAAK2L,K,4BAG1C7B,GACF1T,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,QAAS0J,SAAUA,M,6BAIvD1T,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,W,6BAIpChK,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,W,8BAIpChK,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,Y,yCAGrBoD,GACfpN,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,qBAAsBoD,GAAIA,M,gCAGxDoc,GACNxpB,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,YAAa5G,MAAOomB,M,uCAG3CsE,GACb9tB,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,mBAAoB5G,MAAO0qB,M,0CAG/CrwB,GAChBuC,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,sBAAuB5G,MAAO3F,M,+CAG7CmsB,GACrB5pB,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,2BAA4B5G,MAAOwmB,M,8BAIvE5pB,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,UACpChK,KAAK+sB,SAAS/Q,U,kCA9Fd,OAAOhc,KAAK0c,M,aAGAtZ,GACZpD,KAAK0c,KAAOtZ,EACZpD,KAAKioB,WAAa,EAClBjoB,KAAK+sB,SAAShjB,YAAY,CAACC,QAAS,cAAe5G,MAAOpD,KAAK0c,W,KChGjEtY,GAAY/F,YAAW,CACzBC,KAAM,CACFkQ,OAAQ,qBACR/P,SAAU,WACVwX,UAAW,UAEf2G,UAAW,CACPje,MAAO,OACP6P,OAAQ,QAEZuf,WAAY,CACRpvB,MAAO,OACP6P,OAAQ,OACRwf,OAAQ,KAIhB,SAASC,GAAa/O,EAAcgP,GAChC,GAAIhP,EAAe,EACf,OAAO+O,GAAa,EAAGC,GAG3B,IAAMC,EAAKjP,EAAe,IAEpBkP,GADNlP,GAAgBA,EAAeiP,GAAM,KACT,GAEtBE,GADNnP,GAAgBA,EAAekP,GAAQ,IACX,GAE5B,OAAIF,GAAqB,KAEdI,IADMpP,EAAemP,GAAQ,IAClB,IAAMC,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGhEG,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGtD,SAASG,GAAIE,GACT,OAAOlP,OAAOkP,GAAGjP,SAAS,EAAG,KAGjC,SAASgP,GAAOC,GACZ,OAAOlP,OAAOkP,GAAGD,OAAO,EAAG,KAG/B,SAASE,GAAYC,EAAUC,EAAUnF,EAAWoF,GAChD,IAAIC,EAGIA,EAFJrF,GAAaA,EAAU5oB,OAAS,EAC5BguB,EACkBpF,EAAUA,EAAU5oB,OAAS,GAAGsK,IAEhCse,EAAUA,EAAU5oB,OAAS,GAAGkuB,YAGpC,EAGtB,IAAMC,EAAcL,EAAS1O,SAAW0O,EAAS1O,QAAQtM,SACnD,IAAOgb,EAAS1O,QAAQtM,SACxB,EAEAsb,EAAcL,EAAS3O,SAAW2O,EAAS3O,QAAQtM,SACnD,IAAOib,EAAS3O,QAAQtM,SACxB,EAEN,OAAO3C,KAAK0L,IAAIuS,EAAaje,KAAK0L,IAAIoS,EAAiBE,IAG5C,SAASE,GAAOlwB,GAAQ,IAAD,IAC3BmwB,EAAiJnwB,EAAjJmwB,eAAgBnvB,EAAiIhB,EAAjIgB,iBAAkBoL,EAA+GpM,EAA/GoM,UAAWgkB,EAAoGpwB,EAApGowB,UAAWC,EAAyFrwB,EAAzFqwB,cAAe3a,EAA0E1V,EAA1E0V,WAAY4a,EAA8DtwB,EAA9DswB,QAAS5N,EAAqD1iB,EAArD0iB,cAAe4H,EAAsCtqB,EAAtCsqB,OAAQiG,EAA8BvwB,EAA9BuwB,SAAU1N,EAAoB7iB,EAApB6iB,iBADlG,EAEuC7iB,EAAMwwB,QAAxEnhB,EAF2B,EAE3BA,aAAc+J,EAFa,EAEbA,UAAWqX,EAFE,EAEFA,aAActX,EAFZ,EAEYA,UAAWuX,EAFvB,EAEuBA,aAFvB,EAGZ/xB,qBAHY,mBAG3B4X,EAH2B,KAGtBoa,EAHsB,OAIAhyB,qBAJA,mBAI3B8rB,EAJ2B,KAIhBmG,EAJgB,KAK5BC,EAAe/P,mBACrB+P,EAAa5P,QAAUwJ,EANW,MAOc9rB,oBAAS,GAPvB,mBAO3BmyB,EAP2B,KAOTC,EAPS,OAQJpyB,oBAAS,GARL,mBAQ3BsjB,EAR2B,KAQlB+O,EARkB,OAS0BryB,mBAAS,GATnC,mBAS3BisB,EAT2B,KASHqG,EATG,KAU5BnG,EAAahK,mBACnBgK,EAAW7J,QAAUgB,EAXa,MAYVtjB,qBAAfmnB,EAZyB,sBAaInnB,qBAbJ,mBAa3ByP,EAb2B,KAad8iB,EAbc,OAckBvyB,qBAdlB,oBAc3B4iB,GAd2B,MAcP4P,GAdO,SAeNxyB,mBAAS,GAfH,qBAe3ByjB,GAf2B,MAenBgP,GAfmB,SAgBAzyB,qBAhBA,qBAgB3Bie,GAhB2B,MAgBhByU,GAhBgB,SAiBI1yB,oBAAS,GAjBb,qBAiB3B2yB,GAjB2B,MAiBdC,GAjBc,SAkBkB5yB,oBAAS,GAlB3B,qBAkB3B6yB,GAlB2B,MAkBPC,GAlBO,MAmB5BC,GAAwB5Q,mBAC9B4Q,GAAsBzQ,QAAUuQ,GApBE,OAqBsB7yB,oBAAS,GArB/B,qBAqB3BqkB,GArB2B,MAqBL2O,GArBK,MAsB5BC,GAA0B9Q,mBAChC8Q,GAAwB3Q,QAAU+B,GAClC,IAAM+C,GAActe,uBAAY,kBAAMqe,EAAY,MAAK,IACjDzD,GAAmBvB,iBAAO,CAAC0E,EAAE,EAAGC,EAAE,IAClCkK,GAAW7O,mBACX8O,GAAW9O,mBACX+Q,GAAe3G,mBAAQ,WACzB,OACW,IAAInC,GADX0H,EACwBd,GACjBe,GAAgBna,EACCqZ,GAGJ,MACzB,CAACa,EAAcC,EAAcna,IAC1ByL,GAAQkJ,mBAAQ,kBAAM,IAAI3N,KAAS,IACnCtd,GAAUoF,KAtCkB,GAuCQ1G,mBAAS,IAvCjB,qBAuC3BmzB,GAvC2B,MAuCZC,GAvCY,MAwC5BrG,GAAY5K,iBAAO,GACzB4K,GAAUzK,QAAUyO,GAAYC,GAAUC,GAAUnF,GAAW,GAE/D,IAAMuH,GAAOvqB,sBAAW,uCAAC,WAAOuX,EAAUgD,EAAO8M,GAAxB,eAAA1nB,EAAA,yDACfuW,EAAOqB,EAAW0M,GAAUzK,QAClCe,EAAMiQ,QAAQtU,GACdoI,MAEI+I,EALiB,gCAMX+C,GAAaG,KAAKrU,EAAO,KANd,2CAAD,0DAQrB,CAACoI,GAAa8L,KA0OjB,SAAShqB,GAAKma,EAAO6P,EAAc/C,GAC/BkC,GAAW,GACXhP,EAAM9V,QAEF4iB,GACA+C,EAAahqB,OAIrB,SAASgF,GAAMmV,EAAO6P,EAAc/C,GAChCkC,GAAW,GACXhP,EAAMlU,OAEFghB,GACA+C,EAAahlB,QAtPrB3M,qBAAU,WAAM,4CACZ,wCAAAkH,EAAA,yDACI,UAAAwoB,GAAS3O,eAAT,SAAkBhE,QAClB2S,GAAS3O,QAAU,KACnBe,GAAMiQ,QAAQ,GACdjQ,GAAMlU,OACNkjB,GAAW,GACXE,EAAe,MACfC,GAAsB,MACtBC,GAAU,GACVO,IAAwB,GACxBhC,GAAS1O,QAAQ3S,YAAc,EAC/BqhB,GAAS1O,QAAQpU,SAIbwC,EAfR,wBAgBQ0hB,GAAoB,GAhB5B,oBAmBgCZ,EAAe1F,UAAUpb,GAnBzD,QAmBkBqD,EAnBlB,OAoBkB7Q,EAAS6Q,EAAM7Q,OAAS,EAAI6Q,EAAMA,EAAM7Q,OAAS,GAAGsK,IAAM,EAChEse,EAAY/X,EAAMhJ,KAAI,SAAC0iB,GAAD,MAAQ,CAC1BpqB,KAAMoqB,EAAEpqB,KACRkK,MAAOkgB,EAAElgB,MACTqhB,cAAenB,EAAElgB,MACjBC,IAAKigB,EAAEjgB,IACP4jB,YAAa3D,EAAEjgB,IACf+T,YAAagP,GAAa9C,EAAElgB,MAAOrK,OAGvC+uB,EAAanG,GACbwG,EAA0BjqB,KAAKC,OA/B3C,mDAiCYqpB,EAAQ,KAAEja,SAjCtB,yBAmCY0a,GAAoB,GAnChC,6CAsCQtG,EAAY,KAtCpB,YAyCQgG,EAzCR,kCA0CcoB,GAAaK,UA1C3B,QA2CQnM,KA3CR,yBA4Ce2K,GAAgBna,KAGnBma,GACM9T,EAAY2D,OAAOvZ,KAAKC,OAC9B4V,EAAU,IAAIkR,GAAa,IAAIpR,GAA8BC,IAC7DyU,GAAazU,IACNrG,IACPsG,EAAU,IAAIkR,GAAa,IAAI7Q,GAAuB3G,EAAIlI,GAAIjC,KACtD+lB,OAGZvC,GAAS3O,QAAUpE,EACfuV,GAAa,EAEjBvV,EAAQwV,QAAO,kBAAM3P,EAAcgO,MACnC7T,EAAQ2G,gBAAe,kBAAM+N,IAAe,SAAAhO,GAAM,OAAKA,QACvD1G,EAAQiH,4BAA2B,WAC/B2N,IAAsB,SAAA5G,GAElB,OADAhO,EAAQyV,0BAA0BzH,IAC1BA,QAGhBhO,EAAQqV,SAAQ,SAACrD,GACbnD,GAAUzK,QAAUyO,GAAYC,GAAUC,GAAUiB,EAAa5P,SACjEpE,EAAQ0V,MAAM7G,GAAUzK,SAEpB4P,EAAa5P,UACbpE,EAAQ2V,iBAAiBxxB,EAAiBwxB,kBAC1C3V,EAAQ4N,UAAUoG,EAAa5P,UAGnCpE,EAAQ4V,oBAAoBb,GAAwB3Q,SACpDpE,EAAQyV,yBAAyBZ,GAAsBzQ,SAEnDpE,EAAQzO,aAAeyO,EAAQzO,YAAYvM,OAAS,GACpDqvB,EAAetB,GAAS3O,QAAQ7S,aAChC+iB,GAAsBvB,GAAS3O,QAAQM,sBAEvC2P,EAAe,MACfC,GAAsB,OAG1BnP,GAAMiQ,QAAuC,IAA/BrC,GAAS3O,QAAQ3S,aAE3BugB,EACA7M,GAAMlU,OAENkU,GAAM9V,QAGV8kB,GAAYnC,GAEPuD,IACDvV,EAAQ2F,QAAO,SAACsM,GAAD,OAAUjnB,GAAKma,GAAO6P,GAAc/C,MACnDjS,EAAQ0F,SAAQ,SAACuM,GAAD,OAAUjiB,GAAMmV,GAAO6P,GAAc/C,MACrDjS,EAAQ6V,UAAS,SAACtQ,GAAD,aAAYgP,GAAUpf,KAAK0L,IAAL,WAAUgO,GAAUzK,eAApB,QAA+B,EAAGmB,OACzEvF,EAAQyN,QAAO,SAACT,EAAU9lB,EAAO5B,GAAlB,OAA4BmoB,EACvCT,EACAzQ,EACAD,EACA9J,EACAwN,EAAQ0E,mBACRxd,EACA5B,MAEJ0a,EAAQqG,uBAAsB,kBAAMyO,IAAwB,SAAAjzB,GACxD,IAAM6F,GAAY7F,EAElB,OADAme,EAAQ4V,oBAAoBluB,GACrBA,QAEXsY,EAAQ8V,cAAR,uCAAsB,WAAOrkB,EAAawgB,GAApB,eAAA1nB,EAAA,6DACZ4X,EAAyB,IAAd1Q,EAAqBod,GAAUzK,QAE5C6J,EAAW7J,SACXe,GAAMlU,OAJQ,SAOZkkB,GAAKhT,EAAUgD,GAAO8M,GAPV,OASdhE,EAAW7J,SACXe,GAAM9V,QAVQ,2CAAtB,yDAaA2Q,EAAQ2E,qBAAR,uCAA6B,WAAOnT,GAAP,SAAAjH,EAAA,6DACrB0jB,EAAW7J,SACXe,GAAMlU,OAFe,SAKnB+jB,GAAaK,UALM,OAMrBpH,EAAW7J,SACXe,GAAM9V,QAGVilB,GAAsB9iB,GAVG,2CAA7B,uDAaA+jB,GAAa,OA7I7B,kEADY,uBAAC,WAAD,gCAoJZD,GAAOS,MAAK,kBAAMrC,SACnB,CAACJ,EAAgB/jB,EAAWpL,EAAkBghB,GAAO6P,GAAcG,GAAMzB,EAAUD,EAAS5N,EAAe4H,EAAQjb,EAAc+J,EAAWqX,EAActX,EAAWuX,EAAcna,EAAKwP,GAAasK,IAExMnwB,qBAAU,WACN,GAAK8iB,IAIAyH,GAAkC,IAArBA,EAAU5oB,OAA5B,CAIA,IAAIgxB,GAAU,EACVC,EAAmB,IAEjBzM,EAAWC,YAAW,sBAAC,8CAAAlf,EAAA,yDACnBvF,EAAS6pB,GAAUzK,QADA,iDAOnBjC,EAAWgD,GAAMhD,SAASnd,GAE5BkxB,EAAqB,EACrBC,GAAgB,EAEXpxB,EAAI6oB,EAAU5oB,OAAS,EAZP,YAYUD,GAAK,GAZf,oBAafwqB,EAAI3B,EAAU7oB,GACdsK,EAAQkgB,EAAElgB,MAAQrK,EAClBsK,EAAMigB,EAAEjgB,IAAMtK,IAEhBmd,GAAY9S,GAjBK,wBAkBb8S,EAAW7S,GACX6mB,EAAepxB,EACfmxB,EAAqBnxB,GAErBmxB,EAAqB/gB,KAAKC,IAAIwY,EAAU5oB,OAAS,EAAGD,EAAI,GAtB3C,+BAYoBA,EAZpB,0BA6BrBoxB,IAAiBD,EA7BI,uBA8BfE,EAAexI,EAAUsI,IAEd7mB,MAAQ8S,EAAWnd,EAASixB,EAAmB,KAhC3C,sDAoCjBhI,EAAW7J,SACXe,GAAMlU,OAGL+kB,EAxCgB,wBAyCjBA,GAAU,EACJK,EAAKlsB,KAAKC,MA1CC,UA2CX+qB,GAAKiB,EAAa/mB,MAAQrK,EAAQmgB,IAAO,GA3C9B,QA4CjB8Q,EAAmB9rB,KAAKC,MAAQisB,EAChCL,GAAU,EA7CO,QAgDjB/H,EAAW7J,SACXe,GAAM9V,QAjDW,4CAoD1B,KAEH,OAAO,kBAAMwa,cAAcL,OAC5B,CAACoE,EAAWzH,GAAsBhB,GAAOgQ,KAE5C9xB,qBAAU,WACFoxB,IAAe1U,IAAa8T,GAC5B1xB,OAAOmB,KACHgzB,qBAAsCC,mBAAmB1C,GAAgB,YAAc9T,GAAY,eACnG,mBAAqB8T,EACrB,kCAIRO,EAA0BjqB,KAAKC,SAChC,CAACqqB,GAAa1U,GAAW8T,EAAcL,IAoB1C,IAAMgD,GAAa5rB,uBAAY,kBAAMI,GAAKma,GAAO6P,IAAc,KAAO,CAAC7P,GAAO6P,KACxEyB,GAAc7rB,uBAAY,kBAAMoF,GAAMmV,GAAO6P,IAAc,KAAO,CAAC7P,GAAO6P,KAC1E7L,GAAave,sBAAW,uCAAC,WAAOuX,GAAP,SAAA5X,EAAA,6DACvB0jB,EAAW7J,SACXe,GAAMlU,OAFiB,SAKrBkkB,GAAKhT,EAAUgD,IAAO,GALD,OAOvB8I,EAAW7J,SACXe,GAAM9V,QARiB,2CAAD,sDAU3B,CAAC8V,GAAOgQ,KAELuB,GAAuB9rB,sBAAW,uCAAC,WAAOuX,EAAUwU,GAAjB,SAAApsB,EAAA,6DAChCosB,GACD3mB,GAAMmV,GAAO6P,IAAc,GAG3B/G,EAAW7J,SACXe,GAAMlU,OAN2B,SAS/BkkB,GAAKhT,EAAUgD,IAAO,GATS,OAWjCwR,IAAe1I,EAAW7J,SAE1BpZ,GAAKma,GAAO6P,IAAc,GAbO,2CAAD,wDAerC,CAAC7P,GAAOgQ,GAAMH,KAEX3Z,GAAazQ,uBAAY,SAACoiB,EAAU4J,GACtCnJ,EACIT,EACAzQ,EACAD,EACA9J,EACAkS,MAEL,CAAC+I,EAAQlR,EAAWD,EAAW9J,EAAckS,KAE1CmS,GAAkBjsB,uBAAY,SAACC,GACjC2a,GAAiBpB,QAAQuE,EAAI9d,EAAEisB,QAC/BtR,GAAiBpB,QAAQwE,EAAI/d,EAAEksB,UAChC,IAEGvM,GAA2B5f,sBAAW,uCAAC,WAAO4G,GAAP,SAAAjH,EAAA,6DACrCwoB,GAAS3O,SACT2O,GAAS3O,QAAQ4S,mBAAmBxlB,GAGxCxB,GAAMmV,GAAO6P,IAAc,GALc,SAOnCG,GAAK,EAAGhQ,IAAO,GAPoB,OASrC8I,EAAW7J,SACXpZ,GAAKma,GAAO6P,IAAc,GAVW,2CAAD,sDAYzC,CAAC7P,GAAO6P,GAAcG,KAEnBxK,GAAoB/f,uBAAY,SAAC4G,GACnC,IAAMkI,EAAMub,GAAcnmB,QAAO,SAAAG,GAAC,OAAIA,EAAEuC,KAAOA,KAAI,GACnDsiB,EAAOpa,KACR,CAACub,KAEEgC,GAAqBrsB,uBAAY,SAAC2a,GAAY,IAAD,EAC/CgP,GAAUpf,KAAK0L,IAAL,WAAUgO,GAAUzK,eAApB,QAA+B,EAAGmB,MAC7C,IAEHliB,qBAAU,WACFkwB,IACAA,EAAUnP,QAAUmB,IAGxBwO,GAAa,SAACnG,GAAe,IAAD,EACxB,GAAKA,EAAL,CAIA,IAAM5oB,EAAS4oB,EAAU5oB,OAAS,EAAI4oB,EAAUA,EAAU5oB,OAAS,GAAGsK,IAAMiW,GAAS,EAE/E2R,EAAetJ,EAAU/gB,KAAI,SAAA0iB,GAAC,MAAK,CACrCpqB,KAAMoqB,EAAEpqB,KACRkK,MAAOkgB,EAAEmB,cAAgBnL,GACzBmL,cAAenB,EAAEmB,cACjBphB,IAAKigB,EAAE2D,YAAc3N,GACrB2N,YAAa3D,EAAE2D,YACf7P,YAAagP,GAAa9C,EAAEmB,cAAgBnL,GAAQvgB,OAKxD,OAFA,UAAA+tB,GAAS3O,eAAT,SAAkBwJ,UAAUsJ,GAErBA,QAGZ,CAAC3R,GAAQgO,IAEZ,IAAMnI,GAAqBxgB,uBAAY,SAACusB,GAChCrE,GAAS1O,UACT0O,GAAS1O,QAAQkE,OAAS6O,KAE/B,IAEGC,GAA4BxsB,uBAAY,kBAAOkqB,IAAwB,SAAAqC,GAAC,OAAKA,OAAI,IAEvF9zB,qBAAU,WACN,IAAMmmB,EAAWC,aAAY,WACzB,IAAMzkB,EAAS6pB,GAAUzK,QACRe,GAAMhD,SAASnd,IAEhB,IACZmgB,GAAMiQ,QAAQ,GACdjQ,GAAMlU,OACN+jB,GAAahlB,QACbmkB,GAAW,GACXC,EAA0BjqB,KAAKC,UAEpC,KAEH,OAAO,kBAAMyf,cAAcL,MAC5B,CAACrE,GAAOyI,EAAWoH,KAEtB3xB,qBAAU,WACN,IAAMmmB,EAAWC,aAAY,WACzB,GAAItmB,EAAMoM,UAAU6J,KAAKpU,SAAWiwB,GAAcjwB,OAC9CkwB,GAAiB/xB,EAAMoM,UAAU6J,UAC9B,CAGH,IAFA,IAAI8V,GAAS,EAEJnqB,EAAI,EAAGA,EAAIkwB,GAAcjwB,SAAUD,EAAG,CAC3C,IAAMsyB,EAAKpC,GAAclwB,GACnBuyB,EAAKn0B,EAAMoM,UAAU6J,KAAKrU,GAChC,GAAIsyB,EAAG7lB,KAAO8lB,EAAG9lB,IACV6lB,EAAGzuB,QAAU0uB,EAAG1uB,OAChByuB,EAAG1nB,MAAQ2nB,EAAG3nB,IAAK,CACtBuf,GAAS,EACT,OAIJA,GACAgG,GAAiB/xB,EAAMoM,UAAU6J,MAIhBM,GAAyF,IAAlFvW,EAAMoM,UAAU6J,KAAKtK,QAAO,SAAAG,GAAC,OAAIA,EAAEuC,KAAOkI,EAAIlI,IAAMvC,EAAEU,MAAQ+J,EAAI/J,OAAK3K,SAGnG8uB,EAAO,MACP3wB,EAAMswB,QAAQ,4BAA8B/Z,EAAIlI,GAAK,IAAMkI,EAAI9Q,UAEpE,KAEH,OAAO,kBAAMihB,cAAcL,MAC5B,CAACyL,GAAevb,EAAKvW,IAExBE,qBAAU,WACNywB,EAAO,QACR,CAACvX,EAAWD,IAEf,IAAMtX,GAAS6pB,GAAUzK,QACnBmT,GAAS3D,GAAgBC,GAAgBjG,EACzC4J,GAAgBD,IAAU1D,GAAgB9T,KAAc0U,GAE9D,OACI,sBACIgD,YAAaZ,GACbjzB,UAAWR,GAAQV,KAFvB,UAII,eAACgpB,GAAA,EAAD,CACI1K,WAAS,EACT2K,UAAU,MACV+L,KAAK,SACL9zB,UAAWR,GAAQ4d,UAJvB,UAMKwW,IACG,cAAC9L,GAAA,EAAD,CAAMtQ,MAAI,EAACjJ,MAAO,CAACtJ,SAAU,EAAGiS,SAAU,KAA1C,SACI,wBACI6C,IAAK6V,EACL5vB,UAAWR,GAAQ+uB,WACnBxiB,IAAK2mB,qBAAsCC,mBAAmB1C,GAAgB,YAAc9T,GAAY,gBACxGnX,MAAM,kBAIf4uB,KAA0B,QAAT,EAAA5J,SAAA,eAAW5oB,QAAS,IACpC,eAAC0mB,GAAA,EAAD,CAAMtQ,MAAI,EAACjJ,MAAO,CAACtJ,SAAU2uB,GAAgB,EAAI,EAAGz0B,MAAOy0B,IAAiB7C,GAAqB,EAAI,QAArG,UACK4C,MAAY1D,IAAiBY,KAC1B,cAACvP,GAAD,CACIM,iBAAkBA,GAClBJ,QAASA,EACTD,MAAOA,GACPngB,OAAQA,GACRsgB,cAAeuN,GAAYC,GAAUC,GAAUnF,GAAW,GAC1Drc,YAAaA,EACbmT,mBAAoBA,GACpBtL,MAAOya,IAAiBD,GAAgBqB,GACxCnQ,YAAapL,GAAOA,EAAIlI,GACxB+K,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWzV,KACtBwV,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWxV,KACtBue,eAAe,EACfE,OAAQA,GACRW,cAAeyR,QAAQ/D,GACvBxN,2BAA4BuR,QAAQ/D,KAA0B,QAAT,EAAAhG,SAAA,eAAW5oB,QAAS,EACzEmhB,qBAAsBA,GACtBR,OAAQ6Q,GACR9Q,QAAS+Q,GACTnS,OAAQ6E,GACRxE,qBAAsB6F,GACtBzF,cAAe4F,GACf/E,cAAe,kBAAMziB,EAAMyiB,cAAcgO,IACzC/N,cAAe,kBAAM1iB,EAAM0iB,cAAcgO,IACzC/N,eAAgBmR,GAChBlR,eAAgBqF,GAChB/E,sBAAuB+Q,GACvBpR,iBAAkBA,EAClB7hB,iBAAkBA,IAG1B,cAACwpB,GAAD,CACIvI,QAASA,EACTwI,UAAWA,EACXzI,MAAOA,GACPngB,OAAQA,GACR6oB,eAAgB1qB,EAAM0qB,eACtBhV,WAAYA,EACZ8T,WAAYkH,IAAiBY,GAC7B9gB,QAASsgB,EACTnG,aAAsB,OAATvR,QAAS,IAATA,OAAA,EAAAA,EAAWzV,OAAS2tB,KAAW,OAAInY,QAAJ,IAAIA,OAAJ,EAAIA,EAAWxV,MAC3Dkf,iBAAkBA,EAClB+H,uBAAwBA,EACxBC,OAAQwJ,IAAiB7C,GACzBrQ,OAAQoS,GACRjJ,OAAQpS,WAKxB,uBAAOsC,IAAKmV,GAAUnjB,IAAKikB,O,wBCnmBxB,SAASgE,GAAT,GAAmF,IAAvDt0B,EAAsD,EAAtDA,KAAM6F,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUyuB,EAA2B,EAA3BA,yBAA2B,EAC3D/1B,mBAAS,IADkD,mBACtFyF,EADsF,KAC3EuwB,EAD2E,KAG7Fz0B,qBAAU,WACNy0B,EAAa,MACd,CAACx0B,IAEJ,IAAMy0B,EAAc,sBACbF,GADa,CAEhB,WACA,OACA,aACA,SACA,QACA,UACF3yB,SAASqC,GAEX,OACI,eAAC8D,EAAA,EAAD,CACI/H,KAAMA,EACNgI,qBAAmB,EACnBC,WAAS,EACTC,SAAS,KACTC,gBAAiB,kBAAMrC,KAL3B,UAOI,cAAC4uB,GAAA,EAAD,+BACA,cAAChsB,EAAA,EAAD,UACI,+BACI,cAACC,EAAA,EAAD,CACI3D,MAAOyvB,EACPxrB,WAAYwrB,GAAW,gBAAaxwB,EAAb,mBACvBqE,QAAQ,SACRL,WAAS,EACTY,MAAM,aACN3E,MAAOD,EACP4M,MAAM,YACN/H,SAAU,SAACvB,GAAD,OAAOitB,EAAajtB,EAAEwB,OAAO7E,cAInD,eAACsF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQhB,QAAS,kBAAM3C,KAAvB,oBAGA,cAAC2D,EAAA,EAAD,CACI9D,SAAU8uB,GAAoC,KAArBxwB,EAAU+C,OACnCyB,QAAS,kBAAM5C,EAAU5B,EAAU+C,SAFvC,0B,yGC5BV9B,GAAY/F,aAAW,SAACgG,GAAD,MAAY,CACrC/F,KAAM,CACF,uBAAwB,CACpBu1B,UAAWxvB,EAAME,QAAQ,GACzBD,aAAcD,EAAME,QAAQ,KAGpCuvB,gBAAiB,CACb,uBAAwB,CACpBD,UAAWxvB,EAAME,QAAQ,GACzBD,aAAcD,EAAME,QAAQ,KAGpCwvB,eAAgB,CACZp1B,MAAO,YAITq1B,GAA6B31B,aAAW,SAACgG,GAAD,MAAY,CACtD4vB,YAAa,CACTjW,OAAQ3Z,EAAME,QAAQ,GACtBmS,SAAU,KAEdpY,KAAM,CACFC,QAAS,OACTqQ,cAAe,MACfpQ,eAAgB,MAChBqQ,WAAY,gBAIpB,SAASqlB,GAAT,GAA2G,IAA/EnsB,EAA8E,EAA9EA,MAAO3E,EAAuE,EAAvEA,MAAO+wB,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,UAAWpsB,EAAyC,EAAzCA,SAAUqsB,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,UACpFt1B,EAAUg1B,KAEhB,OACI,sBAAKx0B,UAAWR,EAAQV,KAAxB,UACI,cAACuJ,EAAA,EAAD,CACIE,MAAOA,EACP3E,MAAOA,EACP4E,SAAUA,EACVb,WAAS,EACT4I,MAAM,YACN3H,WAAY,CACRC,aAAc+rB,GACV,cAAC9rB,EAAA,EAAD,CAAgB7J,SAAS,MAAzB,SACI,cAACgJ,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,cAAO6tB,QAAP,IAAOA,OAAP,EAAOA,KAA5B,SACI,cAAC,KAAD,WAMpB,eAACC,GAAA,EAAD,CAAa/0B,UAAWR,EAAQi1B,YAAhC,UACI,cAACO,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACIrxB,MAAOA,EACPyB,UAAWsvB,EACXpkB,MAAM,YACN/H,SAAUqsB,EAJd,SAMKF,GAAcA,EAAW1rB,KAAI,SAAA0iB,GAAC,OAC3B,cAACuJ,GAAA,EAAD,CAAkBtxB,MAAO+nB,EAAzB,SAA6BA,GAAdA,cAQxB,SAASwJ,GAAT,GAA0D,IAAjCvvB,EAAgC,EAAhCA,KAAMlG,EAA0B,EAA1BA,KAAM4uB,EAAoB,EAApBA,SAAUzuB,EAAU,EAAVA,QACpDL,EAAUoF,KADoD,EAExB1G,mBAASowB,EAAS7tB,gBAFM,mBAE7DA,EAF6D,KAE7C20B,EAF6C,OAGdl3B,qBAHc,mBAG7Dm3B,EAH6D,KAGxCC,EAHwC,OAIMp3B,mBAAS,GAJf,mBAI7Dq3B,EAJ6D,KAI9BC,EAJ8B,OAK5Ct3B,mBAASowB,EAAS5rB,MAAQ,IALkB,mBAK7DA,EAL6D,KAKvD+yB,EALuD,OAMlCv3B,qBANkC,mBAM7Dw3B,EAN6D,KAMlDC,EANkD,OAOpCz3B,mBAASowB,EAAS3rB,UAAY,IAPM,mBAO7DA,EAP6D,KAOnDizB,EAPmD,OAQhC13B,qBARgC,mBAQ7D23B,EAR6D,KAQjDC,EARiD,OAS1B53B,mBAASowB,EAAStsB,eAAiB,IATT,mBAS7DA,EAT6D,KAS9C+zB,EAT8C,OAUtB73B,mBAASowB,EAASrsB,iBAAmB,IAVf,mBAU7DA,GAV6D,KAU5C+zB,GAV4C,QAWhC93B,mBAASowB,EAASrrB,YAAc,IAXA,qBAW7DA,GAX6D,MAWjDgzB,GAXiD,SAYhC/3B,mBAASowB,EAAS7qB,YAAc,IAZA,qBAY7DA,GAZ6D,MAYjDyyB,GAZiD,SAalCh4B,mBAASowB,EAASttB,WAAa,IAbG,qBAa7DA,GAb6D,MAalDm1B,GAbkD,SAc9Bj4B,mBAASowB,EAASpsB,aAAe,IAdH,qBAc7DA,GAd6D,MAchDk0B,GAdgD,SAe5Bl4B,mBAASowB,EAAShsB,kBAfU,qBAe7DqD,GAf6D,MAe/C0wB,GAf+C,SAgBlCn4B,mBAASowB,EAASgI,WAhBgB,qBAgB7DA,GAhB6D,MAgBlDC,GAhBkD,SAiBhCr4B,qBAjBgC,qBAiB7Ds4B,GAjB6D,MAiBjDC,GAjBiD,SAkBVv4B,oBAAS,GAlBC,qBAkB7Dw4B,GAlB6D,MAkBtCC,GAlBsC,SAmB1Bz4B,mBAASowB,EAASsI,eAnBQ,qBAmB7DA,GAnB6D,MAmB9CC,GAnB8C,SAoB5B34B,mBAASowB,EAASwI,cApBU,qBAoB7DA,GApB6D,MAoB/CC,GApB+C,SAqBZ74B,mBAASowB,EAAS0I,sBArBN,qBAqB7DA,GArB6D,MAqBvCC,GArBuC,SAsBJ/4B,mBAASowB,EAAS4I,0BAtBd,qBAsB7DA,GAtB6D,MAsBnCC,GAtBmC,SAuBNj5B,mBAASowB,EAAS8I,yBAvBZ,qBAuB7DA,GAvB6D,MAuBpCC,GAvBoC,SAwBFn5B,mBAASowB,EAASgJ,2BAxBhB,qBAwB7DA,GAxB6D,MAwBlCC,GAxBkC,MA0B9DC,GAA6BxwB,uBAAY,SAACC,GAC5CmuB,EAAkBnuB,EAAEwB,OAAO7E,OAC3B4xB,EAAiCjvB,KAAKC,SACvC,IAEGixB,GAA4BzwB,uBAAY,SAACC,GAAD,OAAOuuB,EAAiCjvB,KAAKC,SAAQ,IAC7FkxB,GAAmB1wB,uBAAY,SAACC,GAAD,OAAOwuB,EAAQxuB,EAAEwB,OAAO7E,SAAQ,IAC/D+zB,GAAuB3wB,uBAAY,SAACC,GAAD,OAAO2uB,EAAY3uB,EAAEwB,OAAO7E,SAAQ,IACvEg0B,GAA4B5wB,uBAAY,SAACC,GAAD,OAAO8uB,EAAiB9uB,EAAEwB,OAAO7E,SAAQ,IACjFi0B,GAA8B7wB,uBAAY,SAACC,GAAD,OAAO+uB,GAAmB/uB,EAAEwB,OAAO7E,SAAQ,IACrFk0B,GAAyB9wB,uBAAY,SAACC,GAAD,OAAOgvB,GAAchvB,EAAEwB,OAAO7E,SAAQ,IAC3Em0B,GAAyB/wB,uBAAY,SAACC,GAAD,OAAOivB,GAAcjvB,EAAEwB,OAAO7E,SAAQ,IAC3Eo0B,GAAwBhxB,uBAAY,SAACC,GAAD,OAAOkvB,GAAalvB,EAAEwB,OAAO7E,SAAQ,IACzEq0B,GAA0BjxB,uBAAY,SAACC,GAAD,OAAOmvB,GAAenvB,EAAEwB,OAAO7E,SAAQ,IAC7Es0B,GAA4BlxB,uBAAY,SAACC,GAAD,OAAO4vB,GAAiB5vB,EAAEwB,OAAO7E,SAAQ,IACjFu0B,GAA2BnxB,uBAAY,SAACC,GAAD,OAAO8vB,GAAgB9vB,EAAEwB,OAAO7E,SAAQ,IAC/Ew0B,GAAmCpxB,uBAAY,SAACC,GAAD,OAAOgwB,GAAwBhwB,EAAEwB,OAAO7E,SAAQ,IAC/Fy0B,GAAuCrxB,uBAAY,SAACC,GAAD,OAAOkwB,GAA4BlwB,EAAEwB,OAAO7E,SAAQ,IACvG00B,GAAsCtxB,uBAAY,SAACC,GAAD,OAAOowB,GAA2BpwB,EAAEwB,OAAO7E,SAAQ,IACrG20B,GAAwCvxB,uBAAY,SAACC,GAAD,OAAOswB,GAA6BtwB,EAAEwB,OAAO7E,SAAQ,IACzG40B,GAAuBxxB,uBAAY,SAAC3E,GACtCg0B,IAAgB,SAAAoC,GACZ,IAAMC,EAAkB,GAGxB,OAFAv2B,OAAOqF,OAAOkxB,EAAiBD,GAC/BC,EAAgBr2B,GAAmB,GAC5Bq2B,KAEX/B,IAAyB,KAC1B,IACGrvB,GAA0BN,uBAAY,SAAC3E,EAAiBuB,GAC1DyyB,IAAgB,SAAAoC,GACZ,IAAMC,EAAkB,GAGxB,OAFAv2B,OAAOqF,OAAOkxB,EAAiBD,GAC/BC,EAAgBr2B,GAAmBuB,EAC5B80B,OAEZ,IACGC,GAA2B3xB,uBAAY,SAAC3E,GAAD,OAAqBg0B,IAAgB,SAAAoC,GAC9E,IAAMC,EAAkB,GAGxB,OAFAv2B,OAAOqF,OAAOkxB,EAAiBD,UACxBC,EAAgBr2B,GAChBq2B,OACP,IACEE,GAAwB5xB,uBAAY,SAACC,GAAD,OAAOsvB,GAAatvB,EAAEwB,OAAOowB,WAAU,IAEjFp5B,qBAAU,WACN,IAAIq5B,GAAW,EAETn5B,EAAUC,WAAU,sBAAC,sBAAA+G,EAAA,mEAEfmyB,EAFe,6DAMnBnD,EANmB,SAMA/vB,EAAK8vB,UAAUj1B,GANf,8CAOnBq1B,EAPmB,UAOClwB,EAAKiwB,WAAWp1B,GAPjB,mCAQnB60B,EAAuB,MARJ,sDAUfwD,EAVe,mDAcnBjyB,QAAQnC,MAAR,MACAixB,EAAa,MACbG,EAAc,MACdR,EAAuB,KAAE1f,SAjBN,0DAmBxB,KAEH,OAAO,WACHkjB,GAAW,EACX/4B,aAAaJ,MAElB,CAACiG,EAAMnF,EAAgB80B,IAE1B91B,qBAAU,WACN,GAAKkD,IAAY0yB,EAAjB,CAIA,IAAIyD,GAAW,EAuBf,OA5BY,mCA0BZC,GAEO,kBAAMD,GAAW,GA5BZ,4CAOZ,sBAAAnyB,EAAA,mEAEYmyB,EAFZ,6DAMQrC,GANR,MAMuB,IANvB,kBAMoC7wB,EAAKozB,gBAAgBr2B,EAAUlC,GANnE,uFAOQ60B,EAAuB,MAP/B,sDASYwD,EATZ,mDAaQjyB,QAAQnC,MAAR,MACA+xB,GAAc,MACdnB,EAAuB,KAAE1f,SAfjC,2DAPY,yBA6Bb,CAAChQ,EAAMjD,EAAUlC,EAAgB40B,EAAqBE,IAEzD,IAAM0D,GAAcjyB,uBAAY,WAC5BnH,EAAQ,CACJY,eAAgBA,EAChBiC,KAAMA,EACNC,SAAUA,EACVX,cAAeA,EACfC,gBAAiBA,GACjBgB,WAAYA,GACZQ,WAAYA,GACZzC,UAAWA,GACXkB,YAAaA,GACb40B,aAAcnR,OAAOmR,IACrBF,cAAeA,GACfM,yBAA0BvR,OAAOuR,IACjCF,qBAAsBA,GACtBI,wBAAyBA,GACzBE,0BAA2B3R,OAAO2R,IAClCh1B,iBAAkBqD,GAClB2wB,UAAWA,OAEhB,CAACz2B,EAASY,EAAgBiC,EAAMC,EAAUX,EAAeC,GAAiBgB,GAAYQ,GAAYzC,GAAWkB,GAAayD,GAAc2wB,GAAWQ,GAAcF,GAAeM,GAA0BF,GAAsBI,GAAyBE,KAEtP4B,GAAoB/2B,OAAOC,KAAKuD,IAAcsD,KAAI,SAAA5G,GACpD,OACI,cAACqyB,GAAD,CAEInsB,MAAK,UAAKlG,EAAL,UACLuB,MAAO+B,GAAatD,GACpBsyB,WAAY6B,GACZhuB,SAAU,SAAAvB,GAAC,OAAIK,GAAwBjF,EAAiB4E,EAAEwB,OAAO7E,QACjEixB,kBAAmB,SAAA5tB,GAAC,OAAIK,GAAwBjF,EAAiB4E,EAAEwB,OAAO7E,QAC1EkxB,UAAW,kBAAM6D,GAAyBt2B,IAC1CuyB,WAAW,GAPNvyB,MAYjB,OACI,eAAC,IAAMgY,SAAP,WACI,cAAC2Z,GAAD,CACIt0B,KAAMg3B,GACNzC,yBAA0B9xB,OAAOC,KAAKuD,IACtCJ,UAAWizB,GACXhzB,SAAU,kBAAMmxB,IAAyB,MAE7C,eAAClvB,EAAA,EAAD,CACI/H,KAAMA,EACNkI,SAAS,KACTD,WAAS,EACTE,gBAAiBoxB,GAJrB,UAMI,cAAC7E,GAAA,EAAD,uBAGA,cAAChsB,EAAA,EAAD,UACI,eAAC0f,GAAA,EAAD,CAAM1K,WAAS,EAAC2K,UAAU,SAAShjB,QAAS,EAA5C,UACI,eAAC+iB,GAAA,EAAD,CAAMtQ,MAAI,EAAV,UACI,cAAC2hB,GAAA,EAAD,mBACA,eAACC,GAAA,EAAD,CAAWp5B,UAAWR,EAAQV,KAA9B,UACI,cAACuJ,EAAA,EAAD,CACIE,MAAM,mBACN3E,MAAOnD,EACPiE,MAAOqvB,QAAQsB,GACf1sB,WAAY0sB,EACZ9kB,MAAM,YACN/H,SAAUgvB,GACV5uB,WAAY,CACRC,aACI,cAACC,EAAA,EAAD,CAAgB7J,SAAS,MAAzB,SACI,cAACgJ,EAAA,EAAD,CAAYE,QAASsvB,GAArB,SACI,cAAC,KAAD,WAMpB,eAAC4B,GAAA,EAAD,0BACiB96B,OAAO+6B,SAAS/L,SAAW,KAAOhvB,OAAO+6B,SAASC,SADnE,+FAIA,cAAC7E,GAAD,CACInsB,MAAM,OACN3E,MAAOlB,EACPiyB,WAAYe,EACZltB,SAAUkvB,GACV7C,kBAAmB6C,KAEvB,cAAChD,GAAD,CACInsB,MAAM,YACN3E,MAAOjB,EACPgyB,WAAYkB,EACZrtB,SAAUmvB,GACV9C,kBAAmB8C,KAEvB,cAACjD,GAAD,CACInsB,MAAM,iBACN3E,MAAO5B,EACP2yB,WAAY6B,GACZhuB,SAAUovB,GACV/C,kBAAmB+C,KAEvB,cAAClD,GAAD,CACInsB,MAAM,mBACN3E,MAAO3B,GACP0yB,WAAY6B,GACZhuB,SAAUqvB,GACVhD,kBAAmBgD,KAEvB,cAACnD,GAAD,CACInsB,MAAM,aACN3E,MAAO5C,GACP2zB,WAAY6B,GACZhuB,SAAUwvB,GACVnD,kBAAmBmD,KAEvB,cAACtD,GAAD,CACInsB,MAAM,cACN3E,MAAOX,GACP0xB,WAAY6B,GACZhuB,SAAUsvB,GACVjD,kBAAmBiD,KAEvB,cAACpD,GAAD,CACInsB,MAAM,cACN3E,MAAOH,GACPkxB,WAAY6B,GACZhuB,SAAUuvB,GACVlD,kBAAmBkD,KAEvB,cAACrD,GAAD,CACInsB,MAAM,eACN3E,MAAO1B,GACPyyB,WAAY6B,GACZhuB,SAAUyvB,GACVpD,kBAAmBoD,KAEtBiB,GACD,cAAC/vB,EAAA,EAAD,CACInJ,UAAWR,EAAQ+0B,eACnBpsB,QAAS,SAAClB,GAAD,OAAO0vB,IAAyB,IAF7C,8BAMA,cAAC6C,GAAA,EAAD,CACIC,QAAS,cAACC,GAAA,EAAD,CAAUb,QAASvC,GAAW9tB,SAAUowB,KACjDrwB,MAAM,0CAIlB,eAACuf,GAAA,EAAD,CAAMtQ,MAAI,EAAV,UACI,cAAC2hB,GAAA,EAAD,wCACA,eAACC,GAAA,EAAD,WACI,qBAAKp5B,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,QACLtC,MAAM,iBACNZ,WAAS,EACT/D,MAAOgzB,GACPrmB,MAAM,YACN/H,SAAU0vB,OAGlB,qBAAKl4B,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,SACLtC,MAAM,gBACNZ,WAAS,EACT/D,MAAOkzB,GACPvmB,MAAM,YACN/H,SAAU2vB,GACVwB,WAAY,CACRnoB,IAAK,EACLooB,KAAM,OAIlB,qBAAK55B,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,QACLtC,MAAM,yBACNZ,WAAS,EACT/D,MAAOozB,GACPzmB,MAAM,YACN/H,SAAU4vB,OAGlB,qBAAKp4B,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,SACLtC,MAAM,6BACNZ,WAAS,EACT/D,MAAOszB,GACP1uB,SAAU6vB,GACVsB,WAAY,CACRnoB,IAAK,EACLooB,KAAM,GAEVrpB,MAAM,gBAGd,qBAAKvQ,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,QACLtC,MAAM,4BACNZ,WAAS,EACT/D,MAAOwzB,GACP7mB,MAAM,YACN/H,SAAU8vB,OAGlB,qBAAKt4B,UAAWR,EAAQ80B,gBAAxB,SACI,cAACjsB,EAAA,EAAD,CACIwC,KAAK,SACLtC,MAAM,8BACNZ,WAAS,EACTgyB,WAAY,CACRnoB,IAAK,EACLyL,IAAK,EACL2c,KAAM,IAEVh2B,MAAO0zB,GACP/mB,MAAM,YACN/H,SAAU+vB,kBAOlC,cAACrvB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQhB,QAAS8wB,GAAjB,wBCvcpB,IASMY,GAAoB,iBACpBC,GAAU,OACVC,GAAc,WACdC,GAAmB,gBACnBC,GAAqB,kBACrBC,GAAgB,aAChBC,GAAgB,aAChBC,GAAe,YACfC,GAAiB,cACjBC,GAAsB,mBACtBC,GAAkB,eAClBC,GAAmB,gBACnBC,GAA8B,2BAC9BC,GAA0B,uBAC1BC,GAA6B,0BAC7BC,GAA+B,4BAC/BC,GAAY,SACZC,GAAe,YAEAC,G,iGAGb,MAAO,CACHt6B,eAAgBD,KAAKC,eACrBiC,KAAMlC,KAAKkC,KACXC,SAAUnC,KAAKmC,SACfX,cAAexB,KAAKwB,cACpBC,gBAAiBzB,KAAKyB,gBACtBgB,WAAYzC,KAAKyC,WACjBQ,WAAYjD,KAAKiD,WACjBzC,UAAWR,KAAKQ,UAChBsB,iBAAkB9B,KAAK8B,iBACvBJ,YAAa1B,KAAK0B,YAClB40B,aAAct2B,KAAKs2B,aACnBF,cAAep2B,KAAKo2B,cACpBM,yBAA0B12B,KAAK02B,yBAC/BF,qBAAsBx2B,KAAKw2B,qBAC3BI,wBAAyB52B,KAAK42B,wBAC9BE,0BAA4B92B,KAAK82B,0BACjChB,UAAW91B,KAAK81B,a,uCAKpB,MAAO,CACHQ,aAAct2B,KAAKs2B,aACnBF,cAAep2B,KAAKo2B,cACpBM,yBAA0B12B,KAAK02B,yBAC/BF,qBAAsBx2B,KAAKw2B,qBAC3BI,wBAAyB52B,KAAK42B,wBAC9BE,0BAA4B92B,KAAK82B,6B,qCAKrC,OAAO0D,aAAaC,QAAQpB,KAhEN,yB,aAmEP1rB,GACf6sB,aAAaE,QAAQrB,GAAmB1rB,K,2BAIxC,OAAO6sB,aAAaC,QAAQnB,K,aAGvBp3B,GACLs4B,aAAaE,QAAQpB,GAASp3B,K,+BAI9B,OAAOs4B,aAAaC,QAAQlB,K,aAGnBp3B,GACTq4B,aAAaE,QAAQnB,GAAap3B,K,oCAIlC,OAAOq4B,aAAaC,QAAQjB,K,aAGdh4B,GACdg5B,aAAaE,QAAQlB,GAAkBh4B,K,sCAIvC,OAAOg5B,aAAaC,QAAQhB,K,aAGZh4B,GAChB+4B,aAAaE,QAAQjB,GAAoBh4B,K,iCAIzC,OAAO+4B,aAAaC,QAAQf,K,aAGjBj3B,GACX+3B,aAAaE,QAAQhB,GAAej3B,K,iCAIpC,OAAO+3B,aAAaC,QAAQd,K,aAGjB12B,GACXu3B,aAAaE,QAAQf,GAAe12B,K,gCAIpC,OAAOu3B,aAAaC,QAAQb,K,aAGlBp5B,GACVg6B,aAAaE,QAAQd,GAAcp5B,K,kCAInC,OAAOg6B,aAAaC,QAAQZ,K,aAGhBn4B,GACZ84B,aAAaE,QAAQb,GAAgBn4B,K,uCAIrC,IAAMi5B,EAAmBH,aAAaC,QAAQX,IAE9C,OAAIa,EACO52B,KAAK0O,MAAMkoB,GAGf,I,aAGU74B,GACjB04B,aAAaE,QAAQZ,GAAqB/1B,KAAKC,UAAUlC,M,oCAIzD,OAAO04B,aAAaC,QAAQT,KApJP,W,aAuJP5D,GACdoE,aAAaE,QAAQV,GAAkB5D,K,mCAIvC,OAAOoE,aAAaC,QAAQV,KA7JR,I,aAgKPzD,GACbkE,aAAaE,QAAQX,GAAiBzD,K,2CAItC,OAAOkE,aAAaC,QAAQP,KAlKA,W,aAqKP1D,GACrBgE,aAAaE,QAAQR,GAAyB1D,K,+CAI9C,OAAOgE,aAAaC,QAAQR,KA3KI,G,aA8KPvD,GACzB8D,aAAaE,QAAQT,GAA6BvD,K,8CAIlD,OAAO8D,aAAaC,QAAQN,KAjLG,W,aAoLPvD,GACxB4D,aAAaE,QAAQP,GAA4BvD,K,gDAIjD,OAAO4D,aAAaC,QAAQL,KAxLK,I,aA2LPtD,GAC1B0D,aAAaE,QAAQN,GAA8BtD,K,6BAInD,OAAO0D,aAAaC,QAAQJ,KA/Ld,K,aAkMPnW,GACPsW,aAAaE,QAAQL,GAAWnW,K,gCAIhC,MAA8C,SAAvCsW,aAAaC,QAAQH,MAA4B,G,aAG9CxE,GACV0E,aAAaE,QAAQJ,GAAcxE,O,eClNtB8E,G,WAEjB,WAAYhf,GAAU,oBAClB5b,KAAK4b,QAAU,IAAIC,iBAAiBD,GACpC5b,KAAK0c,KAAO,EACZ1c,KAAK0T,SAAW,EAChB1T,KAAKktB,cAAgB,GACrBltB,KAAKmtB,eAAiB,GACtBntB,KAAKotB,qBAAuB,GAC5BptB,KAAKqtB,4BAA8B,GACnCrtB,KAAK66B,eAAiB,GACtB76B,KAAKitB,eAAiB,GACtBjtB,KAAK86B,mBAAqB,GAC1B96B,KAAK0tB,6BAA+B,GACpC1tB,KAAK2tB,kCAAoC,GAEzC,IAAM7R,EAAO9b,KAEbA,KAAK4b,QAAQ1R,UAAY,SAAC4I,GACtB,OAAOA,EAAM9P,KAAKgH,SACd,IAAK,OAED,MACJ,IAAK,QAAL,oBACyB8R,EAAKmR,gBAD9B,IACI,2BAA0C,EACtC1X,EADsC,SAC7BzC,EAAM9P,KAAK0Q,WAF5B,8BAII,MACJ,IAAK,OAAL,oBACyBoI,EAAKoR,eAD9B,IACI,2BAAyC,EACrC3X,EADqC,YAD7C,8BAII,MACJ,IAAK,QAAL,oBACyBuG,EAAKqR,gBAD9B,IACI,2BAA0C,EACtC5X,EADsC,YAD9C,8BAII,MACJ,IAAK,cAAL,oBACyBuG,EAAKsR,sBAD9B,IACI,2BAAgD,EAC5C7X,EAD4C,SACnCzC,EAAM9P,KAAKI,QAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyB0Y,EAAKuR,6BAD9B,IACI,2BAAuD,EACnD9X,EADmD,SAC1CzC,EAAM9P,KAAKoK,KAF5B,8BAII,MACJ,IAAK,QAAL,oBACyB0O,EAAK+e,gBAD9B,IACI,2BAA0C,EACtCtlB,EADsC,YAD9C,8BAII,MACJ,IAAK,YAAL,oBAC0BuG,EAAKgf,oBAD/B,IACI,2BAA+C,EAC3CvlB,EAD2C,SAClCzC,EAAM9P,KAAKI,QAF5B,8BAII,MACJ,IAAK,mBAED,MACJ,IAAK,sBAAL,oBAC0B0Y,EAAK4R,8BAD/B,IACI,2BAAyD,EACrDnY,EADqD,SAC5CzC,EAAM9P,KAAKI,QAF5B,8BAII,MACJ,IAAK,2BAAL,oBAC0B0Y,EAAK6R,mCAD/B,IACI,2BAA8D,EAC1DpY,EAD0D,SACjDzC,EAAM9P,KAAKI,QAF5B,8BAII,MACJ,QACIiD,QAAQnC,MAAM,sBAAwB4O,EAAM9P,KAAKgH,W,mDAc1DuL,GACHvV,KAAKktB,cAActjB,KAAK2L,K,8BAGpBA,GACJvV,KAAKmtB,eAAevjB,KAAK2L,K,oCAGfA,GACVvV,KAAKotB,qBAAqBxjB,KAAK2L,K,2CAGdA,GACjBvV,KAAKqtB,4BAA4BzjB,KAAK2L,K,8BAGlCA,GACJvV,KAAK66B,eAAejxB,KAAK2L,K,8BAGrBA,GACJvV,KAAKitB,eAAerjB,KAAK2L,K,kCAGjBA,GACRvV,KAAK86B,mBAAmBlxB,KAAK2L,K,4CAGXA,GAClBvV,KAAK0tB,6BAA6B9jB,KAAK2L,K,iDAGhBA,GACvBvV,KAAK2tB,kCAAkC/jB,KAAK2L,K,4BAG1C7B,EAAUka,EAAQzgB,EAAamT,GAAqB,IAAD,EACrD,UAAAtgB,KAAK4b,eAAL,SAAc7R,YAAY,CACtBC,QAAS,QACT0J,SAAUA,EACVka,OAAQA,EACRvgB,YAAa,EACbF,YAAaA,EACbmT,mBAAoBA,M,iCAIjB2H,GAAa,IAAD,EACnB,UAAAjoB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,aAAc5G,MAAO6kB,M,6BAGrD,IAAD,EACH,UAAAjoB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,OAAQ6jB,MAAM,M,8BAG7C,IAAD,EACJ,UAAA7tB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,QAAS6jB,MAAM,M,yCAGpCzgB,GAAK,IAAD,EACnB,UAAApN,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,qBAAsBoD,GAAIA,M,6BAG3D+T,GAAS,IAAD,EACX,UAAAnhB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,SAAU5G,MAAO+d,M,qCAGzC,IAAD,EACX,UAAAnhB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,mB,2BAGnC4e,GAAW,IAAD,EACX,UAAA5oB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,OAAQ4e,SAAUA,M,4CAGnC,IAAD,EAClB,UAAA5oB,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,0B,iDAGZ,IAAD,EACvB,UAAAhK,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,+B,8BAIhChK,KAAK4b,UACL5b,KAAK4b,QAAQ7R,YAAY,CAACC,QAAS,SACnChK,KAAK4b,QAAQI,QACbhc,KAAK4b,QAAU,Q,kCA/FnB,OAAO5b,KAAK0c,M,aAGAtZ,GAAQ,IAAD,EACnBpD,KAAK0c,KAAOtZ,EACZ,UAAApD,KAAK4b,eAAL,SAAc7R,YAAY,CAACC,QAAS,cAAe5G,MAAOpD,KAAK0c,KAAMmR,MAAM,Q,KCxE7EzpB,GAAY/F,YAAW,CACzBC,KAAM,CACFG,SAAU,WACV0X,gBAAiB,QACjB3H,OAAQ,QACRusB,SAAU,SACVx8B,QAAS,OACTqQ,cAAe,SACfpQ,eAAgB,SAChBqQ,WAAY,UAEhB4L,MAAO,CACHuD,OAAQ,QAEZgd,aAAc,CACVr2B,OAAQ,UAchB,SAASs2B,GACL3E,EACAF,EACAM,EACAF,EACAI,EACAE,GAEA,IAAMoE,EAAS,CACXz8B,SAAU,WACV8X,YAAa,GACbC,aAAc,GACdsG,OAAQ,IACRhO,UAAW,SACXiB,MAAOqmB,EACPnmB,SAAUkV,OAAOmR,IAGrB,GAAII,EAA2B,EAAG,CAC9B,IAAMyE,EAAYzE,EACZ3mB,EAAQymB,EACd0E,EAAM,WAAN,cAA8BC,EAA9B,cAA6CprB,EAA7C,iBAA2DorB,EAA3D,cAA0EprB,EAA1E,iBAAwForB,EAAxF,cAAuGprB,EAAvG,iBAAqHorB,EAArH,cAAoIprB,GAGxI,GAAI+mB,EAA4B,EAAG,CAC/B,IAAMnZ,EAAUmZ,EADe,EAjCvC,SAAkBsE,GACd,IAAIh7B,EAAS,4CAA4Ci7B,KAAKD,GAC9D,MAAO,CACHE,EAAGC,SAASn7B,EAAO,GAAI,IACvBo7B,EAAGD,SAASn7B,EAAO,GAAI,IACvBgrB,EAAGmQ,SAASn7B,EAAO,GAAI,KA+BLq7B,CADJ7E,GACP0E,EAHwB,EAGxBA,EAAGE,EAHqB,EAGrBA,EAAGpQ,EAHkB,EAGlBA,EACb8P,EAAM,gBAAN,eAAoCI,EAApC,aAA0CE,EAA1C,aAAgDpQ,EAAhD,aAAsDzN,EAAtD,KAGJ,OAAOud,EAGX,SAASQ,GAAYpjB,EAASqjB,EAAe1L,EAAgBC,GACzD,GAAInyB,OAAO69B,YAActjB,EAAQqC,WAAa,GAAKrC,EAAQsC,YAAc,EAAG,CACxE,IAAMihB,EAAa99B,OAAO+9B,OAAOD,YAAc99B,OAAO69B,WAAa79B,OAAOC,YACpE+9B,EAAch+B,OAAO+9B,OAAOC,aAAeh+B,OAAOi+B,YAAcj+B,OAAOE,aACvEuS,EAAcO,KAAKC,IAAI,EAAGD,KAAKC,IAAI6qB,EAAavjB,EAAQqC,WAAYohB,EAAczjB,EAAQsC,cAEhG7c,OAAOk+B,SACHzrB,EAAc8H,EAAQqC,YAAc5c,OAAO69B,WAAa79B,OAAOC,YAC/DwS,EAAc8H,EAAQsC,aAAe7c,OAAOi+B,YAAcj+B,OAAOE,cAIzE,IAAIi+B,EACAC,EAEJ,GAAI7jB,EAAQnL,YAAa,CACrB+uB,EAAS,GADY,oBAGP5jB,EAAQnL,aAHD,IAGrB,2BAAmC,CAAC,IAA3BtC,EAA0B,QAC/BqxB,EAAOtyB,KAAK,CACRwD,GAAIvC,EAAEuC,GACNrF,MAAO8C,EAAE9C,MACTyY,SAAU3V,EAAE2V,WAGZ3V,EAAEpN,UACF0+B,EAAgBtxB,EAAEuC,KAXL,oCAerB8uB,EAAS,KACTC,EAAgB,KAGpBlM,EAAeiM,GACfhM,EAAsBiM,GACtBR,EAAcrK,MAAMhZ,EAAQ5E,SAAU4E,EAAQsV,OAAQsO,EAAQC,GAuCnD,SAASC,GAAYr9B,GAChC,IAAMC,EAAUoF,KACTrE,EAAyDhB,EAAzDgB,iBAAkBmY,EAAuCnZ,EAAvCmZ,UAAW0D,EAA4B7c,EAA5B6c,QAAS0G,EAAmBvjB,EAAnBujB,OAAQ+M,EAAWtwB,EAAXswB,QAC/CgN,EAAexc,mBACf8O,EAAW9O,mBAJsB,EAKHriB,GAAc,GALX,mBAKhCqT,EALgC,KAKnBC,EALmB,KAMnC6d,EAAS3O,UACT2O,EAAS3O,QAAQrhB,MAAQkS,EACzB8d,EAAS3O,QAAQxR,OAASsC,GAE9B,IAAM6qB,EAAgB1R,mBAAQ,kBAAM,IAAI2Q,GAAchf,KAAU,CAACA,IAV1B,EAWTle,oBAAS,GAXA,mBAWhCsjB,EAXgC,KAWvB+O,EAXuB,KAYjCtN,EAzBV,WAA0B,IAAD,EACe/kB,mBAAS61B,QAAQ3lB,SAAS0uB,oBADzC,mBACd7Z,EADc,KACF8Z,EADE,KAUrB,OAPAt9B,qBAAU,WACN,IAAMid,EAAW,kBAAMqgB,EAAchJ,QAAQ3lB,SAAS0uB,qBAGtD,OAFA1uB,SAAS1P,iBAAiB,mBAAoBge,GAEvC,kBAAMtO,SAASzP,oBAAoB,mBAAoB+d,MAC/D,IAEIuG,EAeY+Z,GACb3S,EAAahK,mBACnBgK,EAAW7J,QAAUgB,EAdkB,MAeXtjB,mBAAS,GAfE,mBAehCkD,EAfgC,KAexB67B,EAfwB,OAgBX/+B,mBAAS,GAhBE,mBAgBhCyjB,EAhBgC,KAgBxBgP,EAhBwB,OAiBDzyB,qBAjBC,mBAiBhCyP,EAjBgC,KAiBnB8iB,EAjBmB,OAkBavyB,qBAlBb,mBAkBhC4iB,EAlBgC,KAkBZ4P,EAlBY,OAmBLxyB,mBAAS,IAnBJ,mBAmBhC8rB,EAnBgC,KAmBrBmG,EAnBqB,OAoBGjyB,mBAAS,IApBZ,mBAoBhCg/B,EApBgC,KAoBjBC,EApBiB,OAqBSj/B,oBAAS,GArBlB,mBAqBhCwkB,GArBgC,KAqBd0a,GArBc,QAsBiBl/B,oBAAS,GAtB1B,qBAsBhCqkB,GAtBgC,MAsBV2O,GAtBU,SAuBiBhzB,oBAAS,GAvB1B,qBAuBhCklB,GAvBgC,MAuBVia,GAvBU,MAwBjCC,GAAmBjd,iBAAO,IAChCid,GAAiB9c,QAAU0c,EAC3B,IAAM3b,GAAQkJ,mBAAQ,kBAAM,IAAI3N,KAAS,IACnC8E,GAAmBvB,iBAAO,CAAC0E,EAAE,EAAGC,EAAE,IAClC5E,GAAeC,mBA5BkB,GA6BbniB,qBA7Ba,qBA6BhCq/B,GA7BgC,MA6BzBC,GA7ByB,SA8BLt/B,oBAAS,GA9BJ,qBA8BhCu/B,GA9BgC,MA8BrBC,GA9BqB,SA+BOx/B,oBAAS,GA/BhB,qBA+BhCy/B,GA/BgC,MA+BfC,GA/Be,MAiCjCC,GAAmB72B,uBAAY,SAAA8R,GAC7BA,IACAqW,EAAS3O,QAAU1H,EAEQ,IAAvBA,EAAQ2P,WACRyT,GAAYpjB,EAASqjB,EAAe1L,EAAgBC,GAEpD5X,EAAQglB,aAAe,SAACxqB,GACpB4oB,GAAYpjB,EAASqjB,EAAe1L,EAAgBC,IAI5D5X,EAAQ7L,UAAY,SAACqG,GACjB6oB,EAAc1T,WAAW,GAErB4B,EAAW7J,SACXe,GAAM9V,SAIdqN,EAAQ/N,QAAU,SAACuI,GAAD,OAAWuc,EAzFzC,SAAsB/W,GAClB,IAAIpU,EACJ,OAAQoU,EAAQpU,MAAMq5B,MAClB,KAAK,EACDr5B,EAAQ,UACR,MACJ,KAAK,EACDA,EAAQ,gBACR,MACJ,KAAK,EACDA,EAAQ,iBACR,MACJ,KAAK,EACDA,EAAQ,uBACR,MACJ,QACIA,EAAQ,gBAIhB,OAAOA,EAAQ,MAAQoU,EAAQpU,MAAMkR,SAAW,qBAqEHooB,CAAallB,QAEvD,CAACyI,GAAO4a,EAAetM,IAE1B,SAASoO,GAAiBrwB,GAAK,IAAD,gBACZuhB,EAAS3O,QAAQ7S,aADL,IAC1B,2BAA4C,CAAC,IAApCtC,EAAmC,QACpCA,EAAEuC,KAAOA,EACTvC,EAAEpN,SAAU,EAEZoN,EAAEpN,SAAU,GALM,+BAU9BwB,qBAAU,WAwDN,OAvDA08B,EAAc1K,SAAQ,SAACvd,GAAD,OAAc+oB,EAAU/oB,MAE9CioB,EAAcpa,QAAO,WACjBoN,EAAS3O,QAAQpZ,OACjBma,GAAM9V,QACN8kB,GAAW,MAGf4L,EAAcra,SAAQ,WAClBqN,EAAS3O,QAAQpU,QACjBmV,GAAMlU,OACNkjB,GAAW,MAGf4L,EAAcjK,eAAc,SAACrkB,GAAiB,IAAD,EACrCshB,EAAS3O,UACT2O,EAAS3O,QAAQ3S,YAAcA,GAGE,KAAjC,UAAAshB,EAAS3O,eAAT,eAAkBiI,aAClB0T,EAAc1T,WAAW,GAG7BlH,GAAMlU,OACNkU,GAAMiQ,QAAsB,IAAd3jB,MAGlBsuB,EAAcpb,sBAAqB,SAACnT,GAChCqwB,GAAiBrwB,GACjBuuB,EAAc/I,mBAAmBxlB,MAGrCuuB,EAAct8B,SAAQ,WAClBs8B,EAAc3f,QACdje,OAAOie,WAGX2f,EAAc+B,aAAY,SAAClU,GAEvB,GADAmG,EAAanG,GACTA,GAAaA,EAAU5oB,OAAS,EAAG,CACnC,IAAMuqB,EAAI3B,EAAU,GACdrI,EAASgK,EAAElgB,MAAQkgB,EAAEmB,cAC3B6D,EAAUhP,OAIlBwa,EAAc1Z,uBAAsB,SAACxkB,GAAD,OAAaizB,GAAwBjzB,MACzEk+B,EAAc9Y,4BAA2B,SAAC+G,GAAD,OAAYiT,GAAwBjT,MAE7E7rB,OAAO4/B,eAAiB,SAACl3B,GAChB41B,EAAarc,SACd2b,EAAc3f,SAIf,kBAAM2f,EAAc3f,WAC5B,CAAC+E,GAAO4a,IAEX,IAAMvJ,GAAa5rB,uBAAY,WACvBmoB,EAAS3O,SACT2b,EAAc/0B,SAEnB,CAAC+0B,IAEEtJ,GAAc7rB,uBAAY,kBAAMm1B,EAAc/vB,UAAS,CAAC+vB,IAExD5W,GAAave,uBAAY,SAACuX,GACxB8L,EAAW7J,SACXe,GAAMlU,OAGV,IAAM6P,EAAOqB,EAAWnd,EACxB+6B,EAActuB,YAAcqP,EAAO,MACpC,CAAC9b,EAAQmgB,GAAO4a,IAOnB,IAAMvV,GAA2B5f,uBAAY,SAAC4G,GACtCyc,EAAW7J,UACXe,GAAMlU,OACN8uB,EAAc/vB,SAGlB6xB,GAAiBrwB,GACjB8iB,EAAsB9iB,GACtBuuB,EAActuB,YAAc,EAC5BsuB,EAAc/I,mBAAmBxlB,KAClC,CAACuuB,EAAe5a,KAEnB9hB,qBAAU,WACN,GAAKuqB,GAAkC,IAArBA,EAAU5oB,OAA5B,CAIA,IAAMwkB,EAAWC,aAAY,WAIzB,IAHA,IAAMrf,EAAM,IAAO2oB,EAAS3O,QAAQ3S,YAC9BqvB,EAAgB,GAEb/7B,EAAI,EAAGA,EAAI6oB,EAAU5oB,SAAUD,EAAG,CACvC,IAAMwqB,EAAI3B,EAAU7oB,GAMpB,GAJIqF,GAAOmlB,EAAElgB,OAASjF,EAAMmlB,EAAEjgB,KAC1BwxB,EAAc9yB,KAAd,2BAAuBuhB,GAAvB,IAA0BhC,MAAOxoB,KAGjCqF,EAAMmlB,EAAElgB,MACR,OPtUb,SAAqB9E,EAAGilB,GAAgC,IAA7BwS,EAA4B,uDAAnB,SAACz3B,EAAGilB,GAAJ,OAAUjlB,IAAMilB,GACvD,GAAIjlB,EAAEvF,SAAWwqB,EAAExqB,OACf,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIwF,EAAEvF,SAAUD,EAC5B,IAAKi9B,EAAOz3B,EAAExF,GAAIyqB,EAAEzqB,IAChB,OAAO,EAIf,OAAO,GO+TMk9B,CAAYnB,EAAeI,GAAiB9c,SAAS,SAAC8d,EAAIC,GAAL,OAAYD,EAAG3U,QAAU4U,EAAG5U,UAClFwT,EAAiBD,KAEtB,IAEH,OAAO,kBAAMn9B,aAAa6lB,OAC3B,CAACoE,IAEJvqB,qBAAU,WACN,SAAS++B,EAAelrB,GACpB,GAAK6b,EAAS3O,SAAYwJ,GAAkC,IAArBA,EAAU5oB,OAAjD,CAIA,IAAIq9B,EAEJ,GAAsB,KAAlBnrB,EAAM6S,QACNsY,GAAU,MACP,IAAsB,KAAlBnrB,EAAM6S,QAGb,OAFAsY,GAAU,EAKd,IAAMj4B,EAAM+K,KAAKgC,MAAM,IAAO4b,EAAS3O,QAAQ3S,aAC3C8e,GAAoB,EAExB,GAAI8R,EAGA,IAFA,IAAIC,EAAU/Y,OAAO6F,iBAEZrqB,EAAI,EAAGA,EAAI6oB,EAAU5oB,SAAUD,EAAG,CACvC,IAAMwqB,EAAI3B,EAAU7oB,GACdw9B,EAAOhT,EAAElgB,MAAQjF,EAEnBk4B,GAAWC,GAIXn4B,EAAMmlB,EAAElgB,QACRizB,EAAUC,EACVhS,EAAmBxrB,QAM3B,IAFA,IAAIu9B,EAAU/Y,OAAO6F,iBAEZrqB,EAAI,EAAGA,EAAI6oB,EAAU5oB,SAAUD,EAAG,CACvC,IAAMwqB,EAAI3B,EAAU7oB,GACdw9B,EAAOn4B,EAAMmlB,EAAElgB,MAEjBizB,GAAWC,GAIXn4B,EAAMmlB,EAAElgB,QACRizB,EAAUC,EACVhS,EAAmBnmB,EAAMmlB,EAAEjgB,IAAM6F,KAAK0L,IAAI,EAAG9b,EAAI,GAAKA,IAKxC,IAAtBwrB,IACArZ,EAAMpM,iBACNi1B,EAActuB,YAAcmc,EAAU2C,GAAkBlhB,MAAQ,MAMxE,OAFAlN,OAAOG,iBAAiB,UAAW8/B,GAE5B,WACHjgC,OAAOI,oBAAoB,UAAW6/B,MAE3C,CAACrC,EAAe5a,GAAOyI,EAAW5oB,IAErC3B,qBAAU,WACN,SAASstB,EAAazZ,GAClB,GAAKgqB,GAAiB9c,SAA+C,IAApC8c,GAAiB9c,QAAQpf,QAIrDsnB,GAAWpV,GAAhB,CAIAA,EAAMnM,kBACNmM,EAAMpM,iBACN,IAAMkiB,EAAWkU,GAAiB9c,QAAQ,GAC1C2b,EAAc5P,KAAKnD,GAEfnG,IACAua,GAAS,UAAYpU,EAAS7nB,MAC9Bm8B,IAAa,KAMrB,OAFAn/B,OAAOG,iBAAiB,UAAWquB,GAE5B,WACHxuB,OAAOI,oBAAoB,UAAWouB,MAE3C,CAACoP,EAAelZ,IAEnB,IAAM2b,GAAqB53B,uBAAY,SAAC63B,GAAD,OAAajB,GAAmBiB,KAAU,IAC3EC,GAAwB93B,uBAAY,kBAAMo2B,IAAoB,SAAA1a,GAAgB,OAAKA,OAAmB,IAEtGqc,GAAyB/3B,uBAAY,WAG/B,IAAD,EAFHic,EACA7U,SAAS4wB,iBAET,UAAA5e,GAAaI,eAAb,SAAsBye,sBAE3B,CAAChc,IAEEuE,GAAqBxgB,uBAAY,SAACusB,GAChCpE,EAAS3O,UACT2O,EAAS3O,QAAQkE,OAAS6O,KAE/B,IAEGF,GAAqBrsB,uBAAY,SAAC2a,GAAD,OAAYwa,EAAcxa,OAAOA,KAAS,CAACwa,IAE5E+C,GAAqBl4B,uBAAY,WACnCm1B,EAAcgD,eACVrc,IACA+Z,EAAarc,SAAU,EACvBjiB,OAAOie,WAEZ,CAAC2f,EAAerZ,IAEb0Q,GAA4BxsB,uBAAY,WAC1Cm1B,EAAcnK,wBACf,CAACmK,IAEElD,GAAcjyB,uBAAY,WAC5Bm1B,EAAc3f,QACdje,OAAOie,UACR,CAAC2f,IAEEiD,GAAiCp4B,uBAAY,WAC/Cm1B,EAActK,6BACf,CAACsK,IAEEjP,GAAclmB,uBAAY,WACxBwa,EACA2a,EAAc/vB,QAEd+vB,EAAc/0B,SAEnB,CAAC+0B,EAAe3a,IAEb6d,GAAoBr4B,uBAAY,kBAAM02B,IAAa,KAAQ,IA3U1B,GA4UmGn9B,EAAiBwxB,iBAApJ+E,GA5UgC,GA4UhCA,aAAcF,GA5UkB,GA4UlBA,cAAeM,GA5UG,GA4UHA,yBAA0BF,GA5UvB,GA4UuBA,qBAAsBI,GA5U7C,GA4U6CA,wBAAyBE,GA5UtE,GA4UsEA,0BACvGgI,GAAiB7U,mBAAQ,kBAAMgR,GACjC3E,GACAF,GACAM,GACAF,GACAI,GACAE,MACD,CACCR,GACAF,GACAM,GACAF,GACAI,GACAE,KAGJ,OACI,sBACIvd,IAAKqG,GACLyT,YAjNR,SAAyB5sB,GACrB2a,GAAiBpB,QAAQuE,EAAI9d,EAAEisB,QAC/BtR,GAAiBpB,QAAQwE,EAAI/d,EAAEksB,SAgN3BnzB,UAAWR,EAAQV,KAHvB,UAII,uBACIoN,QAAQ,OACRqzB,WAAY,EACZp3B,QAAS+kB,GACTltB,UAAW29B,GAAkBn+B,EAAQyb,MAAX,UAAsBzb,EAAQg8B,aAA9B,YAA8Ch8B,EAAQyb,OAChFlB,IAAK8jB,GACL9xB,IAAK2M,IACRgK,IACG,qBAAKnU,MAAO+wB,GAAZ,SACKpC,EAAcj0B,KAAI,SAAA0iB,GAAC,OAAK,eAAC,IAAMtR,SAAP,WAA+BsR,EAAEpqB,KAAK,yBAAjBoqB,EAAEhC,YAGvD1G,GACG,cAAC,EAAD,CACIvjB,KAAM+9B,GACN59B,QAASw/B,GACTv/B,iBAAkB,IAClBK,SAAS,UAJb,SAMKo9B,KAGT,cAACjc,GAAD,CACIM,iBAAkBA,GAClBJ,QAASA,EACTD,MAAOA,GACPngB,OAAQA,EACRuM,YAAaA,EACbmT,mBAAoBA,EACpB6B,gBAAiBqH,GAAaA,EAAU5oB,OAAS,EACjDshB,iBAAkBA,GAClBjB,eAAe,EACfE,OAAQA,EACRqB,mBAAmB,EACnBC,WAAYA,EACZZ,cAAeS,EACfA,OAAQA,EACRR,eAAe,EACfO,eAAgB2c,YAChBhd,4BAA4B,EAC5BD,qBAAsBA,GACtBY,iCAA0C,OAAT6G,QAAS,IAATA,OAAA,EAAAA,EAAW5oB,QAAS,IAAM0hB,EAC3DM,qBAAsBA,GACtBvB,OAAQ+c,GACR7c,OAAQ6Q,GACR9Q,QAAS+Q,GACTnS,OAAQ6E,GACRxE,qBAAsB6F,GACtBhE,kBAAmBkc,GACnB5b,mBAAoB6b,GACpB5c,eAAgBqF,GAChBtF,eAAgBmR,GAChBtQ,eAAgBmc,GAChBzc,sBAAuB+Q,GACvB3zB,QAASo5B,GACT5V,2BAA4B+b,GAC5B7+B,iBAAkBA,OCxhBlC,IACM6P,GAAe,4DAEfqvB,GAAmB5gC,aAAW,SAACgG,GAAD,MAAY,CAC5CsK,QAAS,CACLlK,SAAU,EACV4O,WAAYhP,EAAMiP,YAAYC,OAAO,SAAU,CAC3CC,OAAQnP,EAAMiP,YAAYE,OAAOC,MACjCC,SAAUrP,EAAMiP,YAAYI,SAASC,gBAEzCK,YAAa,GAEjBkrB,aAAc,gBAAErrB,EAAF,EAAEA,YAAF,MAAoB,CAC9BR,WAAYhP,EAAMiP,YAAYC,OAAO,SAAU,CAC3CC,OAAQnP,EAAMiP,YAAYE,OAAOM,QACjCJ,SAAUrP,EAAMiP,YAAYI,SAASK,iBAEzCC,YAAaH,QAmDrB,SAASsrB,GAAkBnoB,EAAMmK,GAC7B,OAAInK,EAAKlU,MACE4K,GAAU0xB,WACbpoB,EAAK5I,aACL4I,EAAK/L,MACL+L,EAAK9L,IACL8L,EAAKlU,MAAMH,OACXqU,EAAKlU,MAAMqI,WAIf6L,EAAKmB,WAAanB,EAAKkB,UAChBxK,GAAU2xB,SACbroB,EAAKmB,WAAanB,EAAKkB,UACvBlB,EAAKsV,cAAgBnL,EACrBnK,EAAK8X,YAAc3N,EACnBnK,EAAKsoB,YAIN,KAGX,SAASC,GAAcvoB,EAAMmK,GACzB,OAAInK,EAAK9V,MACEgQ,GAAMkuB,WACTpoB,EAAK5I,aACL4I,EAAK/L,MACL+L,EAAK9V,MAAMyB,OACXqU,EAAK9V,MAAMiK,WAIf6L,EAAKkB,UACEhH,GAAMmuB,SACTroB,EAAKkB,UACLlB,EAAKsV,cAAgBnL,GAItB,KAGX,SAASqe,GAAQzgC,GACb,IAAMC,EAAUigC,GAAiBlgC,GAEjC,OACI,sBACIS,UAAWgV,YAAKxV,EAAQ2P,QAAT,eACV3P,EAAQkgC,aAAengC,EAAM0V,aAFtC,SAIC1V,EAAMa,WAqdA6/B,OAhdf,WACI,IAAMvQ,EAAiBjF,mBAAQ,kBAAM,IAAI3Y,KAAkB,IACrDvR,EAAmBkqB,mBAAQ,kBAAM,IAAIsQ,KAAoB,IACzDn1B,EAAO6kB,mBAAQ,kBAAM,IAAInqB,EAAKC,KAAmB,CAACA,IAClDoL,EAAY8e,mBAAQ,kBAAM,IAAInV,KAAmB,IACjDgkB,EAAW4G,cACXtQ,EAAgBvP,mBAChB8f,EAAsC,WAAtB7G,EAAS8G,SAPpB,EAQOpiC,GAAemiC,GAA1BhhC,EARI,oBASLkhC,EAAczQ,EAAcpP,QAAU,GAAK,GAC3C8f,EAAgB1Q,EAAcpP,QAAU,IAAM,IAC9CnM,EAAc9C,KAAK0L,IAAIqjB,EAAenhC,EAAQkhC,GAXzC,EAYmCniC,mBAAS,IAZ5C,mBAYJqiC,EAZI,KAYaC,EAZb,OAamCtiC,oBAAS,GAb5C,mBAaJuiC,EAbI,KAaaC,EAbb,OAcexiC,qBAdf,mBAcJq/B,EAdI,KAcGC,EAdH,OAeuBt/B,oBAAS,GAfhC,mBAeJu/B,EAfI,KAeOC,EAfP,OAgB+Bx/B,qBAhB/B,mBAgBJyiC,EAhBI,KAgBWC,EAhBX,OAiBiC1iC,qBAjBjC,mBAiBJ+rB,EAjBI,KAiBY4W,EAjBZ,OAkBmB3iC,mBAAS,IAlB5B,mBAkBJ6xB,EAlBI,KAkBK+Q,EAlBL,OAmBmB5iC,oBAAS,GAnB5B,oBAmBJ6R,GAnBI,MAmBKgxB,GAnBL,SAoBqB7iC,oBAAS,GApB9B,qBAoBJ+Q,GApBI,MAoBM+xB,GApBN,MAqBLC,GAAe5gB,mBArBV,GAsBqBniB,qBAtBrB,qBAsBJmF,GAtBI,MAsBM69B,GAtBN,SAuBiChjC,oBAAS,GAvB1C,qBAuBJijC,GAvBI,MAuBYC,GAvBZ,SAwByCljC,oBAAS,GAxBlD,qBAwBJmjC,GAxBI,MAwBgBC,GAxBhB,SAyBiCpjC,qBAzBjC,qBAyBJqjC,GAzBI,MAyBYC,GAzBZ,SA0ByCtjC,oBAAS,GA1BlD,qBA0BJujC,GA1BI,MA0BgBC,GA1BhB,SA2BiCxjC,oBAAS,GA3B1C,qBA2BJyjC,GA3BI,MA2BYC,GA3BZ,SA4BmC1jC,oBAAS,GA5B5C,qBA4BJ2jC,GA5BI,MA4BaC,GA5Bb,SA6BqC5jC,oBAAS,GA7B9C,qBA6BJkkB,GA7BI,MA6Bc2f,GA7Bd,SA8Be7jC,qBA9Bf,qBA8BJwD,GA9BI,MA8BGsgC,GA9BH,MA+BLrS,GAAYtP,mBACZ4hB,GAAe5hB,mBACbzR,GAAiBmhB,EAAjBnhB,aAEF6I,GAAazQ,uBAAY,SAACoiB,EAAUzQ,EAAWD,EAAW9J,EAAckxB,EAAYx8B,EAAO5B,GAC7F8+B,GAAmB,SAAAD,GAAe,4BAAQA,GAAR,4BAC3BnX,GAD2B,IAE9BjP,UAAW5T,KAAKC,MAChBtD,KAAMG,GACNuL,aAAcA,EACd+J,UAAWA,EACXD,UAAWA,EACXonB,WAAYA,EACZx8B,MAAOA,EACP5B,MAAOA,SAEXk/B,EAAiB,WACjBpD,EAAS,UAAYpU,EAAS7nB,MAC9Bm8B,GAAa,KACd,CAACr6B,KAEE6+B,GAAwBl7B,uBAAY,kBAAM05B,GAAmB,SAAAD,GAAe,OAAKA,OAAkB,IACnG0B,GAAyBn7B,uBAAY,kBAAM05B,GAAmB,KAAQ,IACtE0B,GAAqBp7B,uBAAY,kBAAM06B,IAAsB,KAAO,IACpEW,GAAiBr7B,uBAAY,kBAAM46B,IAAkB,KAAO,IAC5DU,GAAkBt7B,uBAAY,kBAAM46B,IAAkB,KAAQ,IAC9DvC,GAAoBr4B,uBAAY,kBAAM02B,GAAa,KAAQ,IAC3D6E,GAA0Bv7B,uBAAY,kBAAM86B,IAAmB,KAAQ,IACvEU,GAAsBx7B,uBAAY,SAACy7B,GACrCliC,EAAiBE,eAAiBgiC,EAAYhiC,eAC9CF,EAAiBmC,KAAO+/B,EAAY//B,KACpCnC,EAAiBoC,SAAW8/B,EAAY9/B,SACxCpC,EAAiBs1B,WAAa4M,EAAY5M,WAC1Ct1B,EAAiByB,cAAgBygC,EAAYzgC,cAC7CzB,EAAiB0B,gBAAkBwgC,EAAYxgC,gBAC/C1B,EAAiB0C,WAAaw/B,EAAYx/B,WAC1C1C,EAAiBkD,WAAag/B,EAAYh/B,WAC1ClD,EAAiBS,UAAYyhC,EAAYzhC,UACzCT,EAAiB2B,YAAcugC,EAAYvgC,YAC3C3B,EAAiBu2B,aAAe2L,EAAY3L,aAC5Cv2B,EAAiBq2B,cAAgB6L,EAAY7L,cAC7Cr2B,EAAiB22B,yBAA2BuL,EAAYvL,yBACxD32B,EAAiBy2B,qBAAuByL,EAAYzL,qBACpDz2B,EAAiB62B,wBAA0BqL,EAAYrL,wBACvD72B,EAAiB+2B,0BAA4BmL,EAAYnL,0BACzD/2B,EAAiB+B,iBAAmBmgC,EAAYngC,iBAChD/B,EAAiB+1B,UAAYmM,EAAYnM,UACzCoL,IAAsB,GACtB/1B,EAAU+2B,eAAe,CAACl4B,QAAS,mBAAoB5G,MAAOrD,EAAiBwxB,qBAChF,CAACpmB,EAAWpL,IAEToiC,GAA8B37B,uBAAY,SAAAwQ,GAC5C,IADoD,EAC9CorB,EAAqB,GADyB,cAG/BrC,GAH+B,IAGpD,2BAAsC,CAAC,IAA9BnX,EAA6B,QAC9B5R,EAAK2C,YAAciP,EAASjP,WAC5ByoB,EAAmBx4B,KAAKgf,IALoB,8BASpDoX,EAAmBoC,KACpB,CAACrC,IAEEsC,GAAc77B,uBAAY,SAAC4O,GAC7BgrB,EAAiB,SACjBpD,EAAS5nB,GACT8nB,GAAa,KACd,IAEGxW,GAAoBlgB,uBAAY,SAACgpB,GAC/BA,IAAiBD,EAAQC,cAI7B8Q,GAAW,SAAAgC,GAGP,OAFA92B,IAAIK,gBAAgB2jB,GAEb,CACHphB,aAAck0B,EAASl0B,aACvB+J,UAAW,KACXqX,aAAc,KACdtX,UAAWoqB,EAASpqB,UACpBuX,aAAc6S,EAAS7S,mBAGhC,CAACF,IAEE1I,GAAoBrgB,uBAAY,SAACipB,GAC/BA,IAAiBF,EAAQE,cAI7B6Q,GAAW,SAAAgC,GAGP,OAFA92B,IAAIK,gBAAgB4jB,GAEb,CACHrhB,aAAck0B,EAASl0B,aACvB+J,UAAWmqB,EAASnqB,UACpBqX,aAAc8S,EAAS9S,aACvBtX,UAAW,KACXuX,aAAc,WAGvB,CAACF,IAEEjY,GAAkB9Q,sBAAW,uCAAC,WAAOwQ,GAAP,eAAA7Q,EAAA,+EAETg5B,GAAkBnoB,EAAMmY,GAAUnP,SAAW,GAFpC,OAEtBuiB,EAFsB,OAIxBxiC,EAAiB+1B,UACjByM,EAAKC,QAAQv0B,WAEbs0B,EAAKt0B,WAPmB,gDAU5B5H,QAAQnC,MAAR,MACAm+B,GAAY,KAAEjtB,SAXc,yDAAD,sDAahC,CAACitB,GAAatiC,IAEXwX,GAAsB/Q,sBAAW,uCAAC,WAAOwQ,GAAP,SAAA7Q,EAAA,+EAE1Bo5B,GAAcvoB,EAAMmY,GAAUnP,SAAW,GAAG/R,WAFlB,sDAIhC5H,QAAQnC,MAAR,MACAm+B,GAAY,KAAEjtB,SALkB,wDAAD,sDAOpC,CAACitB,KAEEI,GAA8Bj8B,uBAAY,SAACwQ,GACzC5I,GAAa1L,OAASsU,EAAK5I,aAAa1L,KAK5C29B,EAAkB,CAACt/B,KAAMiW,EAAKjW,KAAMurB,cAAetV,EAAKsV,gBAJpD+V,GAAY,iBAAmBrrB,EAAK5I,aAAa1L,KAAO,mBAK7D,CAAC0L,GAAci0B,KAEZK,GAAal8B,uBAAY,SAACwQ,GAC5BgqB,GAAkBhqB,GAClB4pB,IAAkB,GAClBE,IAAsB,GACtBS,IAAoB,KACrB,IAEGoB,GAAyBn8B,uBAAY,WACvCo6B,IAAkB,GAClBE,IAAsB,GACtBS,IAAoB,KACrB,IAEGqB,GAA0Bp8B,sBAAW,uCAAC,WAAOzF,EAAMC,EAAYC,EAAWC,EAAOZ,EAAMa,EAAQC,EAAmBC,GAA5E,eAAA8E,EAAA,6DACxC26B,IAAsB,GADkB,kBAIf17B,EAAKy9B,OACtB9hC,EACAC,EACAjB,EAAiB+1B,UAAjB,OAA6B70B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAWuhC,QAAUvhC,EAClDC,EACAZ,EACAa,EACAC,EACAC,GAZgC,OAI9BjB,EAJ8B,OAe/BiB,IACD++B,EAAiB,WACjBpD,EAAS,qBAAuB58B,GAChC88B,GAAa,IAGjB0D,IAAkB,GArBkB,gDAuBpCv6B,QAAQnC,MAAR,MACAm+B,GAAY,KAAEjtB,SAxBsB,yBA0BpC0rB,IAAsB,GACtBS,IAAoB,GA3BgB,4EAAD,oEA6BxC,CAACn8B,EAAMi9B,GAAatiC,IAEjB8G,GAAkBL,uBAAY,SAACtF,GACjCsgC,GAAStgC,GACTogC,IAAmB,KACpB,IAYGwB,GAAct8B,uBAAY,SAACu8B,GAC7B,IAAK,IAAD,EA5UZ,SAAwBA,GACpB,IAD2B,EACvB30B,EAAe,KACf+J,EAAY,KACZD,EAAY,KAHW,cAKX6qB,GALW,IAK3B,2BAAuB,CAAC,IAAbC,EAAY,QACbC,EAAsBD,EAAEtgC,KAAK6L,YAAY,KAE/C,IAA6B,IAAzB00B,EACA,MAAM,IAAI9+B,MAAM,oCAAsC6+B,EAAEtgC,MAG5D,IAAMyI,EAAY63B,EAAEtgC,KAAK4L,UAAU20B,EAAsB,EAAGD,EAAEtgC,KAAK9B,QACnE,OAAQuK,GACJ,IAAK,MACL,IAAK,MACL,IAAK,MACD,GAAIiD,EACA,MAAM,IAAIjK,MAAM,iDAEpBiK,EAAe40B,EACf,MACJ,IAAK,MACD,GAAI9qB,EACA,MAAM,IAAI/T,MAAM,8CAEpB+T,EAAY8qB,EACZ,MACJ,IAAK,MACL,IAAK,MACD,GAAI7qB,EACA,MAAM,IAAIhU,MAAM,8CAEpBgU,EAAY6qB,EACZ,MACJ,QACI,MAAM,IAAI7+B,MAAM,yBAA2BgH,KApC5B,8BAwC3B,GAAI+M,GAAaC,EACb,MAAM,IAAIhU,MAAM,2DAGpB,MAAO,CAACiK,aAAcA,EAAc+J,UAAWA,EAAWD,UAAWA,GAiSlBgrB,CAAeH,GAArD30B,EADL,EACKA,aAAc+J,EADnB,EACmBA,UAAWD,EAD9B,EAC8BA,UAE9BooB,GAAW,SAAAgC,GACP/B,IAAW,GAEX,IAAI9Q,EAAe,KACfD,EAAe,KAyBnB,OAvBItX,GAAaC,IApB7B,SAAoBoX,GACZA,EAAQC,cACRhkB,IAAIK,gBAAgB0jB,EAAQC,cAG5BD,EAAQE,cACRjkB,IAAIK,gBAAgB0jB,EAAQE,cAepB0T,CAAWb,GAEPpqB,EACAuX,EAAejkB,IAAIC,gBAAgByM,GAC5BC,IACPqX,EAAehkB,IAAIC,gBAAgB0M,MAGvCD,EAAYoqB,EAASpqB,UACrBuX,EAAe6S,EAAS7S,aACxBtX,EAAYmqB,EAASnqB,UACrBqX,EAAe8S,EAAS9S,cAGZ,CACZphB,aAAcA,GAAgBk0B,EAASl0B,aACvC+J,UAAWA,EACXqX,aAAcA,EACdtX,UAAWA,EACXuX,aAAcA,MAMlBrhB,GACAsyB,GAAYtyB,EAAa1L,MAE/B,MAAO+D,GACLJ,QAAQnC,MAAMuC,GACd47B,GAAY57B,EAAE2O,YAEnB,CAACitB,KAEEe,GAAa58B,uBAAY,SAACC,GAC5BA,EAAEC,iBAEEi5B,EACA0C,GAAY,wFAIhB7B,IAAY,GACZC,GAAazgB,QAAU,KAElBvZ,EAAE48B,aAAaN,OAAyC,IAAhCt8B,EAAE48B,aAAaN,MAAMniC,QAIlDkiC,GAAYr8B,EAAE48B,aAAaN,UAC5B,CAACpD,EAAe0C,GAAaS,KAE1BQ,GAAwB98B,uBAAY,WAAO,IAAD,EACtCu8B,EAAK,UAAGtB,GAAazhB,eAAhB,aAAG,EAAsB+iB,MAEhCA,GAASA,EAAMniC,OAAS,GACxBkiC,GAAYC,KAEjB,CAACD,KAEES,GAAqB/8B,uBAAY,kCAAMi7B,GAAazhB,eAAnB,aAAM,EAAsB9R,UAAS,IAEtEs1B,GAAkBh9B,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBAEGg5B,IACDc,GAAazgB,QAAUvZ,EAAEwB,OACzBu4B,IAAY,MAGjB,CAACb,IAEE8D,GAAkBj9B,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBAEGg5B,GAAiBc,GAAazgB,UAAYvZ,EAAEwB,QAC7Cu4B,IAAY,KAEjB,CAACb,IAEE+D,GAAsBl9B,uBAAY,kBAAM+5B,IAAW,KAAQ,IAC3DoD,GAAiBp0B,KAAY6f,EAAcpP,UAAcuP,EAAQnhB,eAAiBmhB,EAAQpX,YAAcoX,EAAQrX,UAEtH,OACI,sBACI0rB,OAAQR,GACRS,WAAY,SAACp9B,GAAD,OAAOA,EAAEC,kBACrBo9B,YAAaN,GACbO,YAAaN,GAJjB,UAMI,cAAC,EAAD,CACIvkC,KAAM+9B,EACN59B,QAASw/B,GACTv/B,iBAAkB,IAClBK,SAAUwgC,EAJd,SAMKpD,IAEL,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAAO,IAAD,EAC1BniC,EAAS,IAAIoiC,gBAAgBpmC,OAAO+6B,SAASsL,QAC7ClsB,EAAYnW,EAAOsiC,IAAI,SACvBzoB,EAAU7Z,EAAOsiC,IAAI,WACrB/hB,EAASvgB,EAAOsiC,IAAI,UAE1B,OAAInsB,GAAa0D,EACL,cAAC,IAAD,CAAU0oB,GAAI,gBAAkBnS,mBAAmBja,GAAa,YAAc0D,EAAU,WAAa0G,IAI7G,gCACI,cAAClK,GAAD,CACIe,MAAO4mB,EACP7gC,KAAM+gC,EACNpsB,YAAaA,EACbxU,QAASsiC,GACTzoB,SAAUipB,GACVrrB,YAAaQ,GACbP,gBAAiBQ,GACjBV,SAAU4rB,GACV/oB,OAAQgpB,KAEZ,cAAC99B,EAAD,CACI1F,KAAMyhC,GACN97B,SAAUg8B,GACV9/B,KAAI,OAAEggC,SAAF,IAAEA,QAAF,EAAEA,GAAgBhgC,KACtBE,UAAW8/B,IAAkB5B,GAAkB4B,GAAgB5R,GAAUnP,SAAW,GACpF9e,MAAO6/B,IAAkBxB,GAAcwB,GAAgB5R,GAAUnP,SAAW,GAC5E7e,OAAM,OAAE4/B,SAAF,IAAEA,IAAF,UAAEA,GAAgB3yB,oBAAlB,aAAE,EAA8B1L,KACtCyC,aAAcpF,EAAiB+B,iBAC/BsD,KAAMA,EACNrF,iBAAkBA,EAClBiF,SAAU29B,GACV59B,UAAW69B,GACX39B,YAAa4B,GACb3B,eAAgB08B,KAEpB,cAACrxB,GAAD,CACIrR,KAAMmiC,GACNngC,MAAOA,GACP7B,QAAS0iC,KAEb,cAACpN,GAAD,CACIvvB,KAAMA,EACNlG,KAAM+hC,GACN5hC,QAAS2iC,GACTlU,SAAU/tB,EAAiB+tB,WAE/B,cAACne,GAAD,CACIzQ,KAAMiiC,GACNvxB,aAAcA,GACdvQ,QAASyiC,KAEb,cAACxtB,GAAD,CACI9P,MAAO3B,IAAY,YACnBgR,YAAaA,EACbY,WAAYwrB,EACZprB,kBAAmB6sB,GACnBx8B,eAAgB08B,GAChBjtB,WAAYktB,GACZntB,eAAgB6uB,KAEpB,uBACIhqB,IAAKkoB,GACLz5B,SAAUs7B,GACVj5B,KAAK,OACLk6B,OAAO,gCACPC,UAAQ,EACR5a,QAAM,IAEV,eAAC4V,GAAD,CAAS3rB,YAAaA,EAAaY,WAAYwrB,EAA/C,UACK0D,IACG,cAACzoB,GAAD,CACIC,uBA1hBT,QA2hBSvL,aAAcA,GACdzE,UAAWA,EACXoE,QAASA,GACTd,SAAUA,GACViG,eAAgB6uB,KAGxB,cAACj0B,GAAD,CAAab,SAAUA,GAAUc,QAASA,KAC1C,cAAC0f,GAAD,CACIC,eAAgBA,EAChBnvB,iBAAkBA,EAClBspB,OAAQpS,GACRoY,QAASgT,GACT7gB,cAAekF,GACfjF,cAAeoF,GACfyI,SAAUoU,GACVvU,UAAWA,GACXI,QAASA,EACT9F,eAAgBA,EAChB2F,cAAeA,EACfjkB,UAAWA,EACXsJ,WAAYwrB,EACZre,iBAAkBA,cAMtC,cAAC,IAAD,CAAOoiB,OAAK,EAACC,KAAK,SAASC,OAAQ,WAC/B,IAAMniC,EAAS,IAAIoiC,gBAAgBpmC,OAAO+6B,SAASsL,QAC7ClsB,EAAYnW,EAAOsiC,IAAI,SACvBzoB,EAAU7Z,EAAOsiC,IAAI,WACrB/hB,EAAkC,SAAzBvgB,EAAOsiC,IAAI,UAE1B,OACI,cAACjI,GAAD,CACIr8B,iBAAkBA,EAClBmY,UAAWA,EACXoK,OAAQA,EACR1G,QAASA,EACTyT,QAASgT,e,oBCvkBtBh+B,GAfDogC,aAAe,CAC3BruB,QAAS,CACP6B,QAAS,CACPysB,KAAM,WAERtnB,UAAW,CACTsnB,KAAM,WAERxgC,MAAO,CACLwgC,KAAMC,KAAIC,MAEZv6B,KAAM,UCHKw6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpT,MAAK,YAAkD,IAA/CqT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCGdO,IAASnB,OACL,cAAC,KAAD,CAAeoB,SAAUpT,aAAwBqT,cAAc,EAA/D,SACI,eAACC,EAAA,EAAD,CAAenhC,MAAOA,GAAtB,UAEA,cAACohC,EAAA,EAAD,IACA,cAAC,GAAD,SAGJ73B,SAAS83B,cAAc,UAM3Bb,O","file":"static/js/main.2d273932.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, onOpenSettings, audioClip, image, source, customFields, settingsProvider, anki} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.b940f60b.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab && tab.id}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={handleTabSelected}\r\n                                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={props.jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                                    Leaving a field blank is fine.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.7.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        settingsProvider.preferMp3 = newSettings.preferMp3;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item, offsetRef.current || 0);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                settingsProvider.preferMp3 ? audioClip?.toMp3() : audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, settingsProvider]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                anki={anki}\n                                settingsProvider={settingsProvider}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                                onFileSelector={handleFileSelector}\n                            />\n                            <input\n                                ref={fileInputRef}\n                                onChange={handleFileInputChange}\n                                type=\"file\"\n                                accept=\".srt,.ass,.vtt,.mp3,.m4a,.mkv\"\n                                multiple\n                                hidden\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                        onFileSelector={handleFileSelector}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} loading={loading} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}