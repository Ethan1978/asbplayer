{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","../../common/src/KeyEvents.js","../../common/src/KeyBindings.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","a","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","recentNotes","sort","Error","lastNoteId","id","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","now","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","KeyEvents","ctrlKey","shiftKey","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bind","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","subtitleStart","originalStart","adjacentSubtitleIndex","minDiff","MAX_SAFE_INTEGER","s","diff","increase","currentOffset","onToggleSubtitles","detectToggleSubtitles","handler","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileName","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.908054dc.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.4a1beec0.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Alt+Z by default) to mine subtitles since that will include audio/screenshots.\r\n                        If the keyboard shortcut  is not working for some reason try:\r\n                        <Typography component=\"ul\">\r\n                            <li>Uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                            <li>Verifying the keyboard shortcut is  bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.</li>\r\n                        </Typography>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Specifically, for synced streaming video, an audio/image will only be available if the extension keyboard shortcut was used (Ctrl+Alt+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (drag and drop)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later.\r\n                    </li>\r\n                    <li>\r\n                        The asbplayer application and extension may work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local video file playback is supported only for codecs supported by the browser.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && event.ctrlKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && event.ctrlKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectToggleSubtitles(event) {\r\n        // S\r\n        return event.keyCode === 83;\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectToggleSubtitles(event)) {\r\n                return;\r\n            }\r\n\r\n            onToggleSubtitles(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bind(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    onCopy(subtitles[Math.min(...subtitleIndexes)], true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], false);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image, event.data.preventDuplicate);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileName) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles, name: subtitleFileName});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest() {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest'});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFile?.name);\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFile]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFile?.name);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image, preventDuplicate) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest) {\r\n            videoRef.current?.finishedAnkiDialogRequest();\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, themeType]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async () => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                try {\r\n                    await containerRef.current?.requestFullscreen();\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n                } catch(e) {\r\n                    console.error(e);\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => setSubtitlesEnabled(enabled => !enabled),\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    playerChannel.copy(showSubtitlesRef.current[0], true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.10.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n            case \"mp4\":\n            case \"avi\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n            case \"aac\":\n            case \"flac\":\n            case \"ogg\":\n            case \"wav\":\n            case \"opus\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.start,\n            item.end,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.start\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const copiedSubtitlesRef = useRef();\n    copiedSubtitlesRef.current = copiedSubtitles;\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const ankiDialogAudioClip = useMemo(() => ankiDialogItem && audioClipFromItem(ankiDialogItem), [ankiDialogItem]);\n    const ankiDialogImage = useMemo(() => ankiDialogItem && imageFromItem(ankiDialogItem), [ankiDialogItem]);\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState(0);\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate) => {\n        navigator.clipboard.writeText(subtitle.text);\n        setCopiedSubtitles(copiedSubtitles => {\n            if (preventDuplicate && copiedSubtitles.length > 0) {\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\n\n                if (subtitle.start === last.start\n                    && subtitle.end === last.end\n                    && subtitle.text === last.text\n                    && subtitleFile.name === last.subtitleFile.name) {\n                        return copiedSubtitles;\n                    }\n            }\n\n            return [...copiedSubtitles, {\n                ...subtitle,\n                timestamp: Date.now(),\n                name: fileName,\n                subtitleFile: subtitleFile,\n                audioFile: audioFile,\n                videoFile: videoFile,\n                audioTrack: audioTrack,\n                audio: audio,\n                image: image\n            }];\n        });\n\n        setAlertSeverity(\"success\");\n        setAlert(`Copied: \"${subtitle.text}\"`);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n\n        if (ankiDialogRequested) {\n            setAnkiDialogFinishedRequest(Date.now());\n            setAnkiDialogRequested(false);\n        }\n    }, [ankiDialogRequested]);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                mode\n            );\n\n            if (mode === 'default') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            } else if (mode === 'updateLast') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Update succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n\n            if (ankiDialogRequested) {\n                setAnkiDialogFinishedRequest(Date.now());\n                setAnkiDialogRequested(false);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, ankiDialogRequested]);\n\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\n        if (copiedSubtitlesRef.current.length === 0) {\n            return;\n        }\n\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n        setAnkiDialogRequested(true);\n\n        if (forwardToVideo) {\n            setAnkiDialogRequestToVideo(Date.now());\n        }\n    }, []);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync') {\n                const tabs = availableTabs.filter(t => {\n                    if (t.id !== message.tabId) {\n                        return false;\n                    }\n\n                    return !message.src || t.src === message.src;\n                });\n\n                if (tabs.length === 0) {\n                    if (message.src) {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\n                    } else {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    }\n\n                    return;\n                }\n\n                const tab = tabs[0];\n                const subtitleFile = new File(\n                    [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                    message.data.subtitles.name\n                );\n                setFileName(subtitleFile.name);\n                setSources({\n                    subtitleFile: subtitleFile,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogAudioClip}\n                                    image={ankiDialogImage}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                        ankiDialogRequested={ankiDialogRequested}\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}