{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/Util.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","name","base64","extension","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","audioName","substring","lastIndexOf","floor","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","specialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","action","version","error","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","track","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","round","Start","End","Text","combined","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","hex","exec","r","parseInt","g","b","hexToRgb","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","audioPaddingStart","setAudioPaddingStart","audioPaddingEnd","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.400319d3.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n\r\n    constructor({up, holding, canceledBy, map}) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return {result: result, extra: extra};\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57]});\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({holding: [83], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({holding: [68], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(onToggleSubtitleTrack, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(onToggleSubtitleTrackInList, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        const audioName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + Math.floor(start) + \"_\" + Math.floor(end);\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n}","export default class CanvasResizer {\r\n\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, {resizeWidth: newWidth, resizeHeight: newHeight})\r\n                    .then(sprite => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass etc.\r\n                    </li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded,\r\n                        they can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer and use the camera button in the bottom right.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.\r\n                        </li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, copy the current subtitle by using Ctrl+Shift+A.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S+1, S+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in video</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>D+1, D+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in asbplayer</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right or Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Common issues\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        asbplayer isn't detecting streaming video.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try refreshing both the asbplayer tab and the video in the other tab.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites.\r\n                            A lot of video players are loaded inside of iframes, so it's difficult to\r\n                            list every single URL that the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        The extension keyboard shortcuts aren't working.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try uninstalling and reinstalling the extension and restarting Chrome.\r\n                        </li>\r\n                        <li>\r\n                            Make sure the extension isn't installed twice.\r\n                        </li>\r\n                        <li>\r\n\r\n                            Verify the keyboard shortcut is bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            If you're using Brave, make sure asbplayer isn't being blocked by Shield.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser.\r\n                        The <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/animebook/animebook.github.io#video-format-support\">animebook</Link> readme has a detailed explanation of this and links\r\n                        to browsers that have good compatibility. Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap(nodes => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => ({...node.data, track: track}));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track\r\n                        }))\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : \"\";\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(\r\n            selection?.type === 'Range'\r\n            && textRef.current?.isSameNode(selection.anchorNode.parentNode)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents,\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    onCopy(subtitles[Math.min(...subtitleIndexes)], true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], false);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image, event.data.preventDuplicate);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest', resume: resume});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({command: 'miscSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings } from '@project/common';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length),\r\n                track: s.track\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFiles.map(f => f.name));\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFiles]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length),\r\n                        track: s.track\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFiles.map(f => f.name));\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image, preventDuplicate) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFiles[subtitle.track],\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) => setDisabledSubtitleTracks(tracks => {\r\n                            const newTracks = {...tracks};\r\n                            newTracks[track] = !tracks[track];\r\n                            return newTracks;\r\n                        }));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFiles[subtitle.track],\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback((track) => setDisabledSubtitleTracks(tracks => {\r\n        const newTracks = {...tracks};\r\n        newTracks[track] = !tracks[track];\r\n        return newTracks;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType, audioPaddingStart, audioPaddingEnd, maxImageWidth, maxImageHeight]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst audioPaddingStartKey = \"audioPaddingStart\";\r\nconst audioPaddingEndKey = \"audioPaddingEnd\";\r\nconst maxImageWidthKey = \"maxImageWidth\";\r\nconst maxImageHeightKey = \"maxImageHeight\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, maxImageWidth);\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        const value = localStorage.getItem(maxImageHeightKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageHeight;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, maxImageHeight);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({command: 'toggleSubtitleTrackInList', track: track});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            track: s.track\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled(enabled => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks(tracks => {\r\n                    const newTracks = {...tracks};\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    playerChannel.copy(showSubtitlesRef.current[0], true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n                \r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image } from '@project/common';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider.js';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = \"0.14.0\";\r\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    contentShift: ({drawerWidth}) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case \"ass\":\r\n            case \"srt\":\r\n            case \"vtt\":\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case \"mkv\":\r\n            case \"mp4\":\r\n            case \"avi\":\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case \"mp3\":\r\n            case \"m4a\":\r\n            case \"aac\":\r\n            case \"flac\":\r\n            case \"ogg\":\r\n            case \"wav\":\r\n            case \"opus\":\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unsupported extension \" + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\r\n    }\r\n\r\n    return {subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile}\r\n}\r\n\r\nfunction audioClipFromItem(item, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, item.start - (item.audio.paddingStart || 0)),\r\n            item.end + (item.audio.paddingEnd || 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, item.start - paddingStart),\r\n            item.end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(\r\n            item.subtitleFile.name,\r\n            item.start,\r\n            item.image.base64,\r\n            item.image.extension\r\n        );\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(\r\n            item.videoFile,\r\n            item.start,\r\n            maxWidth,\r\n            maxHeight\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}>\r\n        {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(() => createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#49007a',\r\n            },\r\n            secondary: {\r\n                main: '#ff1f62',\r\n            },\r\n            error: {\r\n                main: red.A400,\r\n            },\r\n            type: settingsProvider.themeType,\r\n        }\r\n    }), [settingsProvider.themeType]);\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width, ] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({subtitleFiles: []});\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogAudioClip = useMemo(\r\n        () => ankiDialogItem && audioClipFromItem(ankiDialogItem, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd),\r\n        [ankiDialogItem, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () => ankiDialogItem && imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({timestamp: 0, resume: false});\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const {subtitleFiles} = sources;\r\n\r\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate) => {\r\n        navigator.clipboard.writeText(subtitle.text);\r\n        setCopiedSubtitles(copiedSubtitles => {\r\n            if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                if (subtitle.start === last.start\r\n                    && subtitle.end === last.end\r\n                    && subtitle.text === last.text\r\n                    && subtitleFile.name === last.subtitleFile.name) {\r\n                        return copiedSubtitles;\r\n                    }\r\n            }\r\n\r\n            return [...copiedSubtitles, {\r\n                ...subtitle,\r\n                timestamp: Date.now(),\r\n                name: fileName,\r\n                subtitleFile: subtitleFile,\r\n                audioFile: audioFile,\r\n                videoFile: videoFile,\r\n                audioTrack: audioTrack,\r\n                audio: audio,\r\n                image: image\r\n            }];\r\n        });\r\n\r\n        setAlertSeverity(\"success\");\r\n        setAlert(`Copied: \"${subtitle.text}\"`);\r\n        setAlertOpen(true);\r\n    }, [fileName]);\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback((newSettings) => {\r\n        settingsProvider.settings = newSettings;\r\n        setSettingsDialogOpen(false);\r\n        setDisableKeyEvents(false);\r\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\r\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\r\n        extension.publishMessage({command: 'miscSettings', value: settingsProvider.miscSettings});\r\n    }, [extension, settingsProvider]);\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(item => {\r\n        const newCopiedSubtitles = [];\r\n\r\n        for (let subtitle of copiedSubtitles) {\r\n            if (item.timestamp !== subtitle.timestamp) {\r\n                newCopiedSubtitles.push(subtitle);\r\n            }\r\n        }\r\n\r\n        setCopiedSubtitles(newCopiedSubtitles);\r\n    }, [copiedSubtitles]);\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity(\"error\");\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\r\n        if (audioFileUrl !== sources.audioFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(audioFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: null,\r\n                audioFileUrl: null,\r\n                videoFile: previous.videoFile,\r\n                videoFileUrl: previous.videoFileUrl\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\r\n        if (videoFileUrl !== sources.videoFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(videoFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: previous.audioFile,\r\n                audioFileUrl: previous.audioFileUrl,\r\n                videoFile: null,\r\n                videoFileUrl: null\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleClipAudio = useCallback(async (item) => {\r\n        try {\r\n            const clip = await audioClipFromItem(item);\r\n\r\n            if (settingsProvider.preferMp3) {\r\n                clip.toMp3().download();\r\n            } else {\r\n                clip.download();\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError, settingsProvider]);\r\n\r\n    const handleDownloadImage = useCallback(async (item) => {\r\n        try {\r\n            await imageFromItem(item).download();\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    const handleSelectCopyHistoryItem = useCallback((item) => {\r\n        if (subtitleFiles.filter(f => f.name === item.subtitleFile.name).length === 0) {\r\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\r\n            return;\r\n        }\r\n\r\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\r\n    }, [subtitleFiles, handleError]);\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\r\n        setAnkiDialogDisabled(true);\r\n\r\n        try {\r\n            const result = await anki.export(\r\n                text,\r\n                definition,\r\n                audioClip,\r\n                image,\r\n                word,\r\n                source,\r\n                customFieldValues,\r\n                mode\r\n            );\r\n\r\n            if (mode !== 'gui') {\r\n                if (mode === 'default') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Export succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                } else if (mode === 'updateLast') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Update succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                }\r\n\r\n                setAnkiDialogOpen(false);\r\n\r\n                if (ankiDialogRequested) {\r\n                    setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n                    setAnkiDialogRequested(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        } finally {\r\n            setAnkiDialogDisabled(false);\r\n            setDisableKeyEvents(false);\r\n        }\r\n    }, [anki, handleError, ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        };\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback((files) => {\r\n        try {\r\n            let {subtitleFiles, audioFile, videoFile} = extractSources(files);\r\n\r\n            setSources(previous => {\r\n                setLoading(true);\r\n\r\n                let videoFileUrl = null;\r\n                let audioFileUrl = null;\r\n\r\n                if (videoFile || audioFile) {\r\n                    revokeUrls(previous);\r\n\r\n                    if (videoFile) {\r\n                        videoFileUrl = URL.createObjectURL(videoFile);\r\n                    } else if (audioFile) {\r\n                        audioFileUrl = URL.createObjectURL(audioFile);\r\n                    }\r\n\r\n                    setTab(null);\r\n                } else {\r\n                    videoFile = previous.videoFile;\r\n                    videoFileUrl = previous.videoFileUrl;\r\n                    audioFile = previous.audioFile;\r\n                    audioFileUrl = previous.audioFileUrl;\r\n                }\r\n\r\n                const sources = {\r\n                    subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                    audioFile: audioFile,\r\n                    audioFileUrl: audioFileUrl,\r\n                    videoFile: videoFile,\r\n                    videoFileUrl: videoFileUrl\r\n                };\r\n\r\n                return sources;\r\n            });\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setFileName(subtitleFiles[0].name);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter(t => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\r\n                    } else {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\r\n                        message.data.subtitles.name\r\n                    )];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(message.data.subtitles.map(async (s) => new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + s.base64)).blob()],\r\n                        s.name\r\n                    )));\r\n                }\r\n\r\n                setFileName(subtitleFiles[0].name);\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null\r\n                })\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        if (inVideoPlayer) {\r\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n            return;\r\n        }\r\n\r\n        setDragging(false);\r\n        dragEnterRef.current = null;\r\n\r\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handleFiles(e.dataTransfer.files);\r\n    }, [inVideoPlayer, handleError, handleFiles]);\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer) {\r\n            dragEnterRef.current = e.target;\r\n            setDragging(true);\r\n        }\r\n\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleDragLeave = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n            setDragging(false);\r\n        }\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded = (loading && !videoFrameRef.current) || (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity={alertSeverity}\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout');\r\n\r\n                        if (videoFile && channel) {\r\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\r\n                        }\r\n\r\n                        return (\r\n                            <div>\r\n                                <CopyHistory\r\n                                    items={copiedSubtitles}\r\n                                    open={copyHistoryOpen}\r\n                                    drawerWidth={drawerWidth}\r\n                                    onClose={handleCloseCopyHistory}\r\n                                    onDelete={handleDeleteCopyHistoryItem}\r\n                                    onClipAudio={handleClipAudio}\r\n                                    onDownloadImage={handleDownloadImage}\r\n                                    onSelect={handleSelectCopyHistoryItem}\r\n                                    onAnki={handleAnki}\r\n                                />\r\n                                <AnkiDialog\r\n                                    open={ankiDialogOpen}\r\n                                    disabled={ankiDialogDisabled}\r\n                                    text={ankiDialogItem?.text}\r\n                                    audioClip={ankiDialogAudioClip}\r\n                                    image={ankiDialogImage}\r\n                                    source={ankiDialogItem?.subtitleFile?.name}\r\n                                    customFields={settingsProvider.customAnkiFields}\r\n                                    anki={anki}\r\n                                    settingsProvider={settingsProvider}\r\n                                    onCancel={handleAnkiDialogCancel}\r\n                                    onProceed={handleAnkiDialogProceed}\r\n                                    onViewImage={handleViewImage}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                />\r\n                                <ImageDialog\r\n                                    open={imageDialogOpen}\r\n                                    image={image}\r\n                                    onClose={handleImageDialogClosed}\r\n                                />\r\n                                <SettingsDialog\r\n                                    anki={anki}\r\n                                    open={settingsDialogOpen}\r\n                                    onClose={handleCloseSettings}\r\n                                    settings={settingsProvider.settings}\r\n                                />\r\n                                <HelpDialog\r\n                                    open={helpDialogOpen}\r\n                                    extensionUrl={extensionUrl}\r\n                                    onClose={handleCloseHelp}\r\n                                />\r\n                                <Bar\r\n                                    title={fileName || \"asbplayer\"}\r\n                                    drawerWidth={drawerWidth}\r\n                                    drawerOpen={copyHistoryOpen}\r\n                                    onOpenCopyHistory={handleOpenCopyHistory}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                    onOpenHelp={handleOpenHelp}\r\n                                    onFileSelector={handleFileSelector}\r\n                                />\r\n                                <input\r\n                                    ref={fileInputRef}\r\n                                    onChange={handleFileInputChange}\r\n                                    type=\"file\"\r\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                    multiple\r\n                                    hidden\r\n                                />\r\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                    {nothingLoaded && (\r\n                                        <LandingPage\r\n                                            latestExtensionVersion={latestExtensionVersion}\r\n                                            extensionUrl={extensionUrl}\r\n                                            extension={extension}\r\n                                            loading={loading}\r\n                                            dragging={dragging}\r\n                                            onFileSelector={handleFileSelector}\r\n                                        />\r\n                                    )}\r\n                                    <DragOverlay dragging={dragging} loading={loading} />\r\n                                    <Player\r\n                                        subtitleReader={subtitleReader}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCopy={handleCopy}\r\n                                        onError={handleError}\r\n                                        onUnloadAudio={handleUnloadAudio}\r\n                                        onUnloadVideo={handleUnloadVideo}\r\n                                        onLoaded={handleSourcesLoaded}\r\n                                        onTabSelected={handleTabSelected}\r\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                        tab={tab}\r\n                                        availableTabs={availableTabs}\r\n                                        sources={sources}\r\n                                        jumpToSubtitle={jumpToSubtitle}\r\n                                        videoFrameRef={videoFrameRef}\r\n                                        extension={extension}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        disableKeyEvents={disableKeyEvents}\r\n                                        ankiDialogRequested={ankiDialogRequested}\r\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                    />\r\n                                </Content>\r\n                            </div>\r\n                        );\r\n                    }} />\r\n                    <Route exact path=\"/video\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout') === 'true';\r\n\r\n                        return (\r\n                            <VideoPlayer\r\n                                settingsProvider={settingsProvider}\r\n                                videoFile={videoFile}\r\n                                popOut={popOut}\r\n                                channel={channel}\r\n                                onError={handleError}\r\n                            />\r\n                        );\r\n                    }} />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}