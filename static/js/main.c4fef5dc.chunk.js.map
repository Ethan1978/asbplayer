{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","image","word","source","customFieldValues","fields","_appendField","sentenceField","definitionField","wordField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","customFields","setDefinition","setText","setWord","setCustomFieldValues","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","map","DialogActions","Button","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","onload","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","Tooltip","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","defaultBackground","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","condensedModeToggleEnabled","onCondensedModeToggle","condensedModeEnabled","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","copy","subtitleIndex","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","condensedModeToggle","onExit","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","includes","DialogTitle","helperText","trim","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","fieldValue","Tabs","newIndex","Tab","DialogContentText","location","hostname","type","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.c4fef5dc.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip, image, word, source, customFieldValues) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            params.note.picture = {\r\n                filename: image.name,\r\n                data: await image.base64(),\r\n                fields: [\r\n                    this.settingsProvider.imageField\r\n                ]\r\n            }\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, onOpenSettings, audioClip, image, source, customFields} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading, dragging} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onShow, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents, settingsProvider} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {props.condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={(e) => props.onCondensedModeToggle()}>\r\n                                            <SpeedIcon className={props.condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon className={classes.button} style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                {subtitle.text}\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles({removable: removable});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {removable && (\r\n                <IconButton onClick={(e) => onRemoval?.()}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(ankiConnectUrl, noteType)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={fieldValue => handleCustomFieldChange(customFieldName, fieldValue)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <Tabs\r\n                    value={tabIndex}\r\n                    variant=\"fullWidth\"\r\n                    onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n                >\r\n                    <Tab label=\"Anki\" />\r\n                    <Tab label=\"In-Video Subtitles\" />\r\n                </Tabs>\r\n                {tabIndex === 0 && (\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                            Leaving a field blank is fine.\r\n                        </DialogContentText>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Anki Connect URL\"\r\n                                        value={ankiConnectUrl}\r\n                                        error={Boolean(ankiConnectUrlError)}\r\n                                        helperText={ankiConnectUrlError}\r\n                                        onChange={handleAnkiConnectUrlChange}\r\n                                    />\r\n                                </div>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                {tabIndex === 1 && (\r\n                    <DialogContent>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        value={subtitleColor}\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        value={subtitleSize}\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        value={subtitleOutlineColor}\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        value={subtitleBackgroundColor}\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                <DialogActions>\r\n                    {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.1\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} loading={loading} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}