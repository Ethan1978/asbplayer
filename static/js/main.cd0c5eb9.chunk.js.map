{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","fields","sentenceField","split","join","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","name","base64","audioField","audio","filename","data","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","margin","spacing","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","target","rows","onClick","DialogActions","Button","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","source","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","Math","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","Number","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","onExit","onOffset","onCurrentTime","then","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","marginTop","subtitleSetting","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","settings","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","canceled","refreshFieldNames","modelFieldNames","handleClose","Tabs","newIndex","Tab","DialogContentText","location","hostname","helperText","type","inputProps","step","defaultAnkiConnectUrl","defaultSubtitleColor","defaultSubtitleOutlineColor","defaultSubtitleBackgroundColor","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleSettings","subtitleStyles","nocontrols","audioClipFromItem","fromBase64","fromFile","audioTrack","Content","contentShift","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.cd0c5eb9.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip) {\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text ? text.split(\"\\n\").join(\"<br>\") : text;\r\n        fields[this.settingsProvider.definitionField] = definition ? definition.split(\"\\n\").join(\"<br>\") : definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    audioField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, audioClip} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.audioField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition, audioClip)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio will be exported only if an audio source was available when the subtitle was copied.\r\n                        </li>\r\n                        <li>\r\n                            Configure Anki settings with the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=Khipc3zLMiA\">Sentence mining video files</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=fau1BNNDrEQ\">Sentence mining streaming video</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <Tabs\r\n                value={tabIndex}\r\n                variant=\"fullWidth\"\r\n                onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n            >\r\n                <Tab label=\"Anki\" />\r\n                <Tab label=\"In-Video Subtitles\" />\r\n            </Tabs>\r\n            {tabIndex === 0 && (\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                    </DialogContentText>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                />\r\n                            </div>\r\n                            <SelectableSetting\r\n                                label=\"Deck\"\r\n                                value={deck}\r\n                                selections={deckNames}\r\n                                onChange={handleDeckChange}\r\n                                onSelectionChange={handleDeckSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Note Type\"\r\n                                value={noteType}\r\n                                selections={modelNames}\r\n                                onChange={handleNoteTypeChange}\r\n                                onSelectionChange={handleNoteTypeSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Sentence Field\"\r\n                                value={sentenceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSentenceFieldChange}\r\n                                onSelectionChange={handleSentenceFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Definition Field\"\r\n                                value={definitionField}\r\n                                selections={fieldNames}\r\n                                onChange={handleDefinitionFieldChange}\r\n                                onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Audio Field\"\r\n                                value={audioField}\r\n                                selections={fieldNames}\r\n                                onChange={handleAudioFieldChange}\r\n                                onSelectionChange={handleAudioFieldSelectionChange}\r\n                            />\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            {tabIndex === 1 && (\r\n                <DialogContent>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Color\"\r\n                                    value={subtitleColor}\r\n                                    onChange={handleSubtitleColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Size\"\r\n                                    value={subtitleSize}\r\n                                    onChange={handleSubtitleSizeChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Outline Color\"\r\n                                    value={subtitleOutlineColor}\r\n                                    onChange={handleSubtitleOutlineColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Outline Thickness\"\r\n                                    value={subtitleOutlineThickness}\r\n                                    onChange={handleSubtitleOutlineThicknessChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Background Color\"\r\n                                    value={subtitleBackgroundColor}\r\n                                    onChange={handleSubtitleBackgroundColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Background Opacity\"\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        max: 1,\r\n                                        step: 0.1\r\n                                    }}\r\n                                    value={subtitleBackgroundOpacity}\r\n                                    onChange={handleSubtitleBackgroundOpacityChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey),\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.4.2\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for(const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}