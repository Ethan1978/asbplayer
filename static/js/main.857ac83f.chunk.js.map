{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","../../common/src/Util.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","services/Util.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","name","floor","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","substring","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","ankiQuerySpecialCharacters","fileNameSpecialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","sanitizedName","_sanitizeFileName","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","sanitized","action","version","error","humanReadableTime","totalSeconds","seconds","minutes","hours","String","padStart","surroundingSubtitles","index","countRadius","timeRadius","startIndex","endIndex","atBoundary","mockSurroundingSubtitles","middleSubtitle","maxTimestamp","afterTimestamp","track","beforeTimestamp","unshift","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","trim","label","mark","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","initialSource","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","timestampInterval","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","lastAppliedTimestampIntervalToText","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","round","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","handleCustomFieldChange","newCustomFieldValues","assign","disableApplyTextSelection","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","onChange","InputProps","endAdornment","InputAdornment","Tooltip","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","Start","End","Text","combined","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","opacity","hex","exec","r","parseInt","g","b","hexToRgb","timeDurationDisplay","milliseconds","totalMilliseconds","includeMilliseconds","ms","secs","mins","hrs","pad","padEnd","n","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","emptyText","secondary","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","wrap","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","secondsInMinute","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","unbindCopy","unbindAnkiExport","loaded","videoInWindow","onMouseMove","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","nocontrols","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","Content","App","createMuiTheme","main","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.857ac83f.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","export default class KeyEvents {\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return (\r\n            !KeyEvents.detectIncreaseOffset(event) &&\r\n            !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) &&\r\n            event.keyCode === 37\r\n        );\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return (\r\n            !KeyEvents.detectDecreaseOffset(event) &&\r\n            !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) &&\r\n            event.keyCode === 39\r\n        );\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n    constructor({ up, holding, canceledBy, map }) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return { result: result, extra: extra };\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({ up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57] });\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({\r\n            holding: [83],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({\r\n            holding: [68],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n}\r\n","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(\r\n        onToggleSubtitleTrack,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(\r\n        onToggleSubtitleTrackInList,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}\r\n","export default class Mp3Encoder {\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        },\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, { type: 'audio/mp3' }));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.9028b5fe.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = { 'audio/ogg;codecs=opus': 'ogg', 'audio/webm;codecs=opus': 'webm' };\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES)\r\n    .filter(MediaRecorder.isTypeSupported)\r\n    .map((t) => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n    constructor(baseName, start, end, base64, extension) {\r\n        this.name = baseName + '_' + Math.floor(start) + '_' + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = 'none';\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch('data:audio/' + this.extension + ';base64,' + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + '_' + start + '_' + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            };\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = 'none';\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === 'function') {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === 'function') {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error('Unable to capture stream from audio');\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return 'mp3';\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        return new AudioClip(\r\n            new Base64AudioData(\r\n                subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')),\r\n                start,\r\n                end,\r\n                base64,\r\n                extension\r\n            )\r\n        );\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + '.' + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n","export default class CanvasResizer {\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, { resizeWidth: newWidth, resizeHeight: newHeight })\r\n                    .then((sprite) => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return 'data:image/' + this.extension + ';base64,' + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + '_' + Math.floor(timestamp) + '.jpeg';\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = 'none';\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName =\r\n            subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')) +\r\n            '_' +\r\n            Math.floor(timestamp) +\r\n            '.' +\r\n            extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}\r\n","export default class HttpFetcher {\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n        });\r\n        return await response.json();\r\n    }\r\n}\r\n","import HttpFetcher from './HttpFetcher';\r\n\r\nconst ankiQuerySpecialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\nconst fileNameSpecialCharacters = [':', '/', '\\\\', '<', '>', '\"', '|', '?', '*', '^'];\r\n\r\nexport default class Anki {\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', { modelName: modelName }, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = '';\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (ankiQuerySpecialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`;\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.customAnkiFields[customFieldName],\r\n                    customFieldValues[customFieldName],\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            const sanitizedName = this._sanitizeFileName(audioClip.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await audioClip.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false);\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: sanitizedName,\r\n                    data: await audioClip.base64(),\r\n                    fields: [this.settingsProvider.audioField],\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            const sanitizedName = this._sanitizeFileName(image.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await image.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.imageField,\r\n                    `<div><img src=\"${fileName}\"></div>`,\r\n                    false\r\n                );\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: sanitizedName,\r\n                    data: await image.base64(),\r\n                    fields: [this.settingsProvider.imageField],\r\n                };\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (\r\n                    await this._executeAction('findNotes', { query: 'added:1' }, ankiConnectUrl)\r\n                ).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue = multiline ? value.split('\\n').join('<br>') : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + '<br>' + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    _sanitizeFileName(name) {\r\n        let sanitized = '';\r\n\r\n        for (let i = 0; i < name.length; ++i) {\r\n            const char = name[i];\r\n\r\n            if (fileNameSpecialCharacters.includes(char)) {\r\n                sanitized += '_';\r\n            } else {\r\n                sanitized += char;\r\n            }\r\n        }\r\n\r\n        return sanitized;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', { filename: name, data: base64 }, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6,\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}\r\n","export function humanReadableTime(timestamp) {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    const seconds = totalSeconds % 60;\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + 'h' + String(minutes).padStart(2, '0') + 'm' + String(seconds).padStart(2, '0') + 's';\r\n    }\r\n\r\n    return minutes + 'm' + String(seconds).padStart(2, '0') + 's';\r\n}\r\n\r\nexport function surroundingSubtitles(subtitles, index, countRadius, timeRadius) {\r\n    let startIndex;\r\n    let endIndex;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nexport function mockSurroundingSubtitles(middleSubtitle, maxTimestamp, timeRadius) {\r\n    const subtitles = [middleSubtitle];\r\n\r\n    if (middleSubtitle.end < maxTimestamp) {\r\n        const afterTimestamp = Math.min(maxTimestamp, middleSubtitle.end + timeRadius);\r\n        subtitles.push({\r\n            text: '',\r\n            start: middleSubtitle.end,\r\n            end: afterTimestamp,\r\n            track: 0,\r\n        });\r\n    }\r\n\r\n    if (middleSubtitle.start > 0) {\r\n        const beforeTimestamp = Math.max(0, middleSubtitle.start - timeRadius);\r\n        subtitles.unshift({\r\n            text: '',\r\n            start: beforeTimestamp,\r\n            end: middleSubtitle.start,\r\n            track: 0,\r\n        });\r\n    }\r\n\r\n    return subtitles;\r\n}\r\n\r\nfunction atBoundary(subtitles, index, initialIndex, countRadius, timeRadius, sign) {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (\r\n        Math.abs(initialIndex - index) >= countRadius &&\r\n        (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000,\r\n    },\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n                <MuiAlert severity={props.severity}>{props.children}</MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min !== null && max !== null && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext, boundary) {\r\n    const seenTimestamps = {};\r\n\r\n    return sliderContext.subtitles\r\n        .filter((s) => s.text.trim() !== '')\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`,\r\n            };\r\n        })\r\n        .filter((mark) => mark !== null)\r\n        .filter((mark) => mark.value >= boundary[0] && mark.value <= boundary[1]);\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n}) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState('');\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [source, setSource] = useState(initialSource);\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [timestampInterval, setTimestampInterval] = useState();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState();\r\n    const [timestampMarks, setTimestampMarks] = useState();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState();\r\n    const [audioClip, setAudioClip] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition('');\r\n        setWord('');\r\n        setSource(initialSource);\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText, initialSource]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval = sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd];\r\n        const timestampBoundaryInterval = sliderContext && boundaryIntervalFromSliderContext(sliderContext);\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval));\r\n    }, [sliderContext]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(null);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [\r\n        initialAudioClip,\r\n        settingsProvider.preferMp3,\r\n        lastAppliedTimestampIntervalToAudio,\r\n        settingsProvider.audioPaddingStart,\r\n        settingsProvider.audioPaddingEnd,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === '' || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            audioClip.play();\r\n        },\r\n        [audioClip]\r\n    );\r\n\r\n    const handleViewImage = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onViewImage(image);\r\n        },\r\n        [image, onViewImage]\r\n    );\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n\r\n        for (const s of sliderContext.subtitles) {\r\n            if (\r\n                (s.start >= timestampInterval[0] && s.start <= timestampInterval[1]) ||\r\n                (s.end >= timestampInterval[0] && s.end <= timestampInterval[1]) ||\r\n                (timestampInterval[0] >= s.start && timestampInterval[0] <= s.end) ||\r\n                (timestampInterval[1] >= s.start && timestampInterval[1] <= s.end)\r\n            ) {\r\n                intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join('\\n'));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback(\r\n        (e) => {\r\n            e.stopPropagation();\r\n            setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        },\r\n        [timestampInterval]\r\n    );\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(\r\n            sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval)\r\n        );\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const handleCustomFieldChange = useCallback(\r\n        (customFieldName, value) => {\r\n            const newCustomFieldValues = {};\r\n            Object.assign(newCustomFieldValues, customFieldValues);\r\n            newCustomFieldValues[customFieldName] = value;\r\n            setCustomFieldValues(newCustomFieldValues);\r\n        },\r\n        [customFieldValues]\r\n    );\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText =\r\n            duplicateNotes.length > 0\r\n                ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n                : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = '';\r\n    }\r\n\r\n    const disableApplyTextSelection =\r\n        !sliderContext || sliderContext.subtitles.filter((s) => s.text.trim() !== '').length === 0;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Anki Export\r\n                </Typography>\r\n                <IconButton edge=\"end\" onClick={() => onOpenSettings()}>\r\n                    <SettingsIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    (timestampInterval[0] === lastAppliedTimestampIntervalToText[0] &&\r\n                                                        timestampInterval[1] ===\r\n                                                            lastAppliedTimestampIntervalToText[1]) ||\r\n                                                    disableApplyTextSelection\r\n                                                }\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    disabled ||\r\n                                                    !settingsProvider.wordField ||\r\n                                                    !word ||\r\n                                                    word.trim() === ''\r\n                                                }\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            rowsMax={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || ''}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div className={classes.mediaField} onClick={handlePlayAudio}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <Tooltip title=\"Apply Selection\">\r\n                                                <span>\r\n                                                    <IconButton\r\n                                                        disabled={\r\n                                                            (timestampInterval[0] ===\r\n                                                                lastAppliedTimestampIntervalToAudio[0] &&\r\n                                                                timestampInterval[1] ===\r\n                                                                    lastAppliedTimestampIntervalToAudio[1]) ||\r\n                                                            !audioClip.isSliceable(\r\n                                                                timestampInterval[0],\r\n                                                                timestampInterval[1]\r\n                                                            )\r\n                                                        }\r\n                                                        onClick={handleApplyTimestampIntervalToAudio}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <DoneIcon />\r\n                                                    </IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div className={classes.mediaField} onClick={handleViewImage}>\r\n                            <TextField variant=\"filled\" color=\"secondary\" fullWidth value={image.name} label=\"Image\" />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{ flexGrow: 1 }}>\r\n                                <Slider\r\n                                    value={timestampInterval}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button disabled={disabled} onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')\r\n                    }\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')\r\n                    }\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')\r\n                    }\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-colored.b54dc59d.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({ dragging }) => ({\r\n        position: 'absolute',\r\n        height: 'calc(100% - 64px)',\r\n        width: '100%',\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? 'auto' : 'none',\r\n    }),\r\n    transparentBackground: {\r\n        '&::before': {\r\n            content: \"' '\",\r\n            position: 'absolute',\r\n            height: 'calc(100vh - 64px)',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            backgroundSize: '350px 450px',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: 'rgba(0, 0, 0, .3)',\r\n            filter: 'drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))',\r\n        },\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nexport default function DragOverlay({ dragging, loading }) {\r\n    const classes = useStyles({ dragging: dragging });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'start',\r\n        textAlign: 'left',\r\n    },\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const { open, extensionUrl, onClose } = props;\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose}>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">Loading files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Drag and drop mkv, srt, ass, or mp3 files into the player.</li>\r\n                    <li>Multiple files can be dragged and dropped simultaneously e.g. mkv+srt, mp3+ass etc.</li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded, they\r\n                        can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Syncing with streaming video in another tab</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome{' '}\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                            extension\r\n                        </Link>\r\n                        .\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>Or, load a subtitle file into asbplayer and use the camera button in the bottom right.</li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine\r\n                        subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Anki</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.</li>\r\n                        <li>For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.</li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.</li>\r\n                        <li>For local file playback, copy the current subtitle by using Ctrl+Shift+A.</li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;\r\n                                <StarIcon fontSize=\"small\" />\r\n                                &nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard\r\n                        shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                        >\r\n                            video\r\n                        </Link>{' '}\r\n                        for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Changing subtitle offset</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.</li>\r\n                    <li>Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.</li>\r\n                    <li>Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Condensed playback of local media files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Load an audio/video file with a subtitle file.</li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;\r\n                            <SpeedIcon fontSize=\"small\" />\r\n                            &nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Keyboard shortcuts</Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+A</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Q</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Z</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle (streaming video in another tab)</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+X</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Copy current subtitle and open Anki export dialog (streaming video in another\r\n                                        tab)\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+F</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Select video element to mine with no subtitle file (streaming video in another\r\n                                        tab)\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Space</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Play/pause</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitles</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S+1, S+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in video</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>D+1, D+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in asbplayer</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Seek to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Left/Right or Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset by +/- 100 ms</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">Common issues</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>asbplayer isn't detecting streaming video.</li>\r\n                    <ul>\r\n                        <li>Try refreshing both the asbplayer tab and the video in the other tab.</li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites. A lot of\r\n                            video players are loaded inside of iframes, so it's difficult to list every single URL that\r\n                            the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>The extension keyboard shortcuts aren't working.</li>\r\n                    <ul>\r\n                        <li>Try uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                        <li>Make sure the extension isn't installed twice.</li>\r\n                        <li>\r\n                            Verify the keyboard shortcut is bound as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/wYWbgovfNlI\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                    </ul>\r\n                    <li>asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'</li>\r\n                    <ul>\r\n                        <li>If you're using Brave, make sure asbplayer isn't being blocked by Shield.</li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start\r\n                            is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.</li>\r\n                    <ul>\r\n                        <li>Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).</li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">Demos</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\"\r\n                        >\r\n                            Sentence mining streaming video (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\"\r\n                        >\r\n                            Sentence mining streaming video (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=sgrJF99WX-Q\"\r\n                        >\r\n                            Sentence mining streaming video (no subtitle file)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=J3E82spYqIk\"\r\n                        >\r\n                            Sentence mining video files (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\"\r\n                        >\r\n                            Sentence mining video files (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Browser Compatibility</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely\r\n                        work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser. The{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://github.com/animebook/animebook.github.io#video-format-support\"\r\n                        >\r\n                            animebook\r\n                        </Link>{' '}\r\n                        readme has a detailed explanation of this and links to browsers that have good compatibility.\r\n                        Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are\r\n                        enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({ width, height }) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain',\r\n    }),\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const { open, image, onClose } = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({ width: width * resizeRatio, height: height * resizeRatio });\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose} maxWidth=\"lg\">\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{ width: width * resizeRatio, height: height * resizeRatio }}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap((nodes) => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt')) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map((node) => ({ ...node.data, track: track }));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () =>\r\n                    resolve(\r\n                        cues.map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track,\r\n                        }))\r\n                    );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map((event) => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track,\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({ drawerWidth }) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({ show }) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({ show, ...toolTipProps }) {\r\n    const classes = useCopyHistoryTooltipStyles({ show: show });\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={props.onFileSelector}>\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenHelp}>\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenSettings}>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n                return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage(\r\n            {\r\n                sender: 'asbplayerv2',\r\n                message: {\r\n                    command: 'heartbeat',\r\n                    id: this.id,\r\n                },\r\n            },\r\n            '*'\r\n        );\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({ sender: 'asbplayer', message: message, tabId: tabId, src: src }, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({ sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src }, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n    };\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily,\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles[\r\n            'textShadow'\r\n        ] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const { r, g, b } = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport function timeDurationDisplay(milliseconds, totalMilliseconds, includeMilliseconds = true) {\r\n    if (milliseconds < 0) {\r\n        return timeDurationDisplay(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n\r\n        if (includeMilliseconds) {\r\n            return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n        }\r\n\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs);\r\n    }\r\n\r\n    if (includeMilliseconds) {\r\n        return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20,\r\n    },\r\n    emptyState: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        padding: 15,\r\n    },\r\n    text: {\r\n        flexGrow: 1,\r\n    },\r\n    emptyText: {\r\n        flexGrow: 1,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    timestamp: {\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const { open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item } = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback = useCallback((element) => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback(\r\n        (item) => {\r\n            props.onDelete(item);\r\n        },\r\n        [props]\r\n    );\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push(\r\n                    <ListSubheader disableSticky={true} key={item.name + '-' + itemNameCounters[item.name]}>\r\n                        {item.name}\r\n                    </ListSubheader>\r\n                );\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push(\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{ gutters: classes.listItemGutters }}\r\n                >\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Grid wrap=\"nowrap\" container>\r\n                                <Grid item className={item.text === '' ? classes.emptyText : classes.text}>\r\n                                    {item.text === '' ? 'No text' : item.text}\r\n                                </Grid>\r\n                                <Grid item className={classes.timestamp}>\r\n                                    {timeDurationDisplay(item.start, item.start, false)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            );\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">See the help for keyboard shortcuts.</Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: 'absolute',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100%',\r\n        zIndex: 100,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer',\r\n    },\r\n}));\r\n\r\nexport default function LandingPage({\r\n    extension,\r\n    latestExtensionVersion,\r\n    extensionUrl,\r\n    loading,\r\n    dragging,\r\n    onFileSelector,\r\n}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or{' '}\r\n                        <Link\r\n                            target=\"#\"\r\n                            className={classes.browseLink}\r\n                            onClick={onFileSelector}\r\n                            color=\"secondary\"\r\n                            component=\"label\"\r\n                        >\r\n                            browse\r\n                        </Link>\r\n                        .\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    Chrome extension\r\n                                </Link>{' '}\r\n                                to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    update\r\n                                </Link>{' '}\r\n                                is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}\r\n","export default class ChromeTabVideoProtocol {\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data,\r\n                });\r\n            }\r\n        };\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}\r\n","export default class Clock {\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: '#fff',\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    timeDisplay: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: '#fff',\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto',\r\n    },\r\n    subContainer: {\r\n        background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))',\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto',\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto',\r\n    },\r\n    progress: {\r\n        margin: 5,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    },\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        width: 'calc(100% - 20px)',\r\n        marginLeft: 10,\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8,\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%',\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        bottom: 0,\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle',\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit',\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white',\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback(\r\n        (e) => {\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            // Account for margins by subtracting 10 from left/right sides\r\n            const width = rect.right - rect.left - 20;\r\n            const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? (elementWidth(containerRef.current) * props.value) / 100 : 0;\r\n    const fillStyle = { width: progressWidth };\r\n    const handleStyle = { marginLeft: progressWidth };\r\n    const fillContainerClassName = mouseOver\r\n        ? classes.fillContainer + ' ' + classes.fillContainerThick\r\n        : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + ' ' + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div ref={containerRef} className={classes.container}>\r\n                <div className={fillContainerClassName}>\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button\r\n                onClick={() => props.onAudioTrackSelected(t.id)}\r\n            >\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({ open, anchorEl, onClose, tabs, selectedTab, onTabSelected }) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button\r\n                onClick={() => onTabSelected(t)}\r\n            >\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n}) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({ x: 0, y: 0 });\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    }\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow =\r\n                now - lastShowTimestampRef.current < 2000 ||\r\n                Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2) +\r\n                    Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) >\r\n                    100 ||\r\n                forceShowRef.current ||\r\n                offsetInputRef.current === document.activeElement ||\r\n                now - lastOffsetInputChangeTimestampRef.current < 2000;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                    onOffsetChange(offset * 1000);\r\n                    offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate();\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? '+' + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            onAudioTrackSelected(id);\r\n            setAudioTrackSelectorAnchorEl(null);\r\n            setAudioTrackSelectorOpen(false);\r\n        },\r\n        [onAudioTrackSelected]\r\n    );\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback(\r\n        (tab) => {\r\n            onTabSelected(tab);\r\n            setTabSelectorAnchorEl(null);\r\n            setTabSelectorOpen(false);\r\n        },\r\n        [onTabSelected]\r\n    );\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback(\r\n        (e, value) => {\r\n            setVolume(value);\r\n            onVolumeChange(value / 100);\r\n        },\r\n        [onVolumeChange]\r\n    );\r\n\r\n    const handleVolumeChangeCommitted = useCallback(\r\n        (e, value) => {\r\n            if (value > 0) {\r\n                setLastCommittedVolume(value);\r\n            }\r\n\r\n            settingsProvider.volume = value;\r\n        },\r\n        [settingsProvider]\r\n    );\r\n\r\n    const handleVolumeToggle = useCallback(\r\n        (e, value) => {\r\n            setVolume((volume) => {\r\n                const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n                onVolumeChange(newVolume / 100);\r\n                return newVolume;\r\n            });\r\n        },\r\n        [onVolumeChange, lastCommittedVolume]\r\n    );\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar onSeek={handleSeek} value={progress * 100} />\r\n                        <Grid container className={classes.gridContainer} direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton color=\"inherit\" onClick={() => (playing ? onPause() : onPlay())}>\r\n                                    {playing ? (\r\n                                        <PauseIcon className={classes.button} />\r\n                                    ) : (\r\n                                        <PlayArrowIcon className={classes.button} />\r\n                                    )}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid\r\n                                    item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={\r\n                                        showVolumeBar\r\n                                            ? classes.volumeInputContainerShown\r\n                                            : classes.volumeInputContainerHidden\r\n                                    }\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar\r\n                                                ? classes.volumeInputThumbShown\r\n                                                : classes.volumeInputThumbHidden,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={'±' + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{ flexGrow: 1 }}></Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon\r\n                                                className={\r\n                                                    condensedModeEnabled ? classes.button : classes.inactiveButton\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon\r\n                                            className={subtitlesEnabled ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon\r\n                                            className={selectedTab ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon\r\n                                            className={classes.button}\r\n                                            style={popOut ? { transform: 'rotateX(180deg)' } : {}}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen ? (\r\n                                            <FullscreenExitIcon className={classes.button} />\r\n                                        ) : (\r\n                                            <FullscreenIcon className={classes.button} />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            };\r\n        }\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({ compressed, windowWidth }) => (compressed ? Math.max(350, 0.25 * windowWidth) : '100%'),\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5,\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5,\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const { index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps } = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : '';\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(selection?.type === 'Range' && textRef.current?.isSameNode(selection.anchorNode.parentNode));\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? 'small' : 'default'} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>{subtitle.displayTime}</TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider,\r\n}) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(\r\n        () =>\r\n            subtitles\r\n                ? Array(subtitles.length)\r\n                      .fill()\r\n                      .map((_, i) => createRef())\r\n                : [],\r\n        [subtitles]\r\n    );\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({ compressed, windowWidth });\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: 'center',\r\n                            inline: 'nearest',\r\n                            behavior: 'smooth',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('visibilitychange', scrollIfVisible);\r\n\r\n        return () => document.removeEventListener('visibilitychange', scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        }\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                block: 'center',\r\n                inline: 'nearest',\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback(\r\n        (index) => {\r\n            if (!selectedSubtitleIndexesRef.current) {\r\n                return [];\r\n            }\r\n\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        const index = Math.min(Object.keys(selectedSubtitleIndexesRef.current));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback(\r\n        (index) => {\r\n            const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n            onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n        },\r\n        [subtitles, onSeek]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (e, index) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n        },\r\n        [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]\r\n    );\r\n\r\n    let subtitleTable = null;\r\n\r\n    if (!subtitles || subtitles.length === 0) {\r\n        if (!loading && displayHelp) {\r\n            subtitleTable = !loading && displayHelp && (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">{displayHelp}</Typography>\r\n                </div>\r\n            );\r\n        } else if (subtitles && subtitles.length === 0) {\r\n            subtitleTable = (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">No subtitles</Typography>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} ref={containerRef} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(\r\n                            event.data.subtitle,\r\n                            event.data.surroundingSubtitles,\r\n                            event.data.audio,\r\n                            event.data.image,\r\n                            event.data.preventDuplicate,\r\n                            event.data.id\r\n                        );\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({ command: 'currentTime', value: this.time });\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({ command: 'ready', duration: duration });\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({ command: 'init' });\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({ command: 'play' });\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({ command: 'pause' });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames,\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({ command: 'subtitleSettings', value: settings });\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({ command: 'condensedModeToggle', value: enabled });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({ command: 'hideSubtitlePlayerToggle', value: hidden });\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({ command: 'ankiDialogRequest' });\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({ command: 'finishedAnkiDialogRequest', resume: resume });\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({ command: 'ankiSettings', value: settings });\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({ command: 'miscSettings', value: settings });\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({ command: 'close' });\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}\r\n","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings, mockSurroundingSubtitles } from '@project/common';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0,\r\n    },\r\n});\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration ? 1000 * audioRef.current.duration : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration ? 1000 * videoRef.current.duration : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: { subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl },\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle,\r\n}) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(\r\n        async (time, clock, forwardToMedia) => {\r\n            clock.setTime(time);\r\n            forceUpdate();\r\n\r\n            if (forwardToMedia) {\r\n                await mediaAdapter.seek(time / 1000);\r\n            }\r\n        },\r\n        [forceUpdate, mediaAdapter]\r\n    );\r\n\r\n    const applyOffset = useCallback(\r\n        (offset, forwardToVideo) => {\r\n            setOffset(offset);\r\n\r\n            setSubtitles((subtitles) => {\r\n                if (!subtitles) {\r\n                    return;\r\n                }\r\n\r\n                const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n                const newSubtitles = subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    displayTime: timeDurationDisplay(s.originalStart + offset, length),\r\n                    track: s.track,\r\n                }));\r\n\r\n                if (forwardToVideo) {\r\n                    videoRef.current?.subtitles(\r\n                        newSubtitles,\r\n                        subtitleFiles.map((f) => f.name)\r\n                    );\r\n                }\r\n\r\n                return newSubtitles;\r\n            });\r\n        },\r\n        [subtitleFiles]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDurationDisplay(s.start, length),\r\n                        track: s.track,\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut((popOut) => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer((hidden) => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(\r\n                            subtitlesRef.current,\r\n                            subtitleFiles.map((f) => f.name)\r\n                        );\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, surroundingSubtitles, audio, image, preventDuplicate, id) =>\r\n                            onCopy(\r\n                                subtitle,\r\n                                surroundingSubtitles,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitle ? subtitleFiles[subtitle.track] : null,\r\n                                channel.selectedAudioTrack,\r\n                                audio,\r\n                                image,\r\n                                preventDuplicate,\r\n                                id\r\n                            )\r\n                        );\r\n                        channel.onCondensedModeToggle(() =>\r\n                            setCondensedModeEnabled((enabled) => {\r\n                                const newValue = !enabled;\r\n                                channel.condensedModeToggle(newValue);\r\n                                return newValue;\r\n                            })\r\n                        );\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) =>\r\n                            setDisabledSubtitleTracks((tracks) => {\r\n                                const newTracks = { ...tracks };\r\n                                newTracks[track] = !tracks[track];\r\n                                return newTracks;\r\n                            })\r\n                        );\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [\r\n        subtitleReader,\r\n        extension,\r\n        settingsProvider,\r\n        clock,\r\n        mediaAdapter,\r\n        seek,\r\n        onLoaded,\r\n        onError,\r\n        onUnloadVideo,\r\n        onCopy,\r\n        onAnkiDialogRequest,\r\n        subtitleFiles,\r\n        audioFile,\r\n        audioFileUrl,\r\n        videoFile,\r\n        videoFileUrl,\r\n        tab,\r\n        forceUpdate,\r\n        videoFrameRef,\r\n        applyOffset,\r\n    ]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    }\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest((resumeOnFinishedAnkiDialogRequest) => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL +\r\n                    '/?video=' +\r\n                    encodeURIComponent(videoFileUrl) +\r\n                    '&channel=' +\r\n                    channelId +\r\n                    '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                'resizable,width=800,height=450'\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(\r\n        async (progress) => {\r\n            if (!lengthRef.current) {\r\n                return;\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(progress * lengthRef.current, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        },\r\n        [clock, seek]\r\n    );\r\n\r\n    const handleSeekToSubtitle = useCallback(\r\n        async (time, shouldPlay) => {\r\n            if (!shouldPlay) {\r\n                pause(clock, mediaAdapter, true);\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(time, clock, true);\r\n\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, seek, mediaAdapter]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (subtitle, surroundingSubtitles, preventDuplicate) => {\r\n            onCopy(\r\n                subtitle,\r\n                surroundingSubtitles,\r\n                audioFile,\r\n                videoFile,\r\n                subtitleFiles[subtitle.track],\r\n                selectedAudioTrack,\r\n                null,\r\n                null,\r\n                preventDuplicate,\r\n                null\r\n            );\r\n        },\r\n        [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]\r\n    );\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        async (id) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.audioTrackSelected(id);\r\n            }\r\n\r\n            pause(clock, mediaAdapter, true);\r\n\r\n            await seek(0, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, mediaAdapter, seek]\r\n    );\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n        },\r\n        [applyOffset]\r\n    );\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => setCondensedModeEnabled((v) => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback(\r\n        (track) =>\r\n            setDisabledSubtitleTracks((tracks) => {\r\n                const newTracks = { ...tracks };\r\n                newTracks[track] = !tracks[track];\r\n                return newTracks;\r\n            }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        if ((audioFile || videoFile) && (!subtitles || subtitles.length === 0)) {\r\n            const unbindCopy = KeyBindings.bindCopy(\r\n                (event, subtitle) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n                },\r\n                () => disableKeyEvents,\r\n                () => {\r\n                    if (!lengthRef.current) {\r\n                        return null;\r\n                    }\r\n\r\n                    const timestamp = clock.time(lengthRef.current);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                }\r\n            );\r\n\r\n            const unbindAnkiExport = KeyBindings.bindAnkiExport(\r\n                (event) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n\r\n                    onAnkiDialogRequest();\r\n                },\r\n                () => false\r\n            );\r\n\r\n            return () => {\r\n                unbindCopy();\r\n                unbindAnkiExport();\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }, [audioFile, videoFile, subtitles, clock, selectedAudioTrack, disableKeyEvents, onCopy, onAnkiDialogRequest]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" className={classes.container}>\r\n                {videoInWindow && (\r\n                    <Grid item style={{ flexGrow: 1, minWidth: 600 }}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={\r\n                                process.env.PUBLIC_URL +\r\n                                '/?video=' +\r\n                                encodeURIComponent(videoFileUrl) +\r\n                                '&channel=' +\r\n                                channelId +\r\n                                '&popout=false'\r\n                            }\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid\r\n                        item\r\n                        style={{\r\n                            flexGrow: videoInWindow ? 0 : 1,\r\n                            width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto',\r\n                        }}\r\n                    >\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({ open, onProceed, onCancel, existingCustomFieldNames }) {\r\n    const [fieldName, setFieldName] = useState('');\r\n\r\n    useEffect(() => {\r\n        setFieldName('');\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio',\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>Cancel</Button>\r\n                <Button disabled={fieldExists || fieldName.trim() === ''} onClick={() => onProceed(fieldName.trim())}>\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10,\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'end',\r\n        alignItems: 'flex-end',\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting({ label, value, selections, removable, onChange, onSelectionChange, onRemoval }) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select value={value} disabled={!selections} color=\"secondary\" onChange={onSelectionChange}>\r\n                    {selections &&\r\n                        selections.map((s) => (\r\n                            <MenuItem key={s} value={s}>\r\n                                {s}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({ anki, open, settings, onClose }) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || '');\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || '');\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || '');\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || '');\r\n    const [audioField, setAudioField] = useState(settings.audioField || '');\r\n    const [imageField, setImageField] = useState(settings.imageField || '');\r\n    const [wordField, setWordField] = useState(settings.wordField || '');\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || '');\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = '';\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback(\r\n        (customFieldName) =>\r\n            setCustomFields((oldCustomFields) => {\r\n                const newCustomFields = {};\r\n                Object.assign(newCustomFields, oldCustomFields);\r\n                delete newCustomFields[customFieldName];\r\n                return newCustomFields;\r\n            }),\r\n        []\r\n    );\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(\r\n        () =>\r\n            computeStyles({\r\n                subtitleColor: subtitleColor,\r\n                subtitleSize: subtitleSize,\r\n                subtitleOutlineThickness: subtitleOutlineThickness,\r\n                subtitleOutlineColor: subtitleOutlineColor,\r\n                subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n                subtitleBackgroundColor: subtitleBackgroundColor,\r\n                subtitleFontFamily: subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleColor,\r\n            subtitleSize,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleBackgroundColor,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(['', ...(await anki.modelFieldNames(noteType, ankiConnectUrl))]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => (canceled = true);\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [\r\n        onClose,\r\n        ankiConnectUrl,\r\n        deck,\r\n        noteType,\r\n        sentenceField,\r\n        definitionField,\r\n        audioField,\r\n        imageField,\r\n        wordField,\r\n        sourceField,\r\n        customFields,\r\n        preferMp3,\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n        subtitlePreview,\r\n        themeType,\r\n        audioPaddingStart,\r\n        audioPaddingEnd,\r\n        maxImageWidth,\r\n        maxImageHeight,\r\n    ]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map((customFieldName) => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog open={open} maxWidth=\"xs\" fullWidth onBackdropClick={handleClose} onEscapeKeyDown={handleClose}>\r\n                <DialogTitle>Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + '//' + window.location.hostname} is in the\r\n                                    webCorsOriginList in your AnkiConnect settings as in this{' '}\r\n                                    <Link\r\n                                        color=\"secondary\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                                    >\r\n                                        video\r\n                                    </Link>\r\n                                    .\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1,\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1,\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","const defaultAnkiConnectUrl = 'http://127.0.0.1:8765';\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = '#ffffff';\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = '#000000';\r\nconst defaultSubtitleBackgroundColor = '#000000';\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = '';\r\nconst defaultSubtitlePreview = 'アあ安';\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = 'ankiConnectUrl';\r\nconst deckKey = 'deck';\r\nconst noteTypeKey = 'noteType';\r\nconst sentenceFieldKey = 'sentenceField';\r\nconst definitionFieldKey = 'definitionField';\r\nconst audioFieldKey = 'audioField';\r\nconst imageFieldKey = 'imageField';\r\nconst wordFieldKey = 'wordField';\r\nconst sourceFieldKey = 'sourceField';\r\nconst customAnkiFieldsKey = 'customAnkiFields';\r\nconst subtitleSizeKey = 'subtitleSize';\r\nconst subtitleColorKey = 'subtitleColor';\r\nconst subtitleOutlineThicknessKey = 'subtitleOutlineThickness';\r\nconst subtitleOutlineColorKey = 'subtitleOutlineColor';\r\nconst subtitleBackgroundColorKey = 'subtitleBackgroundColor';\r\nconst subtitleBackgroundOpacityKey = 'subtitleBackgroundOpacity';\r\nconst subtitleFontFamilyKey = 'subtitleFontFamily';\r\nconst subtitlePreviewKey = 'subtitlePreview';\r\nconst audioPaddingStartKey = 'audioPaddingStart';\r\nconst audioPaddingEndKey = 'audioPaddingEnd';\r\nconst maxImageWidthKey = 'maxImageWidth';\r\nconst maxImageHeightKey = 'maxImageHeight';\r\nconst volumeKey = 'volume';\r\nconst preferMp3Key = 'preferMp3';\r\nconst themeTypeKey = 'themeType';\r\n\r\nexport default class SettingsProvider {\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, maxImageWidth);\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        const value = localStorage.getItem(maxImageHeightKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageHeight;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, maxImageHeight);\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}\r\n","export default class PlayerChannel {\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({ command: 'currentTime', value: this.time, echo: true });\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack,\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({ command: 'readyState', value: readyState });\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({ command: 'play', echo: true });\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({ command: 'pause', echo: true });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({ command: 'offset', value: offset });\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({ command: 'popOutToggle' });\r\n    }\r\n\r\n    copy(subtitle, surroundingSubtitles, preventDuplicate) {\r\n        this.channel?.postMessage({\r\n            command: 'copy',\r\n            subtitle: subtitle,\r\n            surroundingSubtitles: surroundingSubtitles,\r\n            preventDuplicate: preventDuplicate,\r\n        });\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({ command: 'condensedModeToggle' });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({ command: 'hideSubtitlePlayerToggle' });\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({ command: 'ankiDialogRequest', forwardToVideo: forwardToVideo });\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({ command: 'toggleSubtitleTrackInList', track: track });\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({ command: 'exit' });\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util';\r\nimport { KeyBindings, surroundingSubtitles, mockSurroundingSubtitles, humanReadableTime } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    video: {\r\n        margin: 'auto',\r\n    },\r\n    cursorHidden: {\r\n        cursor: 'none',\r\n    },\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings),\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language,\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = 'Aborted';\r\n            break;\r\n        case 2:\r\n            error = 'Network error';\r\n            break;\r\n        case 3:\r\n            error = 'Decoding error';\r\n            break;\r\n        case 4:\r\n            error = 'Source not supported';\r\n            break;\r\n        default:\r\n            error = 'Unknown error';\r\n            break;\r\n    }\r\n\r\n    return error + ': ' + (element.error.message || '<details missing>');\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { settingsProvider, videoFile, channel, popOut, onError } = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] =\r\n        useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(\r\n        (element) => {\r\n            if (element) {\r\n                videoRef.current = element;\r\n\r\n                if (element.readyState === 4) {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                } else {\r\n                    element.onloadeddata = (event) => {\r\n                        notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                    };\r\n                }\r\n\r\n                element.oncanplay = (event) => {\r\n                    playerChannel.readyState(4);\r\n\r\n                    if (playingRef.current) {\r\n                        clock.start();\r\n                    }\r\n                };\r\n\r\n                element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n                element.onerror = (event) => onError(errorMessage(element));\r\n            }\r\n        },\r\n        [clock, playerChannel, onError]\r\n    );\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            const time = progress * length;\r\n            playerChannel.currentTime = time / 1000;\r\n        },\r\n        [length, clock, playerChannel]\r\n    );\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n                playerChannel.pause();\r\n            }\r\n\r\n            selectAudioTrack(id);\r\n            setSelectedAudioTrack(id);\r\n            playerChannel.currentTime = 0;\r\n            playerChannel.audioTrackSelected(id);\r\n        },\r\n        [playerChannel, clock]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({ ...s, index: i });\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50);\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            setOffset(offset);\r\n            setSubtitles((subtitles) =>\r\n                subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    track: s.track,\r\n                }))\r\n            );\r\n            playerChannel.offset(offset);\r\n        },\r\n        [playerChannel]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(\r\n        (index) => {\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const noSubtitles = !subtitles || subtitles.length === 0;\r\n\r\n                playerChannel.copy(\r\n                    subtitle,\r\n                    noSubtitles\r\n                        ? mockSurroundingSubtitles(subtitle, length, 5000)\r\n                        : calculateSurroundingSubtitles(subtitle.index)\r\n                );\r\n\r\n                if (fullscreen) {\r\n                    setAlert(\r\n                        subtitle.text === ''\r\n                            ? `Saved ${humanReadableTime(subtitle.start)}`\r\n                            : `Copied: \"${subtitle.text}\"`\r\n                    );\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n                }\r\n\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, clock, length, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled((enabled) => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks((tracks) => {\r\n                    const newTracks = { ...tracks };\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n\r\n                    playerChannel.copy(subtitle, mockSurroundingSubtitles(subtitle, length, 5000), false);\r\n                } else if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, clock, length, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled((subtitlesEnabled) => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () =>\r\n            makeSubtitleStyles({\r\n                subtitleSize,\r\n                subtitleColor,\r\n                subtitleOutlineThickness,\r\n                subtitleOutlineColor,\r\n                subtitleBackgroundColor,\r\n                subtitleBackgroundOpacity,\r\n                subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile}\r\n            />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map((s) => (\r\n                        <React.Fragment key={s.index}>\r\n                            {s.text}\r\n                            <br />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image, humanReadableTime } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider.js';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = '0.16.1';\r\nconst extensionUrl = 'https://github.com/killergerbah/asbplayer/releases/latest';\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    contentShift: ({ drawerWidth }) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf('.');\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case 'ass':\r\n            case 'srt':\r\n            case 'vtt':\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case 'mkv':\r\n            case 'mp4':\r\n            case 'avi':\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case 'mp3':\r\n            case 'm4a':\r\n            case 'aac':\r\n            case 'flac':\r\n            case 'ogg':\r\n            case 'wav':\r\n            case 'opus':\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported extension ' + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error('Cannot load both an audio and video file simultaneously');\r\n    }\r\n\r\n    return { subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile };\r\n}\r\n\r\nfunction audioClipFromItem(item, sliderContext, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        const start = item.audio.start ?? item.start;\r\n        const end = item.audio.end ?? item.end;\r\n\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, start - (item.audio.paddingStart ?? 0)),\r\n            end + (item.audio.paddingEnd ?? 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(item.subtitleFile.name, item.start, item.image.base64, item.image.extension);\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(item.videoFile, item.start, maxWidth, maxHeight);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction itemSourceString(item) {\r\n    const source = item?.subtitleFile?.name ?? item?.audioFile?.name ?? item?.videoFile?.name;\r\n\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    return `${source} (${humanReadableTime(item.start)})`;\r\n}\r\n\r\nfunction itemSliderContext(item) {\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [\r\n            { start: item.start, end: item.end, text: item.text, track: item.track },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    primary: {\r\n                        main: '#49007a',\r\n                    },\r\n                    secondary: {\r\n                        main: '#ff1f62',\r\n                    },\r\n                    error: {\r\n                        main: red.A400,\r\n                    },\r\n                    type: settingsProvider.themeType,\r\n                },\r\n            }),\r\n        [settingsProvider.themeType]\r\n    );\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? 0.2 : 0.3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({ subtitleFiles: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogItemSliderContext = useMemo(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            audioClipFromItem(\r\n                ankiDialogItem,\r\n                ankiDialogItemSliderContext,\r\n                settingsProvider.audioPaddingStart,\r\n                settingsProvider.audioPaddingEnd\r\n            ),\r\n        [\r\n            ankiDialogItem,\r\n            ankiDialogItemSliderContext,\r\n            settingsProvider.audioPaddingStart,\r\n            settingsProvider.audioPaddingEnd,\r\n        ]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({ timestamp: 0, resume: false });\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const { subtitleFiles } = sources;\r\n\r\n    const handleCopy = useCallback(\r\n        (\r\n            subtitle,\r\n            surroundingSubtitles,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            audioTrack,\r\n            audio,\r\n            image,\r\n            preventDuplicate,\r\n            id\r\n        ) => {\r\n            if (subtitle) {\r\n                navigator.clipboard.writeText(subtitle.text);\r\n            }\r\n\r\n            setCopiedSubtitles((copiedSubtitles) => {\r\n                if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                    const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                    if (\r\n                        subtitle.start === last.start &&\r\n                        subtitle.end === last.end &&\r\n                        subtitle.text === last.text &&\r\n                        subtitleFile.name === last.subtitleFile.name\r\n                    ) {\r\n                        return copiedSubtitles;\r\n                    }\r\n                }\r\n\r\n                const newCopiedSubtitles = [];\r\n                let updated = false;\r\n\r\n                for (const s of copiedSubtitles) {\r\n                    if (id && s.id === id) {\r\n                        const newCopiedSubtitle = {\r\n                            ...s,\r\n                            ...subtitle,\r\n                            ...(surroundingSubtitles && { surroundingSubtitles: surroundingSubtitles }),\r\n                            ...(subtitleFile && { subtitleFile: subtitleFile }),\r\n                            ...(audioFile && { audioFile: audioFile }),\r\n                            ...(videoFile && { videoFile: videoFile }),\r\n                            ...(audioTrack && { audioTrack: audioTrack }),\r\n                            ...(audio && { audio: audio }),\r\n                            ...(image && { image: image }),\r\n                        };\r\n                        newCopiedSubtitles.push(newCopiedSubtitle);\r\n                        updated = true;\r\n                    } else {\r\n                        newCopiedSubtitles.push(s);\r\n                    }\r\n                }\r\n\r\n                if (!updated) {\r\n                    newCopiedSubtitles.push({\r\n                        ...subtitle,\r\n                        surroundingSubtitles: surroundingSubtitles,\r\n                        timestamp: Date.now(),\r\n                        id: id || uuidv4(),\r\n                        name: fileName,\r\n                        subtitleFile: subtitleFile,\r\n                        audioFile: audioFile,\r\n                        videoFile: videoFile,\r\n                        audioTrack: audioTrack,\r\n                        audio: audio,\r\n                        image: image,\r\n                    });\r\n                }\r\n\r\n                return newCopiedSubtitles;\r\n            });\r\n\r\n            if (subtitle) {\r\n                setAlertSeverity('success');\r\n                setAlert(\r\n                    subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`\r\n                );\r\n                setAlertOpen(true);\r\n            }\r\n        },\r\n        [fileName]\r\n    );\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen((copyHistoryOpen) => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback(\r\n        (newSettings) => {\r\n            settingsProvider.settings = newSettings;\r\n            setSettingsDialogOpen(false);\r\n            setDisableKeyEvents(false);\r\n            extension.publishMessage({ command: 'subtitleSettings', value: settingsProvider.subtitleSettings });\r\n            extension.publishMessage({ command: 'ankiSettings', value: settingsProvider.ankiSettings });\r\n            extension.publishMessage({ command: 'miscSettings', value: settingsProvider.miscSettings });\r\n        },\r\n        [extension, settingsProvider]\r\n    );\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            const newCopiedSubtitles = [];\r\n\r\n            for (let subtitle of copiedSubtitles) {\r\n                if (item.id !== subtitle.id) {\r\n                    newCopiedSubtitles.push(subtitle);\r\n                }\r\n            }\r\n\r\n            setCopiedSubtitles(newCopiedSubtitles);\r\n        },\r\n        [copiedSubtitles]\r\n    );\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity('error');\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(\r\n        (audioFileUrl) => {\r\n            if (audioFileUrl !== sources.audioFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(audioFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: previous.videoFile,\r\n                    videoFileUrl: previous.videoFileUrl,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleUnloadVideo = useCallback(\r\n        (videoFileUrl) => {\r\n            if (videoFileUrl !== sources.videoFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(videoFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: previous.audioFile,\r\n                    audioFileUrl: previous.audioFileUrl,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleClipAudio = useCallback(\r\n        async (item) => {\r\n            try {\r\n                const clip = await audioClipFromItem(\r\n                    item,\r\n                    null,\r\n                    settingsProvider.audioPaddingStart,\r\n                    settingsProvider.audioPaddingEnd\r\n                );\r\n\r\n                if (settingsProvider.preferMp3) {\r\n                    clip.toMp3().download();\r\n                } else {\r\n                    clip.download();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError, settingsProvider]\r\n    );\r\n\r\n    const handleDownloadImage = useCallback(\r\n        async (item) => {\r\n            try {\r\n                await imageFromItem(item).download();\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    const handleSelectCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            if (subtitleFiles.filter((f) => f.name === item.subtitleFile.name).length === 0) {\r\n                handleError('Subtitle file ' + item.subtitleFile.name + ' is not open.');\r\n                return;\r\n            }\r\n\r\n            setJumpToSubtitle({ text: item.text, originalStart: item.originalStart });\r\n        },\r\n        [subtitleFiles, handleError]\r\n    );\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(\r\n        async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\r\n            setAnkiDialogDisabled(true);\r\n\r\n            try {\r\n                const result = await anki.export(\r\n                    text,\r\n                    definition,\r\n                    audioClip,\r\n                    image,\r\n                    word,\r\n                    source,\r\n                    customFieldValues,\r\n                    mode\r\n                );\r\n\r\n                if (mode !== 'gui') {\r\n                    if (mode === 'default') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Export succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    } else if (mode === 'updateLast') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Update succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    }\r\n\r\n                    setAnkiDialogOpen(false);\r\n\r\n                    if (ankiDialogRequested) {\r\n                        setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n                        setAnkiDialogRequested(false);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            } finally {\r\n                setAnkiDialogDisabled(false);\r\n                setDisableKeyEvents(false);\r\n            }\r\n        },\r\n        [anki, handleError, ankiDialogRequested]\r\n    );\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id || t1.title !== t2.title || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter((t) => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback(\r\n        (files) => {\r\n            try {\r\n                let { subtitleFiles, audioFile, videoFile } = extractSources(files);\r\n\r\n                setSources((previous) => {\r\n                    setLoading(true);\r\n\r\n                    let videoFileUrl = null;\r\n                    let audioFileUrl = null;\r\n\r\n                    if (videoFile || audioFile) {\r\n                        revokeUrls(previous);\r\n\r\n                        if (videoFile) {\r\n                            videoFileUrl = URL.createObjectURL(videoFile);\r\n                        } else if (audioFile) {\r\n                            audioFileUrl = URL.createObjectURL(audioFile);\r\n                        }\r\n\r\n                        setTab(null);\r\n                    } else {\r\n                        videoFile = previous.videoFile;\r\n                        videoFileUrl = previous.videoFileUrl;\r\n                        audioFile = previous.audioFile;\r\n                        audioFileUrl = previous.audioFileUrl;\r\n                    }\r\n\r\n                    const sources = {\r\n                        subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                        audioFile: audioFile,\r\n                        audioFileUrl: audioFileUrl,\r\n                        videoFile: videoFile,\r\n                        videoFileUrl: videoFileUrl,\r\n                    };\r\n\r\n                    return sources;\r\n                });\r\n\r\n                if (subtitleFiles.length > 0) {\r\n                    const subtitleFileName = subtitleFiles[0].name;\r\n                    setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter((t) => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' +\r\n                                message.tabId +\r\n                                ' with src ' +\r\n                                message.src +\r\n                                ' was not found'\r\n                        );\r\n                    } else {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' + message.tabId + ' was not found'\r\n                        );\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [\r\n                        new File(\r\n                            [await (await fetch('data:text/plain;base64,' + message.data.subtitles.base64)).blob()],\r\n                            message.data.subtitles.name\r\n                        ),\r\n                    ];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(\r\n                        message.data.subtitles.map(\r\n                            async (s) =>\r\n                                new File([await (await fetch('data:text/plain;base64,' + s.base64)).blob()], s.name)\r\n                        )\r\n                    );\r\n                }\r\n\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                });\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n\r\n            if (inVideoPlayer) {\r\n                handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n                return;\r\n            }\r\n\r\n            setDragging(false);\r\n            dragEnterRef.current = null;\r\n\r\n            if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n                return;\r\n            }\r\n\r\n            handleFiles(e.dataTransfer.files);\r\n        },\r\n        [inVideoPlayer, handleError, handleFiles]\r\n    );\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer) {\r\n                dragEnterRef.current = e.target;\r\n                setDragging(true);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleDragLeave = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n                setDragging(false);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded =\r\n        (loading && !videoFrameRef.current) ||\r\n        (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity={alertSeverity}>\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout');\r\n\r\n                            if (videoFile && channel) {\r\n                                return (\r\n                                    <Redirect\r\n                                        to={\r\n                                            '/video?video=' +\r\n                                            encodeURIComponent(videoFile) +\r\n                                            '&channel=' +\r\n                                            channel +\r\n                                            '&popout=' +\r\n                                            popOut\r\n                                        }\r\n                                    />\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <CopyHistory\r\n                                        items={copiedSubtitles}\r\n                                        open={copyHistoryOpen}\r\n                                        drawerWidth={drawerWidth}\r\n                                        onClose={handleCloseCopyHistory}\r\n                                        onDelete={handleDeleteCopyHistoryItem}\r\n                                        onClipAudio={handleClipAudio}\r\n                                        onDownloadImage={handleDownloadImage}\r\n                                        onSelect={handleSelectCopyHistoryItem}\r\n                                        onAnki={handleAnki}\r\n                                    />\r\n                                    <AnkiDialog\r\n                                        open={ankiDialogOpen}\r\n                                        disabled={ankiDialogDisabled}\r\n                                        text={ankiDialogItem?.text}\r\n                                        audioClip={ankiDialogAudioClip}\r\n                                        image={ankiDialogImage}\r\n                                        source={itemSourceString(ankiDialogItem)}\r\n                                        sliderContext={ankiDialogItemSliderContext}\r\n                                        customFields={settingsProvider.customAnkiFields}\r\n                                        anki={anki}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCancel={handleAnkiDialogCancel}\r\n                                        onProceed={handleAnkiDialogProceed}\r\n                                        onViewImage={handleViewImage}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                    />\r\n                                    <ImageDialog\r\n                                        open={imageDialogOpen}\r\n                                        image={image}\r\n                                        onClose={handleImageDialogClosed}\r\n                                    />\r\n                                    <SettingsDialog\r\n                                        anki={anki}\r\n                                        open={settingsDialogOpen}\r\n                                        onClose={handleCloseSettings}\r\n                                        settings={settingsProvider.settings}\r\n                                    />\r\n                                    <HelpDialog\r\n                                        open={helpDialogOpen}\r\n                                        extensionUrl={extensionUrl}\r\n                                        onClose={handleCloseHelp}\r\n                                    />\r\n                                    <Bar\r\n                                        title={fileName || 'asbplayer'}\r\n                                        drawerWidth={drawerWidth}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        onOpenCopyHistory={handleOpenCopyHistory}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                        onOpenHelp={handleOpenHelp}\r\n                                        onFileSelector={handleFileSelector}\r\n                                    />\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        onChange={handleFileInputChange}\r\n                                        type=\"file\"\r\n                                        accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                        multiple\r\n                                        hidden\r\n                                    />\r\n                                    <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                        {nothingLoaded && (\r\n                                            <LandingPage\r\n                                                latestExtensionVersion={latestExtensionVersion}\r\n                                                extensionUrl={extensionUrl}\r\n                                                extension={extension}\r\n                                                loading={loading}\r\n                                                dragging={dragging}\r\n                                                onFileSelector={handleFileSelector}\r\n                                            />\r\n                                        )}\r\n                                        <DragOverlay dragging={dragging} loading={loading} />\r\n                                        <Player\r\n                                            subtitleReader={subtitleReader}\r\n                                            settingsProvider={settingsProvider}\r\n                                            onCopy={handleCopy}\r\n                                            onError={handleError}\r\n                                            onUnloadAudio={handleUnloadAudio}\r\n                                            onUnloadVideo={handleUnloadVideo}\r\n                                            onLoaded={handleSourcesLoaded}\r\n                                            onTabSelected={handleTabSelected}\r\n                                            onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                            tab={tab}\r\n                                            availableTabs={availableTabs}\r\n                                            sources={sources}\r\n                                            jumpToSubtitle={jumpToSubtitle}\r\n                                            videoFrameRef={videoFrameRef}\r\n                                            extension={extension}\r\n                                            drawerOpen={copyHistoryOpen}\r\n                                            disableKeyEvents={disableKeyEvents}\r\n                                            ankiDialogRequested={ankiDialogRequested}\r\n                                            ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                            ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                        />\r\n                                    </Content>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/video\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout') === 'true';\r\n\r\n                            return (\r\n                                <VideoPlayer\r\n                                    settingsProvider={settingsProvider}\r\n                                    videoFile={videoFile}\r\n                                    popOut={popOut}\r\n                                    channel={channel}\r\n                                    onError={handleError}\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import '@fontsource/roboto';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}