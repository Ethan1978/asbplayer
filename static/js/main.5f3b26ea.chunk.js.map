{"version":3,"sources":["hooks/useWindowSize/index.ts","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.ts","../../common/src/mp3-encoder.js","../../common/src/AudioClip.ts","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/Fetcher.ts","../../common/src/Anki.ts","../../common/src/Util.ts","components/Alert.js","components/TagsTextField.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","services/Util.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.ts","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.tsx"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","target","Error","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","error","message","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","_name","_base64","_extension","cachedBlob","floor","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","undefined","fetch","FileAudioData","file","trackId","name","readAsDataURL","onloadend","substring","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","selectTrack","onloadedmetadata","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","display","href","download","click","remove","mp3WorkerFactory","subtitleFileName","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","substr","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","ankiQuerySpecialCharacters","fileNameSpecialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","tags","mode","fields","_appendField","sentenceField","definitionField","sourceField","urlField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","sanitizedName","_sanitizeFileName","_storeMediaFile","fileName","filename","imageField","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","sanitized","action","version","humanReadableTime","seconds","nearestTenth","totalSeconds","round","minutes","hours","String","padStart","surroundingSubtitles","index","countRadius","timeRadius","startIndex","atBoundary","endIndex","mockSurroundingSubtitles","middleSubtitle","maxTimestamp","offset","afterTimestamp","originalEnd","track","beforeTimestamp","unshift","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","TagsTextField","onTagsChange","setValue","handleChange","useCallback","currentValue","endsWith","newTags","splitTags","tag","trim","extractTagsFromString","TextField","onChange","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","label","mark","sliderValueLabelFormat","ms","ValueLabelComponent","Tooltip","enterTouchDelay","placement","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","initialSource","initialUrl","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","setTags","setUrl","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","timestampInterval","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","lastAppliedTimestampIntervalToText","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","preventDefault","stopPropagation","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","handleCustomFieldChange","newCustomFieldValues","assign","disableApplyTextSelection","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","color","rowsMax","InputProps","endAdornment","InputAdornment","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","valueLabelFormat","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","tagRegex","RegExp","helperElement","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","parseSrt","node","isFromNetflix","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","replace","lines","newLines","line","_fixRTL","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","Start","End","Text","combined","DOMParser","xml","parseFromString","textNodes","getElementsByTagName","elm","parseFloat","getAttribute","_decodeHTML","textContent","index1","index2","newLine","innerHTML","childNodes","nodeValue","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","tabId","_sendHeartbeat","setInterval","receivedTabs","tab","callback","_remove","callbacks","splice","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","opacity","hex","exec","r","parseInt","g","b","hexToRgb","timeDurationDisplay","milliseconds","totalMilliseconds","includeMilliseconds","secs","mins","hrs","pad","padEnd","n","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","emptyText","secondary","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","wrap","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","secondsInMinute","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","trackLength","audioRef","videoRef","useOffset","subtitlesLength","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","unbindCopy","unbindAnkiExport","loaded","videoInWindow","onMouseMove","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setUrlField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleUrlFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handleTagsChange","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","urlFieldKey","customAnkiFieldsKey","tagsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","_tags","newSettings","localStorage","getItem","removeItem","setItem","_setOptionalItem","ankiFieldsString","tagsString","_getNumberItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","nocontrols","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","Content","App","createMuiTheme","main","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","copiedSubtitle","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.5f3b26ea.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled: boolean) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","export default class KeyEvents {\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return (\r\n            !KeyEvents.detectIncreaseOffset(event) &&\r\n            !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) &&\r\n            event.keyCode === 37\r\n        );\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return (\r\n            !KeyEvents.detectDecreaseOffset(event) &&\r\n            !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) &&\r\n            event.keyCode === 39\r\n        );\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n    constructor({ up, holding, canceledBy, map }) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return { result: result, extra: extra };\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({ up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57] });\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({\r\n            holding: [83],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({\r\n            holding: [68],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n}\r\n","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(\r\n        onToggleSubtitleTrack,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(\r\n        onToggleSubtitleTrackInList,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}\r\n","export default class Mp3Encoder {\r\n    static async encode(blob: Blob, workerFactory: () => Worker): Promise<Blob> {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n\r\n                    if (e.target === null) {\r\n                        reject(new Error(\"Could not obtain buffer to encode\"));\r\n                        return;\r\n                    }\r\n\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result as ArrayBuffer);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        },\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, { type: 'audio/mp3' }));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = (e) => {\r\n                        const error = e?.error ?? new Error('MP3 encoding failed: ' + e?.message);\r\n                        reject(error);\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.12b04796.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\n// @ts-ignore\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES: { [key: string]: string } = { 'audio/ogg;codecs=opus': 'ogg', 'audio/webm;codecs=opus': 'webm' };\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES)\r\n    .filter(MediaRecorder.isTypeSupported)\r\n    .map((t) => [t as string, AUDIO_TYPES[t] as string])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\ninterface ExperimentalAudioElement extends HTMLAudioElement {\r\n    audioTracks: any;\r\n    captureStream?: () => MediaStream;\r\n    mozCaptureStream?: () => MediaStream;\r\n}\r\n\r\ninterface AudioData {\r\n    name: string;\r\n    extension: string;\r\n    play: () => Promise<void>;\r\n    blob: () => Promise<Blob>;\r\n    base64: () => Promise<string>;\r\n    slice: (start: number, end: number) => AudioData;\r\n    isSliceable: (start: number, end: number) => boolean;\r\n}\r\n\r\nclass Base64AudioData implements AudioData {\r\n    private readonly _name: string;\r\n    private readonly start: number;\r\n    private readonly end: number;\r\n    private readonly _base64: string;\r\n    private readonly _extension: string;\r\n\r\n    private cachedBlob?: Blob;\r\n\r\n    constructor(baseName: string, start: number, end: number, base64: string, extension: string) {\r\n        this._name = baseName + '_' + Math.floor(start) + '_' + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this._extension = extension;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get extension(): string {\r\n        return this._extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play(): Promise<void> {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = 'none';\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = '';\r\n                URL.revokeObjectURL(src);\r\n                resolve(undefined);\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch('data:audio/' + this.extension + ';base64,' + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start: number, end: number): AudioData {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData implements AudioData {\r\n    private readonly file: File;\r\n    private readonly _name: string;\r\n    private readonly start: number;\r\n    private readonly end: number;\r\n    private readonly trackId: string;\r\n    private readonly _extension: string;\r\n\r\n    private _blob?: Blob;\r\n\r\n    constructor(file: File, start: number, end: number, trackId: string) {\r\n        this.file = file;\r\n        this._name = file.name + '_' + start + '_' + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this._extension = recorderExtension;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    get extension(): string {\r\n        return this._extension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result as string;\r\n                const base64 = result.substring(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            };\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = await this._audioElement(this._blob, false);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio(): Promise<Blob> {\r\n        return new Promise(async (resolve, reject) => {\r\n            const audio = await this._audioElement(this.file, true);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks: BlobPart[] = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source: Blob, selectTrack: boolean): Promise<ExperimentalAudioElement> {\r\n        const audio = new Audio() as ExperimentalAudioElement;\r\n        audio.src = URL.createObjectURL(source);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            audio.onloadedmetadata = (e) => {\r\n                if (selectTrack && this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n                    // @ts-ignore\r\n                    for (const t of audio.audioTracks) {\r\n                        t.enabled = this.trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                audio.currentTime = this.start / 1000;\r\n                resolve(audio);\r\n            };\r\n        });\r\n    }\r\n\r\n    _captureStream(audio: ExperimentalAudioElement) {\r\n        if (typeof audio.captureStream === 'function') {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === 'function') {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error('Unable to capture stream from audio');\r\n    }\r\n\r\n    async _stopAudio(audio: ExperimentalAudioElement): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = '';\r\n                URL.revokeObjectURL(src);\r\n                resolve(undefined);\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData implements AudioData {\r\n    private readonly data: AudioData;\r\n    private readonly workerFactory: () => Worker;\r\n    private _blob?: Blob;\r\n\r\n    constructor(data: AudioData, workerFactory: () => Worker) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return 'mp3';\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise<string>(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result as string;\r\n                    const base64 = result.substring(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n    private readonly data: AudioData;\r\n\r\n    constructor(data: AudioData) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName: string, start: number, end: number, base64: string, extension: string) {\r\n        return new AudioClip(\r\n            new Base64AudioData(\r\n                subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')),\r\n                start,\r\n                end,\r\n                base64,\r\n                extension\r\n            )\r\n        );\r\n    }\r\n\r\n    static fromFile(file: File, start: number, end: number, trackId: string) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + '.' + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style.display = 'none';\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start: number, end: number) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start: number, end: number) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n","export default class CanvasResizer {\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, { resizeWidth: newWidth, resizeHeight: newHeight })\r\n                    .then((sprite) => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return 'data:image/' + this.extension + ';base64,' + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + '_' + Math.floor(timestamp) + '.jpeg';\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = 'none';\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName =\r\n            subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')) +\r\n            '_' +\r\n            Math.floor(timestamp) +\r\n            '.' +\r\n            extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}\r\n","export interface Fetcher {\r\n    fetch: (url: string, body: any) => Promise<any>;\r\n}\r\n\r\nexport class HttpFetcher implements Fetcher {\r\n    async fetch(url: string, body: any) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n        });\r\n        return await response.json();\r\n    }\r\n}\r\n","import { AnkiSettings, AudioClip, Image } from '..';\r\nimport { HttpFetcher, Fetcher } from './Fetcher';\r\n\r\nconst ankiQuerySpecialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\nconst fileNameSpecialCharacters = [':', '/', '\\\\', '<', '>', '\"', '|', '?', '*', '^'];\r\n\r\nexport default class Anki {\r\n    private readonly settingsProvider: AnkiSettings;\r\n    private readonly fetcher: Fetcher;\r\n\r\n    constructor(settingsProvider: AnkiSettings, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('modelFieldNames', { modelName: modelName }, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word: string, ankiConnectUrl?: string) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query: string) {\r\n        let escaped = '';\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (ankiQuerySpecialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`;\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl?: string) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(\r\n        text: string | undefined,\r\n        definition: string | undefined,\r\n        audioClip: AudioClip | undefined,\r\n        image: Image | undefined,\r\n        word: string | undefined,\r\n        source: string | undefined,\r\n        url: string | undefined,\r\n        customFieldValues: { [key: string]: string },\r\n        tags: string[],\r\n        mode: 'gui' | 'updateLast' | 'default',\r\n        ankiConnectUrl?: string\r\n    ) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n        this._appendField(fields, this.settingsProvider.urlField, url, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.customAnkiFields[customFieldName],\r\n                    customFieldValues[customFieldName],\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        const params: any = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                tags: tags,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            const sanitizedName = this._sanitizeFileName(audioClip.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await audioClip.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false);\r\n            } else {\r\n                params.note['audio'] = {\r\n                    filename: sanitizedName,\r\n                    data: await audioClip.base64(),\r\n                    fields: [this.settingsProvider.audioField],\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            const sanitizedName = this._sanitizeFileName(image.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await image.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.imageField,\r\n                    `<div><img src=\"${fileName}\"></div>`,\r\n                    false\r\n                );\r\n            } else {\r\n                params.note['picture'] = {\r\n                    filename: sanitizedName,\r\n                    data: await image.base64(),\r\n                    fields: [this.settingsProvider.imageField],\r\n                };\r\n            }\r\n        }\r\n\r\n        params.note['fields'] = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (\r\n                    await this._executeAction('findNotes', { query: 'added:1' }, ankiConnectUrl)\r\n                ).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note['id'] = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n    }\r\n\r\n    _appendField(fields: any, fieldName: string | undefined, value: string | undefined, multiline: boolean) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue = multiline ? value.split('\\n').join('<br>') : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + '<br>' + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    _sanitizeFileName(name: string) {\r\n        let sanitized = '';\r\n\r\n        for (let i = 0; i < name.length; ++i) {\r\n            const char = name[i];\r\n\r\n            if (fileNameSpecialCharacters.includes(char)) {\r\n                sanitized += '_';\r\n            } else {\r\n                sanitized += char;\r\n            }\r\n        }\r\n\r\n        return sanitized;\r\n    }\r\n\r\n    async _storeMediaFile(name: string, base64: string, ankiConnectUrl?: string) {\r\n        return this._executeAction('storeMediaFile', { filename: name, data: base64 }, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action: string, params: any, ankiConnectUrl?: string) {\r\n        const body: any = {\r\n            action: action,\r\n            version: 6,\r\n        };\r\n\r\n        if (params) {\r\n            body['params'] = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}\r\n","import { SubtitleModel } from './Model';\r\n\r\nexport function humanReadableTime(timestamp: number, nearestTenth = false): string {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    let seconds;\r\n\r\n    if (nearestTenth) {\r\n        seconds = Math.round(((timestamp / 1000) % 60) * 10) / 10;\r\n    } else {\r\n        seconds = totalSeconds % 60;\r\n    }\r\n\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + 'h' + String(minutes).padStart(2, '0') + 'm' + String(seconds).padStart(2, '0') + 's';\r\n    }\r\n\r\n    return minutes + 'm' + String(seconds).padStart(2, '0') + 's';\r\n}\r\n\r\nexport function surroundingSubtitles(\r\n    subtitles: SubtitleModel[],\r\n    index: number,\r\n    countRadius: number,\r\n    timeRadius: number\r\n): SubtitleModel[] {\r\n    let startIndex = index;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    let endIndex = startIndex;\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nexport function mockSurroundingSubtitles(\r\n    middleSubtitle: SubtitleModel,\r\n    maxTimestamp: number,\r\n    timeRadius: number\r\n): SubtitleModel[] {\r\n    const subtitles = [middleSubtitle];\r\n    const offset = middleSubtitle.start - middleSubtitle.originalStart;\r\n\r\n    if (middleSubtitle.end < maxTimestamp) {\r\n        const afterTimestamp = Math.min(maxTimestamp, middleSubtitle.end + timeRadius);\r\n        subtitles.push({\r\n            text: '',\r\n            start: middleSubtitle.end,\r\n            end: afterTimestamp,\r\n            originalStart: middleSubtitle.end - offset,\r\n            originalEnd: afterTimestamp - offset,\r\n            track: middleSubtitle.track,\r\n        });\r\n    }\r\n\r\n    if (middleSubtitle.start > 0) {\r\n        const beforeTimestamp = Math.max(0, middleSubtitle.start - timeRadius);\r\n        subtitles.unshift({\r\n            text: '',\r\n            start: beforeTimestamp,\r\n            end: middleSubtitle.start,\r\n            originalStart: beforeTimestamp - offset,\r\n            originalEnd: middleSubtitle.start - offset,\r\n            track: middleSubtitle.track,\r\n        });\r\n    }\r\n\r\n    return subtitles;\r\n}\r\n\r\nfunction atBoundary(\r\n    subtitles: SubtitleModel[],\r\n    index: number,\r\n    initialIndex: number,\r\n    countRadius: number,\r\n    timeRadius: number,\r\n    sign: boolean\r\n): boolean {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (\r\n        Math.abs(initialIndex - index) >= countRadius &&\r\n        (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000,\r\n    },\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n                <MuiAlert severity={props.severity}>{props.children}</MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction extractTagsFromString(value) {\r\n    const splitTags = value.split(' ').join('').split(',');\r\n    const tags = [];\r\n\r\n    for (const tag of splitTags) {\r\n        tags.push(tag.trim());\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nexport default function TagsTextField({tags, onTagsChange, ...props}) {\r\n    const [value, setValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const tagsString = tags.join(', ');\r\n\r\n        if (tagsString !== value) {\r\n            setValue(tags.join(', '));\r\n        }\r\n    }, [value, tags]);\r\n\r\n    const handleChange = useCallback((e) => {\r\n        let currentValue = e.target.value;\r\n\r\n        if (\r\n            value.length > currentValue.length &&\r\n            value.includes(currentValue) &&\r\n            currentValue.endsWith(',')\r\n        ) {\r\n            // Detected a backspace at the last comma, move cursor back enough to remove the comma\r\n            currentValue = currentValue.substring(0, currentValue.length - 1);\r\n        }\r\n\r\n        // Decompose string into individual tags by removing all spaces and splitting on \",\"\r\n        const newTags = extractTagsFromString(currentValue);\r\n        setValue(newTags.join(', '));\r\n        onTagsChange(newTags);\r\n    }, [value, onTagsChange]);\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            value={value}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { humanReadableTime } from '@project/common';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport TagsTextField from './TagsTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min !== null && max !== null && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext, boundary) {\r\n    const seenTimestamps = {};\r\n\r\n    return sliderContext.subtitles\r\n        .filter((s) => s.text.trim() !== '')\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`,\r\n            };\r\n        })\r\n        .filter((mark) => mark !== null)\r\n        .filter((mark) => mark.value >= boundary[0] && mark.value <= boundary[1]);\r\n}\r\n\r\nfunction sliderValueLabelFormat(ms) {\r\n    return humanReadableTime(ms, true);\r\n}\r\n\r\nfunction ValueLabelComponent({ children, open, value }) {\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    url: initialUrl,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n}) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState('');\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [source, setSource] = useState(initialSource);\r\n    const [tags, setTags] = useState(settingsProvider.tags);\r\n    const [url, setUrl] = useState(initialUrl);\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [timestampInterval, setTimestampInterval] = useState();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState();\r\n    const [timestampMarks, setTimestampMarks] = useState();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState();\r\n    const [audioClip, setAudioClip] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition('');\r\n        setWord('');\r\n        setSource(initialSource);\r\n        setUrl(initialUrl);\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n        setTags(settingsProvider.tags);\r\n    }, [initialText, initialSource, initialUrl, settingsProvider.tags]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval = sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd];\r\n        const timestampBoundaryInterval = sliderContext && boundaryIntervalFromSliderContext(sliderContext);\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval));\r\n    }, [sliderContext]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(null);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [\r\n        initialAudioClip,\r\n        settingsProvider.preferMp3,\r\n        lastAppliedTimestampIntervalToAudio,\r\n        settingsProvider.audioPaddingStart,\r\n        settingsProvider.audioPaddingEnd,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === '' || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            audioClip.play();\r\n        },\r\n        [audioClip]\r\n    );\r\n\r\n    const handleViewImage = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onViewImage(image);\r\n        },\r\n        [image, onViewImage]\r\n    );\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n\r\n        for (const s of sliderContext.subtitles) {\r\n            if (\r\n                (s.start >= timestampInterval[0] && s.start <= timestampInterval[1]) ||\r\n                (s.end >= timestampInterval[0] && s.end <= timestampInterval[1]) ||\r\n                (timestampInterval[0] >= s.start && timestampInterval[0] <= s.end) ||\r\n                (timestampInterval[1] >= s.start && timestampInterval[1] <= s.end)\r\n            ) {\r\n                intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join('\\n'));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback(\r\n        (e) => {\r\n            e.stopPropagation();\r\n            setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        },\r\n        [timestampInterval]\r\n    );\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(\r\n            sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval)\r\n        );\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const handleCustomFieldChange = useCallback(\r\n        (customFieldName, value) => {\r\n            const newCustomFieldValues = {};\r\n            Object.assign(newCustomFieldValues, customFieldValues);\r\n            newCustomFieldValues[customFieldName] = value;\r\n            setCustomFieldValues(newCustomFieldValues);\r\n        },\r\n        [customFieldValues]\r\n    );\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText =\r\n            duplicateNotes.length > 0\r\n                ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n                : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = '';\r\n    }\r\n\r\n    const disableApplyTextSelection =\r\n        !sliderContext || sliderContext.subtitles.filter((s) => s.text.trim() !== '').length === 0;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Anki Export\r\n                </Typography>\r\n                <IconButton edge=\"end\" onClick={() => onOpenSettings()}>\r\n                    <SettingsIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    (timestampInterval[0] === lastAppliedTimestampIntervalToText[0] &&\r\n                                                        timestampInterval[1] ===\r\n                                                            lastAppliedTimestampIntervalToText[1]) ||\r\n                                                    disableApplyTextSelection\r\n                                                }\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    disabled ||\r\n                                                    !settingsProvider.wordField ||\r\n                                                    !word ||\r\n                                                    word.trim() === ''\r\n                                                }\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            rowsMax={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || ''}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div className={classes.mediaField} onClick={handlePlayAudio}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <Tooltip title=\"Apply Selection\">\r\n                                                <span>\r\n                                                    <IconButton\r\n                                                        disabled={\r\n                                                            (timestampInterval[0] ===\r\n                                                                lastAppliedTimestampIntervalToAudio[0] &&\r\n                                                                timestampInterval[1] ===\r\n                                                                    lastAppliedTimestampIntervalToAudio[1]) ||\r\n                                                            !audioClip.isSliceable(\r\n                                                                timestampInterval[0],\r\n                                                                timestampInterval[1]\r\n                                                            )\r\n                                                        }\r\n                                                        onClick={handleApplyTimestampIntervalToAudio}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <DoneIcon />\r\n                                                    </IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div className={classes.mediaField} onClick={handleViewImage}>\r\n                            <TextField variant=\"filled\" color=\"secondary\" fullWidth value={image.name} label=\"Image\" />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {initialUrl && (\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label=\"URL\"\r\n                            value={url}\r\n                            onChange={(e) => setUrl(e.target.value)}\r\n                        />\r\n                    )}\r\n                    {settingsProvider.tags.length > 0 && (\r\n                        <TagsTextField\r\n                            variant=\"filled\"\r\n                            label=\"Tags\"\r\n                            helperText=\"Comma-separated list of strings\"\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            tags={tags}\r\n                            onTagsChange={(newTags) => setTags(newTags)}\r\n                        />\r\n                    )}\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{ flexGrow: 1 }}>\r\n                                <Slider\r\n                                    ValueLabelComponent={ValueLabelComponent}\r\n                                    value={timestampInterval}\r\n                                    valueLabelFormat={sliderValueLabelFormat}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button disabled={disabled} onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(text, definition, audioClip, image, word, source, url, customFieldValues, tags, 'gui')\r\n                    }\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source,\r\n                            url,\r\n                            customFieldValues,\r\n                            tags,\r\n                            'updateLast'\r\n                        )\r\n                    }\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source,\r\n                            url,\r\n                            customFieldValues,\r\n                            tags,\r\n                            'default'\r\n                        )\r\n                    }\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-colored.cbc50e45.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({ dragging }) => ({\r\n        position: 'absolute',\r\n        height: 'calc(100% - 64px)',\r\n        width: '100%',\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? 'auto' : 'none',\r\n    }),\r\n    transparentBackground: {\r\n        '&::before': {\r\n            content: \"' '\",\r\n            position: 'absolute',\r\n            height: 'calc(100vh - 64px)',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            backgroundSize: '300px 300px',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: 'rgba(0, 0, 0, .3)',\r\n            filter: 'drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))',\r\n        },\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nexport default function DragOverlay({ dragging, loading }) {\r\n    const classes = useStyles({ dragging: dragging });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'start',\r\n        textAlign: 'left',\r\n    },\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const { open, extensionUrl, onClose } = props;\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose}>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">Loading files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Drag and drop mkv, srt, ass, or mp3 files into the player.</li>\r\n                    <li>Multiple files can be dragged and dropped simultaneously e.g. mkv+srt, mp3+ass etc.</li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded, they\r\n                        can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Syncing with streaming video in another tab</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome{' '}\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                            extension\r\n                        </Link>\r\n                        .\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>Or, load a subtitle file into asbplayer and use the camera button in the bottom right.</li>\r\n                    <li>\r\n                        On supported sites you can sync detected subtitles via the extension keyboard shortcut\r\n                        (Ctrl+Shift+F by default), or via the \"automatically sync detected subtitles\" option. The same\r\n                        shortcut also allows you to sync an empty subtitle track, allowing you to mine media without\r\n                        accompanying subtitles.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine\r\n                        subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Supported streaming video sites for subtitle detection</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Netflix (on main /watch url)</li>\r\n                    <li>Youtube (on main /watch url)</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Anki</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.</li>\r\n                        <li>For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.</li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.</li>\r\n                        <li>For local file playback, copy the current subtitle by using Ctrl+Shift+A.</li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;\r\n                                <StarIcon fontSize=\"small\" />\r\n                                &nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard\r\n                        shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                        >\r\n                            video\r\n                        </Link>{' '}\r\n                        for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Changing subtitle offset</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.</li>\r\n                    <li>Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.</li>\r\n                    <li>Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Condensed playback of local media files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Load an audio/video file with a subtitle file.</li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;\r\n                            <SpeedIcon fontSize=\"small\" />\r\n                            &nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Keyboard shortcuts</Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+A</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Q</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Z (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+X (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+F (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Select video element to mine without a subtitle file, or with detected subtitles\r\n                                        on supported sites\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Space</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Play/pause</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitles</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S+1, S+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in video</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>D+1, D+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in asbplayer</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Seek to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Left/Right or Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset by +/- 100 ms</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">Common issues</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>asbplayer isn't detecting streaming video.</li>\r\n                    <ul>\r\n                        <li>Try refreshing both the asbplayer tab and the video in the other tab.</li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites. A lot of\r\n                            video players are loaded inside of iframes, so it's difficult to list every single URL that\r\n                            the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>The extension keyboard shortcuts aren't working.</li>\r\n                    <ul>\r\n                        <li>Try uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                        <li>Make sure the extension isn't installed twice.</li>\r\n                        <li>\r\n                            Verify the keyboard shortcut is bound as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/wYWbgovfNlI\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                    </ul>\r\n                    <li>asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'</li>\r\n                    <ul>\r\n                        <li>If you're using Brave, make sure asbplayer isn't being blocked by Shield.</li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start\r\n                            is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.</li>\r\n                    <ul>\r\n                        <li>Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).</li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">Demos</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\"\r\n                        >\r\n                            Sentence mining streaming video (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\"\r\n                        >\r\n                            Sentence mining streaming video (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=sgrJF99WX-Q\"\r\n                        >\r\n                            Sentence mining streaming video (no subtitle file)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=J3E82spYqIk\"\r\n                        >\r\n                            Sentence mining video files (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\"\r\n                        >\r\n                            Sentence mining video files (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Browser Compatibility</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely\r\n                        work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser. The{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://github.com/animebook/animebook.github.io#video-format-support\"\r\n                        >\r\n                            animebook\r\n                        </Link>{' '}\r\n                        readme has a detailed explanation of this and links to browsers that have good compatibility.\r\n                        Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are\r\n                        enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({ width, height }) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain',\r\n    }),\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const { open, image, onClose } = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({ width: width * resizeRatio, height: height * resizeRatio });\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose} maxWidth=\"lg\">\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{ width: width * resizeRatio, height: height * resizeRatio }}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parse as parseAss } from 'ass-compiler';\r\nimport { parseSync as parseSrt } from 'subtitle';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nconst tagRegex = RegExp('</?([^>]*)>', 'ig');\r\nconst helperElement = document.createElement('div');\r\n\r\nexport default class SubtitleReader {\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap((nodes) => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt')) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map((node) => ({ ...node.data, track: track }));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt') || file.name.endsWith('.nfvtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const isFromNetflix = file.name.endsWith('.nfvtt');\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => {\r\n                    if (isFromNetflix) {\r\n                        c.text = c.text.replace(tagRegex, '');\r\n\r\n                        const lines = c.text.split('\\n');\r\n                        const newLines = [];\r\n\r\n                        for (const line of lines) {\r\n                            newLines.push(this._fixRTL(line));\r\n                        }\r\n\r\n                        c.text = newLines.join('\\n');\r\n                    }\r\n                    cues.push(c);\r\n                };\r\n                parser.onflush = () =>\r\n                    resolve(\r\n                        cues.map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track,\r\n                        }))\r\n                    );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map((event) => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track,\r\n            }));\r\n        }\r\n\r\n        if (file.name.endsWith('.ytxml')) {\r\n            const xml = new window.DOMParser().parseFromString(await file.text(), 'text/xml');\r\n            const textNodes = xml.getElementsByTagName('text');\r\n            const subtitles = [];\r\n\r\n            for (let index = 0, length = textNodes.length; index < length; index++) {\r\n                const elm = textNodes[index];\r\n                const start = parseFloat(elm.getAttribute('start'));\r\n\r\n                subtitles.push({\r\n                    start: Math.floor(start * 1000),\r\n                    end: Math.floor((start + parseFloat(elm.getAttribute('dur'))) * 1000),\r\n                    text: this._decodeHTML(elm.textContent.replace(tagRegex, '')),\r\n                    track,\r\n                });\r\n            }\r\n\r\n            return subtitles;\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    _fixRTL(line) {\r\n        const index1 = line.indexOf('&lrm;');\r\n        const index2 = line.indexOf('&rlm;');\r\n        let newLine = '';\r\n\r\n        if (index1 > -1) {\r\n            newLine = line.substring(0, index1) + '\\u202a' + line.substring(index1 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        } else if (index2 > -1) {\r\n            newLine = line.substring(0, index2) + '\\u202b' + line.substring(index2 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        }\r\n\r\n        return line;\r\n    }\r\n\r\n    _decodeHTML(text) {\r\n        helperElement.innerHTML = text;\r\n        return helperElement.childNodes.length === 0 ? '' : helperElement.childNodes[0].nodeValue;\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({ drawerWidth }) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({ show }) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({ show, ...toolTipProps }) {\r\n    const classes = useCopyHistoryTooltipStyles({ show: show });\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={props.onFileSelector}>\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenHelp}>\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenSettings}>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n                return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage(\r\n            {\r\n                sender: 'asbplayerv2',\r\n                message: {\r\n                    command: 'heartbeat',\r\n                    id: this.id,\r\n                    receivedTabs: this.tabs,\r\n                },\r\n            },\r\n            '*'\r\n        );\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({ sender: 'asbplayerv2', message: message, tabId: tabId, src: src }, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({ sender: 'asbplayerv2', message: message, tabId: tab.id, src: tab.src }, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n    };\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily,\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles[\r\n            'textShadow'\r\n        ] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const { r, g, b } = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport function timeDurationDisplay(milliseconds, totalMilliseconds, includeMilliseconds = true) {\r\n    if (milliseconds < 0) {\r\n        return timeDurationDisplay(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n\r\n        if (includeMilliseconds) {\r\n            return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n        }\r\n\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs);\r\n    }\r\n\r\n    if (includeMilliseconds) {\r\n        return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20,\r\n    },\r\n    emptyState: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        padding: 15,\r\n    },\r\n    text: {\r\n        flexGrow: 1,\r\n    },\r\n    emptyText: {\r\n        flexGrow: 1,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    timestamp: {\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const { open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item } = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback = useCallback((element) => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback(\r\n        (item) => {\r\n            props.onDelete(item);\r\n        },\r\n        [props]\r\n    );\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push(\r\n                    <ListSubheader disableSticky={true} key={item.name + '-' + itemNameCounters[item.name]}>\r\n                        {item.name}\r\n                    </ListSubheader>\r\n                );\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push(\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{ gutters: classes.listItemGutters }}\r\n                >\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Grid wrap=\"nowrap\" container>\r\n                                <Grid item className={item.text === '' ? classes.emptyText : classes.text}>\r\n                                    {item.text === '' ? 'No text' : item.text}\r\n                                </Grid>\r\n                                <Grid item className={classes.timestamp}>\r\n                                    {timeDurationDisplay(item.start, item.start, false)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            );\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">See the help for keyboard shortcuts.</Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: 'absolute',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100%',\r\n        zIndex: 100,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer',\r\n    },\r\n}));\r\n\r\nexport default function LandingPage({\r\n    extension,\r\n    latestExtensionVersion,\r\n    extensionUrl,\r\n    loading,\r\n    dragging,\r\n    onFileSelector,\r\n}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or{' '}\r\n                        <Link\r\n                            target=\"#\"\r\n                            className={classes.browseLink}\r\n                            onClick={onFileSelector}\r\n                            color=\"secondary\"\r\n                            component=\"label\"\r\n                        >\r\n                            browse\r\n                        </Link>\r\n                        .\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    Chrome extension\r\n                                </Link>{' '}\r\n                                to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    update\r\n                                </Link>{' '}\r\n                                is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}\r\n","export default class ChromeTabVideoProtocol {\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data,\r\n                });\r\n            }\r\n        };\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}\r\n","export default class Clock {\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: '#fff',\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    timeDisplay: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: '#fff',\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto',\r\n    },\r\n    subContainer: {\r\n        background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))',\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto',\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto',\r\n    },\r\n    progress: {\r\n        margin: 5,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    },\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        width: 'calc(100% - 20px)',\r\n        marginLeft: 10,\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8,\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%',\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        bottom: 0,\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle',\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit',\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white',\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback(\r\n        (e) => {\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            // Account for margins by subtracting 10 from left/right sides\r\n            const width = rect.right - rect.left - 20;\r\n            const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? (elementWidth(containerRef.current) * props.value) / 100 : 0;\r\n    const fillStyle = { width: progressWidth };\r\n    const handleStyle = { marginLeft: progressWidth };\r\n    const fillContainerClassName = mouseOver\r\n        ? classes.fillContainer + ' ' + classes.fillContainerThick\r\n        : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + ' ' + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div ref={containerRef} className={classes.container}>\r\n                <div className={fillContainerClassName}>\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button\r\n                onClick={() => props.onAudioTrackSelected(t.id)}\r\n            >\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({ open, anchorEl, onClose, tabs, selectedTab, onTabSelected }) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button\r\n                onClick={() => onTabSelected(t)}\r\n            >\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n}) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({ x: 0, y: 0 });\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    }\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow =\r\n                now - lastShowTimestampRef.current < 2000 ||\r\n                Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2) +\r\n                    Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) >\r\n                    100 ||\r\n                forceShowRef.current ||\r\n                offsetInputRef.current === document.activeElement ||\r\n                now - lastOffsetInputChangeTimestampRef.current < 2000;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                    onOffsetChange(offset * 1000);\r\n                    offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate();\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? '+' + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            onAudioTrackSelected(id);\r\n            setAudioTrackSelectorAnchorEl(null);\r\n            setAudioTrackSelectorOpen(false);\r\n        },\r\n        [onAudioTrackSelected]\r\n    );\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback(\r\n        (tab) => {\r\n            onTabSelected(tab);\r\n            setTabSelectorAnchorEl(null);\r\n            setTabSelectorOpen(false);\r\n        },\r\n        [onTabSelected]\r\n    );\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback(\r\n        (e, value) => {\r\n            setVolume(value);\r\n            onVolumeChange(value / 100);\r\n        },\r\n        [onVolumeChange]\r\n    );\r\n\r\n    const handleVolumeChangeCommitted = useCallback(\r\n        (e, value) => {\r\n            if (value > 0) {\r\n                setLastCommittedVolume(value);\r\n            }\r\n\r\n            settingsProvider.volume = value;\r\n        },\r\n        [settingsProvider]\r\n    );\r\n\r\n    const handleVolumeToggle = useCallback(\r\n        (e, value) => {\r\n            setVolume((volume) => {\r\n                const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n                onVolumeChange(newVolume / 100);\r\n                return newVolume;\r\n            });\r\n        },\r\n        [onVolumeChange, lastCommittedVolume]\r\n    );\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar onSeek={handleSeek} value={progress * 100} />\r\n                        <Grid container className={classes.gridContainer} direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton color=\"inherit\" onClick={() => (playing ? onPause() : onPlay())}>\r\n                                    {playing ? (\r\n                                        <PauseIcon className={classes.button} />\r\n                                    ) : (\r\n                                        <PlayArrowIcon className={classes.button} />\r\n                                    )}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid\r\n                                    item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={\r\n                                        showVolumeBar\r\n                                            ? classes.volumeInputContainerShown\r\n                                            : classes.volumeInputContainerHidden\r\n                                    }\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar\r\n                                                ? classes.volumeInputThumbShown\r\n                                                : classes.volumeInputThumbHidden,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={'±' + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{ flexGrow: 1 }}></Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon\r\n                                                className={\r\n                                                    condensedModeEnabled ? classes.button : classes.inactiveButton\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon\r\n                                            className={subtitlesEnabled ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon\r\n                                            className={selectedTab ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon\r\n                                            className={classes.button}\r\n                                            style={popOut ? { transform: 'rotateX(180deg)' } : {}}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen ? (\r\n                                            <FullscreenExitIcon className={classes.button} />\r\n                                        ) : (\r\n                                            <FullscreenIcon className={classes.button} />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            };\r\n        }\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({ compressed, windowWidth }) => (compressed ? Math.max(350, 0.25 * windowWidth) : '100%'),\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5,\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5,\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const { index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps } = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : '';\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(selection?.type === 'Range' && textRef.current?.isSameNode(selection.anchorNode.parentNode));\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? 'small' : 'default'} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>{subtitle.displayTime}</TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider,\r\n}) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(\r\n        () =>\r\n            subtitles\r\n                ? Array(subtitles.length)\r\n                      .fill()\r\n                      .map((_, i) => createRef())\r\n                : [],\r\n        [subtitles]\r\n    );\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({ compressed, windowWidth });\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: 'center',\r\n                            inline: 'nearest',\r\n                            behavior: 'smooth',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('visibilitychange', scrollIfVisible);\r\n\r\n        return () => document.removeEventListener('visibilitychange', scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        }\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                block: 'center',\r\n                inline: 'nearest',\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback(\r\n        (index) => {\r\n            if (!selectedSubtitleIndexesRef.current) {\r\n                return [];\r\n            }\r\n\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        const index = Math.min(Object.keys(selectedSubtitleIndexesRef.current));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback(\r\n        (index) => {\r\n            const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n            onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n        },\r\n        [subtitles, onSeek]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (e, index) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n        },\r\n        [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]\r\n    );\r\n\r\n    let subtitleTable = null;\r\n\r\n    if (!subtitles || subtitles.length === 0) {\r\n        if (!loading && displayHelp) {\r\n            subtitleTable = !loading && displayHelp && (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">{displayHelp}</Typography>\r\n                </div>\r\n            );\r\n        } else if (subtitles && subtitles.length === 0) {\r\n            subtitleTable = (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">No subtitles</Typography>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} ref={containerRef} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(\r\n                            event.data.subtitle,\r\n                            event.data.surroundingSubtitles,\r\n                            event.data.audio,\r\n                            event.data.image,\r\n                            event.data.url,\r\n                            event.data.preventDuplicate,\r\n                            event.data.id\r\n                        );\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({ command: 'currentTime', value: this.time });\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({ command: 'ready', duration: duration });\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({ command: 'init' });\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({ command: 'play' });\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({ command: 'pause' });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames,\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({ command: 'subtitleSettings', value: settings });\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({ command: 'condensedModeToggle', value: enabled });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({ command: 'hideSubtitlePlayerToggle', value: hidden });\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({ command: 'ankiDialogRequest' });\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({ command: 'finishedAnkiDialogRequest', resume: resume });\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({ command: 'ankiSettings', value: settings });\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({ command: 'miscSettings', value: settings });\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({ command: 'close' });\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}\r\n","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings, mockSurroundingSubtitles } from '@project/common';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0,\r\n    },\r\n});\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration ? 1000 * audioRef.current.duration : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration ? 1000 * videoRef.current.duration : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: { subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl },\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle,\r\n}) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(\r\n        async (time, clock, forwardToMedia) => {\r\n            clock.setTime(time);\r\n            forceUpdate();\r\n\r\n            if (forwardToMedia) {\r\n                await mediaAdapter.seek(time / 1000);\r\n            }\r\n        },\r\n        [forceUpdate, mediaAdapter]\r\n    );\r\n\r\n    const applyOffset = useCallback(\r\n        (offset, forwardToVideo) => {\r\n            setOffset(offset);\r\n\r\n            setSubtitles((subtitles) => {\r\n                if (!subtitles) {\r\n                    return;\r\n                }\r\n\r\n                const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n                const newSubtitles = subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    displayTime: timeDurationDisplay(s.originalStart + offset, length),\r\n                    track: s.track,\r\n                }));\r\n\r\n                if (forwardToVideo) {\r\n                    videoRef.current?.subtitles(\r\n                        newSubtitles,\r\n                        subtitleFiles.map((f) => f.name)\r\n                    );\r\n                }\r\n\r\n                return newSubtitles;\r\n            });\r\n        },\r\n        [subtitleFiles]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDurationDisplay(s.start, length),\r\n                        track: s.track,\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut((popOut) => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer((hidden) => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(\r\n                            subtitlesRef.current,\r\n                            subtitleFiles.map((f) => f.name)\r\n                        );\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, surroundingSubtitles, audio, image, url, preventDuplicate, id) =>\r\n                            onCopy(\r\n                                subtitle,\r\n                                surroundingSubtitles,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitle ? subtitleFiles[subtitle.track] : null,\r\n                                channel.selectedAudioTrack,\r\n                                audio,\r\n                                image,\r\n                                url,\r\n                                preventDuplicate,\r\n                                id\r\n                            )\r\n                        );\r\n                        channel.onCondensedModeToggle(() =>\r\n                            setCondensedModeEnabled((enabled) => {\r\n                                const newValue = !enabled;\r\n                                channel.condensedModeToggle(newValue);\r\n                                return newValue;\r\n                            })\r\n                        );\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) =>\r\n                            setDisabledSubtitleTracks((tracks) => {\r\n                                const newTracks = { ...tracks };\r\n                                newTracks[track] = !tracks[track];\r\n                                return newTracks;\r\n                            })\r\n                        );\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [\r\n        subtitleReader,\r\n        extension,\r\n        settingsProvider,\r\n        clock,\r\n        mediaAdapter,\r\n        seek,\r\n        onLoaded,\r\n        onError,\r\n        onUnloadVideo,\r\n        onCopy,\r\n        onAnkiDialogRequest,\r\n        subtitleFiles,\r\n        audioFile,\r\n        audioFileUrl,\r\n        videoFile,\r\n        videoFileUrl,\r\n        tab,\r\n        forceUpdate,\r\n        videoFrameRef,\r\n        applyOffset,\r\n    ]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    }\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest((resumeOnFinishedAnkiDialogRequest) => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL +\r\n                    '/?video=' +\r\n                    encodeURIComponent(videoFileUrl) +\r\n                    '&channel=' +\r\n                    channelId +\r\n                    '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                'resizable,width=800,height=450'\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(\r\n        async (progress) => {\r\n            if (!lengthRef.current) {\r\n                return;\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(progress * lengthRef.current, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        },\r\n        [clock, seek]\r\n    );\r\n\r\n    const handleSeekToSubtitle = useCallback(\r\n        async (time, shouldPlay) => {\r\n            if (!shouldPlay) {\r\n                pause(clock, mediaAdapter, true);\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(time, clock, true);\r\n\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, seek, mediaAdapter]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (subtitle, surroundingSubtitles, preventDuplicate) => {\r\n            onCopy(\r\n                subtitle,\r\n                surroundingSubtitles,\r\n                audioFile,\r\n                videoFile,\r\n                subtitleFiles[subtitle.track],\r\n                selectedAudioTrack,\r\n                undefined,\r\n                undefined,\r\n                undefined,\r\n                preventDuplicate,\r\n                undefined\r\n            );\r\n        },\r\n        [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]\r\n    );\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        async (id) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.audioTrackSelected(id);\r\n            }\r\n\r\n            pause(clock, mediaAdapter, true);\r\n\r\n            await seek(0, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, mediaAdapter, seek]\r\n    );\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n        },\r\n        [applyOffset]\r\n    );\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => setCondensedModeEnabled((v) => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback(\r\n        (track) =>\r\n            setDisabledSubtitleTracks((tracks) => {\r\n                const newTracks = { ...tracks };\r\n                newTracks[track] = !tracks[track];\r\n                return newTracks;\r\n            }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        if ((audioFile || videoFile) && (!subtitles || subtitles.length === 0)) {\r\n            const unbindCopy = KeyBindings.bindCopy(\r\n                (event, subtitle) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n                },\r\n                () => disableKeyEvents,\r\n                () => {\r\n                    if (!lengthRef.current) {\r\n                        return null;\r\n                    }\r\n\r\n                    const timestamp = clock.time(lengthRef.current);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                }\r\n            );\r\n\r\n            const unbindAnkiExport = KeyBindings.bindAnkiExport(\r\n                (event) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n\r\n                    onAnkiDialogRequest();\r\n                },\r\n                () => false\r\n            );\r\n\r\n            return () => {\r\n                unbindCopy();\r\n                unbindAnkiExport();\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }, [audioFile, videoFile, subtitles, clock, selectedAudioTrack, disableKeyEvents, onCopy, onAnkiDialogRequest]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" className={classes.container}>\r\n                {videoInWindow && (\r\n                    <Grid item style={{ flexGrow: 1, minWidth: 600 }}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={\r\n                                process.env.PUBLIC_URL +\r\n                                '/?video=' +\r\n                                encodeURIComponent(videoFileUrl) +\r\n                                '&channel=' +\r\n                                channelId +\r\n                                '&popout=false'\r\n                            }\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid\r\n                        item\r\n                        style={{\r\n                            flexGrow: videoInWindow ? 0 : 1,\r\n                            width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto',\r\n                        }}\r\n                    >\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({ open, onProceed, onCancel, existingCustomFieldNames }) {\r\n    const [fieldName, setFieldName] = useState('');\r\n\r\n    useEffect(() => {\r\n        setFieldName('');\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio',\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>Cancel</Button>\r\n                <Button disabled={fieldExists || fieldName.trim() === ''} onClick={() => onProceed(fieldName.trim())}>\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TagsTextField from './TagsTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10,\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'end',\r\n        alignItems: 'flex-end',\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting({ label, value, selections, removable, onChange, onSelectionChange, onRemoval }) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select value={value} disabled={!selections} color=\"secondary\" onChange={onSelectionChange}>\r\n                    {selections &&\r\n                        selections.map((s) => (\r\n                            <MenuItem key={s} value={s}>\r\n                                {s}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({ anki, open, settings, onClose }) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || '');\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || '');\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || '');\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || '');\r\n    const [audioField, setAudioField] = useState(settings.audioField || '');\r\n    const [imageField, setImageField] = useState(settings.imageField || '');\r\n    const [wordField, setWordField] = useState(settings.wordField || '');\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || '');\r\n    const [urlField, setUrlField] = useState(settings.urlField || '');\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [tags, setTags] = useState(settings.tags);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleUrlFieldChange = useCallback((e) => setUrlField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = '';\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback(\r\n        (customFieldName) =>\r\n            setCustomFields((oldCustomFields) => {\r\n                const newCustomFields = {};\r\n                Object.assign(newCustomFields, oldCustomFields);\r\n                delete newCustomFields[customFieldName];\r\n                return newCustomFields;\r\n            }),\r\n        []\r\n    );\r\n    const handleTagsChange = useCallback((newTags) => {\r\n        setTags(newTags);\r\n    }, []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(\r\n        () =>\r\n            computeStyles({\r\n                subtitleColor: subtitleColor,\r\n                subtitleSize: subtitleSize,\r\n                subtitleOutlineThickness: subtitleOutlineThickness,\r\n                subtitleOutlineColor: subtitleOutlineColor,\r\n                subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n                subtitleBackgroundColor: subtitleBackgroundColor,\r\n                subtitleFontFamily: subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleColor,\r\n            subtitleSize,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleBackgroundColor,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(['', ...(await anki.modelFieldNames(noteType, ankiConnectUrl))]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => (canceled = true);\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            urlField: urlField,\r\n            tags: tags.filter((t) => t !== ''),\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [\r\n        onClose,\r\n        ankiConnectUrl,\r\n        deck,\r\n        noteType,\r\n        sentenceField,\r\n        definitionField,\r\n        audioField,\r\n        imageField,\r\n        wordField,\r\n        sourceField,\r\n        urlField,\r\n        customFields,\r\n        tags,\r\n        preferMp3,\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n        subtitlePreview,\r\n        themeType,\r\n        audioPaddingStart,\r\n        audioPaddingEnd,\r\n        maxImageWidth,\r\n        maxImageHeight,\r\n    ]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map((customFieldName) => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog open={open} maxWidth=\"xs\" fullWidth onBackdropClick={handleClose} onEscapeKeyDown={handleClose}>\r\n                <DialogTitle>Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + '//' + window.location.hostname} is in the\r\n                                    webCorsOriginList in your AnkiConnect settings as in this{' '}\r\n                                    <Link\r\n                                        color=\"secondary\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                                    >\r\n                                        video\r\n                                    </Link>\r\n                                    .\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"URL Field\"\r\n                                    value={urlField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleUrlFieldChange}\r\n                                    onSelectionChange={handleUrlFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <TagsTextField\r\n                                    label=\"Tags\"\r\n                                    helperText=\"Comma-separated list of strings\"\r\n                                    fullWidth\r\n                                    color=\"secondary\"\r\n                                    tags={tags}\r\n                                    onTagsChange={handleTagsChange}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1,\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1,\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { AsbplayerSettingsProvider } from '@project/common';\r\n\r\nconst defaultAnkiConnectUrl = 'http://127.0.0.1:8765';\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = '#ffffff';\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = '#000000';\r\nconst defaultSubtitleBackgroundColor = '#000000';\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = '';\r\nconst defaultSubtitlePreview = 'アあ安';\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = 'ankiConnectUrl';\r\nconst deckKey = 'deck';\r\nconst noteTypeKey = 'noteType';\r\nconst sentenceFieldKey = 'sentenceField';\r\nconst definitionFieldKey = 'definitionField';\r\nconst audioFieldKey = 'audioField';\r\nconst imageFieldKey = 'imageField';\r\nconst wordFieldKey = 'wordField';\r\nconst sourceFieldKey = 'sourceField';\r\nconst urlFieldKey = 'urlField';\r\nconst customAnkiFieldsKey = 'customAnkiFields';\r\nconst tagsKey = 'tags';\r\nconst subtitleSizeKey = 'subtitleSize';\r\nconst subtitleColorKey = 'subtitleColor';\r\nconst subtitleOutlineThicknessKey = 'subtitleOutlineThickness';\r\nconst subtitleOutlineColorKey = 'subtitleOutlineColor';\r\nconst subtitleBackgroundColorKey = 'subtitleBackgroundColor';\r\nconst subtitleBackgroundOpacityKey = 'subtitleBackgroundOpacity';\r\nconst subtitleFontFamilyKey = 'subtitleFontFamily';\r\nconst subtitlePreviewKey = 'subtitlePreview';\r\nconst audioPaddingStartKey = 'audioPaddingStart';\r\nconst audioPaddingEndKey = 'audioPaddingEnd';\r\nconst maxImageWidthKey = 'maxImageWidth';\r\nconst maxImageHeightKey = 'maxImageHeight';\r\nconst volumeKey = 'volume';\r\nconst preferMp3Key = 'preferMp3';\r\nconst themeTypeKey = 'themeType';\r\n\r\nexport default class SettingsProvider implements AsbplayerSettingsProvider {\r\n\r\n    private _tags?: string[];\r\n\r\n    constructor() {\r\n        // Cache tags so that it can be used in useEffect dependencies\r\n        this._tags = this.tags;\r\n    }\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.urlField = newSettings.urlField;\r\n        this.tags = newSettings.tags;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType,\r\n        };\r\n    }\r\n    \r\n    _getNumberItem(key: string, defaultValue: number) {\r\n        const value = localStorage.getItem(key);\r\n\r\n        if (value === null) {\r\n            return defaultValue;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    _setOptionalItem(key: string, value?: string) {\r\n        if (typeof value === 'undefined') {\r\n            localStorage.removeItem(key);\r\n        } else {\r\n            localStorage.setItem(key, value);\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey) ?? undefined;\r\n    }\r\n\r\n    set deck(deck) {\r\n        this._setOptionalItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey) ?? undefined;\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        this._setOptionalItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey) ?? undefined;\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        this._setOptionalItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey) ?? undefined;\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        this._setOptionalItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey) ?? undefined;\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        this._setOptionalItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey) ?? undefined;\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        this._setOptionalItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey) ?? undefined;\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        this._setOptionalItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey) ?? undefined;\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        this._setOptionalItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get urlField() {\r\n        return localStorage.getItem(urlFieldKey) ?? undefined;\r\n    }\r\n\r\n    set urlField(urlField) {\r\n        this._setOptionalItem(urlFieldKey, urlField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get tags() {\r\n        if (typeof this._tags !== 'undefined') {\r\n            return this._tags;\r\n        }\r\n\r\n        const tagsString = localStorage.getItem(tagsKey);\r\n\r\n        if (tagsString) {\r\n            this._tags = JSON.parse(tagsString) as string[];\r\n            return this._tags;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    set tags(tags) {\r\n        localStorage.setItem(tagsKey, JSON.stringify(tags));\r\n        this._tags = undefined;\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return this._getNumberItem(subtitleSizeKey, defaultSubtitleSize);\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, String(subtitleSize));\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return this._getNumberItem(subtitleOutlineThicknessKey, defaultSubtitleOutlineThickness);\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, String(subtitleOutlineThickness));\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return this._getNumberItem(subtitleBackgroundOpacityKey, defaultSubtitleBackgroundOpacity);\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, String(subtitleBackgroundOpacity));\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, String(volume));\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, String(preferMp3));\r\n    }\r\n\r\n    get themeType() {\r\n        const themeType = localStorage.getItem(themeTypeKey) as \"dark\" | \"light\" | null;\r\n\r\n        if (themeType === null) {\r\n            return 'dark';\r\n        }\r\n\r\n        return themeType;\r\n    }\r\n\r\n    set themeType(themeType: \"dark\" | \"light\") {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, String(audioPaddingStart));\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        return this._getNumberItem(audioPaddingEndKey, defaultAudioPaddingEnd);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, String(audioPaddingEnd));\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, String(maxImageWidth));\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        return this._getNumberItem(maxImageHeightKey, defaultMaxImageHeight);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, String(maxImageHeight));\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}\r\n","export default class PlayerChannel {\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({ command: 'currentTime', value: this.time, echo: true });\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack,\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({ command: 'readyState', value: readyState });\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({ command: 'play', echo: true });\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({ command: 'pause', echo: true });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({ command: 'offset', value: offset });\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({ command: 'popOutToggle' });\r\n    }\r\n\r\n    copy(subtitle, surroundingSubtitles, preventDuplicate) {\r\n        this.channel?.postMessage({\r\n            command: 'copy',\r\n            subtitle: subtitle,\r\n            surroundingSubtitles: surroundingSubtitles,\r\n            preventDuplicate: preventDuplicate,\r\n        });\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({ command: 'condensedModeToggle' });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({ command: 'hideSubtitlePlayerToggle' });\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({ command: 'ankiDialogRequest', forwardToVideo: forwardToVideo });\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({ command: 'toggleSubtitleTrackInList', track: track });\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({ command: 'exit' });\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util';\r\nimport { KeyBindings, surroundingSubtitles, mockSurroundingSubtitles, humanReadableTime } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    video: {\r\n        margin: 'auto',\r\n    },\r\n    cursorHidden: {\r\n        cursor: 'none',\r\n    },\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings),\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language,\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = 'Aborted';\r\n            break;\r\n        case 2:\r\n            error = 'Network error';\r\n            break;\r\n        case 3:\r\n            error = 'Decoding error';\r\n            break;\r\n        case 4:\r\n            error = 'Source not supported';\r\n            break;\r\n        default:\r\n            error = 'Unknown error';\r\n            break;\r\n    }\r\n\r\n    return error + ': ' + (element.error.message || '<details missing>');\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { settingsProvider, videoFile, channel, popOut, onError } = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] =\r\n        useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(\r\n        (element) => {\r\n            if (element) {\r\n                videoRef.current = element;\r\n\r\n                if (element.readyState === 4) {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                } else {\r\n                    element.onloadeddata = (event) => {\r\n                        notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                    };\r\n                }\r\n\r\n                element.oncanplay = (event) => {\r\n                    playerChannel.readyState(4);\r\n\r\n                    if (playingRef.current) {\r\n                        clock.start();\r\n                    }\r\n                };\r\n\r\n                element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n                element.onerror = (event) => onError(errorMessage(element));\r\n            }\r\n        },\r\n        [clock, playerChannel, onError]\r\n    );\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            const time = progress * length;\r\n            playerChannel.currentTime = time / 1000;\r\n        },\r\n        [length, clock, playerChannel]\r\n    );\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n                playerChannel.pause();\r\n            }\r\n\r\n            selectAudioTrack(id);\r\n            setSelectedAudioTrack(id);\r\n            playerChannel.currentTime = 0;\r\n            playerChannel.audioTrackSelected(id);\r\n        },\r\n        [playerChannel, clock]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({ ...s, index: i });\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50);\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            setOffset(offset);\r\n            setSubtitles((subtitles) =>\r\n                subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    track: s.track,\r\n                }))\r\n            );\r\n            playerChannel.offset(offset);\r\n        },\r\n        [playerChannel]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(\r\n        (index) => {\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const noSubtitles = !subtitles || subtitles.length === 0;\r\n\r\n                playerChannel.copy(\r\n                    subtitle,\r\n                    noSubtitles\r\n                        ? mockSurroundingSubtitles(subtitle, length, 5000)\r\n                        : calculateSurroundingSubtitles(subtitle.index)\r\n                );\r\n\r\n                if (fullscreen) {\r\n                    setAlert(\r\n                        subtitle.text === ''\r\n                            ? `Saved ${humanReadableTime(subtitle.start)}`\r\n                            : `Copied: \"${subtitle.text}\"`\r\n                    );\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n                }\r\n\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, clock, length, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled((enabled) => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks((tracks) => {\r\n                    const newTracks = { ...tracks };\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n\r\n                    playerChannel.copy(subtitle, mockSurroundingSubtitles(subtitle, length, 5000), false);\r\n                } else if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, clock, length, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled((subtitlesEnabled) => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () =>\r\n            makeSubtitleStyles({\r\n                subtitleSize,\r\n                subtitleColor,\r\n                subtitleOutlineThickness,\r\n                subtitleOutlineColor,\r\n                subtitleBackgroundColor,\r\n                subtitleBackgroundOpacity,\r\n                subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile}\r\n            />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map((s) => (\r\n                        <React.Fragment key={s.index}>\r\n                            {s.text}\r\n                            <br />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image, humanReadableTime } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = '0.17.0';\r\nconst extensionUrl = 'https://github.com/killergerbah/asbplayer/releases/latest';\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    contentShift: ({ drawerWidth }) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf('.');\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case 'ass':\r\n            case 'srt':\r\n            case 'vtt':\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case 'mkv':\r\n            case 'mp4':\r\n            case 'avi':\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case 'mp3':\r\n            case 'm4a':\r\n            case 'aac':\r\n            case 'flac':\r\n            case 'ogg':\r\n            case 'wav':\r\n            case 'opus':\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported extension ' + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error('Cannot load both an audio and video file simultaneously');\r\n    }\r\n\r\n    return { subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile };\r\n}\r\n\r\nfunction audioClipFromItem(item, sliderContext, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        const start = item.audio.start ?? item.start;\r\n        const end = item.audio.end ?? item.end;\r\n\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, start - (item.audio.paddingStart ?? 0)),\r\n            end + (item.audio.paddingEnd ?? 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(item.subtitleFile.name, item.start, item.image.base64, item.image.extension);\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(item.videoFile, item.start, maxWidth, maxHeight);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction itemSourceString(item) {\r\n    const source = item?.subtitleFile?.name ?? item?.audioFile?.name ?? item?.videoFile?.name;\r\n\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    return `${source} (${humanReadableTime(item.start)})`;\r\n}\r\n\r\nfunction itemSliderContext(item) {\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [\r\n            { start: item.start, end: item.end, text: item.text, track: item.track },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    primary: {\r\n                        main: '#49007a',\r\n                    },\r\n                    secondary: {\r\n                        main: '#ff1f62',\r\n                    },\r\n                    error: {\r\n                        main: red.A400,\r\n                    },\r\n                    type: settingsProvider.themeType,\r\n                },\r\n            }),\r\n        [settingsProvider.themeType]\r\n    );\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? 0.2 : 0.3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({ subtitleFiles: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogItemSliderContext = useMemo(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            audioClipFromItem(\r\n                ankiDialogItem,\r\n                ankiDialogItemSliderContext,\r\n                settingsProvider.audioPaddingStart,\r\n                settingsProvider.audioPaddingEnd\r\n            ),\r\n        [\r\n            ankiDialogItem,\r\n            ankiDialogItemSliderContext,\r\n            settingsProvider.audioPaddingStart,\r\n            settingsProvider.audioPaddingEnd,\r\n        ]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({ timestamp: 0, resume: false });\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const { subtitleFiles } = sources;\r\n\r\n    const handleCopy = useCallback(\r\n        (\r\n            subtitle,\r\n            surroundingSubtitles,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            audioTrack,\r\n            audio,\r\n            image,\r\n            url,\r\n            preventDuplicate,\r\n            id\r\n        ) => {\r\n            if (subtitle) {\r\n                navigator.clipboard.writeText(subtitle.text);\r\n            }\r\n\r\n            setCopiedSubtitles((copiedSubtitles) => {\r\n                if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                    const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                    if (\r\n                        subtitle.start === last.start &&\r\n                        subtitle.end === last.end &&\r\n                        subtitle.text === last.text &&\r\n                        subtitleFile.name === last.subtitleFile.name\r\n                    ) {\r\n                        return copiedSubtitles;\r\n                    }\r\n                }\r\n\r\n                const newCopiedSubtitles = [];\r\n                let updated = false;\r\n\r\n                for (const copiedSubtitle of copiedSubtitles) {\r\n                    if (id && copiedSubtitle.id === id) {\r\n                        const newCopiedSubtitle = {\r\n                            ...copiedSubtitle,\r\n                            ...subtitle,\r\n                            ...(surroundingSubtitles && { surroundingSubtitles: surroundingSubtitles }),\r\n                            ...(subtitleFile && { subtitleFile: subtitleFile }),\r\n                            ...(audioFile && { audioFile: audioFile }),\r\n                            ...(videoFile && { videoFile: videoFile }),\r\n                            ...(audioTrack && { audioTrack: audioTrack }),\r\n                            ...(audio && { audio: audio }),\r\n                            ...(image && { image: image }),\r\n                            ...(url && { url: url }),\r\n                        };\r\n                        newCopiedSubtitles.push(newCopiedSubtitle);\r\n                        updated = true;\r\n                    } else {\r\n                        newCopiedSubtitles.push(copiedSubtitle);\r\n                    }\r\n                }\r\n\r\n                if (!updated) {\r\n                    newCopiedSubtitles.push({\r\n                        ...subtitle,\r\n                        surroundingSubtitles: surroundingSubtitles,\r\n                        timestamp: Date.now(),\r\n                        id: id || uuidv4(),\r\n                        name: fileName,\r\n                        subtitleFile: subtitleFile,\r\n                        audioFile: audioFile,\r\n                        videoFile: videoFile,\r\n                        audioTrack: audioTrack,\r\n                        audio: audio,\r\n                        image: image,\r\n                        url: url,\r\n                    });\r\n                }\r\n\r\n                return newCopiedSubtitles;\r\n            });\r\n\r\n            if (subtitle) {\r\n                setAlertSeverity('success');\r\n                setAlert(\r\n                    subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`\r\n                );\r\n                setAlertOpen(true);\r\n            }\r\n        },\r\n        [fileName]\r\n    );\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen((copyHistoryOpen) => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback(\r\n        (newSettings) => {\r\n            settingsProvider.settings = newSettings;\r\n            setSettingsDialogOpen(false);\r\n            setDisableKeyEvents(false);\r\n            extension.publishMessage({ command: 'subtitleSettings', value: settingsProvider.subtitleSettings });\r\n            extension.publishMessage({ command: 'ankiSettings', value: settingsProvider.ankiSettings });\r\n            extension.publishMessage({ command: 'miscSettings', value: settingsProvider.miscSettings });\r\n        },\r\n        [extension, settingsProvider]\r\n    );\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            const newCopiedSubtitles = [];\r\n\r\n            for (let subtitle of copiedSubtitles) {\r\n                if (item.id !== subtitle.id) {\r\n                    newCopiedSubtitles.push(subtitle);\r\n                }\r\n            }\r\n\r\n            setCopiedSubtitles(newCopiedSubtitles);\r\n        },\r\n        [copiedSubtitles]\r\n    );\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity('error');\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(\r\n        (audioFileUrl) => {\r\n            if (audioFileUrl !== sources.audioFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(audioFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: previous.videoFile,\r\n                    videoFileUrl: previous.videoFileUrl,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleUnloadVideo = useCallback(\r\n        (videoFileUrl) => {\r\n            if (videoFileUrl !== sources.videoFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(videoFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: previous.audioFile,\r\n                    audioFileUrl: previous.audioFileUrl,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleClipAudio = useCallback(\r\n        async (item) => {\r\n            try {\r\n                const clip = await audioClipFromItem(\r\n                    item,\r\n                    null,\r\n                    settingsProvider.audioPaddingStart,\r\n                    settingsProvider.audioPaddingEnd\r\n                );\r\n\r\n                if (settingsProvider.preferMp3) {\r\n                    clip.toMp3().download();\r\n                } else {\r\n                    clip.download();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError, settingsProvider]\r\n    );\r\n\r\n    const handleDownloadImage = useCallback(\r\n        async (item) => {\r\n            try {\r\n                await imageFromItem(item).download();\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    const handleSelectCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            if (subtitleFiles.filter((f) => f.name === item.subtitleFile.name).length === 0) {\r\n                handleError('Subtitle file ' + item.subtitleFile.name + ' is not open.');\r\n                return;\r\n            }\r\n\r\n            setJumpToSubtitle({ text: item.text, originalStart: item.originalStart });\r\n        },\r\n        [subtitleFiles, handleError]\r\n    );\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(\r\n        async (text, definition, audioClip, image, word, source, url, customFieldValues, tags, mode) => {\r\n            setAnkiDialogDisabled(true);\r\n\r\n            try {\r\n                const result = await anki.export(\r\n                    text,\r\n                    definition,\r\n                    audioClip,\r\n                    image,\r\n                    word,\r\n                    source,\r\n                    url,\r\n                    customFieldValues,\r\n                    tags,\r\n                    mode\r\n                );\r\n\r\n                if (mode !== 'gui') {\r\n                    if (mode === 'default') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Export succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    } else if (mode === 'updateLast') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Update succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    }\r\n\r\n                    setAnkiDialogOpen(false);\r\n\r\n                    if (ankiDialogRequested) {\r\n                        setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n                        setAnkiDialogRequested(false);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            } finally {\r\n                setAnkiDialogDisabled(false);\r\n                setDisableKeyEvents(false);\r\n            }\r\n        },\r\n        [anki, handleError, ankiDialogRequested]\r\n    );\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id || t1.title !== t2.title || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter((t) => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback(\r\n        (files) => {\r\n            try {\r\n                let { subtitleFiles, audioFile, videoFile } = extractSources(files);\r\n\r\n                setSources((previous) => {\r\n                    setLoading(true);\r\n\r\n                    let videoFileUrl = null;\r\n                    let audioFileUrl = null;\r\n\r\n                    if (videoFile || audioFile) {\r\n                        revokeUrls(previous);\r\n\r\n                        if (videoFile) {\r\n                            videoFileUrl = URL.createObjectURL(videoFile);\r\n                        } else if (audioFile) {\r\n                            audioFileUrl = URL.createObjectURL(audioFile);\r\n                        }\r\n\r\n                        setTab(null);\r\n                    } else {\r\n                        videoFile = previous.videoFile;\r\n                        videoFileUrl = previous.videoFileUrl;\r\n                        audioFile = previous.audioFile;\r\n                        audioFileUrl = previous.audioFileUrl;\r\n                    }\r\n\r\n                    const sources = {\r\n                        subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                        audioFile: audioFile,\r\n                        audioFileUrl: audioFileUrl,\r\n                        videoFile: videoFile,\r\n                        videoFileUrl: videoFileUrl,\r\n                    };\r\n\r\n                    return sources;\r\n                });\r\n\r\n                if (subtitleFiles.length > 0) {\r\n                    const subtitleFileName = subtitleFiles[0].name;\r\n                    setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter((t) => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' +\r\n                                message.tabId +\r\n                                ' with src ' +\r\n                                message.src +\r\n                                ' was not found'\r\n                        );\r\n                    } else {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' + message.tabId + ' was not found'\r\n                        );\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [\r\n                        new File(\r\n                            [await (await fetch('data:text/plain;base64,' + message.data.subtitles.base64)).blob()],\r\n                            message.data.subtitles.name\r\n                        ),\r\n                    ];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(\r\n                        message.data.subtitles.map(\r\n                            async (s) =>\r\n                                new File([await (await fetch('data:text/plain;base64,' + s.base64)).blob()], s.name)\r\n                        )\r\n                    );\r\n                }\r\n\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                });\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n\r\n            if (inVideoPlayer) {\r\n                handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n                return;\r\n            }\r\n\r\n            setDragging(false);\r\n            dragEnterRef.current = null;\r\n\r\n            if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n                return;\r\n            }\r\n\r\n            handleFiles(e.dataTransfer.files);\r\n        },\r\n        [inVideoPlayer, handleError, handleFiles]\r\n    );\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer) {\r\n                dragEnterRef.current = e.target;\r\n                setDragging(true);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleDragLeave = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n                setDragging(false);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded =\r\n        (loading && !videoFrameRef.current) ||\r\n        (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity={alertSeverity}>\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout');\r\n\r\n                            if (videoFile && channel) {\r\n                                return (\r\n                                    <Redirect\r\n                                        to={\r\n                                            '/video?video=' +\r\n                                            encodeURIComponent(videoFile) +\r\n                                            '&channel=' +\r\n                                            channel +\r\n                                            '&popout=' +\r\n                                            popOut\r\n                                        }\r\n                                    />\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <CopyHistory\r\n                                        items={copiedSubtitles}\r\n                                        open={copyHistoryOpen}\r\n                                        drawerWidth={drawerWidth}\r\n                                        onClose={handleCloseCopyHistory}\r\n                                        onDelete={handleDeleteCopyHistoryItem}\r\n                                        onClipAudio={handleClipAudio}\r\n                                        onDownloadImage={handleDownloadImage}\r\n                                        onSelect={handleSelectCopyHistoryItem}\r\n                                        onAnki={handleAnki}\r\n                                    />\r\n                                    <AnkiDialog\r\n                                        open={ankiDialogOpen}\r\n                                        disabled={ankiDialogDisabled}\r\n                                        text={ankiDialogItem?.text}\r\n                                        audioClip={ankiDialogAudioClip}\r\n                                        image={ankiDialogImage}\r\n                                        source={itemSourceString(ankiDialogItem)}\r\n                                        url={ankiDialogItem?.url}\r\n                                        sliderContext={ankiDialogItemSliderContext}\r\n                                        customFields={settingsProvider.customAnkiFields}\r\n                                        anki={anki}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCancel={handleAnkiDialogCancel}\r\n                                        onProceed={handleAnkiDialogProceed}\r\n                                        onViewImage={handleViewImage}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                    />\r\n                                    <ImageDialog\r\n                                        open={imageDialogOpen}\r\n                                        image={image}\r\n                                        onClose={handleImageDialogClosed}\r\n                                    />\r\n                                    <SettingsDialog\r\n                                        anki={anki}\r\n                                        open={settingsDialogOpen}\r\n                                        onClose={handleCloseSettings}\r\n                                        settings={settingsProvider.settings}\r\n                                    />\r\n                                    <HelpDialog\r\n                                        open={helpDialogOpen}\r\n                                        extensionUrl={extensionUrl}\r\n                                        onClose={handleCloseHelp}\r\n                                    />\r\n                                    <Bar\r\n                                        title={fileName || 'asbplayer'}\r\n                                        drawerWidth={drawerWidth}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        onOpenCopyHistory={handleOpenCopyHistory}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                        onOpenHelp={handleOpenHelp}\r\n                                        onFileSelector={handleFileSelector}\r\n                                    />\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        onChange={handleFileInputChange}\r\n                                        type=\"file\"\r\n                                        accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                        multiple\r\n                                        hidden\r\n                                    />\r\n                                    <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                        {nothingLoaded && (\r\n                                            <LandingPage\r\n                                                latestExtensionVersion={latestExtensionVersion}\r\n                                                extensionUrl={extensionUrl}\r\n                                                extension={extension}\r\n                                                loading={loading}\r\n                                                dragging={dragging}\r\n                                                onFileSelector={handleFileSelector}\r\n                                            />\r\n                                        )}\r\n                                        <DragOverlay dragging={dragging} loading={loading} />\r\n                                        <Player\r\n                                            subtitleReader={subtitleReader}\r\n                                            settingsProvider={settingsProvider}\r\n                                            onCopy={handleCopy}\r\n                                            onError={handleError}\r\n                                            onUnloadAudio={handleUnloadAudio}\r\n                                            onUnloadVideo={handleUnloadVideo}\r\n                                            onLoaded={handleSourcesLoaded}\r\n                                            onTabSelected={handleTabSelected}\r\n                                            onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                            tab={tab}\r\n                                            availableTabs={availableTabs}\r\n                                            sources={sources}\r\n                                            jumpToSubtitle={jumpToSubtitle}\r\n                                            videoFrameRef={videoFrameRef}\r\n                                            extension={extension}\r\n                                            drawerOpen={copyHistoryOpen}\r\n                                            disableKeyEvents={disableKeyEvents}\r\n                                            ankiDialogRequested={ankiDialogRequested}\r\n                                            ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                            ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                        />\r\n                                    </Content>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/video\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout') === 'true';\r\n\r\n                            return (\r\n                                <VideoPlayer\r\n                                    settingsProvider={settingsProvider}\r\n                                    videoFile={videoFile}\r\n                                    popOut={popOut}\r\n                                    channel={channel}\r\n                                    onError={handleError}\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import '@fontsource/roboto';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}