{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","now","trimmedWord","trim","a","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","id","currentTime","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","handleMouseOver","handleMouseOut","savedVolume","Number","interval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onMouseOver","onMouseOut","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","copy","subtitleIndex","scrollIfVisible","visibilityState","firstSubtitleRef","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","paused","echo","subtitleFileName","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","availableTabs","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","setTime","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.c944d8fb.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.2ecce0ce.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (drag and drop)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts or use the copy button next to the subtitle.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = true || !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(128, 128, 128, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        color=\"inherit\"\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileName) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles, name: subtitleFileName});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, tab, availableTabs, onError, onUnloadVideo, onCopy, onLoaded, onTabSelected, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFile?.name);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles, subtitleFile?.name);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [subtitleFile, offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab && tab.id}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={props.jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, themeType]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                                    Leaving a field blank is fine.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.8.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const offsetRef = useRef();\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item, offsetRef.current || 0);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((id) => {\n        const tab = availableTabs.filter(t => t.id === id)[0];\n        setTab(tab);\n    }, [availableTabs]);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync') {\n                const tabs = availableTabs.filter(t => t.id === message.tabId);\n\n                if (tabs.length === 0) {\n                    console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    return;\n                }\n\n                const tab = tabs[0];\n                const subtitleFile = new File(\n                    [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                    message.data.subtitles.name\n                );\n                setFileName(subtitleFile.name);\n                setSources({\n                    subtitleFile: subtitleFile,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                    image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.mkv\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        offsetRef={offsetRef}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}