{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","word","source","fields","sentenceField","split","join","definitionField","wordField","sourceField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","name","base64","audioField","audio","filename","data","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","margin","spacing","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","setWord","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","target","rows","onClick","DialogActions","Button","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","Math","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","Number","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","onExit","onOffset","onCurrentTime","then","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","marginTop","subtitleSetting","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setWordField","setSourceField","fieldNames","setFieldNames","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","handleWordFieldChange","handleWordFieldSelectionChange","handleSourceFieldChange","handleSourceFieldSelectionChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","canceled","refreshFieldNames","modelFieldNames","handleClose","Tabs","newIndex","Tab","DialogContentText","location","hostname","helperText","type","inputProps","step","defaultAnkiConnectUrl","defaultSubtitleColor","defaultSubtitleOutlineColor","defaultSubtitleBackgroundColor","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","wordFieldKey","sourceFieldKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","audioClipFromItem","fromBase64","fromFile","audioTrack","Content","contentShift","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","setDisableKeyEvents","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.5d07f577.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip, word, source) {\r\n        const fields = {};\r\n\r\n        if (this.settingsProvider.sentenceField && text) {\r\n            fields[this.settingsProvider.sentenceField] = text ? text.split(\"\\n\").join(\"<br>\") : text;\r\n        }\r\n\r\n        if (this.settingsProvider.definitionField && definition) {\r\n            fields[this.settingsProvider.definitionField] = definition ? definition.split(\"\\n\").join(\"<br>\") : definition;\r\n        }\r\n\r\n        if (this.settingsProvider.wordField && word) {\r\n            fields[this.settingsProvider.wordField] = word;\r\n        }\r\n\r\n        if (this.settingsProvider.sourceField && source) {\r\n            fields[this.settingsProvider.sourceField] = source;\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    audioField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, audioClip, source} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.audioField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, word, source)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio will be exported only if an audio source was available when the subtitle was copied.\r\n                        </li>\r\n                        <li>\r\n                            Configure Anki settings with the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=Khipc3zLMiA\">Sentence mining video files</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=fau1BNNDrEQ\">Sentence mining streaming video</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleWordFieldSelectionChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSourceFieldSelectionChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(ankiConnectUrl, noteType)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, wordField, sourceField, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <Tabs\r\n                value={tabIndex}\r\n                variant=\"fullWidth\"\r\n                onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n            >\r\n                <Tab label=\"Anki\" />\r\n                <Tab label=\"In-Video Subtitles\" />\r\n            </Tabs>\r\n            {tabIndex === 0 && (\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                        Leaving a field blank is fine.\r\n                    </DialogContentText>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                />\r\n                            </div>\r\n                            <SelectableSetting\r\n                                label=\"Deck\"\r\n                                value={deck}\r\n                                selections={deckNames}\r\n                                onChange={handleDeckChange}\r\n                                onSelectionChange={handleDeckSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Note Type\"\r\n                                value={noteType}\r\n                                selections={modelNames}\r\n                                onChange={handleNoteTypeChange}\r\n                                onSelectionChange={handleNoteTypeSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Sentence Field\"\r\n                                value={sentenceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSentenceFieldChange}\r\n                                onSelectionChange={handleSentenceFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Definition Field\"\r\n                                value={definitionField}\r\n                                selections={fieldNames}\r\n                                onChange={handleDefinitionFieldChange}\r\n                                onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Word Field\"\r\n                                value={wordField}\r\n                                selections={fieldNames}\r\n                                onChange={handleWordFieldChange}\r\n                                onSelectionChange={handleWordFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Audio Field\"\r\n                                value={audioField}\r\n                                selections={fieldNames}\r\n                                onChange={handleAudioFieldChange}\r\n                                onSelectionChange={handleAudioFieldSelectionChange}\r\n                            />\r\n                            <SelectableSetting\r\n                                label=\"Source Field\"\r\n                                value={sourceField}\r\n                                selections={fieldNames}\r\n                                onChange={handleSourceFieldChange}\r\n                                onSelectionChange={handleSourceFieldSelectionChange}\r\n                            />\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            {tabIndex === 1 && (\r\n                <DialogContent>\r\n                    <Centered>\r\n                        <form className={classes.root}>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Color\"\r\n                                    value={subtitleColor}\r\n                                    onChange={handleSubtitleColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Size\"\r\n                                    value={subtitleSize}\r\n                                    onChange={handleSubtitleSizeChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Outline Color\"\r\n                                    value={subtitleOutlineColor}\r\n                                    onChange={handleSubtitleOutlineColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Outline Thickness\"\r\n                                    value={subtitleOutlineThickness}\r\n                                    onChange={handleSubtitleOutlineThicknessChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"color\"\r\n                                    label=\"Subtitle Background Color\"\r\n                                    value={subtitleBackgroundColor}\r\n                                    onChange={handleSubtitleBackgroundColorChange}\r\n                                />\r\n                            </div>\r\n                            <div className={classes.subtitleSetting}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Subtitle Background Opacity\"\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        max: 1,\r\n                                        step: 0.1\r\n                                    }}\r\n                                    value={subtitleBackgroundOpacity}\r\n                                    onChange={handleSubtitleBackgroundOpacityChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </Centered>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey),\r\n            wordField: localStorage.getItem(wordFieldKey),\r\n            sourceField: localStorage.getItem(sourceFieldKey),\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.5.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, word, source) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip,\n                word,\n                source\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}