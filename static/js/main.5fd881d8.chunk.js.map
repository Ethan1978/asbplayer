{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","Date","now","trimmedWord","trim","a","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","onload","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","defaultBackground","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","condensedModeToggleEnabled","onCondensedModeToggle","condensedModeEnabled","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","copy","subtitleIndex","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","condensedModeToggle","onExit","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","Tabs","newIndex","Tab","DialogContentText","location","hostname","type","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.5fd881d8.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, onOpenSettings, audioClip, image, source, customFields, settingsProvider, anki} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading, dragging} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onShow, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents, settingsProvider} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {props.condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={(e) => props.onCondensedModeToggle()}>\r\n                                            <SpeedIcon className={props.condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon className={classes.button} style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <Tabs\r\n                    value={tabIndex}\r\n                    variant=\"fullWidth\"\r\n                    onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n                >\r\n                    <Tab label=\"Anki\" />\r\n                    <Tab label=\"In-Video Subtitles\" />\r\n                </Tabs>\r\n                {tabIndex === 0 && (\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                            Leaving a field blank is fine.\r\n                        </DialogContentText>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Anki Connect URL\"\r\n                                        value={ankiConnectUrl}\r\n                                        error={Boolean(ankiConnectUrlError)}\r\n                                        helperText={ankiConnectUrlError}\r\n                                        onChange={handleAnkiConnectUrlChange}\r\n                                    />\r\n                                </div>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                {tabIndex === 1 && (\r\n                    <DialogContent>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        value={subtitleColor}\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        value={subtitleSize}\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        value={subtitleOutlineColor}\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        value={subtitleBackgroundColor}\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                <DialogActions>\r\n                    {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.2\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                anki={anki}\n                                settingsProvider={settingsProvider}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} loading={loading} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}