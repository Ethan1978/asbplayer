{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/HelpDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","fields","sentenceField","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","name","base64","audioField","audio","filename","data","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","margin","spacing","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","target","rows","onClick","DialogActions","Button","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","source","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","Typography","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","Math","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","Number","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","onExit","onOffset","onCurrentTime","then","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","subtitleSetting","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","SettingsDialog","anki","settings","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","canceled","refreshFieldNames","modelFieldNames","handleClose","DialogContentText","location","hostname","helperText","type","inputProps","step","defaultAnkiConnectUrl","defaultSubtitleColor","defaultSubtitleOutlineColor","defaultSubtitleBackgroundColor","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleSettings","subtitleStyles","nocontrols","audioClipFromItem","fromBase64","fromFile","audioTrack","Content","contentShift","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.7084ea59.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip) {\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text;\r\n        fields[this.settingsProvider.definitionField] = definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    audioField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, audioClip} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.audioField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition, audioClip)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio will be exported only if an audio source was available when the subtitle was copied.\r\n                        </li>\r\n                        <li>\r\n                            Configure Anki settings with the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=Khipc3zLMiA\">Sentence mining video files</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=fau1BNNDrEQ\">Sentence mining streaming video</Link>\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(props.drawerOpen && classes.hide)}>\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <DialogTitle>\r\n                Settings\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                </DialogContentText>\r\n                <form className={classes.root}>\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Anki Connect URL\"\r\n                            value={ankiConnectUrl}\r\n                            error={Boolean(ankiConnectUrlError)}\r\n                            helperText={ankiConnectUrlError}\r\n                            onChange={handleAnkiConnectUrlChange}\r\n                        />\r\n                    </div>\r\n                    <SelectableSetting\r\n                        label=\"Deck\"\r\n                        value={deck}\r\n                        selections={deckNames}\r\n                        onChange={handleDeckChange}\r\n                        onSelectionChange={handleDeckSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Note Type\"\r\n                        value={noteType}\r\n                        selections={modelNames}\r\n                        onChange={handleNoteTypeChange}\r\n                        onSelectionChange={handleNoteTypeSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Sentence Field\"\r\n                        value={sentenceField}\r\n                        selections={fieldNames}\r\n                        onChange={handleSentenceFieldChange}\r\n                        onSelectionChange={handleSentenceFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Definition Field\"\r\n                        value={definitionField}\r\n                        selections={fieldNames}\r\n                        onChange={handleDefinitionFieldChange}\r\n                        onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Audio Field\"\r\n                        value={audioField}\r\n                        selections={fieldNames}\r\n                        onChange={handleAudioFieldChange}\r\n                        onSelectionChange={handleAudioFieldSelectionChange}\r\n                    />\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"color\"\r\n                            label=\"Subtitle Color\"\r\n                            value={subtitleColor}\r\n                            onChange={handleSubtitleColorChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"number\"\r\n                            label=\"Subtitle Size\"\r\n                            value={subtitleSize}\r\n                            onChange={handleSubtitleSizeChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"color\"\r\n                            label=\"Subtitle Outline Color\"\r\n                            value={subtitleOutlineColor}\r\n                            onChange={handleSubtitleOutlineColorChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"number\"\r\n                            label=\"Subtitle Outline Thickness\"\r\n                            value={subtitleOutlineThickness}\r\n                            onChange={handleSubtitleOutlineThicknessChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"color\"\r\n                            label=\"Subtitle Background Color\"\r\n                            value={subtitleBackgroundColor}\r\n                            onChange={handleSubtitleBackgroundColorChange}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.subtitleSetting}>\r\n                        <TextField\r\n                            type=\"number\"\r\n                            label=\"Subtitle Background Opacity\"\r\n                            inputProps={{\r\n                                min: 0,\r\n                                max: 1,\r\n                                step: 0.1\r\n                            }}\r\n                            value={subtitleBackgroundOpacity}\r\n                            onChange={handleSubtitleBackgroundOpacityChange}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey),\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize,\r\n            subtitleColor: localStorage.getItem(subtitleColorKey) || defaultSubtitleColor,\r\n            subtitleOutlineThickness: localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness,\r\n            subtitleOutlineColor: localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor,\r\n            subtitleBackgroundColor: localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport HelpDialog from './HelpDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.4.1\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for(const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}