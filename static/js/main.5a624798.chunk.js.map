{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","components/HelpDialog.js","services/SubtitleReader.js","services/MediaClipper.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/background.png","components/background-colored.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioOptions","audioBlob","audioFileName","audioFileExtension","providedAudioBase64","audioBase64","_blobToBase64","fields","sentenceField","definitionField","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audio","filename","Date","now","data","audioField","action","body","version","fetch","method","JSON","stringify","json","error","Error","blob","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","base64","substr","indexOf","useStyles","theme","margin","spacing","AnkiDialog","disabled","initialText","onProceed","onCancel","setDefinition","setText","Dialog","disableEnforceFocus","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","variant","multiline","rowsMax","label","value","onChange","e","target","rows","DialogActions","Button","onClick","inlineIcon","height","flexDirection","flexWrap","alignItems","textAlign","HelpDialog","extensionUrl","onBackdropClick","Typography","Link","color","rel","href","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","SubtitleReader","file","name","endsWith","then","parseSync","nodes","map","node","sort","n1","n2","start","parse","parsed","events","dialogue","event","Math","round","Start","end","End","Text","combined","AUDIO_TYPES","MediaClipper","trackId","clipAudio","extension","_saveToFile","_nameWithoutExtension","media","Audio","src","URL","createObjectURL","preload","audioTracks","length","t","id","currentTime","load","oncanplay","play","stream","_captureStream","getVideoTracks","stop","_findMediaType","mimeType","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","Blob","pause","revokeObjectURL","res","fileName","substring","lastIndexOf","url","a","document","createElement","appendChild","style","download","click","remove","Object","keys","filter","isTypeSupported","captureStream","mozCaptureStream","Bar","drawerWidth","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Tooltip","IconButton","edge","onOpenHelp","onOpenSettings","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","background","backgroundSize","backgroundRepeat","backgroundPosition","defaultBackground","backgroundImage","coloredBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","Fade","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","startTime","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","cursor","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","closeButton","right","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","Number","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","transform","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","compressed","displayHelp","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","windowWidth","default","table","marginBottom","noSubtitles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","useSubtitlePlayerStyles","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","copySubtitle","subtitleIndexes","index","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","paused","echo","console","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","loadingSubtitles","setLoadingSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","onExit","onOffset","onCurrentTime","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","newSubtitles","v","t1","t2","loaded","videoInWindow","onMouseMove","screenX","screenY","wrap","Boolean","useSelectableSettingStyles","formControl","SelectableSetting","selections","onSelectionChange","FormControl","InputLabel","Select","MenuItem","SettingsDialog","anki","settings","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","fieldNames","setFieldNames","handleAnkiConnectUrlChange","handleDeckSelectionChange","handleDeckChange","handleNoteTypeSelectionChange","handleNoteTypeChange","handleSentenceFieldChange","handleSentenceFieldSelectionChange","handleDefinitionFieldChange","handleDefinitionFieldSelectionChange","handleAudioFieldChange","handleAudioFieldSelectionChange","modelFieldNames","refreshFieldNames","handleClose","DialogContentText","location","hostname","helperText","defaultAnkiConnectUrl","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","SettingsProvider","localStorage","getItem","setItem","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","video","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","availHeight","outerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","windowHeight","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","copy","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","nocontrols","Content","contentShift","App","mediaClipper","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleCloseSettings","newSettings","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","saveAudio","clipAndSaveAudio","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","mediaFile","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.5a624798.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioOptions) {\r\n        const {audioBlob, audioFileName, audioFileExtension, audioBase64: providedAudioBase64} = audioOptions;\r\n        let audioBase64;\r\n\r\n        if (providedAudioBase64) {\r\n            audioBase64 = providedAudioBase64;\r\n        } else {\r\n            audioBase64 = audioBlob ? await this._blobToBase64(audioBlob) : null;\r\n        }\r\n\r\n        const fields = {};\r\n        fields[this.settingsProvider.sentenceField] = text;\r\n        fields[this.settingsProvider.definitionField] = definition;\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (audioBase64 && audioFileName) {\r\n            params.note.audio = {\r\n                filename: audioFileName + \"_\" + Date.now() + \".\" + audioFileExtension,\r\n                data: audioBase64,\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n\r\n    async _blobToBase64(blob) {\r\n        return new Promise((resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setDefinition(\"\");\r\n    }, [open]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n        >\r\n            <DialogTitle>Anki Export</DialogTitle>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled || !definition}\r\n                    onClick={() => onProceed(text, definition)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                    <Typography>\r\n                        <ul>\r\n                            <li>\r\n                                Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                            </li>\r\n                            <li>\r\n                                Multiple files can be dragged and dropped\r\n                                simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                            </li>\r\n                        </ul>\r\n                    </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography>\r\n                    <ol>\r\n                        <li>\r\n                            Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Load a subtitle file.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            If the icon does not appear try refreshing the video in the other tab.\r\n                        </li>\r\n                    </ol>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography>\r\n                    <ul>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button next to any subtitle in the copy history.\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            Audio will be exported only if the subtitle was copied from a local audio/video file, or from streaming video while audio recording was enabled.\r\n                        </li>\r\n                        <li>\r\n                            Make sure your Anki deck/note type settings are configured correctly by using the settings button in the top right.\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n                });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    })\r\n                    .sort((n1, n2) => n1.start - n2.start)\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\n\r\nexport default class MediaClipper {\r\n\r\n    async clipAndSaveAudio(file, start, end, trackId) {\r\n        const [blob, extension] = await this.clipAudio(file, start, end, trackId);\r\n        await this._saveToFile(blob,  this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".\" + extension);\r\n    }\r\n\r\n    async clipAudio(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n                const media = new Audio();\r\n                media.src = URL.createObjectURL(file);\r\n                media.preload = \"none\";\r\n\r\n                // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n                if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n                    for (const t of media.audioTracks) {\r\n                        t.enabled = trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                media.currentTime = start / 1000;\r\n                media.load();\r\n\r\n                media.oncanplay = (e) => {\r\n                    media.play();\r\n                    const stream = this._captureStream(media);\r\n\r\n                    for (const t of stream.getVideoTracks()) {\r\n                        t.stop();\r\n                    }\r\n\r\n                    const [mimeType, extension] = this._findMediaType();\r\n                    const recorder = new MediaRecorder(stream, { mimeType: mimeType });\r\n                    const chunks = [];\r\n                    recorder.ondataavailable = (e) => {\r\n                        chunks.push(e.data);\r\n                    };\r\n                    recorder.onstop = (e) => {\r\n                        resolve([new Blob(chunks), extension]);\r\n                    };\r\n                    recorder.start();\r\n                    setTimeout(() => {\r\n                        media.pause();\r\n                        recorder.stop();\r\n                        const src = media.src;\r\n                        media.src = null;\r\n                        URL.revokeObjectURL(src);\r\n                    }, end - start + 100);\r\n                };\r\n        });\r\n    }\r\n\r\n    async saveAudio(base64, extension) {\r\n        const res = await fetch(\"data:audio/\" + extension + \";base64,\" + base64);\r\n        const blob = await res.blob();\r\n        this._saveToFile(blob, \"audio_\" + Date.now() + \".\" + extension);\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    _findMediaType() {\r\n        return Object.keys(AUDIO_TYPES)\r\n                .filter(MediaRecorder.isTypeSupported)\r\n                .map(t => [t, AUDIO_TYPES[t]])[0];\r\n    }\r\n\r\n    _captureStream(media) {\r\n        if (typeof media.captureStream === \"function\") {\r\n            return media.captureStream();\r\n        }\r\n\r\n        if (typeof media.mozCaptureStream === \"function\") {\r\n            return media.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from media\");\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy history\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(props.drawerOpen && classes.hide)}>\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`\r\n    }\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, mp3, or mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n    }, []);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid style={{flexGrow: 1}} item>\r\n                            </Grid>\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen ? (<FullscreenExitIcon />) : (<FullscreenIcon />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = (compressed, windowWidth) => makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle, compressed, loading, displayHelp} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = props.drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles(compressed, windowWidth)();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            handleCopy(event, index);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [handleCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                                   className={classes.subtitleRow}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                } catch (e) {\r\n                    onError(e);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio\r\n                        ));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef])\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting(props) {\r\n    const classes = useSelectableSettingStyles();\r\n    const {label, value, selections, onChange, onSelectionChange} = props;\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog(props) {\r\n    const {anki, open, settings, onClose} = props;\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [fieldNames, setFieldNames] = useState();\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleDeckSelectionChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeSelectionChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleSentenceFieldSelectionChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleDefinitionFieldSelectionChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleAudioFieldSelectionChange = useCallback((e) => setAudioField(e.target.value), []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType) {\r\n            return;\r\n        }\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                setFieldNames(await anki.modelFieldNames(ankiConnectUrl, noteType));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={handleClose}\r\n        >\r\n            <DialogTitle>\r\n                Settings\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                </DialogContentText>\r\n                <form className={classes.root}>\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Anki Connect URL\"\r\n                            value={ankiConnectUrl}\r\n                            error={Boolean(ankiConnectUrlError)}\r\n                            helperText={ankiConnectUrlError}\r\n                            onChange={handleAnkiConnectUrlChange}\r\n                        />\r\n                    </div>\r\n                    <SelectableSetting\r\n                        label=\"Deck\"\r\n                        value={deck}\r\n                        selections={deckNames}\r\n                        onChange={handleDeckChange}\r\n                        onSelectionChange={handleDeckSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Note Type\"\r\n                        value={noteType}\r\n                        selections={modelNames}\r\n                        onChange={handleNoteTypeChange}\r\n                        onSelectionChange={handleNoteTypeSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Sentence Field\"\r\n                        value={sentenceField}\r\n                        selections={fieldNames}\r\n                        onChange={handleSentenceFieldChange}\r\n                        onSelectionChange={handleSentenceFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Definition Field\"\r\n                        value={definitionField}\r\n                        selections={fieldNames}\r\n                        onChange={handleDefinitionFieldChange}\r\n                        onSelectionChange={handleDefinitionFieldSelectionChange}\r\n                    />\r\n                    <SelectableSetting\r\n                        label=\"Audio Field\"\r\n                        value={audioField}\r\n                        selections={fieldNames}\r\n                        onChange={handleAudioFieldChange}\r\n                        onSelectionChange={handleAudioFieldSelectionChange}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl,\r\n            deck: localStorage.getItem(deckKey),\r\n            noteType: localStorage.getItem(noteTypeKey),\r\n            sentenceField: localStorage.getItem(sentenceFieldKey),\r\n            definitionField: localStorage.getItem(definitionFieldKey),\r\n            audioField: localStorage.getItem(audioFieldKey)\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onClose={handleClose}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js'\nimport HelpDialog from './HelpDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport MediaClipper from '../services/MediaClipper.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.4.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases\";\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for(const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const mediaClipper = useMemo(() => new MediaClipper(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        setSettingsDialogOpen(false);\n    }, [settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            if (item.audio) {\n                await mediaClipper.saveAudio(item.audio.base64, item.audio.extension);\n            } else {\n                const offset = offsetRef.current || 0;\n                await mediaClipper.clipAndSaveAudio(\n                    item.audioFile || item.videoFile,\n                    item.originalStart + offset,\n                    item.originalEnd + offset\n                );\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [mediaClipper, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogItem(null);\n        setAnkiDialogDisabled(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition) => {\n        setAnkiDialogDisabled(true);\n        const item = ankiDialogItem;\n        const offset = offsetRef.current || 0;\n\n        try {\n            let blob = null;\n            let extension = null;\n            const mediaFile = item.audioFile || item.videoFile;\n\n            if (mediaFile) {\n                [blob, extension] = await mediaClipper.clipAudio(\n                    mediaFile,\n                    item.originalStart + offset,\n                    item.originalEnd + offset\n                );\n            }\n\n            await anki.export(settingsProvider.ankiConnectUrl, text, definition, {\n                audioBlob: blob,\n                audioFileName: mediaFile?.name || item.subtitleFile.name,\n                audioFileExtension: extension || item.audio?.extension,\n                audioBase64: item.audio?.base64\n            });\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogOpen(false);\n            setAnkiDialogItem(null);\n            setAnkiDialogDisabled(false);\n        }\n    }, [anki, settingsProvider, mediaClipper, handleError, ankiDialogItem]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.')\n            return;\n        }\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                    />\n                                )}\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}