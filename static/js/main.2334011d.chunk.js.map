{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","../../common/src/Util.js","components/Alert.js","components/TagsTextField.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","services/Util.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","name","floor","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","selectTrack","onloadedmetadata","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","substring","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","ankiQuerySpecialCharacters","fileNameSpecialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","tags","mode","fields","_appendField","sentenceField","definitionField","sourceField","urlField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","sanitizedName","_sanitizeFileName","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","sanitized","action","version","error","humanReadableTime","seconds","nearestTenth","totalSeconds","round","minutes","hours","String","padStart","surroundingSubtitles","index","countRadius","timeRadius","startIndex","endIndex","atBoundary","mockSurroundingSubtitles","middleSubtitle","maxTimestamp","afterTimestamp","track","beforeTimestamp","unshift","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","TagsTextField","onTagsChange","setValue","handleChange","useCallback","currentValue","endsWith","newTags","splitTags","tag","trim","extractTagsFromString","TextField","onChange","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","label","mark","sliderValueLabelFormat","ms","ValueLabelComponent","Tooltip","enterTouchDelay","placement","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","initialSource","initialUrl","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","setTags","setUrl","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","timestampInterval","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","lastAppliedTimestampIntervalToText","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","preventDefault","stopPropagation","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","handleCustomFieldChange","newCustomFieldValues","assign","disableApplyTextSelection","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","color","rowsMax","InputProps","endAdornment","InputAdornment","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","valueLabelFormat","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","tagRegex","RegExp","helperElement","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","parseSrt","node","isFromNetflix","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","replace","lines","newLines","line","_fixRTL","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","Start","End","Text","combined","DOMParser","xml","parseFromString","textNodes","getElementsByTagName","elm","parseFloat","getAttribute","_decodeHTML","textContent","index1","index2","newLine","innerHTML","childNodes","nodeValue","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","receivedTabs","tab","callback","_remove","callbacks","splice","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","opacity","hex","exec","r","parseInt","g","b","hexToRgb","timeDurationDisplay","milliseconds","totalMilliseconds","includeMilliseconds","secs","mins","hrs","pad","padEnd","n","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","emptyText","secondary","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","wrap","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","secondsInMinute","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","undefined","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","unbindCopy","unbindAnkiExport","loaded","videoInWindow","onMouseMove","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setUrlField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleUrlFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handleTagsChange","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","urlFieldKey","customAnkiFieldsKey","tagsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","_tags","newSettings","localStorage","getItem","setItem","ankiFieldsString","tagsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","nocontrols","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","Content","App","createMuiTheme","main","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","copiedSubtitle","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.2334011d.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}\r\n","export default class KeyEvents {\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return (\r\n            !KeyEvents.detectIncreaseOffset(event) &&\r\n            !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) &&\r\n            event.keyCode === 37\r\n        );\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return (\r\n            !KeyEvents.detectDecreaseOffset(event) &&\r\n            !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) &&\r\n            event.keyCode === 39\r\n        );\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n    constructor({ up, holding, canceledBy, map }) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return { result: result, extra: extra };\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({ up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57] });\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({\r\n            holding: [83],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({\r\n            holding: [68],\r\n            up: [49, 50, 51, 52, 53, 54, 55, 56, 57],\r\n            map: (event) => event.keyCode - 49,\r\n        });\r\n    }\r\n}\r\n","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(\r\n        onToggleSubtitleTrack,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(\r\n        onToggleSubtitleTrackInList,\r\n        onSequenceAdvanced,\r\n        disabledGetter,\r\n        useCapture = false\r\n    ) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}\r\n","export default class Mp3Encoder {\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        },\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, { type: 'audio/mp3' }));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.476aaa5b.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = { 'audio/ogg;codecs=opus': 'ogg', 'audio/webm;codecs=opus': 'webm' };\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES)\r\n    .filter(MediaRecorder.isTypeSupported)\r\n    .map((t) => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n    constructor(baseName, start, end, base64, extension) {\r\n        this.name = baseName + '_' + Math.floor(start) + '_' + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = 'none';\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch('data:audio/' + this.extension + ';base64,' + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + '_' + start + '_' + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            };\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = await this._audioElement(this._blob, false);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const audio = await this._audioElement(this.file, true);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source, selectTrack) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            audio.onloadedmetadata = (e) => {\r\n                if (selectTrack && this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n                    for (const t of audio.audioTracks) {\r\n                        t.enabled = this.trackId === t.id;\r\n                    }\r\n                }\r\n\r\n                audio.currentTime = this.start / 1000;\r\n                resolve(audio);\r\n            };\r\n        });\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === 'function') {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === 'function') {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error('Unable to capture stream from audio');\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return 'mp3';\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        return new AudioClip(\r\n            new Base64AudioData(\r\n                subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')),\r\n                start,\r\n                end,\r\n                base64,\r\n                extension\r\n            )\r\n        );\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + '.' + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n","export default class CanvasResizer {\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, { resizeWidth: newWidth, resizeHeight: newHeight })\r\n                    .then((sprite) => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return 'data:image/' + this.extension + ';base64,' + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + '_' + Math.floor(timestamp) + '.jpeg';\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob);\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = 'none';\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName =\r\n            subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')) +\r\n            '_' +\r\n            Math.floor(timestamp) +\r\n            '.' +\r\n            extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}\r\n","export default class HttpFetcher {\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body),\r\n        });\r\n        return await response.json();\r\n    }\r\n}\r\n","import HttpFetcher from './HttpFetcher';\r\n\r\nconst ankiQuerySpecialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\nconst fileNameSpecialCharacters = [':', '/', '\\\\', '<', '>', '\"', '|', '?', '*', '^'];\r\n\r\nexport default class Anki {\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', { modelName: modelName }, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            { query: this.settingsProvider.wordField + ':' + this._escapeQuery(word) },\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = '';\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (ankiQuerySpecialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`;\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, url, customFieldValues, tags, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n        this._appendField(fields, this.settingsProvider.urlField, url, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.customAnkiFields[customFieldName],\r\n                    customFieldValues[customFieldName],\r\n                    false\r\n                );\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                tags: tags,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            const sanitizedName = this._sanitizeFileName(audioClip.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await audioClip.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false);\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: sanitizedName,\r\n                    data: await audioClip.base64(),\r\n                    fields: [this.settingsProvider.audioField],\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            const sanitizedName = this._sanitizeFileName(image.name);\r\n\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(sanitizedName, await image.base64(), ankiConnectUrl))\r\n                    .result;\r\n                this._appendField(\r\n                    fields,\r\n                    this.settingsProvider.imageField,\r\n                    `<div><img src=\"${fileName}\"></div>`,\r\n                    false\r\n                );\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: sanitizedName,\r\n                    data: await image.base64(),\r\n                    fields: [this.settingsProvider.imageField],\r\n                };\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (\r\n                    await this._executeAction('findNotes', { query: 'added:1' }, ankiConnectUrl)\r\n                ).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue = multiline ? value.split('\\n').join('<br>') : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + '<br>' + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    _sanitizeFileName(name) {\r\n        let sanitized = '';\r\n\r\n        for (let i = 0; i < name.length; ++i) {\r\n            const char = name[i];\r\n\r\n            if (fileNameSpecialCharacters.includes(char)) {\r\n                sanitized += '_';\r\n            } else {\r\n                sanitized += char;\r\n            }\r\n        }\r\n\r\n        return sanitized;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', { filename: name, data: base64 }, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6,\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}\r\n","export function humanReadableTime(timestamp, nearestTenth = false) {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    let seconds;\r\n\r\n    if (nearestTenth) {\r\n        seconds = Math.round(((timestamp / 1000) % 60) * 10) / 10;\r\n    } else {\r\n        seconds = totalSeconds % 60;\r\n    }\r\n\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + 'h' + String(minutes).padStart(2, '0') + 'm' + String(seconds).padStart(2, '0') + 's';\r\n    }\r\n\r\n    return minutes + 'm' + String(seconds).padStart(2, '0') + 's';\r\n}\r\n\r\nexport function surroundingSubtitles(subtitles, index, countRadius, timeRadius) {\r\n    let startIndex;\r\n    let endIndex;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nexport function mockSurroundingSubtitles(middleSubtitle, maxTimestamp, timeRadius) {\r\n    const subtitles = [middleSubtitle];\r\n\r\n    if (middleSubtitle.end < maxTimestamp) {\r\n        const afterTimestamp = Math.min(maxTimestamp, middleSubtitle.end + timeRadius);\r\n        subtitles.push({\r\n            text: '',\r\n            start: middleSubtitle.end,\r\n            end: afterTimestamp,\r\n            track: 0,\r\n        });\r\n    }\r\n\r\n    if (middleSubtitle.start > 0) {\r\n        const beforeTimestamp = Math.max(0, middleSubtitle.start - timeRadius);\r\n        subtitles.unshift({\r\n            text: '',\r\n            start: beforeTimestamp,\r\n            end: middleSubtitle.start,\r\n            track: 0,\r\n        });\r\n    }\r\n\r\n    return subtitles;\r\n}\r\n\r\nfunction atBoundary(subtitles, index, initialIndex, countRadius, timeRadius, sign) {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (\r\n        Math.abs(initialIndex - index) >= countRadius &&\r\n        (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)\r\n    ) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000,\r\n    },\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n                <MuiAlert severity={props.severity}>{props.children}</MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nfunction extractTagsFromString(value) {\r\n    const splitTags = value.split(' ').join('').split(',');\r\n    const tags = [];\r\n\r\n    for (const tag of splitTags) {\r\n        tags.push(tag.trim());\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nexport default function TagsTextField({tags, onTagsChange, ...props}) {\r\n    const [value, setValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const tagsString = tags.join(', ');\r\n\r\n        if (tagsString !== value) {\r\n            setValue(tags.join(', '));\r\n        }\r\n    }, [value, tags]);\r\n\r\n    const handleChange = useCallback((e) => {\r\n        let currentValue = e.target.value;\r\n\r\n        if (\r\n            value.length > currentValue.length &&\r\n            value.includes(currentValue) &&\r\n            currentValue.endsWith(',')\r\n        ) {\r\n            // Detected a backspace at the last comma, move cursor back enough to remove the comma\r\n            currentValue = currentValue.substring(0, currentValue.length - 1);\r\n        }\r\n\r\n        // Decompose string into individual tags by removing all spaces and splitting on \",\"\r\n        const newTags = extractTagsFromString(currentValue);\r\n        setValue(newTags.join(', '));\r\n        onTagsChange(newTags);\r\n    }, [value, onTagsChange]);\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            value={value}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { humanReadableTime } from '@project/common';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\nimport TagsTextField from './TagsTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min !== null && max !== null && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext, boundary) {\r\n    const seenTimestamps = {};\r\n\r\n    return sliderContext.subtitles\r\n        .filter((s) => s.text.trim() !== '')\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`,\r\n            };\r\n        })\r\n        .filter((mark) => mark !== null)\r\n        .filter((mark) => mark.value >= boundary[0] && mark.value <= boundary[1]);\r\n}\r\n\r\nfunction sliderValueLabelFormat(ms) {\r\n    return humanReadableTime(ms, true);\r\n}\r\n\r\nfunction ValueLabelComponent({ children, open, value }) {\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    url: initialUrl,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n}) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState('');\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [source, setSource] = useState(initialSource);\r\n    const [tags, setTags] = useState(settingsProvider.tags);\r\n    const [url, setUrl] = useState(initialUrl);\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [timestampInterval, setTimestampInterval] = useState();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState();\r\n    const [timestampMarks, setTimestampMarks] = useState();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState();\r\n    const [audioClip, setAudioClip] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition('');\r\n        setWord('');\r\n        setSource(initialSource);\r\n        setUrl(initialUrl);\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n        setTags(settingsProvider.tags);\r\n    }, [initialText, initialSource, initialUrl, settingsProvider.tags]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval = sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd];\r\n        const timestampBoundaryInterval = sliderContext && boundaryIntervalFromSliderContext(sliderContext);\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval));\r\n    }, [sliderContext]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(null);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [\r\n        initialAudioClip,\r\n        settingsProvider.preferMp3,\r\n        lastAppliedTimestampIntervalToAudio,\r\n        settingsProvider.audioPaddingStart,\r\n        settingsProvider.audioPaddingEnd,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === '' || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            audioClip.play();\r\n        },\r\n        [audioClip]\r\n    );\r\n\r\n    const handleViewImage = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onViewImage(image);\r\n        },\r\n        [image, onViewImage]\r\n    );\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n\r\n        for (const s of sliderContext.subtitles) {\r\n            if (\r\n                (s.start >= timestampInterval[0] && s.start <= timestampInterval[1]) ||\r\n                (s.end >= timestampInterval[0] && s.end <= timestampInterval[1]) ||\r\n                (timestampInterval[0] >= s.start && timestampInterval[0] <= s.end) ||\r\n                (timestampInterval[1] >= s.start && timestampInterval[1] <= s.end)\r\n            ) {\r\n                intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join('\\n'));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback(\r\n        (e) => {\r\n            e.stopPropagation();\r\n            setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        },\r\n        [timestampInterval]\r\n    );\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(\r\n            sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval)\r\n        );\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const handleCustomFieldChange = useCallback(\r\n        (customFieldName, value) => {\r\n            const newCustomFieldValues = {};\r\n            Object.assign(newCustomFieldValues, customFieldValues);\r\n            newCustomFieldValues[customFieldName] = value;\r\n            setCustomFieldValues(newCustomFieldValues);\r\n        },\r\n        [customFieldValues]\r\n    );\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText =\r\n            duplicateNotes.length > 0\r\n                ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n                : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = '';\r\n    }\r\n\r\n    const disableApplyTextSelection =\r\n        !sliderContext || sliderContext.subtitles.filter((s) => s.text.trim() !== '').length === 0;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Anki Export\r\n                </Typography>\r\n                <IconButton edge=\"end\" onClick={() => onOpenSettings()}>\r\n                    <SettingsIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    (timestampInterval[0] === lastAppliedTimestampIntervalToText[0] &&\r\n                                                        timestampInterval[1] ===\r\n                                                            lastAppliedTimestampIntervalToText[1]) ||\r\n                                                    disableApplyTextSelection\r\n                                                }\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={\r\n                                                    disabled ||\r\n                                                    !settingsProvider.wordField ||\r\n                                                    !word ||\r\n                                                    word.trim() === ''\r\n                                                }\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            rowsMax={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || ''}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div className={classes.mediaField} onClick={handlePlayAudio}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <Tooltip title=\"Apply Selection\">\r\n                                                <span>\r\n                                                    <IconButton\r\n                                                        disabled={\r\n                                                            (timestampInterval[0] ===\r\n                                                                lastAppliedTimestampIntervalToAudio[0] &&\r\n                                                                timestampInterval[1] ===\r\n                                                                    lastAppliedTimestampIntervalToAudio[1]) ||\r\n                                                            !audioClip.isSliceable(\r\n                                                                timestampInterval[0],\r\n                                                                timestampInterval[1]\r\n                                                            )\r\n                                                        }\r\n                                                        onClick={handleApplyTimestampIntervalToAudio}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <DoneIcon />\r\n                                                    </IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div className={classes.mediaField} onClick={handleViewImage}>\r\n                            <TextField variant=\"filled\" color=\"secondary\" fullWidth value={image.name} label=\"Image\" />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {initialUrl && (\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label=\"URL\"\r\n                            value={url}\r\n                            onChange={(e) => setUrl(e.target.value)}\r\n                        />\r\n                    )}\r\n                    {settingsProvider.tags.length > 0 && (\r\n                        <TagsTextField\r\n                            variant=\"filled\"\r\n                            label=\"Tags\"\r\n                            helperText=\"Comma-separated list of strings\"\r\n                            fullWidth\r\n                            color=\"secondary\"\r\n                            tags={tags}\r\n                            onTagsChange={(newTags) => setTags(newTags)}\r\n                        />\r\n                    )}\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{ flexGrow: 1 }}>\r\n                                <Slider\r\n                                    ValueLabelComponent={ValueLabelComponent}\r\n                                    value={timestampInterval}\r\n                                    valueLabelFormat={sliderValueLabelFormat}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{ marginTop: -8 }}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button disabled={disabled} onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(text, definition, audioClip, image, word, source, url, customFieldValues, tags, 'gui')\r\n                    }\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source,\r\n                            url,\r\n                            customFieldValues,\r\n                            tags,\r\n                            'updateLast'\r\n                        )\r\n                    }\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() =>\r\n                        onProceed(\r\n                            text,\r\n                            definition,\r\n                            audioClip,\r\n                            image,\r\n                            word,\r\n                            source,\r\n                            url,\r\n                            customFieldValues,\r\n                            tags,\r\n                            'default'\r\n                        )\r\n                    }\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-colored.cbc50e45.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({ dragging }) => ({\r\n        position: 'absolute',\r\n        height: 'calc(100% - 64px)',\r\n        width: '100%',\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? 'auto' : 'none',\r\n    }),\r\n    transparentBackground: {\r\n        '&::before': {\r\n            content: \"' '\",\r\n            position: 'absolute',\r\n            height: 'calc(100vh - 64px)',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            backgroundSize: '300px 300px',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: 'rgba(0, 0, 0, .3)',\r\n            filter: 'drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))',\r\n        },\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n}));\r\n\r\nexport default function DragOverlay({ dragging, loading }) {\r\n    const classes = useStyles({ dragging: dragging });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'start',\r\n        textAlign: 'left',\r\n    },\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const { open, extensionUrl, onClose } = props;\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose}>\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">Loading files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Drag and drop mkv, srt, ass, or mp3 files into the player.</li>\r\n                    <li>Multiple files can be dragged and dropped simultaneously e.g. mkv+srt, mp3+ass etc.</li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded, they\r\n                        can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Syncing with streaming video in another tab</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome{' '}\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                            extension\r\n                        </Link>\r\n                        .\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>Or, load a subtitle file into asbplayer and use the camera button in the bottom right.</li>\r\n                    <li>\r\n                        On supported sites you can sync detected subtitles via the extension keyboard shortcut\r\n                        (Ctrl+Shift+F by default), or via the \"automatically sync detected subtitles\" option. The same\r\n                        shortcut also allows you to sync an empty subtitle track, allowing you to mine media without\r\n                        accompanying subtitles.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine\r\n                        subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Supported streaming video sites for subtitle detection</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Netflix (on main /watch url)</li>\r\n                    <li>Youtube (on main /watch url)</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Anki</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.</li>\r\n                        <li>For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.</li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.</li>\r\n                        <li>For local file playback, copy the current subtitle by using Ctrl+Shift+A.</li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;\r\n                                <StarIcon fontSize=\"small\" />\r\n                                &nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard\r\n                        shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                        >\r\n                            video\r\n                        </Link>{' '}\r\n                        for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Changing subtitle offset</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.</li>\r\n                    <li>Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.</li>\r\n                    <li>Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.</li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Condensed playback of local media files</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Load an audio/video file with a subtitle file.</li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;\r\n                            <SpeedIcon fontSize=\"small\" />\r\n                            &nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Keyboard shortcuts</Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+A</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Q</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Z (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+X (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Copy current subtitle and open Anki export dialog</Typography>\r\n                                    <Typography>\r\n                                        When video is synced without a subtitle file, starts/stops recording audio\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+F (default, streaming video)</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Select video element to mine without a subtitle file, or with detected subtitles\r\n                                        on supported sites\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Space</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Play/pause</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitles</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>S+1, S+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in video</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>D+1, D+2...</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Toggle subtitle track 1, 2... in asbplayer</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Seek to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Left/Right or Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset to previous/next subtitle</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Ctrl+Shift+Left/Right</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Typography>Adjust offset by +/- 100 ms</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">Common issues</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>asbplayer isn't detecting streaming video.</li>\r\n                    <ul>\r\n                        <li>Try refreshing both the asbplayer tab and the video in the other tab.</li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites. A lot of\r\n                            video players are loaded inside of iframes, so it's difficult to list every single URL that\r\n                            the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>The extension keyboard shortcuts aren't working.</li>\r\n                    <ul>\r\n                        <li>Try uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                        <li>Make sure the extension isn't installed twice.</li>\r\n                        <li>\r\n                            Verify the keyboard shortcut is bound as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/wYWbgovfNlI\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                    </ul>\r\n                    <li>asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'</li>\r\n                    <ul>\r\n                        <li>If you're using Brave, make sure asbplayer isn't being blocked by Shield.</li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this{' '}\r\n                            <Link\r\n                                color=\"secondary\"\r\n                                target=\"_blank\"\r\n                                rel=\"noreferrer\"\r\n                                href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                            >\r\n                                video\r\n                            </Link>\r\n                            .\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start\r\n                            is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.</li>\r\n                    <ul>\r\n                        <li>Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).</li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">Demos</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\"\r\n                        >\r\n                            Sentence mining streaming video (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\"\r\n                        >\r\n                            Sentence mining streaming video (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=sgrJF99WX-Q\"\r\n                        >\r\n                            Sentence mining streaming video (no subtitle file)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=J3E82spYqIk\"\r\n                        >\r\n                            Sentence mining video files (synchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\"\r\n                        >\r\n                            Sentence mining video files (asynchronous workflow)\r\n                        </Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">Browser Compatibility</Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely\r\n                        work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser. The{' '}\r\n                        <Link\r\n                            color=\"secondary\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            href=\"https://github.com/animebook/animebook.github.io#video-format-support\"\r\n                        >\r\n                            animebook\r\n                        </Link>{' '}\r\n                        readme has a detailed explanation of this and links to browsers that have good compatibility.\r\n                        Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are\r\n                        enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({ width, height }) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain',\r\n    }),\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const { open, image, onClose } = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({ width: width * resizeRatio, height: height * resizeRatio });\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onBackdropClick={onClose} onEscapeKeyDown={onClose} maxWidth=\"lg\">\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{ width: width * resizeRatio, height: height * resizeRatio }}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parse as parseAss } from 'ass-compiler';\r\nimport { parseSync as parseSrt } from 'subtitle';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nconst tagRegex = RegExp('</?([^>]*)>', 'ig');\r\nconst helperElement = document.createElement('div');\r\n\r\nexport default class SubtitleReader {\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap((nodes) => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt')) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map((node) => ({ ...node.data, track: track }));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt') || file.name.endsWith('.nfvtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const isFromNetflix = file.name.endsWith('.nfvtt');\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => {\r\n                    if (isFromNetflix) {\r\n                        c.text = c.text.replace(tagRegex, '');\r\n\r\n                        const lines = c.text.split('\\n');\r\n                        const newLines = [];\r\n\r\n                        for (const line of lines) {\r\n                            newLines.push(this._fixRTL(line));\r\n                        }\r\n\r\n                        c.text = newLines.join('\\n');\r\n                    }\r\n                    cues.push(c);\r\n                };\r\n                parser.onflush = () =>\r\n                    resolve(\r\n                        cues.map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track,\r\n                        }))\r\n                    );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map((event) => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track,\r\n            }));\r\n        }\r\n\r\n        if (file.name.endsWith('.ytxml')) {\r\n            const xml = new window.DOMParser().parseFromString(await file.text(), 'text/xml');\r\n            const textNodes = xml.getElementsByTagName('text');\r\n            const subtitles = [];\r\n\r\n            for (let index = 0, length = textNodes.length; index < length; index++) {\r\n                const elm = textNodes[index];\r\n                const start = parseFloat(elm.getAttribute('start'));\r\n\r\n                subtitles.push({\r\n                    start: Math.floor(start * 1000),\r\n                    end: Math.floor((start + parseFloat(elm.getAttribute('dur'))) * 1000),\r\n                    text: this._decodeHTML(elm.textContent.replace(tagRegex, '')),\r\n                    track,\r\n                });\r\n            }\r\n\r\n            return subtitles;\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    _fixRTL(line) {\r\n        const index1 = line.indexOf('&lrm;');\r\n        const index2 = line.indexOf('&rlm;');\r\n        let newLine = '';\r\n\r\n        if (index1 > -1) {\r\n            newLine = line.substring(0, index1) + '\\u202a' + line.substring(index1 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        } else if (index2 > -1) {\r\n            newLine = line.substring(0, index2) + '\\u202b' + line.substring(index2 + 5) + '\\u202c';\r\n            return this._fixRTL(newLine);\r\n        }\r\n\r\n        return line;\r\n    }\r\n\r\n    _decodeHTML(text) {\r\n        helperElement.innerHTML = text;\r\n        return helperElement.childNodes.length === 0 ? '' : helperElement.childNodes[0].nodeValue;\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({ drawerWidth }) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({ show }) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({ show, ...toolTipProps }) {\r\n    const classes = useCopyHistoryTooltipStyles({ show: show });\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={props.onFileSelector}>\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenHelp}>\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton edge=\"end\" color=\"inherit\" onClick={props.onOpenSettings}>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n                return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage(\r\n            {\r\n                sender: 'asbplayerv2',\r\n                message: {\r\n                    command: 'heartbeat',\r\n                    id: this.id,\r\n                    receivedTabs: this.tabs,\r\n                },\r\n            },\r\n            '*'\r\n        );\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({ sender: 'asbplayerv2', message: message, tabId: tabId, src: src }, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({ sender: 'asbplayerv2', message: message, tabId: tab.id, src: tab.src }, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n    };\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily,\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles[\r\n            'textShadow'\r\n        ] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const { r, g, b } = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`;\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nexport function timeDurationDisplay(milliseconds, totalMilliseconds, includeMilliseconds = true) {\r\n    if (milliseconds < 0) {\r\n        return timeDurationDisplay(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n\r\n        if (includeMilliseconds) {\r\n            return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n        }\r\n\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs);\r\n    }\r\n\r\n    if (includeMilliseconds) {\r\n        return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({ drawerWidth }) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20,\r\n    },\r\n    emptyState: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        textAlign: 'center',\r\n        height: '100%',\r\n        padding: 15,\r\n    },\r\n    text: {\r\n        flexGrow: 1,\r\n    },\r\n    emptyText: {\r\n        flexGrow: 1,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    timestamp: {\r\n        paddingRight: 15,\r\n        paddingLeft: 15,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const { open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item } = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{ variant: 'body2' }} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback = useCallback((element) => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback(\r\n        (item) => {\r\n            props.onDelete(item);\r\n        },\r\n        [props]\r\n    );\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push(\r\n                    <ListSubheader disableSticky={true} key={item.name + '-' + itemNameCounters[item.name]}>\r\n                        {item.name}\r\n                    </ListSubheader>\r\n                );\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push(\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{ gutters: classes.listItemGutters }}\r\n                >\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{ root: classes.listItemIconRoot }}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                        primary={\r\n                            <Grid wrap=\"nowrap\" container>\r\n                                <Grid item className={item.text === '' ? classes.emptyText : classes.text}>\r\n                                    {item.text === '' ? 'No text' : item.text}\r\n                                </Grid>\r\n                                <Grid item className={classes.timestamp}>\r\n                                    {timeDurationDisplay(item.start, item.start, false)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            );\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">See the help for keyboard shortcuts.</Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: 'absolute',\r\n        height: 'calc(100vh - 64px)',\r\n        width: '100%',\r\n        zIndex: 100,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer',\r\n    },\r\n}));\r\n\r\nexport default function LandingPage({\r\n    extension,\r\n    latestExtensionVersion,\r\n    extensionUrl,\r\n    loading,\r\n    dragging,\r\n    onFileSelector,\r\n}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or{' '}\r\n                        <Link\r\n                            target=\"#\"\r\n                            className={classes.browseLink}\r\n                            onClick={onFileSelector}\r\n                            color=\"secondary\"\r\n                            component=\"label\"\r\n                        >\r\n                            browse\r\n                        </Link>\r\n                        .\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    Chrome extension\r\n                                </Link>{' '}\r\n                                to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension{' '}\r\n                                <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>\r\n                                    update\r\n                                </Link>{' '}\r\n                                is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}\r\n","export default class ChromeTabVideoProtocol {\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data,\r\n                });\r\n            }\r\n        };\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}\r\n","export default class Clock {\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: '#fff',\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    timeDisplay: {\r\n        color: '#fff',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: '#fff',\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto',\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto',\r\n    },\r\n    subContainer: {\r\n        background: 'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))',\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto',\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto',\r\n    },\r\n    progress: {\r\n        margin: 5,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff',\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    },\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        width: 'calc(100% - 20px)',\r\n        marginLeft: 10,\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8,\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%',\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        bottom: 0,\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle',\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit',\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white',\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback(\r\n        (e) => {\r\n            const rect = e.currentTarget.getBoundingClientRect();\r\n            // Account for margins by subtracting 10 from left/right sides\r\n            const width = rect.right - rect.left - 20;\r\n            const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? (elementWidth(containerRef.current) * props.value) / 100 : 0;\r\n    const fillStyle = { width: progressWidth };\r\n    const handleStyle = { marginLeft: progressWidth };\r\n    const fillContainerClassName = mouseOver\r\n        ? classes.fillContainer + ' ' + classes.fillContainerThick\r\n        : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + ' ' + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div ref={containerRef} className={classes.container}>\r\n                <div className={fillContainerClassName}>\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button\r\n                onClick={() => props.onAudioTrackSelected(t.id)}\r\n            >\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({ open, anchorEl, onClose, tabs, selectedTab, onTabSelected }) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button\r\n                onClick={() => onTabSelected(t)}\r\n            >\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n}) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({ x: 0, y: 0 });\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            onSeek(progress);\r\n        },\r\n        [onSeek]\r\n    );\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    }\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow =\r\n                now - lastShowTimestampRef.current < 2000 ||\r\n                Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2) +\r\n                    Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) >\r\n                    100 ||\r\n                forceShowRef.current ||\r\n                offsetInputRef.current === document.activeElement ||\r\n                now - lastOffsetInputChangeTimestampRef.current < 2000;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                    onOffsetChange(offset * 1000);\r\n                    offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate();\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? '+' + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            onAudioTrackSelected(id);\r\n            setAudioTrackSelectorAnchorEl(null);\r\n            setAudioTrackSelectorOpen(false);\r\n        },\r\n        [onAudioTrackSelected]\r\n    );\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback(\r\n        (tab) => {\r\n            onTabSelected(tab);\r\n            setTabSelectorAnchorEl(null);\r\n            setTabSelectorOpen(false);\r\n        },\r\n        [onTabSelected]\r\n    );\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback(\r\n        (e, value) => {\r\n            setVolume(value);\r\n            onVolumeChange(value / 100);\r\n        },\r\n        [onVolumeChange]\r\n    );\r\n\r\n    const handleVolumeChangeCommitted = useCallback(\r\n        (e, value) => {\r\n            if (value > 0) {\r\n                setLastCommittedVolume(value);\r\n            }\r\n\r\n            settingsProvider.volume = value;\r\n        },\r\n        [settingsProvider]\r\n    );\r\n\r\n    const handleVolumeToggle = useCallback(\r\n        (e, value) => {\r\n            setVolume((volume) => {\r\n                const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n                onVolumeChange(newVolume / 100);\r\n                return newVolume;\r\n            });\r\n        },\r\n        [onVolumeChange, lastCommittedVolume]\r\n    );\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar onSeek={handleSeek} value={progress * 100} />\r\n                        <Grid container className={classes.gridContainer} direction=\"row\">\r\n                            <Grid item>\r\n                                <IconButton color=\"inherit\" onClick={() => (playing ? onPause() : onPlay())}>\r\n                                    {playing ? (\r\n                                        <PauseIcon className={classes.button} />\r\n                                    ) : (\r\n                                        <PlayArrowIcon className={classes.button} />\r\n                                    )}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid\r\n                                    item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={\r\n                                        showVolumeBar\r\n                                            ? classes.volumeInputContainerShown\r\n                                            : classes.volumeInputContainerHidden\r\n                                    }\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? <VolumeOffIcon /> : <VolumeUpIcon />}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar\r\n                                                ? classes.volumeInputThumbShown\r\n                                                : classes.volumeInputThumbHidden,\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={'±' + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{ flexGrow: 1 }}></Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon\r\n                                                className={\r\n                                                    condensedModeEnabled ? classes.button : classes.inactiveButton\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon\r\n                                            className={subtitlesEnabled ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon\r\n                                            className={selectedTab ? classes.button : classes.inactiveButton}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon\r\n                                            className={classes.button}\r\n                                            style={popOut ? { transform: 'rotateX(180deg)' } : {}}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen ? (\r\n                                            <FullscreenExitIcon className={classes.button} />\r\n                                        ) : (\r\n                                            <FullscreenIcon className={classes.button} />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            };\r\n        }\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({ compressed, windowWidth }) => (compressed ? Math.max(350, 0.25 * windowWidth) : '100%'),\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5,\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5,\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const { index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps } = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : '';\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(selection?.type === 'Range' && textRef.current?.isSameNode(selection.anchorNode.parentNode));\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? 'small' : 'default'} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>{subtitle.displayTime}</TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider,\r\n}) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(\r\n        () =>\r\n            subtitles\r\n                ? Array(subtitles.length)\r\n                      .fill()\r\n                      .map((_, i) => createRef())\r\n                : [],\r\n        [subtitles]\r\n    );\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({ compressed, windowWidth });\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: 'center',\r\n                            inline: 'nearest',\r\n                            behavior: 'smooth',\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('visibilitychange', scrollIfVisible);\r\n\r\n        return () => document.removeEventListener('visibilitychange', scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: 'center',\r\n            inline: 'nearest',\r\n            behavior: 'smooth',\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        }\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                block: 'center',\r\n                inline: 'nearest',\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback(\r\n        (index) => {\r\n            if (!selectedSubtitleIndexesRef.current) {\r\n                return [];\r\n            }\r\n\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        const index = Math.min(Object.keys(selectedSubtitleIndexesRef.current));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback(\r\n        (index) => {\r\n            const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n            onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n        },\r\n        [subtitles, onSeek]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (e, index) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n        },\r\n        [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]\r\n    );\r\n\r\n    let subtitleTable = null;\r\n\r\n    if (!subtitles || subtitles.length === 0) {\r\n        if (!loading && displayHelp) {\r\n            subtitleTable = !loading && displayHelp && (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">{displayHelp}</Typography>\r\n                </div>\r\n            );\r\n        } else if (subtitles && subtitles.length === 0) {\r\n            subtitleTable = (\r\n                <div className={classes.noSubtitles}>\r\n                    <Typography variant=\"h6\">No subtitles</Typography>\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} ref={containerRef} className={classes.container}>\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(\r\n                            event.data.subtitle,\r\n                            event.data.surroundingSubtitles,\r\n                            event.data.audio,\r\n                            event.data.image,\r\n                            event.data.url,\r\n                            event.data.preventDuplicate,\r\n                            event.data.id\r\n                        );\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({ command: 'currentTime', value: this.time });\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({ command: 'ready', duration: duration });\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({ command: 'init' });\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({ command: 'play' });\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({ command: 'pause' });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames,\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({ command: 'subtitleSettings', value: settings });\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({ command: 'condensedModeToggle', value: enabled });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({ command: 'hideSubtitlePlayerToggle', value: hidden });\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({ command: 'ankiDialogRequest' });\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({ command: 'finishedAnkiDialogRequest', resume: resume });\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({ command: 'ankiSettings', value: settings });\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({ command: 'miscSettings', value: settings });\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({ command: 'close' });\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}\r\n","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings, mockSurroundingSubtitles } from '@project/common';\r\nimport { timeDurationDisplay } from '../services/Util';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0,\r\n    },\r\n});\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration ? 1000 * audioRef.current.duration : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration ? 1000 * videoRef.current.duration : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: { subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl },\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle,\r\n}) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(\r\n        async (time, clock, forwardToMedia) => {\r\n            clock.setTime(time);\r\n            forceUpdate();\r\n\r\n            if (forwardToMedia) {\r\n                await mediaAdapter.seek(time / 1000);\r\n            }\r\n        },\r\n        [forceUpdate, mediaAdapter]\r\n    );\r\n\r\n    const applyOffset = useCallback(\r\n        (offset, forwardToVideo) => {\r\n            setOffset(offset);\r\n\r\n            setSubtitles((subtitles) => {\r\n                if (!subtitles) {\r\n                    return;\r\n                }\r\n\r\n                const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n                const newSubtitles = subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    displayTime: timeDurationDisplay(s.originalStart + offset, length),\r\n                    track: s.track,\r\n                }));\r\n\r\n                if (forwardToVideo) {\r\n                    videoRef.current?.subtitles(\r\n                        newSubtitles,\r\n                        subtitleFiles.map((f) => f.name)\r\n                    );\r\n                }\r\n\r\n                return newSubtitles;\r\n            });\r\n        },\r\n        [subtitleFiles]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDurationDisplay(s.start, length),\r\n                        track: s.track,\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut((popOut) => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer((hidden) => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(\r\n                            subtitlesRef.current,\r\n                            subtitleFiles.map((f) => f.name)\r\n                        );\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, surroundingSubtitles, audio, image, url, preventDuplicate, id) =>\r\n                            onCopy(\r\n                                subtitle,\r\n                                surroundingSubtitles,\r\n                                audioFile,\r\n                                videoFile,\r\n                                subtitle ? subtitleFiles[subtitle.track] : null,\r\n                                channel.selectedAudioTrack,\r\n                                audio,\r\n                                image,\r\n                                url,\r\n                                preventDuplicate,\r\n                                id\r\n                            )\r\n                        );\r\n                        channel.onCondensedModeToggle(() =>\r\n                            setCondensedModeEnabled((enabled) => {\r\n                                const newValue = !enabled;\r\n                                channel.condensedModeToggle(newValue);\r\n                                return newValue;\r\n                            })\r\n                        );\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) =>\r\n                            setDisabledSubtitleTracks((tracks) => {\r\n                                const newTracks = { ...tracks };\r\n                                newTracks[track] = !tracks[track];\r\n                                return newTracks;\r\n                            })\r\n                        );\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [\r\n        subtitleReader,\r\n        extension,\r\n        settingsProvider,\r\n        clock,\r\n        mediaAdapter,\r\n        seek,\r\n        onLoaded,\r\n        onError,\r\n        onUnloadVideo,\r\n        onCopy,\r\n        onAnkiDialogRequest,\r\n        subtitleFiles,\r\n        audioFile,\r\n        audioFileUrl,\r\n        videoFile,\r\n        videoFileUrl,\r\n        tab,\r\n        forceUpdate,\r\n        videoFrameRef,\r\n        applyOffset,\r\n    ]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    }\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest((resumeOnFinishedAnkiDialogRequest) => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL +\r\n                    '/?video=' +\r\n                    encodeURIComponent(videoFileUrl) +\r\n                    '&channel=' +\r\n                    channelId +\r\n                    '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                'resizable,width=800,height=450'\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(\r\n        async (progress) => {\r\n            if (!lengthRef.current) {\r\n                return;\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(progress * lengthRef.current, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        },\r\n        [clock, seek]\r\n    );\r\n\r\n    const handleSeekToSubtitle = useCallback(\r\n        async (time, shouldPlay) => {\r\n            if (!shouldPlay) {\r\n                pause(clock, mediaAdapter, true);\r\n            }\r\n\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            await seek(time, clock, true);\r\n\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, seek, mediaAdapter]\r\n    );\r\n\r\n    const handleCopy = useCallback(\r\n        (subtitle, surroundingSubtitles, preventDuplicate) => {\r\n            onCopy(\r\n                subtitle,\r\n                surroundingSubtitles,\r\n                audioFile,\r\n                videoFile,\r\n                subtitleFiles[subtitle.track],\r\n                selectedAudioTrack,\r\n                undefined,\r\n                undefined,\r\n                undefined,\r\n                preventDuplicate,\r\n                undefined\r\n            );\r\n        },\r\n        [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]\r\n    );\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        async (id) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.audioTrackSelected(id);\r\n            }\r\n\r\n            pause(clock, mediaAdapter, true);\r\n\r\n            await seek(0, clock, true);\r\n\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        },\r\n        [clock, mediaAdapter, seek]\r\n    );\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n        },\r\n        [applyOffset]\r\n    );\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => setCondensedModeEnabled((v) => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback(\r\n        (track) =>\r\n            setDisabledSubtitleTracks((tracks) => {\r\n                const newTracks = { ...tracks };\r\n                newTracks[track] = !tracks[track];\r\n                return newTracks;\r\n            }),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        if ((audioFile || videoFile) && (!subtitles || subtitles.length === 0)) {\r\n            const unbindCopy = KeyBindings.bindCopy(\r\n                (event, subtitle) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n                },\r\n                () => disableKeyEvents,\r\n                () => {\r\n                    if (!lengthRef.current) {\r\n                        return null;\r\n                    }\r\n\r\n                    const timestamp = clock.time(lengthRef.current);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                }\r\n            );\r\n\r\n            const unbindAnkiExport = KeyBindings.bindAnkiExport(\r\n                (event) => {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    const timestamp = clock.time(lengthRef.current);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, lengthRef.current),\r\n                        track: 0,\r\n                    };\r\n                    const surroundingSubtitles = mockSurroundingSubtitles(subtitle, lengthRef.current, 5000);\r\n                    onCopy(\r\n                        subtitle,\r\n                        surroundingSubtitles,\r\n                        audioFile,\r\n                        videoFile,\r\n                        audioFile?.name ?? videoFile?.name,\r\n                        selectedAudioTrack\r\n                    );\r\n\r\n                    onAnkiDialogRequest();\r\n                },\r\n                () => false\r\n            );\r\n\r\n            return () => {\r\n                unbindCopy();\r\n                unbindAnkiExport();\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }, [audioFile, videoFile, subtitles, clock, selectedAudioTrack, disableKeyEvents, onCopy, onAnkiDialogRequest]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <Grid container direction=\"row\" wrap=\"nowrap\" className={classes.container}>\r\n                {videoInWindow && (\r\n                    <Grid item style={{ flexGrow: 1, minWidth: 600 }}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={\r\n                                process.env.PUBLIC_URL +\r\n                                '/?video=' +\r\n                                encodeURIComponent(videoFileUrl) +\r\n                                '&channel=' +\r\n                                channelId +\r\n                                '&popout=false'\r\n                            }\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid\r\n                        item\r\n                        style={{\r\n                            flexGrow: videoInWindow ? 0 : 1,\r\n                            width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto',\r\n                        }}\r\n                    >\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({ open, onProceed, onCancel, existingCustomFieldNames }) {\r\n    const [fieldName, setFieldName] = useState('');\r\n\r\n    useEffect(() => {\r\n        setFieldName('');\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio',\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>Cancel</Button>\r\n                <Button disabled={fieldExists || fieldName.trim() === ''} onClick={() => onProceed(fieldName.trim())}>\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TagsTextField from './TagsTextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10,\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none',\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'end',\r\n        alignItems: 'flex-end',\r\n    },\r\n}));\r\n\r\nfunction SelectableSetting({ label, value, selections, removable, onChange, onSelectionChange, onRemoval }) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select value={value} disabled={!selections} color=\"secondary\" onChange={onSelectionChange}>\r\n                    {selections &&\r\n                        selections.map((s) => (\r\n                            <MenuItem key={s} value={s}>\r\n                                {s}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({ anki, open, settings, onClose }) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || '');\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || '');\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || '');\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || '');\r\n    const [audioField, setAudioField] = useState(settings.audioField || '');\r\n    const [imageField, setImageField] = useState(settings.imageField || '');\r\n    const [wordField, setWordField] = useState(settings.wordField || '');\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || '');\r\n    const [urlField, setUrlField] = useState(settings.urlField || '');\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [tags, setTags] = useState(settings.tags);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleUrlFieldChange = useCallback((e) => setUrlField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = '';\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields((oldCustomFields) => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback(\r\n        (customFieldName) =>\r\n            setCustomFields((oldCustomFields) => {\r\n                const newCustomFields = {};\r\n                Object.assign(newCustomFields, oldCustomFields);\r\n                delete newCustomFields[customFieldName];\r\n                return newCustomFields;\r\n            }),\r\n        []\r\n    );\r\n    const handleTagsChange = useCallback((newTags) => {\r\n        setTags(newTags);\r\n    }, []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(\r\n        () =>\r\n            computeStyles({\r\n                subtitleColor: subtitleColor,\r\n                subtitleSize: subtitleSize,\r\n                subtitleOutlineThickness: subtitleOutlineThickness,\r\n                subtitleOutlineColor: subtitleOutlineColor,\r\n                subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n                subtitleBackgroundColor: subtitleBackgroundColor,\r\n                subtitleFontFamily: subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleColor,\r\n            subtitleSize,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleBackgroundColor,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames(['', ...(await anki.modelFieldNames(noteType, ankiConnectUrl))]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => (canceled = true);\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            urlField: urlField,\r\n            tags: tags.filter((t) => t !== ''),\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [\r\n        onClose,\r\n        ankiConnectUrl,\r\n        deck,\r\n        noteType,\r\n        sentenceField,\r\n        definitionField,\r\n        audioField,\r\n        imageField,\r\n        wordField,\r\n        sourceField,\r\n        urlField,\r\n        customFields,\r\n        tags,\r\n        preferMp3,\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n        subtitlePreview,\r\n        themeType,\r\n        audioPaddingStart,\r\n        audioPaddingEnd,\r\n        maxImageWidth,\r\n        maxImageHeight,\r\n    ]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map((customFieldName) => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog open={open} maxWidth=\"xs\" fullWidth onBackdropClick={handleClose} onEscapeKeyDown={handleClose}>\r\n                <DialogTitle>Settings</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + '//' + window.location.hostname} is in the\r\n                                    webCorsOriginList in your AnkiConnect settings as in this{' '}\r\n                                    <Link\r\n                                        color=\"secondary\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\"\r\n                                        href=\"https://youtu.be/Mv7fEVb6PHo?t=44\"\r\n                                    >\r\n                                        video\r\n                                    </Link>\r\n                                    .\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"URL Field\"\r\n                                    value={urlField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleUrlFieldChange}\r\n                                    onSelectionChange={handleUrlFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <TagsTextField\r\n                                    label=\"Tags\"\r\n                                    helperText=\"Comma-separated list of strings\"\r\n                                    fullWidth\r\n                                    color=\"secondary\"\r\n                                    tags={tags}\r\n                                    onTagsChange={handleTagsChange}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: <InputAdornment position=\"end\">ms</InputAdornment>,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1,\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1,\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","const defaultAnkiConnectUrl = 'http://127.0.0.1:8765';\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = '#ffffff';\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = '#000000';\r\nconst defaultSubtitleBackgroundColor = '#000000';\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = '';\r\nconst defaultSubtitlePreview = 'アあ安';\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = 'ankiConnectUrl';\r\nconst deckKey = 'deck';\r\nconst noteTypeKey = 'noteType';\r\nconst sentenceFieldKey = 'sentenceField';\r\nconst definitionFieldKey = 'definitionField';\r\nconst audioFieldKey = 'audioField';\r\nconst imageFieldKey = 'imageField';\r\nconst wordFieldKey = 'wordField';\r\nconst sourceFieldKey = 'sourceField';\r\nconst urlFieldKey = 'urlField';\r\nconst customAnkiFieldsKey = 'customAnkiFields';\r\nconst tagsKey = 'tags';\r\nconst subtitleSizeKey = 'subtitleSize';\r\nconst subtitleColorKey = 'subtitleColor';\r\nconst subtitleOutlineThicknessKey = 'subtitleOutlineThickness';\r\nconst subtitleOutlineColorKey = 'subtitleOutlineColor';\r\nconst subtitleBackgroundColorKey = 'subtitleBackgroundColor';\r\nconst subtitleBackgroundOpacityKey = 'subtitleBackgroundOpacity';\r\nconst subtitleFontFamilyKey = 'subtitleFontFamily';\r\nconst subtitlePreviewKey = 'subtitlePreview';\r\nconst audioPaddingStartKey = 'audioPaddingStart';\r\nconst audioPaddingEndKey = 'audioPaddingEnd';\r\nconst maxImageWidthKey = 'maxImageWidth';\r\nconst maxImageHeightKey = 'maxImageHeight';\r\nconst volumeKey = 'volume';\r\nconst preferMp3Key = 'preferMp3';\r\nconst themeTypeKey = 'themeType';\r\n\r\nexport default class SettingsProvider {\r\n    constructor() {\r\n        // Cache tags so that it can be used in useEffect dependencies\r\n        this._tags = this.tags;\r\n    }\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.urlField = newSettings.urlField;\r\n        this.tags = newSettings.tags;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            urlField: this.urlField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            tags: this.tags,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get urlField() {\r\n        return localStorage.getItem(urlFieldKey);\r\n    }\r\n\r\n    set urlField(urlField) {\r\n        localStorage.setItem(urlFieldKey, urlField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get tags() {\r\n        if (typeof this._tags !== 'undefined') {\r\n            return this._tags;\r\n        }\r\n\r\n        const tagsString = localStorage.getItem(tagsKey);\r\n\r\n        if (tagsString) {\r\n            this._tags = JSON.parse(tagsString);\r\n            return this._tags;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    set tags(tags) {\r\n        localStorage.setItem(tagsKey, JSON.stringify(tags));\r\n        this._tags = undefined;\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, maxImageWidth);\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        const value = localStorage.getItem(maxImageHeightKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageHeight;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, maxImageHeight);\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}\r\n","export default class PlayerChannel {\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch (event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({ command: 'currentTime', value: this.time, echo: true });\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack,\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({ command: 'readyState', value: readyState });\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({ command: 'play', echo: true });\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({ command: 'pause', echo: true });\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({ command: 'audioTrackSelected', id: id });\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({ command: 'offset', value: offset });\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({ command: 'popOutToggle' });\r\n    }\r\n\r\n    copy(subtitle, surroundingSubtitles, preventDuplicate) {\r\n        this.channel?.postMessage({\r\n            command: 'copy',\r\n            subtitle: subtitle,\r\n            surroundingSubtitles: surroundingSubtitles,\r\n            preventDuplicate: preventDuplicate,\r\n        });\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({ command: 'condensedModeToggle' });\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({ command: 'hideSubtitlePlayerToggle' });\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({ command: 'ankiDialogRequest', forwardToVideo: forwardToVideo });\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({ command: 'toggleSubtitleTrackInList', track: track });\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({ command: 'exit' });\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util';\r\nimport { KeyBindings, surroundingSubtitles, mockSurroundingSubtitles, humanReadableTime } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    video: {\r\n        margin: 'auto',\r\n    },\r\n    cursorHidden: {\r\n        cursor: 'none',\r\n    },\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings),\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language,\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = 'Aborted';\r\n            break;\r\n        case 2:\r\n            error = 'Network error';\r\n            break;\r\n        case 3:\r\n            error = 'Decoding error';\r\n            break;\r\n        case 4:\r\n            error = 'Source not supported';\r\n            break;\r\n        default:\r\n            error = 'Unknown error';\r\n            break;\r\n    }\r\n\r\n    return error + ': ' + (element.error.message || '<details missing>');\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { settingsProvider, videoFile, channel, popOut, onError } = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({ x: 0, y: 0 });\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] =\r\n        useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(\r\n        (element) => {\r\n            if (element) {\r\n                videoRef.current = element;\r\n\r\n                if (element.readyState === 4) {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                } else {\r\n                    element.onloadeddata = (event) => {\r\n                        notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                    };\r\n                }\r\n\r\n                element.oncanplay = (event) => {\r\n                    playerChannel.readyState(4);\r\n\r\n                    if (playingRef.current) {\r\n                        clock.start();\r\n                    }\r\n                };\r\n\r\n                element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n                element.onerror = (event) => onError(errorMessage(element));\r\n            }\r\n        },\r\n        [clock, playerChannel, onError]\r\n    );\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback(\r\n        (progress) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n            }\r\n\r\n            const time = progress * length;\r\n            playerChannel.currentTime = time / 1000;\r\n        },\r\n        [length, clock, playerChannel]\r\n    );\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }\r\n\r\n    const handleAudioTrackSelected = useCallback(\r\n        (id) => {\r\n            if (playingRef.current) {\r\n                clock.stop();\r\n                playerChannel.pause();\r\n            }\r\n\r\n            selectAudioTrack(id);\r\n            setSelectedAudioTrack(id);\r\n            playerChannel.currentTime = 0;\r\n            playerChannel.audioTrackSelected(id);\r\n        },\r\n        [playerChannel, clock]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({ ...s, index: i });\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50);\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback(\r\n        (offset) => {\r\n            setOffset(offset);\r\n            setSubtitles((subtitles) =>\r\n                subtitles.map((s) => ({\r\n                    text: s.text,\r\n                    start: s.originalStart + offset,\r\n                    originalStart: s.originalStart,\r\n                    end: s.originalEnd + offset,\r\n                    originalEnd: s.originalEnd,\r\n                    track: s.track,\r\n                }))\r\n            );\r\n            playerChannel.offset(offset);\r\n        },\r\n        [playerChannel]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(\r\n        (index) => {\r\n            return surroundingSubtitles(\r\n                subtitles,\r\n                index,\r\n                settingsProvider.surroundingSubtitlesCountRadius,\r\n                settingsProvider.surroundingSubtitlesTimeRadius\r\n            );\r\n        },\r\n        [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const noSubtitles = !subtitles || subtitles.length === 0;\r\n\r\n                playerChannel.copy(\r\n                    subtitle,\r\n                    noSubtitles\r\n                        ? mockSurroundingSubtitles(subtitle, length, 5000)\r\n                        : calculateSurroundingSubtitles(subtitle.index)\r\n                );\r\n\r\n                if (fullscreen) {\r\n                    setAlert(\r\n                        subtitle.text === ''\r\n                            ? `Saved ${humanReadableTime(subtitle.start)}`\r\n                            : `Copied: \"${subtitle.text}\"`\r\n                    );\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n\r\n                    return {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n                }\r\n\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, clock, length, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled((enabled) => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks((tracks) => {\r\n                    const newTracks = { ...tracks };\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (!subtitles || subtitles.length === 0) {\r\n                    const timestamp = clock.time(length);\r\n                    const subtitle = {\r\n                        text: '',\r\n                        start: timestamp,\r\n                        end: Math.min(timestamp + 5000, length),\r\n                        track: 0,\r\n                    };\r\n\r\n                    playerChannel.copy(subtitle, mockSurroundingSubtitles(subtitle, length, 5000), false);\r\n                } else if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, clock, length, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled((subtitlesEnabled) => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily,\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () =>\r\n            makeSubtitleStyles({\r\n                subtitleSize,\r\n                subtitleColor,\r\n                subtitleOutlineThickness,\r\n                subtitleOutlineColor,\r\n                subtitleBackgroundColor,\r\n                subtitleBackgroundOpacity,\r\n                subtitleFontFamily,\r\n            }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div ref={containerRef} onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile}\r\n            />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map((s) => (\r\n                        <React.Fragment key={s.index}>\r\n                            {s.text}\r\n                            <br />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from 'react-router-dom';\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image, humanReadableTime } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider.js';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = '0.17.0';\r\nconst extensionUrl = 'https://github.com/killergerbah/asbplayer/releases/latest';\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    contentShift: ({ drawerWidth }) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf('.');\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case 'ass':\r\n            case 'srt':\r\n            case 'vtt':\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case 'mkv':\r\n            case 'mp4':\r\n            case 'avi':\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case 'mp3':\r\n            case 'm4a':\r\n            case 'aac':\r\n            case 'flac':\r\n            case 'ogg':\r\n            case 'wav':\r\n            case 'opus':\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported extension ' + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error('Cannot load both an audio and video file simultaneously');\r\n    }\r\n\r\n    return { subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile };\r\n}\r\n\r\nfunction audioClipFromItem(item, sliderContext, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        const start = item.audio.start ?? item.start;\r\n        const end = item.audio.end ?? item.end;\r\n\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, start - (item.audio.paddingStart ?? 0)),\r\n            end + (item.audio.paddingEnd ?? 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(item.subtitleFile.name, item.start, item.image.base64, item.image.extension);\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(item.videoFile, item.start, maxWidth, maxHeight);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction itemSourceString(item) {\r\n    const source = item?.subtitleFile?.name ?? item?.audioFile?.name ?? item?.videoFile?.name;\r\n\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    return `${source} (${humanReadableTime(item.start)})`;\r\n}\r\n\r\nfunction itemSliderContext(item) {\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [\r\n            { start: item.start, end: item.end, text: item.text, track: item.track },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    primary: {\r\n                        main: '#49007a',\r\n                    },\r\n                    secondary: {\r\n                        main: '#ff1f62',\r\n                    },\r\n                    error: {\r\n                        main: red.A400,\r\n                    },\r\n                    type: settingsProvider.themeType,\r\n                },\r\n            }),\r\n        [settingsProvider.themeType]\r\n    );\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? 0.2 : 0.3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({ subtitleFiles: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogItemSliderContext = useMemo(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            audioClipFromItem(\r\n                ankiDialogItem,\r\n                ankiDialogItemSliderContext,\r\n                settingsProvider.audioPaddingStart,\r\n                settingsProvider.audioPaddingEnd\r\n            ),\r\n        [\r\n            ankiDialogItem,\r\n            ankiDialogItemSliderContext,\r\n            settingsProvider.audioPaddingStart,\r\n            settingsProvider.audioPaddingEnd,\r\n        ]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () =>\r\n            ankiDialogItem &&\r\n            imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({ timestamp: 0, resume: false });\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const { subtitleFiles } = sources;\r\n\r\n    const handleCopy = useCallback(\r\n        (\r\n            subtitle,\r\n            surroundingSubtitles,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            audioTrack,\r\n            audio,\r\n            image,\r\n            url,\r\n            preventDuplicate,\r\n            id\r\n        ) => {\r\n            if (subtitle) {\r\n                navigator.clipboard.writeText(subtitle.text);\r\n            }\r\n\r\n            setCopiedSubtitles((copiedSubtitles) => {\r\n                if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                    const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                    if (\r\n                        subtitle.start === last.start &&\r\n                        subtitle.end === last.end &&\r\n                        subtitle.text === last.text &&\r\n                        subtitleFile.name === last.subtitleFile.name\r\n                    ) {\r\n                        return copiedSubtitles;\r\n                    }\r\n                }\r\n\r\n                const newCopiedSubtitles = [];\r\n                let updated = false;\r\n\r\n                for (const copiedSubtitle of copiedSubtitles) {\r\n                    if (id && copiedSubtitle.id === id) {\r\n                        const newCopiedSubtitle = {\r\n                            ...copiedSubtitle,\r\n                            ...subtitle,\r\n                            ...(surroundingSubtitles && { surroundingSubtitles: surroundingSubtitles }),\r\n                            ...(subtitleFile && { subtitleFile: subtitleFile }),\r\n                            ...(audioFile && { audioFile: audioFile }),\r\n                            ...(videoFile && { videoFile: videoFile }),\r\n                            ...(audioTrack && { audioTrack: audioTrack }),\r\n                            ...(audio && { audio: audio }),\r\n                            ...(image && { image: image }),\r\n                            ...(url && { url: url }),\r\n                        };\r\n                        newCopiedSubtitles.push(newCopiedSubtitle);\r\n                        updated = true;\r\n                    } else {\r\n                        newCopiedSubtitles.push(copiedSubtitle);\r\n                    }\r\n                }\r\n\r\n                if (!updated) {\r\n                    newCopiedSubtitles.push({\r\n                        ...subtitle,\r\n                        surroundingSubtitles: surroundingSubtitles,\r\n                        timestamp: Date.now(),\r\n                        id: id || uuidv4(),\r\n                        name: fileName,\r\n                        subtitleFile: subtitleFile,\r\n                        audioFile: audioFile,\r\n                        videoFile: videoFile,\r\n                        audioTrack: audioTrack,\r\n                        audio: audio,\r\n                        image: image,\r\n                        url: url,\r\n                    });\r\n                }\r\n\r\n                return newCopiedSubtitles;\r\n            });\r\n\r\n            if (subtitle) {\r\n                setAlertSeverity('success');\r\n                setAlert(\r\n                    subtitle.text === '' ? `Saved ${humanReadableTime(subtitle.start)}` : `Copied: \"${subtitle.text}\"`\r\n                );\r\n                setAlertOpen(true);\r\n            }\r\n        },\r\n        [fileName]\r\n    );\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen((copyHistoryOpen) => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback(\r\n        (newSettings) => {\r\n            settingsProvider.settings = newSettings;\r\n            setSettingsDialogOpen(false);\r\n            setDisableKeyEvents(false);\r\n            extension.publishMessage({ command: 'subtitleSettings', value: settingsProvider.subtitleSettings });\r\n            extension.publishMessage({ command: 'ankiSettings', value: settingsProvider.ankiSettings });\r\n            extension.publishMessage({ command: 'miscSettings', value: settingsProvider.miscSettings });\r\n        },\r\n        [extension, settingsProvider]\r\n    );\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            const newCopiedSubtitles = [];\r\n\r\n            for (let subtitle of copiedSubtitles) {\r\n                if (item.id !== subtitle.id) {\r\n                    newCopiedSubtitles.push(subtitle);\r\n                }\r\n            }\r\n\r\n            setCopiedSubtitles(newCopiedSubtitles);\r\n        },\r\n        [copiedSubtitles]\r\n    );\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity('error');\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(\r\n        (audioFileUrl) => {\r\n            if (audioFileUrl !== sources.audioFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(audioFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: previous.videoFile,\r\n                    videoFileUrl: previous.videoFileUrl,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleUnloadVideo = useCallback(\r\n        (videoFileUrl) => {\r\n            if (videoFileUrl !== sources.videoFileUrl) {\r\n                return;\r\n            }\r\n\r\n            setSources((previous) => {\r\n                URL.revokeObjectURL(videoFileUrl);\r\n\r\n                return {\r\n                    subtitleFiles: previous.subtitleFiles,\r\n                    audioFile: previous.audioFile,\r\n                    audioFileUrl: previous.audioFileUrl,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                };\r\n            });\r\n        },\r\n        [sources]\r\n    );\r\n\r\n    const handleClipAudio = useCallback(\r\n        async (item) => {\r\n            try {\r\n                const clip = await audioClipFromItem(\r\n                    item,\r\n                    null,\r\n                    settingsProvider.audioPaddingStart,\r\n                    settingsProvider.audioPaddingEnd\r\n                );\r\n\r\n                if (settingsProvider.preferMp3) {\r\n                    clip.toMp3().download();\r\n                } else {\r\n                    clip.download();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError, settingsProvider]\r\n    );\r\n\r\n    const handleDownloadImage = useCallback(\r\n        async (item) => {\r\n            try {\r\n                await imageFromItem(item).download();\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    const handleSelectCopyHistoryItem = useCallback(\r\n        (item) => {\r\n            if (subtitleFiles.filter((f) => f.name === item.subtitleFile.name).length === 0) {\r\n                handleError('Subtitle file ' + item.subtitleFile.name + ' is not open.');\r\n                return;\r\n            }\r\n\r\n            setJumpToSubtitle({ text: item.text, originalStart: item.originalStart });\r\n        },\r\n        [subtitleFiles, handleError]\r\n    );\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(\r\n        async (text, definition, audioClip, image, word, source, url, customFieldValues, tags, mode) => {\r\n            setAnkiDialogDisabled(true);\r\n\r\n            try {\r\n                const result = await anki.export(\r\n                    text,\r\n                    definition,\r\n                    audioClip,\r\n                    image,\r\n                    word,\r\n                    source,\r\n                    url,\r\n                    customFieldValues,\r\n                    tags,\r\n                    mode\r\n                );\r\n\r\n                if (mode !== 'gui') {\r\n                    if (mode === 'default') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Export succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    } else if (mode === 'updateLast') {\r\n                        setAlertSeverity('success');\r\n                        setAlert('Update succeeded: ' + result);\r\n                        setAlertOpen(true);\r\n                    }\r\n\r\n                    setAnkiDialogOpen(false);\r\n\r\n                    if (ankiDialogRequested) {\r\n                        setAnkiDialogFinishedRequest({ timestamp: Date.now(), resume: true });\r\n                        setAnkiDialogRequested(false);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            } finally {\r\n                setAnkiDialogDisabled(false);\r\n                setDisableKeyEvents(false);\r\n            }\r\n        },\r\n        [anki, handleError, ankiDialogRequested]\r\n    );\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id || t1.title !== t2.title || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter((t) => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback(\r\n        (files) => {\r\n            try {\r\n                let { subtitleFiles, audioFile, videoFile } = extractSources(files);\r\n\r\n                setSources((previous) => {\r\n                    setLoading(true);\r\n\r\n                    let videoFileUrl = null;\r\n                    let audioFileUrl = null;\r\n\r\n                    if (videoFile || audioFile) {\r\n                        revokeUrls(previous);\r\n\r\n                        if (videoFile) {\r\n                            videoFileUrl = URL.createObjectURL(videoFile);\r\n                        } else if (audioFile) {\r\n                            audioFileUrl = URL.createObjectURL(audioFile);\r\n                        }\r\n\r\n                        setTab(null);\r\n                    } else {\r\n                        videoFile = previous.videoFile;\r\n                        videoFileUrl = previous.videoFileUrl;\r\n                        audioFile = previous.audioFile;\r\n                        audioFileUrl = previous.audioFileUrl;\r\n                    }\r\n\r\n                    const sources = {\r\n                        subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                        audioFile: audioFile,\r\n                        audioFileUrl: audioFileUrl,\r\n                        videoFile: videoFile,\r\n                        videoFileUrl: videoFileUrl,\r\n                    };\r\n\r\n                    return sources;\r\n                });\r\n\r\n                if (subtitleFiles.length > 0) {\r\n                    const subtitleFileName = subtitleFiles[0].name;\r\n                    setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                handleError(e.message);\r\n            }\r\n        },\r\n        [handleError]\r\n    );\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter((t) => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' +\r\n                                message.tabId +\r\n                                ' with src ' +\r\n                                message.src +\r\n                                ' was not found'\r\n                        );\r\n                    } else {\r\n                        console.error(\r\n                            'Received sync request but the requesting tab ID ' + message.tabId + ' was not found'\r\n                        );\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [\r\n                        new File(\r\n                            [await (await fetch('data:text/plain;base64,' + message.data.subtitles.base64)).blob()],\r\n                            message.data.subtitles.name\r\n                        ),\r\n                    ];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(\r\n                        message.data.subtitles.map(\r\n                            async (s) =>\r\n                                new File([await (await fetch('data:text/plain;base64,' + s.base64)).blob()], s.name)\r\n                        )\r\n                    );\r\n                }\r\n\r\n                const subtitleFileName = subtitleFiles[0].name;\r\n                setFileName(subtitleFileName.substring(0, subtitleFileName.lastIndexOf('.')));\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null,\r\n                });\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n\r\n            if (inVideoPlayer) {\r\n                handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n                return;\r\n            }\r\n\r\n            setDragging(false);\r\n            dragEnterRef.current = null;\r\n\r\n            if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n                return;\r\n            }\r\n\r\n            handleFiles(e.dataTransfer.files);\r\n        },\r\n        [inVideoPlayer, handleError, handleFiles]\r\n    );\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer) {\r\n                dragEnterRef.current = e.target;\r\n                setDragging(true);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleDragLeave = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n                setDragging(false);\r\n            }\r\n        },\r\n        [inVideoPlayer]\r\n    );\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded =\r\n        (loading && !videoFrameRef.current) ||\r\n        (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert open={alertOpen} onClose={handleAlertClosed} autoHideDuration={3000} severity={alertSeverity}>\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout');\r\n\r\n                            if (videoFile && channel) {\r\n                                return (\r\n                                    <Redirect\r\n                                        to={\r\n                                            '/video?video=' +\r\n                                            encodeURIComponent(videoFile) +\r\n                                            '&channel=' +\r\n                                            channel +\r\n                                            '&popout=' +\r\n                                            popOut\r\n                                        }\r\n                                    />\r\n                                );\r\n                            }\r\n\r\n                            return (\r\n                                <div>\r\n                                    <CopyHistory\r\n                                        items={copiedSubtitles}\r\n                                        open={copyHistoryOpen}\r\n                                        drawerWidth={drawerWidth}\r\n                                        onClose={handleCloseCopyHistory}\r\n                                        onDelete={handleDeleteCopyHistoryItem}\r\n                                        onClipAudio={handleClipAudio}\r\n                                        onDownloadImage={handleDownloadImage}\r\n                                        onSelect={handleSelectCopyHistoryItem}\r\n                                        onAnki={handleAnki}\r\n                                    />\r\n                                    <AnkiDialog\r\n                                        open={ankiDialogOpen}\r\n                                        disabled={ankiDialogDisabled}\r\n                                        text={ankiDialogItem?.text}\r\n                                        audioClip={ankiDialogAudioClip}\r\n                                        image={ankiDialogImage}\r\n                                        source={itemSourceString(ankiDialogItem)}\r\n                                        url={ankiDialogItem?.url}\r\n                                        sliderContext={ankiDialogItemSliderContext}\r\n                                        customFields={settingsProvider.customAnkiFields}\r\n                                        anki={anki}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCancel={handleAnkiDialogCancel}\r\n                                        onProceed={handleAnkiDialogProceed}\r\n                                        onViewImage={handleViewImage}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                    />\r\n                                    <ImageDialog\r\n                                        open={imageDialogOpen}\r\n                                        image={image}\r\n                                        onClose={handleImageDialogClosed}\r\n                                    />\r\n                                    <SettingsDialog\r\n                                        anki={anki}\r\n                                        open={settingsDialogOpen}\r\n                                        onClose={handleCloseSettings}\r\n                                        settings={settingsProvider.settings}\r\n                                    />\r\n                                    <HelpDialog\r\n                                        open={helpDialogOpen}\r\n                                        extensionUrl={extensionUrl}\r\n                                        onClose={handleCloseHelp}\r\n                                    />\r\n                                    <Bar\r\n                                        title={fileName || 'asbplayer'}\r\n                                        drawerWidth={drawerWidth}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        onOpenCopyHistory={handleOpenCopyHistory}\r\n                                        onOpenSettings={handleOpenSettings}\r\n                                        onOpenHelp={handleOpenHelp}\r\n                                        onFileSelector={handleFileSelector}\r\n                                    />\r\n                                    <input\r\n                                        ref={fileInputRef}\r\n                                        onChange={handleFileInputChange}\r\n                                        type=\"file\"\r\n                                        accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                        multiple\r\n                                        hidden\r\n                                    />\r\n                                    <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                        {nothingLoaded && (\r\n                                            <LandingPage\r\n                                                latestExtensionVersion={latestExtensionVersion}\r\n                                                extensionUrl={extensionUrl}\r\n                                                extension={extension}\r\n                                                loading={loading}\r\n                                                dragging={dragging}\r\n                                                onFileSelector={handleFileSelector}\r\n                                            />\r\n                                        )}\r\n                                        <DragOverlay dragging={dragging} loading={loading} />\r\n                                        <Player\r\n                                            subtitleReader={subtitleReader}\r\n                                            settingsProvider={settingsProvider}\r\n                                            onCopy={handleCopy}\r\n                                            onError={handleError}\r\n                                            onUnloadAudio={handleUnloadAudio}\r\n                                            onUnloadVideo={handleUnloadVideo}\r\n                                            onLoaded={handleSourcesLoaded}\r\n                                            onTabSelected={handleTabSelected}\r\n                                            onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                            tab={tab}\r\n                                            availableTabs={availableTabs}\r\n                                            sources={sources}\r\n                                            jumpToSubtitle={jumpToSubtitle}\r\n                                            videoFrameRef={videoFrameRef}\r\n                                            extension={extension}\r\n                                            drawerOpen={copyHistoryOpen}\r\n                                            disableKeyEvents={disableKeyEvents}\r\n                                            ankiDialogRequested={ankiDialogRequested}\r\n                                            ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                            ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                        />\r\n                                    </Content>\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/video\"\r\n                        render={() => {\r\n                            const params = new URLSearchParams(window.location.search);\r\n                            const videoFile = params.get('video');\r\n                            const channel = params.get('channel');\r\n                            const popOut = params.get('popout') === 'true';\r\n\r\n                            return (\r\n                                <VideoPlayer\r\n                                    settingsProvider={settingsProvider}\r\n                                    videoFile={videoFile}\r\n                                    popOut={popOut}\r\n                                    channel={channel}\r\n                                    onError={handleError}\r\n                                />\r\n                            );\r\n                        }}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import '@fontsource/roboto';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}