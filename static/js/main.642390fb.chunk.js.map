{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeySequence.js","../../common/src/KeySequences.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/CanvasResizer.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","../../common/src/Util.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/Util.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeySequence","up","holding","canceledBy","map","this","currentlyHolding","canceled","result","extra","type","includes","_holdingAll","KeySequences","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bindDown","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","onSequenceAdvanced","sequence","toggleSubtitles","handler","reset","transition","accept","ADVANCED","COMPLETE","unbindDown","unbindUp","_bindUp","onToggleSubtitleTrack","toggleSubtitleTrack","onToggleSubtitleTrackInList","toggleSubtitleTrackInList","onPlay","detectPlay","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","baseName","base64","extension","name","floor","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","slice","isSliceable","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","substring","lastIndexOf","CanvasResizer","canvas","ctx","maxWidth","maxHeight","widthRatio","width","heightRatio","height","ratio","min","newWidth","newHeight","createImageBitmap","resizeWidth","resizeHeight","then","sprite","drawImage","catch","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","dataUrl","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","resizer","resize","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","specialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","action","version","error","surroundingSubtitles","index","countRadius","timeRadius","startIndex","endIndex","atBoundary","initialIndex","sign","next","abs","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","rangeSelectSlider","transform","sliderMarksFromSliderContext","sliderContext","boundary","seenTimestamps","label","trim","mark","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","initialSource","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","setSource","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","timestampInterval","setTimestampInterval","initialTimestampInterval","setInitialTimestampInterval","initialTimestampBoundaryInterval","setInitialTimestampBoundaryInterval","timestampBoundaryInterval","setTimestampBoundaryInterval","timestampMarks","setTimestampMarks","lastAppliedTimestampIntervalToText","setLastAppliedTimestampIntervalToText","lastAppliedTimestampIntervalToAudio","setLastAppliedTimestampIntervalToAudio","setAudioClip","subtitleEnd","boundaryIntervalFromSliderContext","newAudioClip","preferMp3","toMp3","round","audioPaddingStart","audioPaddingEnd","Date","trimmedWord","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleTimestampIntervalChange","handleApplyTimestampIntervalToText","intersectingSubtitles","handleApplyTimestampIntervalToAudio","handleResetTimestampInterval","handleZoomInTimestampInterval","newTimestampBoundaryInterval","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","onChange","InputProps","endAdornment","InputAdornment","Tooltip","rows","helperText","findNotesWithWordGui","Grid","container","direction","item","Slider","marks","step","valueLabelDisplay","marginTop","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","img","fetchImage","Card","CardMedia","SubtitleReader","files","all","f","_subtitles","flatMap","nodes","n1","n2","track","endsWith","parseSrt","node","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","startTime","endTime","parse","flush","parseAss","events","dialogue","Start","End","Text","combined","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","hex","exec","r","parseInt","g","b","hexToRgb","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","disabledSubtitle","disabledBackground","copyButton","SubtitleRow","React","memo","subtitleRef","tableRowProps","textRef","textSelected","setTextSelected","disabledClassName","onMouseUp","selection","getSelection","isSameNode","anchorNode","parentNode","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","disabledSubtitleTracks","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","calculateSurroundingSubtitlesForIndex","surroundingSubtitlesCountRadius","surroundingSubtitlesTimeRadius","calculateSurroundingSubtitles","bindCopy","subtitleIndexes","bindToggleSubtitleTrackInList","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","toggleSubtitleTrackInListCallbacks","paused","echo","preventDuplicate","forwardToVideo","subtitleFileNames","names","settings","resume","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFiles","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setDisabledSubtitleTracks","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","miscSettings","condensedModeToggle","onOffset","onCurrentTime","tracks","newTracks","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","handleToggleSubtitleTrack","bindPlay","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","subtitleSetting","subtitlePreview","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setAudioPaddingStart","setAudioPaddingEnd","maxImageWidth","setMaxImageWidth","maxImageHeight","setMaxImageHeight","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleAudioPaddingStart","handleAudioPaddingEnd","handleMaxImageWidth","handleMaxImageHeight","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","requestPermission","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","audioPaddingStartKey","audioPaddingEndKey","maxImageWidthKey","maxImageHeightKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","bindToggleSubtitleTrackInVideo","currentSubtitle","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleDoubleClick","handleAlertClosed","subtitleStyles","nocontrols","onDoubleClick","isMobile","useContentStyles","contentShift","audioClipFromItem","paddingStart","paddingEnd","fromBase64","subtitleFile","fromFile","audioTrack","imageFromItem","itemSourceString","totalSeconds","hours","humanReadableTime","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogItemSliderContext","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","newCopiedSubtitles","updated","newCopiedSubtitle","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.642390fb.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && (event.ctrlKey || event.shiftKey) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectPlay(event) {\r\n        // Space\r\n        return event.keyCode === 32;\r\n    }\r\n}\r\n","const REJECTED = 0;\r\nconst CANCELED = 1;\r\nconst ADVANCED = 2;\r\nconst COMPLETE = 3;\r\n\r\nexport default class KeySequence {\r\n\r\n    constructor({up, holding, canceledBy, map}) {\r\n        this.up = up || [];\r\n        this.holding = holding || [];\r\n        this.canceledBy = canceledBy || [];\r\n        this.map = map || (() => true);\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    static get REJECTED() {\r\n        return REJECTED;\r\n    }\r\n\r\n    static get CANCELED() {\r\n        return CANCELED;\r\n    }\r\n\r\n    static get ADVANCED() {\r\n        return ADVANCED;\r\n    }\r\n\r\n    static get COMPLETE() {\r\n        return COMPLETE;\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyHolding = {};\r\n        this.canceled = false;\r\n    }\r\n\r\n    accept(event) {\r\n        let result = REJECTED;\r\n        let extra = null;\r\n\r\n        if (event.type === 'keydown') {\r\n            if (this.holding.includes(event.keyCode)) {\r\n                this.currentlyHolding[event.keyCode] = true;\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n\r\n            if (this.canceledBy.includes(event.keyCode)) {\r\n                this.canceled = true;\r\n                result = CANCELED;\r\n            }\r\n\r\n            if (this.up.includes(event.keyCode)) {\r\n                this.canceled = false;\r\n                result = ADVANCED;\r\n            }\r\n        }\r\n\r\n        if (event.type === 'keyup') {\r\n            delete this.currentlyHolding[event.keyCode];\r\n\r\n            if (this.up.includes(event.keyCode) && this._holdingAll() && !this.canceled) {\r\n                extra = this.map(event);\r\n                result = COMPLETE;\r\n            }\r\n        }\r\n\r\n        return {result: result, extra: extra};\r\n    }\r\n\r\n    _holdingAll() {\r\n        for (const key of this.holding) {\r\n            if (!(key in this.currentlyHolding)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}","import KeySequence from './KeySequence';\r\n\r\nexport default class KeySequences {\r\n\r\n    static toggleSubtitles() {\r\n        // Up S, canceled by 1...9\r\n        return new KeySequence({up: [83], canceledBy: [49, 50, 51, 52, 53, 54, 55, 56, 57]});\r\n    }\r\n\r\n    static toggleSubtitleTrack() {\r\n        // Holding S, up 1...9\r\n        return new KeySequence({holding: [83], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n\r\n    static toggleSubtitleTrackInList() {\r\n        // Holding D, up 1...9\r\n        return new KeySequence({holding: [68], up: [49, 50, 51, 52, 53, 54, 55, 56, 57], map: (event) => event.keyCode - 49});\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\nimport KeySequence from './KeySequence';\r\nimport KeySequences from './KeySequences';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitles();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitles(event);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInVideo(onToggleSubtitleTrack, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrack();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrack(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindToggleSubtitleTrackInList(onToggleSubtitleTrackInList, onSequenceAdvanced, disabledGetter, useCapture = false) {\r\n        const sequence = KeySequences.toggleSubtitleTrackInList();\r\n        const handler = (event) => {\r\n            if (disabledGetter()) {\r\n                sequence.reset();\r\n                return;\r\n            }\r\n\r\n            const transition = sequence.accept(event);\r\n\r\n            if (transition.result === KeySequence.ADVANCED) {\r\n                onSequenceAdvanced();\r\n            } else if (transition.result === KeySequence.COMPLETE) {\r\n                onToggleSubtitleTrackInList(event, transition.extra);\r\n            }\r\n        };\r\n        const unbindDown = KeyBindings._bindDown(handler, useCapture);\r\n        const unbindUp = KeyBindings._bindUp(handler, useCapture);\r\n\r\n        return () => {\r\n            unbindDown();\r\n            unbindUp();\r\n        };\r\n    }\r\n\r\n    static bindPlay(onPlay, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bindDown((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectPlay(event)) {\r\n                return;\r\n            }\r\n\r\n            onPlay(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bindDown(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n\r\n    static _bindUp(handler, useCapture) {\r\n        window.addEventListener('keyup', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keyup', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(baseName, start, end, base64, extension) {\r\n        this.name = baseName + \"_\" + Math.floor(start) + \"_\" + Math.floor(end);\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        // Not supported\r\n        return this;\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new FileAudioData(this.file, start, end, this.trackId);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return true;\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new Mp3AudioData(this.data.slice(start, end), this.workerFactory);\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        return new AudioClip(new Base64AudioData(subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")), start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n\r\n    slice(start, end) {\r\n        return new AudioClip(this.data.slice(start, end));\r\n    }\r\n\r\n    isSliceable(start, end) {\r\n        return this.data.isSliceable(start, end);\r\n    }\r\n}","export default class CanvasResizer {\r\n\r\n    resize(canvas, ctx, maxWidth, maxHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const widthRatio = maxWidth <= 0 ? 1 : maxWidth / canvas.width;\r\n            const heightRatio = maxHeight <= 0 ? 1 : maxHeight / canvas.height;\r\n            const ratio = Math.min(1, Math.min(widthRatio, heightRatio));\r\n\r\n            if (ratio < 1) {\r\n                const newWidth = canvas.width * ratio;\r\n                const newHeight = canvas.height * ratio;\r\n                createImageBitmap(canvas, {resizeWidth: newWidth, resizeHeight: newHeight})\r\n                    .then(sprite => {\r\n                        canvas.width = newWidth;\r\n                        canvas.height = newHeight;\r\n                        ctx.drawImage(sprite, 0, 0);\r\n                        resolve(canvas);\r\n                    })\r\n                    .catch((e) => reject(e));\r\n            } else {\r\n                resolve(canvas);\r\n            }\r\n        });\r\n    }\r\n}","import CanvasResizer from './CanvasResizer';\r\n\r\nclass Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp, maxWidth, maxHeight) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n        this.maxWidth = maxWidth;\r\n        this.maxHeight = maxHeight;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                if (this.maxWidth > 0 || this.maxHeight > 0) {\r\n                    const resizer = new CanvasResizer();\r\n                    await resizer.resize(canvas, ctx, this.maxWidth, this.maxHeight);\r\n                    resolve(canvas);\r\n                } else {\r\n                    resolve(canvas);\r\n                }\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp, maxWidth, maxHeight) {\r\n        return new Image(new FileImageData(file, timestamp, maxWidth, maxHeight));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async requestPermission(ankiConnectUrl) {\r\n        const response = await this._executeAction('requestPermission', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","export function humanReadableTime(timestamp) {\r\n    const totalSeconds = Math.floor(timestamp / 1000);\r\n    const seconds = totalSeconds % 60;\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n\r\n    if (hours > 0) {\r\n        return hours + \"h\" + String(minutes).padStart(2, '0') + \"m\" + String(seconds).padStart(2, '0') + \"s\";\r\n    }\r\n\r\n    return minutes + \"m\" + String(seconds).padStart(2, '0') + \"s\";\r\n}\r\n\r\nexport function surroundingSubtitles(subtitles, index, countRadius, timeRadius) {\r\n    let startIndex;\r\n    let endIndex;\r\n\r\n    for (let i = index; i >= 0; --i) {\r\n        startIndex = i;\r\n\r\n        if (atBoundary(subtitles, startIndex, index, countRadius, timeRadius, false)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    for (let i = index; i <= subtitles.length - 1; ++i) {\r\n        endIndex = i;\r\n\r\n        if (atBoundary(subtitles, endIndex, index, countRadius, timeRadius, true)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return subtitles.slice(startIndex, endIndex + 1);\r\n}\r\n\r\nfunction atBoundary(subtitles, index, initialIndex, countRadius, timeRadius, sign) {\r\n    let next;\r\n\r\n    if (sign) {\r\n        next = index + 1 < subtitles.length ? subtitles[index + 1] : null;\r\n    } else {\r\n        next = index - 1 >= 0 ? subtitles[index - 1] : null;\r\n    }\r\n\r\n    if (Math.abs(initialIndex - index) >= countRadius\r\n        && (next === null || Math.abs(next.start - subtitles[initialIndex].start) >= timeRadius)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    rangeSelectSlider: {\r\n        '& .MuiSlider-markLabel': {\r\n            transform: 'translateX(-3%)'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction boundaryIntervalFromSliderContext(sliderContext) {\r\n    let min = null;\r\n    let max = null;\r\n\r\n    for (const s of sliderContext.subtitles) {\r\n        if (min === null || s.start < min) {\r\n            min = s.start;\r\n        }\r\n\r\n        if (max === null || s.end > max) {\r\n            max = s.end;\r\n        }\r\n    }\r\n\r\n    return min && max && [min, max];\r\n}\r\n\r\nfunction sliderMarksFromSliderContext(sliderContext, boundary) {\r\n    const seenTimestamps = {};\r\n\r\n    return sliderContext.subtitles\r\n        .map((s) => {\r\n            if (s.start in seenTimestamps) {\r\n                return null;\r\n            }\r\n\r\n            seenTimestamps[s.start] = true;\r\n\r\n            return {\r\n                value: s.start,\r\n                label: `${s.text.trim().substring(0, Math.min(s.text.length, 3))}...`\r\n            };\r\n        })\r\n        .filter(mark => mark !== null)\r\n        .filter(mark => mark.value >= boundary[0] && mark.value <= boundary[1]);\r\n}\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source: initialSource,\r\n    sliderContext,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [source, setSource] = useState(initialSource);\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const [timestampInterval, setTimestampInterval] = useState();\r\n    const [initialTimestampInterval, setInitialTimestampInterval] = useState();\r\n    const [initialTimestampBoundaryInterval, setInitialTimestampBoundaryInterval] = useState();\r\n    const [timestampBoundaryInterval, setTimestampBoundaryInterval] = useState();\r\n    const [timestampMarks, setTimestampMarks] = useState();\r\n    const [lastAppliedTimestampIntervalToText, setLastAppliedTimestampIntervalToText] = useState();\r\n    const [lastAppliedTimestampIntervalToAudio, setLastAppliedTimestampIntervalToAudio] = useState();\r\n    const [audioClip, setAudioClip] = useState();\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setSource(initialSource);\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText, initialSource]);\r\n\r\n    useEffect(() => {\r\n        const timestampInterval = sliderContext && [sliderContext.subtitleStart, sliderContext.subtitleEnd];\r\n        const timestampBoundaryInterval = sliderContext && boundaryIntervalFromSliderContext(sliderContext);\r\n        setTimestampInterval(timestampInterval);\r\n        setInitialTimestampInterval(timestampInterval);\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n        setTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setInitialTimestampBoundaryInterval(timestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, timestampBoundaryInterval));\r\n    }, [sliderContext]);\r\n\r\n    useEffect(() => {\r\n        if (!initialAudioClip) {\r\n            setAudioClip(null);\r\n            return;\r\n        }\r\n\r\n        let newAudioClip = initialAudioClip;\r\n\r\n        if (settingsProvider.preferMp3) {\r\n            newAudioClip = newAudioClip.toMp3();\r\n        }\r\n\r\n        if (lastAppliedTimestampIntervalToAudio) {\r\n            newAudioClip = newAudioClip.slice(\r\n                Math.max(0, Math.round(lastAppliedTimestampIntervalToAudio[0]) - settingsProvider.audioPaddingStart),\r\n                Math.round(lastAppliedTimestampIntervalToAudio[1]) + settingsProvider.audioPaddingEnd\r\n            );\r\n        }\r\n\r\n        setAudioClip(newAudioClip);\r\n    }, [initialAudioClip, settingsProvider.preferMp3, lastAppliedTimestampIntervalToAudio, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleTimestampIntervalChange = useCallback((e, newValue) => {\r\n        setTimestampInterval(newValue);\r\n    }, []);\r\n\r\n    const handleApplyTimestampIntervalToText = useCallback(() => {\r\n        const intersectingSubtitles = [];\r\n\r\n        for (const s of sliderContext.subtitles) {\r\n            if ((s.start >= timestampInterval[0] && s.start <= timestampInterval[1])\r\n                || (s.end >= timestampInterval[0] && s.end <= timestampInterval[1])\r\n                || (timestampInterval[0] >= s.start && timestampInterval[0] <= s.end)\r\n                || (timestampInterval[1] >= s.start && timestampInterval[1] <= s.end)) {\r\n                    intersectingSubtitles.push(s.text);\r\n            }\r\n        }\r\n\r\n        setText(intersectingSubtitles.join(\"\\n\"));\r\n        setLastAppliedTimestampIntervalToText(timestampInterval);\r\n    }, [timestampInterval, sliderContext]);\r\n\r\n    const handleApplyTimestampIntervalToAudio = useCallback((e) => {\r\n        e.stopPropagation();\r\n        setLastAppliedTimestampIntervalToAudio(timestampInterval);\r\n    }, [timestampInterval]);\r\n\r\n    const handleResetTimestampInterval = useCallback(() => {\r\n        setTimestampInterval(initialTimestampInterval);\r\n        setTimestampBoundaryInterval(initialTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, initialTimestampBoundaryInterval));\r\n    }, [initialTimestampInterval, initialTimestampBoundaryInterval, sliderContext]);\r\n\r\n    const handleZoomInTimestampInterval = useCallback(() => {\r\n        const newMin = (timestampBoundaryInterval[0] + timestampInterval[0]) / 2;\r\n        const newMax = (timestampBoundaryInterval[1] + timestampInterval[1]) / 2;\r\n        const newTimestampBoundaryInterval = [newMin, newMax];\r\n        setTimestampBoundaryInterval(newTimestampBoundaryInterval);\r\n        setTimestampMarks(sliderContext && sliderMarksFromSliderContext(sliderContext, newTimestampBoundaryInterval));\r\n    }, [timestampBoundaryInterval, timestampInterval, sliderContext]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        InputProps={{\r\n                            endAdornment: timestampInterval && (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Apply Selection\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={timestampInterval[0] === lastAppliedTimestampIntervalToText[0]\r\n                                                    && timestampInterval[1] === lastAppliedTimestampIntervalToText[1]}\r\n                                                onClick={handleApplyTimestampIntervalToText}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <DoneIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Tooltip title=\"Search in Anki\">\r\n                                        <span>\r\n                                            <IconButton\r\n                                                disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                                onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                                edge=\"end\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            multiline\r\n                            rowsMax={8}\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                                InputProps={{\r\n                                    endAdornment: timestampInterval && (\r\n                                        <InputAdornment position=\"end\">\r\n                                            <Tooltip title=\"Apply Selection\">\r\n                                                <span>\r\n                                                    <IconButton\r\n                                                        disabled={(timestampInterval[0] === lastAppliedTimestampIntervalToAudio[0]\r\n                                                            && timestampInterval[1] === lastAppliedTimestampIntervalToAudio[1])\r\n                                                            || !audioClip.isSliceable(timestampInterval[0], timestampInterval[1])}\r\n                                                        onClick={handleApplyTimestampIntervalToAudio}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <DoneIcon />\r\n                                                    </IconButton>\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                        onChange={(e) => setSource(e.target.value)}\r\n                    />\r\n                    {timestampInterval && timestampBoundaryInterval && timestampMarks && (\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                                <Slider\r\n                                    value={timestampInterval}\r\n                                    onChange={handleTimestampIntervalChange}\r\n                                    min={timestampBoundaryInterval[0]}\r\n                                    max={timestampBoundaryInterval[1]}\r\n                                    marks={timestampMarks}\r\n                                    step={1}\r\n                                    valueLabelDisplay=\"off\"\r\n                                    className={classes.rangeSelectSlider}\r\n                                    color=\"secondary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Reset\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{marginTop: -8}}\r\n                                            onClick={handleResetTimestampInterval}\r\n                                        >\r\n                                            <RestoreIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Tooltip title=\"Zoom In\">\r\n                                    <span>\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            style={{marginTop: -8}}\r\n                                            onClick={handleZoomInTimestampInterval}\r\n                                        >\r\n                                            <ZoomInIcon />\r\n                                        </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.b54dc59d.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"350px 450px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass etc.\r\n                    </li>\r\n                    <li>\r\n                        Multiple subtitle files can loaded simultaneously. When multiple subtitle files are loaded,\r\n                        they can be toggled on and off in-video using S+1, S+2, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer and use the camera button in the bottom right.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Shift+X by default) to mine subtitles since that will include audio/screenshots.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>Synchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, open the Anki dialog during playback by using Ctrl+Shift+X.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, open the Anki dialog during playback by using Ctrl+Shift+Q.\r\n                        </li>\r\n                    </ul>\r\n                    <li>Asynchronous workflow:</li>\r\n                    <ul>\r\n                        <li>\r\n                            For synced streaming video, copy the current subtitle by using Ctrl+Shift+Z.\r\n                        </li>\r\n                        <li>\r\n                            For local file playback, copy the current subtitle by using Ctrl+Shift+A.\r\n                        </li>\r\n                        <li>\r\n                            <div className={classes.inlineIcon}>\r\n                                Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        For synced streaming video, an audio/image will only be available if an extension keyboard shortcut was used (Ctrl+Shift+X or Ctrl+Shift+Z by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S+1, S+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in video</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>D+1, D+2...</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitle track 1, 2... in asbplayer</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right or Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Common issues\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        asbplayer isn't detecting streaming video.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try refreshing both the asbplayer tab and the video in the other tab.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that in the extension details, the extension has access to all sites.\r\n                            A lot of video players are loaded inside of iframes, so it's difficult to\r\n                            list every single URL that the extension might need access to.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        The extension keyboard shortcuts aren't working.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Try uninstalling and reinstalling the extension and restarting Chrome.\r\n                        </li>\r\n                        <li>\r\n                            Make sure the extension isn't installed twice.\r\n                        </li>\r\n                        <li>\r\n\r\n                            Verify the keyboard shortcut is bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        asbplayer can't connect to Anki. It shows an error message e.g. 'Failed to fetch.'\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            If you're using Brave, make sure asbplayer isn't being blocked by Shield.\r\n                        </li>\r\n                        <li>\r\n                            Make sure that asbplayer is allowed by AnkiConnect, as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                        </li>\r\n                        <li>\r\n                            Check that your browser or an ad blocker isn't blocking the request. A good place to start is by opening your browser's developer console and looking for errors.\r\n                        </li>\r\n                    </ul>\r\n                    <li>\r\n                        When mining streaming video, asbplayer isn't including audio/screenshot in flashcards.\r\n                    </li>\r\n                    <ul>\r\n                        <li>\r\n                            Make sure you use an extension keyboard shortcut (Ctrl+Shift+X by default).\r\n                        </li>\r\n                    </ul>\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later and likely work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local file playback is supported only for codecs supported by the browser.\r\n                        The <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/animebook/animebook.github.io#video-format-support\">animebook</Link> readme has a detailed explanation of this and links\r\n                        to browsers that have good compatibility. Personally, I use Microsoft Edge and paid one dollar for HEVC support.\r\n                    </li>\r\n                    <li>\r\n                        Audio track selection for mkv files is available if experimental web platform features are enabled from chrome://flags.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(files) {\r\n        return (await Promise.all(files.map((f, i) => this._subtitles(f, i))))\r\n            .flatMap(nodes => nodes)\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n    }\r\n\r\n    async _subtitles(file, track) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => ({...node.data, track: track}));\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text,\r\n                            track: track\r\n                        }))\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined,\r\n                track: track\r\n            }));\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.id}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    disabledSubtitle: {\r\n        color: 'transparent',\r\n        backgroundColor: theme.palette.action.disabledBackground,\r\n        borderRadius: 5\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, disabled, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    const textRef = useRef();\r\n    const [textSelected, setTextSelected] = useState(false);\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n    let disabledClassName = disabled ? classes.disabledSubtitle : \"\";\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    function handleMouseUp(e) {\r\n        var selection = document.getSelection();\r\n        setTextSelected(\r\n            selection?.type === 'Range'\r\n            && textRef.current?.isSameNode(selection.anchorNode.parentNode)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => !textSelected && onClick(index)}\r\n            onMouseUp={handleMouseUp}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span ref={textRef} className={disabledClassName}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    onToggleSubtitleTrack,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    disabledSubtitleTracks,\r\n    settingsProvider\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const calculateSurroundingSubtitlesForIndex = useCallback((index) => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        return surroundingSubtitles(subtitles, index, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius);\r\n    }, [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback(() => {\r\n        if (!selectedSubtitleIndexesRef.current) {\r\n            return [];\r\n        }\r\n\r\n        const index = Math.min(Object.keys(selectedSubtitleIndexesRef.current));\r\n        return calculateSurroundingSubtitlesForIndex(index);\r\n    }, [calculateSurroundingSubtitlesForIndex]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, calculateSurroundingSubtitles(), false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, calculateSurroundingSubtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onToggleSubtitleTrack(track);\r\n            },\r\n            () => {},\r\n            () => disableKeyEvents,\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [disableKeyEvents, onToggleSubtitleTrack]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    const index = Math.min(...subtitleIndexes);\r\n                    onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles, calculateSurroundingSubtitlesForIndex]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], calculateSurroundingSubtitlesForIndex(index), false);\r\n    }, [subtitles, calculateSurroundingSubtitlesForIndex, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    disabled={disabledSubtitleTracks[s.track]}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.surroundingSubtitles, event.data.audio, event.data.image, event.data.preventDuplicate, event.data.id);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'syncv2':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                case 'toggleSubtitleTrackInList':\r\n                    for (const callback of that.toggleSubtitleTrackInListCallbacks) {\r\n                        callback(event.data.track);\r\n                    }\r\n                    break;\r\n                case 'playbackRate':\r\n                    // ignore for now\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onToggleSubtitleTrackInList(callback) {\r\n        this.toggleSubtitleTrackInListCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileNames) {\r\n        this.protocol.postMessage({\r\n            command: 'subtitles',\r\n            value: subtitles,\r\n            name: subtitleFileNames.length > 0 ? subtitleFileNames[0] : null,\r\n            names: subtitleFileNames\r\n        });\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest(resume) {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest', resume: resume});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    miscSettings(settings) {\r\n        this.protocol.postMessage({command: 'miscSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.toggleSubtitleTrackInListCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { KeyBindings } from '@project/common';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length),\r\n                track: s.track\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFiles.map(f => f.name));\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFiles]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFiles);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length),\r\n                        track: s.track\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFiles.map(f => f.name));\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.miscSettings(settingsProvider.miscSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, surroundingSubtitles, audio, image, preventDuplicate, id) => onCopy(\r\n                            subtitle,\r\n                            surroundingSubtitles,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitle ? subtitleFiles[subtitle.track] : null,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate,\r\n                            id\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n                        channel.onToggleSubtitleTrackInList((track) => setDisabledSubtitleTracks(tracks => {\r\n                            const newTracks = {...tracks};\r\n                            newTracks[track] = !tracks[track];\r\n                            return newTracks;\r\n                        }));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFiles, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest && ankiDialogFinishedRequest.timestamp > 0) {\r\n            videoRef.current?.finishedAnkiDialogRequest(ankiDialogFinishedRequest.resume);\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest && ankiDialogFinishedRequest.resume) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, surroundingSubtitles, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            surroundingSubtitles,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFiles[subtitle.track],\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate,\r\n            null\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFiles, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    const handleToggleSubtitleTrack = useCallback((track) => setDisabledSubtitleTracks(tracks => {\r\n        const newTracks = {...tracks};\r\n        newTracks[track] = !tracks[track];\r\n        return newTracks;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        if (tab) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek, tab]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    pause(clock, mediaAdapter, true);\r\n                } else {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n            },\r\n            () => disableKeyEvents\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, clock, mediaAdapter, disableKeyEvents]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            disabledSubtitleTracks={disabledSubtitleTracks}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                            onToggleSubtitleTrack={handleToggleSubtitleTrack}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [audioPaddingStart, setAudioPaddingStart] = useState(settings.audioPaddingStart);\r\n    const [audioPaddingEnd, setAudioPaddingEnd] = useState(settings.audioPaddingEnd);\r\n    const [maxImageWidth, setMaxImageWidth] = useState(settings.maxImageWidth);\r\n    const [maxImageHeight, setMaxImageHeight] = useState(settings.maxImageHeight);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleAudioPaddingStart = useCallback((e) => setAudioPaddingStart(e.target.value), []);\r\n    const handleAudioPaddingEnd = useCallback((e) => setAudioPaddingEnd(e.target.value), []);\r\n    const handleMaxImageWidth = useCallback((e) => setMaxImageWidth(e.target.value), []);\r\n    const handleMaxImageHeight = useCallback((e) => setMaxImageHeight(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                await anki.requestPermission(ankiConnectUrl);\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType,\r\n            audioPaddingStart: audioPaddingStart,\r\n            audioPaddingEnd: audioPaddingEnd,\r\n            maxImageWidth: maxImageWidth,\r\n            maxImageHeight: maxImageHeight,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType, audioPaddingStart, audioPaddingEnd, maxImageWidth, maxImageHeight]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding Start\"\r\n                                    fullWidth\r\n                                    value={audioPaddingStart}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingStart}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Audio Padding End\"\r\n                                    fullWidth\r\n                                    value={audioPaddingEnd}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAudioPaddingEnd}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: (<InputAdornment position=\"end\">ms</InputAdornment>)\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Width\"\r\n                                    fullWidth\r\n                                    value={maxImageWidth}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageWidth}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n\r\n                                />\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    label=\"Max Image Height\"\r\n                                    fullWidth\r\n                                    value={maxImageHeight}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleMaxImageHeight}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\nconst defaultAudioPaddingStart = 0;\r\nconst defaultAudioPaddingEnd = 500;\r\nconst defaultMaxImageWidth = 0;\r\nconst defaultMaxImageHeight = 0;\r\nconst defaultSurroundingSubtitlesCountRadius = 1;\r\nconst defaultSurroundingSubtitlesTimeRadius = 5000;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst audioPaddingStartKey = \"audioPaddingStart\";\r\nconst audioPaddingEndKey = \"audioPaddingEnd\";\r\nconst maxImageWidthKey = \"maxImageWidth\";\r\nconst maxImageHeightKey = \"maxImageHeight\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n        this.audioPaddingStart = newSettings.audioPaddingStart;\r\n        this.audioPaddingEnd = newSettings.audioPaddingEnd;\r\n        this.maxImageWidth = newSettings.maxImageWidth;\r\n        this.maxImageHeight = newSettings.maxImageHeight;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3,\r\n            audioPaddingStart: this.audioPaddingStart,\r\n            audioPaddingEnd: this.audioPaddingEnd,\r\n            maxImageWidth: this.maxImageWidth,\r\n            maxImageHeight: this.maxImageHeight,\r\n            surroundingSubtitlesCountRadius: this.surroundingSubtitlesCountRadius,\r\n            surroundingSubtitlesTimeRadius: this.surroundingSubtitlesTimeRadius,\r\n        };\r\n    }\r\n\r\n    get miscSettings() {\r\n        return {\r\n            themeType: this.themeType\r\n        }\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n\r\n    get audioPaddingStart() {\r\n        const value = localStorage.getItem(audioPaddingStartKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingStart;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingStart(audioPaddingStart) {\r\n        localStorage.setItem(audioPaddingStartKey, audioPaddingStart);\r\n    }\r\n\r\n    get audioPaddingEnd() {\r\n        const value = localStorage.getItem(audioPaddingEndKey);\r\n\r\n        if (!value) {\r\n            return defaultAudioPaddingEnd;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set audioPaddingEnd(audioPaddingEnd) {\r\n        localStorage.setItem(audioPaddingEndKey, audioPaddingEnd);\r\n    }\r\n\r\n    get maxImageWidth() {\r\n        const value = localStorage.getItem(maxImageWidthKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageWidth;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageWidth(maxImageWidth) {\r\n        localStorage.setItem(maxImageWidthKey, maxImageWidth);\r\n    }\r\n\r\n    get maxImageHeight() {\r\n        const value = localStorage.getItem(maxImageHeightKey);\r\n\r\n        if (!value) {\r\n            return defaultMaxImageHeight;\r\n        }\r\n\r\n        return Number(value);\r\n    }\r\n\r\n    set maxImageHeight(maxImageHeight) {\r\n        localStorage.setItem(maxImageHeightKey, maxImageHeight);\r\n    }\r\n\r\n    get surroundingSubtitlesCountRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesCountRadius;\r\n    }\r\n\r\n    get surroundingSubtitlesTimeRadius() {\r\n        // For now, not configurable\r\n        return defaultSurroundingSubtitlesTimeRadius;\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback(event.data.resume);\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'miscSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, surroundingSubtitles, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, surroundingSubtitles: surroundingSubtitles, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    toggleSubtitleTrackInList(track) {\r\n        this.channel?.postMessage({command: 'toggleSubtitleTrackInList', track: track});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings, surroundingSubtitles } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [disabledSubtitleTracks, setDisabledSubtitleTracks] = useState({});\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async (resume) => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                if (resume) {\r\n                    try {\r\n                        await containerRef.current?.requestFullscreen();\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            let showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end && !disabledSubtitleTracks[s.track]) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            showSubtitles = showSubtitles.sort((s1, s2) => s1.track - s2.track);\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 50)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, disabledSubtitleTracks, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            track: s.track\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    const calculateSurroundingSubtitles = useCallback((index) => {\r\n        return surroundingSubtitles(subtitles, index, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius);\r\n    }, [subtitles, settingsProvider.surroundingSubtitlesCountRadius, settingsProvider.surroundingSubtitlesTimeRadius]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle, calculateSurroundingSubtitles(subtitle.index));\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setSubtitlesEnabled(enabled => !enabled);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInVideo(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setDisabledSubtitleTracks(tracks => {\r\n                    const newTracks = {...tracks};\r\n                    newTracks[track] = !tracks[track];\r\n                    return newTracks;\r\n                });\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitleTrackInList(\r\n            (event, track) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                playerChannel.toggleSubtitleTrackInList(track);\r\n            },\r\n            () => {},\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    const currentSubtitle = showSubtitlesRef.current[0];\r\n                    playerChannel.copy(currentSubtitle, calculateSurroundingSubtitles(currentSubtitle.index), true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, calculateSurroundingSubtitles, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindPlay(\r\n            (event) => {\r\n                event.preventDefault();\r\n                \r\n                if (playing) {\r\n                    playerChannel.pause();\r\n                } else {\r\n                    playerChannel.play();\r\n                }\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playing, playerChannel]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleDoubleClick = useCallback(() => handleFullscreenToggle(), [handleFullscreenToggle]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\r\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\r\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { Anki, AudioClip, Image, humanReadableTime } from '@project/common';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport clsx from 'clsx';\r\nimport Alert from './Alert.js';\r\nimport AnkiDialog from './AnkiDialog.js';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DragOverlay from './DragOverlay.js';\r\nimport HelpDialog from './HelpDialog.js';\r\nimport ImageDialog from './ImageDialog.js';\r\nimport SubtitleReader from '../services/SubtitleReader.js';\r\nimport Bar from './Bar.js';\r\nimport ChromeExtension from '../services/ChromeExtension.js';\r\nimport CopyHistory from './CopyHistory.js';\r\nimport LandingPage from './LandingPage.js';\r\nimport Player from './Player.js';\r\nimport SettingsDialog from './SettingsDialog.js';\r\nimport SettingsProvider from '../services/SettingsProvider.js';\r\nimport VideoPlayer from './VideoPlayer.js';\r\n\r\nconst latestExtensionVersion = \"0.15.0\";\r\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\r\n\r\nconst useContentStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    contentShift: ({drawerWidth}) => ({\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth\r\n    }),\r\n}));\r\n\r\nfunction extractSources(files) {\r\n    let subtitleFiles = [];\r\n    let audioFile = null;\r\n    let videoFile = null;\r\n\r\n    for (const f of files) {\r\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\r\n\r\n        if (extensionStartIndex === -1) {\r\n            throw new Error('Unable to determine extension of ' + f.name);\r\n        }\r\n\r\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\r\n        switch (extension) {\r\n            case \"ass\":\r\n            case \"srt\":\r\n            case \"vtt\":\r\n                subtitleFiles.push(f);\r\n                break;\r\n            case \"mkv\":\r\n            case \"mp4\":\r\n            case \"avi\":\r\n                if (videoFile) {\r\n                    throw new Error('Cannot open two video files simultaneously');\r\n                }\r\n                videoFile = f;\r\n                break;\r\n            case \"mp3\":\r\n            case \"m4a\":\r\n            case \"aac\":\r\n            case \"flac\":\r\n            case \"ogg\":\r\n            case \"wav\":\r\n            case \"opus\":\r\n                if (audioFile) {\r\n                    throw new Error('Cannot open two audio files simultaneously');\r\n                }\r\n                audioFile = f;\r\n                break;\r\n            default:\r\n                throw new Error(\"Unsupported extension \" + extension);\r\n        }\r\n    }\r\n\r\n    if (videoFile && audioFile) {\r\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\r\n    }\r\n\r\n    return {subtitleFiles: subtitleFiles, audioFile: audioFile, videoFile: videoFile}\r\n}\r\n\r\nfunction audioClipFromItem(item, sliderContext, paddingStart, paddingEnd) {\r\n    if (item.audio) {\r\n        return AudioClip.fromBase64(\r\n            item.subtitleFile.name,\r\n            Math.max(0, item.start - (item.audio.paddingStart || 0)),\r\n            item.end + (item.audio.paddingEnd || 0),\r\n            item.audio.base64,\r\n            item.audio.extension\r\n        );\r\n    }\r\n\r\n    if (item.audioFile || item.videoFile) {\r\n        let start;\r\n        let end;\r\n\r\n        if (sliderContext) {\r\n            start = sliderContext.subtitleStart;\r\n            end = sliderContext.subtitleEnd;\r\n        } else {\r\n            start = item.start;\r\n            end = item.end;\r\n        }\r\n\r\n        return AudioClip.fromFile(\r\n            item.audioFile || item.videoFile,\r\n            Math.max(0, start - paddingStart),\r\n            end + paddingEnd,\r\n            item.audioTrack\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction imageFromItem(item, maxWidth, maxHeight) {\r\n    if (item.image) {\r\n        return Image.fromBase64(\r\n            item.subtitleFile.name,\r\n            item.start,\r\n            item.image.base64,\r\n            item.image.extension\r\n        );\r\n    }\r\n\r\n    if (item.videoFile) {\r\n        return Image.fromFile(\r\n            item.videoFile,\r\n            item.start,\r\n            maxWidth,\r\n            maxHeight\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction itemSourceString(item) {\r\n    if (!item?.subtitleFile?.name) {\r\n        return null;\r\n    }\r\n\r\n    return `${item.subtitleFile.name} (${humanReadableTime(item.start)})`\r\n}\r\n\r\nfunction itemSliderContext(item) {\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        subtitleStart: item.start,\r\n        subtitleEnd: item.end,\r\n        subtitles: item.surroundingSubtitles || [{start: item.start, end: item.end, text: item.text, track: item.track}]\r\n    };\r\n}\r\n\r\nfunction revokeUrls(sources) {\r\n    if (sources.audioFileUrl) {\r\n        URL.revokeObjectURL(sources.audioFileUrl);\r\n    }\r\n\r\n    if (sources.videoFileUrl) {\r\n        URL.revokeObjectURL(sources.videoFileUrl);\r\n    }\r\n}\r\n\r\nfunction Content(props) {\r\n    const classes = useContentStyles(props);\r\n\r\n    return (\r\n        <main\r\n            className={clsx(classes.content, {\r\n                [classes.contentShift]: props.drawerOpen,\r\n            })}>\r\n        {props.children}\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\r\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\r\n    const theme = useMemo(() => createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: '#49007a',\r\n            },\r\n            secondary: {\r\n                main: '#ff1f62',\r\n            },\r\n            error: {\r\n                main: red.A400,\r\n            },\r\n            type: settingsProvider.themeType,\r\n        }\r\n    }), [settingsProvider.themeType]);\r\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\r\n    const location = useLocation();\r\n    const inVideoPlayer = location.pathname === '/video';\r\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\r\n    const videoFrameRef = useRef();\r\n    const [width, ] = useWindowSize(!inVideoPlayer);\r\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\r\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\r\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\r\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\r\n    const copiedSubtitlesRef = useRef();\r\n    copiedSubtitlesRef.current = copiedSubtitles;\r\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [alertSeverity, setAlertSeverity] = useState();\r\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\r\n    const [sources, setSources] = useState({subtitleFiles: []});\r\n    const [loading, setLoading] = useState(false);\r\n    const [dragging, setDragging] = useState(false);\r\n    const dragEnterRef = useRef();\r\n    const [fileName, setFileName] = useState();\r\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\r\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\r\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\r\n    const ankiDialogItemSliderContext = useMemo(\r\n        () => ankiDialogItem && itemSliderContext(ankiDialogItem),\r\n        [ankiDialogItem]\r\n    );\r\n    const ankiDialogAudioClip = useMemo(\r\n        () => ankiDialogItem && audioClipFromItem(ankiDialogItem, ankiDialogItemSliderContext, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd),\r\n        [ankiDialogItem, ankiDialogItemSliderContext, settingsProvider.audioPaddingStart, settingsProvider.audioPaddingEnd]\r\n    );\r\n    const ankiDialogImage = useMemo(\r\n        () => ankiDialogItem && imageFromItem(ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight),\r\n        [ankiDialogItem, settingsProvider.maxImageWidth, settingsProvider.maxImageHeight]\r\n    );\r\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\r\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\r\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState({timestamp: 0, resume: false});\r\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\r\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\r\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\r\n    const [image, setImage] = useState();\r\n    const [tab, setTab] = useState();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const fileInputRef = useRef();\r\n    const {subtitleFiles} = sources;\r\n\r\n    const handleCopy = useCallback((subtitle, surroundingSubtitles, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate, id) => {\r\n        if (subtitle) {\r\n            navigator.clipboard.writeText(subtitle.text);\r\n        }\r\n\r\n        setCopiedSubtitles(copiedSubtitles => {\r\n            if (preventDuplicate && copiedSubtitles.length > 0) {\r\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\r\n\r\n                if (subtitle.start === last.start\r\n                    && subtitle.end === last.end\r\n                    && subtitle.text === last.text\r\n                    && subtitleFile.name === last.subtitleFile.name) {\r\n                        return copiedSubtitles;\r\n                    }\r\n            }\r\n\r\n            const newCopiedSubtitles = [];\r\n            let updated = false;\r\n\r\n            for (const s of copiedSubtitles) {\r\n                if (id && s.id === id) {\r\n                    const newCopiedSubtitle = {\r\n                        ...s,\r\n                        ...subtitle,\r\n                        ...(surroundingSubtitles && {surroundingSubtitles: surroundingSubtitles}),\r\n                        ...(subtitleFile && {subtitleFile: subtitleFile}),\r\n                        ...(audioFile && {audioFile: audioFile}),\r\n                        ...(videoFile && {videoFile: videoFile}),\r\n                        ...(audioTrack && {audioTrack: audioTrack}),\r\n                        ...(audio && {audio: audio}),\r\n                        ...(image && {image: image}),\r\n                    };\r\n                    newCopiedSubtitles.push(newCopiedSubtitle);\r\n                    updated = true;\r\n                } else {\r\n                    newCopiedSubtitles.push(s);\r\n                }\r\n            }\r\n\r\n            if (!updated) {\r\n                newCopiedSubtitles.push({\r\n                    ...subtitle,\r\n                    surroundingSubtitles: surroundingSubtitles,\r\n                    timestamp: Date.now(),\r\n                    id: id || uuidv4(),\r\n                    name: fileName,\r\n                    subtitleFile: subtitleFile,\r\n                    audioFile: audioFile,\r\n                    videoFile: videoFile,\r\n                    audioTrack: audioTrack,\r\n                    audio: audio,\r\n                    image: image,\r\n                });\r\n            }\r\n\r\n            return newCopiedSubtitles;\r\n        });\r\n\r\n        if (subtitle) {\r\n            setAlertSeverity(\"success\");\r\n            setAlert(`Copied: \"${subtitle.text}\"`);\r\n            setAlertOpen(true);\r\n        }\r\n    }, [fileName]);\r\n\r\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\r\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\r\n    const handleOpenSettings = useCallback(() => {\r\n        setDisableKeyEvents(true);\r\n        setSettingsDialogOpen(true);\r\n    }, []);\r\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\r\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\r\n    const handleCloseSettings = useCallback((newSettings) => {\r\n        settingsProvider.settings = newSettings;\r\n        setSettingsDialogOpen(false);\r\n        setDisableKeyEvents(false);\r\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\r\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\r\n        extension.publishMessage({command: 'miscSettings', value: settingsProvider.miscSettings});\r\n    }, [extension, settingsProvider]);\r\n\r\n    const handleDeleteCopyHistoryItem = useCallback(item => {\r\n        const newCopiedSubtitles = [];\r\n\r\n        for (let subtitle of copiedSubtitles) {\r\n            if (item.id !== subtitle.id) {\r\n                newCopiedSubtitles.push(subtitle);\r\n            }\r\n        }\r\n\r\n        setCopiedSubtitles(newCopiedSubtitles);\r\n    }, [copiedSubtitles]);\r\n\r\n    const handleError = useCallback((message) => {\r\n        setAlertSeverity(\"error\");\r\n        setAlert(message);\r\n        setAlertOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\r\n        if (audioFileUrl !== sources.audioFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(audioFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: null,\r\n                audioFileUrl: null,\r\n                videoFile: previous.videoFile,\r\n                videoFileUrl: previous.videoFileUrl\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\r\n        if (videoFileUrl !== sources.videoFileUrl) {\r\n            return;\r\n        }\r\n\r\n        setSources(previous => {\r\n            URL.revokeObjectURL(videoFileUrl);\r\n\r\n            return {\r\n                subtitleFiles: previous.subtitleFiles,\r\n                audioFile: previous.audioFile,\r\n                audioFileUrl: previous.audioFileUrl,\r\n                videoFile: null,\r\n                videoFileUrl: null\r\n            };\r\n        });\r\n    }, [sources]);\r\n\r\n    const handleClipAudio = useCallback(async (item) => {\r\n        try {\r\n            const clip = await audioClipFromItem(item);\r\n\r\n            if (settingsProvider.preferMp3) {\r\n                clip.toMp3().download();\r\n            } else {\r\n                clip.download();\r\n            }\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError, settingsProvider]);\r\n\r\n    const handleDownloadImage = useCallback(async (item) => {\r\n        try {\r\n            await imageFromItem(item).download();\r\n        } catch(e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    const handleSelectCopyHistoryItem = useCallback((item) => {\r\n        if (subtitleFiles.filter(f => f.name === item.subtitleFile.name).length === 0) {\r\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\r\n            return;\r\n        }\r\n\r\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\r\n    }, [subtitleFiles, handleError]);\r\n\r\n    const handleAnki = useCallback((item) => {\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n    }, []);\r\n\r\n    const handleAnkiDialogCancel = useCallback(() => {\r\n        setAnkiDialogOpen(false);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(false);\r\n\r\n        if (ankiDialogRequested) {\r\n            setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n            setAnkiDialogRequested(false);\r\n        }\r\n    }, [ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\r\n        setAnkiDialogDisabled(true);\r\n\r\n        try {\r\n            const result = await anki.export(\r\n                text,\r\n                definition,\r\n                audioClip,\r\n                image,\r\n                word,\r\n                source,\r\n                customFieldValues,\r\n                mode\r\n            );\r\n\r\n            if (mode !== 'gui') {\r\n                if (mode === 'default') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Export succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                } else if (mode === 'updateLast') {\r\n                    setAlertSeverity(\"success\");\r\n                    setAlert(\"Update succeeded: \" + result);\r\n                    setAlertOpen(true);\r\n                }\r\n\r\n                setAnkiDialogOpen(false);\r\n\r\n                if (ankiDialogRequested) {\r\n                    setAnkiDialogFinishedRequest({timestamp: Date.now(), resume: true});\r\n                    setAnkiDialogRequested(false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        } finally {\r\n            setAnkiDialogDisabled(false);\r\n            setDisableKeyEvents(false);\r\n        }\r\n    }, [anki, handleError, ankiDialogRequested]);\r\n\r\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\r\n        if (copiedSubtitlesRef.current.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\r\n        setAnkiDialogItem(item);\r\n        setAnkiDialogOpen(true);\r\n        setAnkiDialogDisabled(false);\r\n        setDisableKeyEvents(true);\r\n        setAnkiDialogRequested(true);\r\n\r\n        if (forwardToVideo) {\r\n            setAnkiDialogRequestToVideo(Date.now());\r\n        }\r\n    }, []);\r\n\r\n    const handleViewImage = useCallback((image) => {\r\n        setImage(image);\r\n        setImageDialogOpen(true);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function onTabs(tabs) {\r\n            if (tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        };\r\n\r\n        extension.subscribeTabs(onTabs);\r\n\r\n        return () => extension.unsubscribeTabs(onTabs);\r\n    }, [availableTabs, tab, extension, handleError]);\r\n\r\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\r\n\r\n    const handleFiles = useCallback((files) => {\r\n        try {\r\n            let {subtitleFiles, audioFile, videoFile} = extractSources(files);\r\n\r\n            setSources(previous => {\r\n                setLoading(true);\r\n\r\n                let videoFileUrl = null;\r\n                let audioFileUrl = null;\r\n\r\n                if (videoFile || audioFile) {\r\n                    revokeUrls(previous);\r\n\r\n                    if (videoFile) {\r\n                        videoFileUrl = URL.createObjectURL(videoFile);\r\n                    } else if (audioFile) {\r\n                        audioFileUrl = URL.createObjectURL(audioFile);\r\n                    }\r\n\r\n                    setTab(null);\r\n                } else {\r\n                    videoFile = previous.videoFile;\r\n                    videoFileUrl = previous.videoFileUrl;\r\n                    audioFile = previous.audioFile;\r\n                    audioFileUrl = previous.audioFileUrl;\r\n                }\r\n\r\n                const sources = {\r\n                    subtitleFiles: subtitleFiles.length === 0 ? previous.subtitleFiles : subtitleFiles,\r\n                    audioFile: audioFile,\r\n                    audioFileUrl: audioFileUrl,\r\n                    videoFile: videoFile,\r\n                    videoFileUrl: videoFileUrl\r\n                };\r\n\r\n                return sources;\r\n            });\r\n\r\n            if (subtitleFiles.length > 0) {\r\n                setFileName(subtitleFiles[0].name);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n            handleError(e.message);\r\n        }\r\n    }, [handleError]);\r\n\r\n    useEffect(() => {\r\n        async function onMessage(message) {\r\n            if (message.data.command === 'sync' || message.data.command === 'syncv2') {\r\n                const tabs = availableTabs.filter(t => {\r\n                    if (t.id !== message.tabId) {\r\n                        return false;\r\n                    }\r\n\r\n                    return !message.src || t.src === message.src;\r\n                });\r\n\r\n                if (tabs.length === 0) {\r\n                    if (message.src) {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\r\n                    } else {\r\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const tab = tabs[0];\r\n                let subtitleFiles;\r\n\r\n                if (message.data.command === 'sync') {\r\n                    subtitleFiles = [new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\r\n                        message.data.subtitles.name\r\n                    )];\r\n                } else if (message.data.command === 'syncv2') {\r\n                    subtitleFiles = await Promise.all(message.data.subtitles.map(async (s) => new File(\r\n                        [await (await fetch(\"data:text/plain;base64,\" + s.base64)).blob()],\r\n                        s.name\r\n                    )));\r\n                }\r\n\r\n                setFileName(subtitleFiles[0].name);\r\n                setSources({\r\n                    subtitleFiles: subtitleFiles,\r\n                    audioFile: null,\r\n                    audioFileUrl: null,\r\n                    videoFile: null,\r\n                    videoFileUrl: null\r\n                })\r\n                setTab(tab);\r\n            }\r\n        }\r\n\r\n        extension.subscribe(onMessage);\r\n\r\n        return () => extension.unsubscribe(onMessage);\r\n    }, [extension, availableTabs]);\r\n\r\n    const handleDrop = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        if (inVideoPlayer) {\r\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\r\n            return;\r\n        }\r\n\r\n        setDragging(false);\r\n        dragEnterRef.current = null;\r\n\r\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\r\n            return;\r\n        }\r\n\r\n        handleFiles(e.dataTransfer.files);\r\n    }, [inVideoPlayer, handleError, handleFiles]);\r\n\r\n    const handleFileInputChange = useCallback(() => {\r\n        const files = fileInputRef.current?.files;\r\n\r\n        if (files && files.length > 0) {\r\n            handleFiles(files);\r\n        }\r\n    }, [handleFiles]);\r\n\r\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\r\n\r\n    const handleDragEnter = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer) {\r\n            dragEnterRef.current = e.target;\r\n            setDragging(true);\r\n        }\r\n\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleDragLeave = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\r\n            setDragging(false);\r\n        }\r\n    }, [inVideoPlayer]);\r\n\r\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\r\n    const nothingLoaded = (loading && !videoFrameRef.current) || (sources.subtitleFiles.length === 0 && !sources.audioFile && !sources.videoFile);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <div\r\n                onDrop={handleDrop}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n            >\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity={alertSeverity}\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout');\r\n\r\n                        if (videoFile && channel) {\r\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\r\n                        }\r\n\r\n                        return (\r\n                            <div>\r\n                                <CopyHistory\r\n                                    items={copiedSubtitles}\r\n                                    open={copyHistoryOpen}\r\n                                    drawerWidth={drawerWidth}\r\n                                    onClose={handleCloseCopyHistory}\r\n                                    onDelete={handleDeleteCopyHistoryItem}\r\n                                    onClipAudio={handleClipAudio}\r\n                                    onDownloadImage={handleDownloadImage}\r\n                                    onSelect={handleSelectCopyHistoryItem}\r\n                                    onAnki={handleAnki}\r\n                                />\r\n                                <AnkiDialog\r\n                                    open={ankiDialogOpen}\r\n                                    disabled={ankiDialogDisabled}\r\n                                    text={ankiDialogItem?.text}\r\n                                    audioClip={ankiDialogAudioClip}\r\n                                    image={ankiDialogImage}\r\n                                    source={itemSourceString(ankiDialogItem)}\r\n                                    sliderContext={ankiDialogItemSliderContext}\r\n                                    customFields={settingsProvider.customAnkiFields}\r\n                                    anki={anki}\r\n                                    settingsProvider={settingsProvider}\r\n                                    onCancel={handleAnkiDialogCancel}\r\n                                    onProceed={handleAnkiDialogProceed}\r\n                                    onViewImage={handleViewImage}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                />\r\n                                <ImageDialog\r\n                                    open={imageDialogOpen}\r\n                                    image={image}\r\n                                    onClose={handleImageDialogClosed}\r\n                                />\r\n                                <SettingsDialog\r\n                                    anki={anki}\r\n                                    open={settingsDialogOpen}\r\n                                    onClose={handleCloseSettings}\r\n                                    settings={settingsProvider.settings}\r\n                                />\r\n                                <HelpDialog\r\n                                    open={helpDialogOpen}\r\n                                    extensionUrl={extensionUrl}\r\n                                    onClose={handleCloseHelp}\r\n                                />\r\n                                <Bar\r\n                                    title={fileName || \"asbplayer\"}\r\n                                    drawerWidth={drawerWidth}\r\n                                    drawerOpen={copyHistoryOpen}\r\n                                    onOpenCopyHistory={handleOpenCopyHistory}\r\n                                    onOpenSettings={handleOpenSettings}\r\n                                    onOpenHelp={handleOpenHelp}\r\n                                    onFileSelector={handleFileSelector}\r\n                                />\r\n                                <input\r\n                                    ref={fileInputRef}\r\n                                    onChange={handleFileInputChange}\r\n                                    type=\"file\"\r\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\r\n                                    multiple\r\n                                    hidden\r\n                                />\r\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\r\n                                    {nothingLoaded && (\r\n                                        <LandingPage\r\n                                            latestExtensionVersion={latestExtensionVersion}\r\n                                            extensionUrl={extensionUrl}\r\n                                            extension={extension}\r\n                                            loading={loading}\r\n                                            dragging={dragging}\r\n                                            onFileSelector={handleFileSelector}\r\n                                        />\r\n                                    )}\r\n                                    <DragOverlay dragging={dragging} loading={loading} />\r\n                                    <Player\r\n                                        subtitleReader={subtitleReader}\r\n                                        settingsProvider={settingsProvider}\r\n                                        onCopy={handleCopy}\r\n                                        onError={handleError}\r\n                                        onUnloadAudio={handleUnloadAudio}\r\n                                        onUnloadVideo={handleUnloadVideo}\r\n                                        onLoaded={handleSourcesLoaded}\r\n                                        onTabSelected={handleTabSelected}\r\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\r\n                                        tab={tab}\r\n                                        availableTabs={availableTabs}\r\n                                        sources={sources}\r\n                                        jumpToSubtitle={jumpToSubtitle}\r\n                                        videoFrameRef={videoFrameRef}\r\n                                        extension={extension}\r\n                                        drawerOpen={copyHistoryOpen}\r\n                                        disableKeyEvents={disableKeyEvents}\r\n                                        ankiDialogRequested={ankiDialogRequested}\r\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\r\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\r\n                                    />\r\n                                </Content>\r\n                            </div>\r\n                        );\r\n                    }} />\r\n                    <Route exact path=\"/video\" render={() => {\r\n                        const params = new URLSearchParams(window.location.search);\r\n                        const videoFile = params.get('video');\r\n                        const channel = params.get('channel');\r\n                        const popOut = params.get('popout') === 'true';\r\n\r\n                        return (\r\n                            <VideoPlayer\r\n                                settingsProvider={settingsProvider}\r\n                                videoFile={videoFile}\r\n                                popOut={popOut}\r\n                                channel={channel}\r\n                                onError={handleError}\r\n                            />\r\n                        );\r\n                    }} />\r\n                </Switch>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '@fontsource/roboto';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.querySelector('#root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}