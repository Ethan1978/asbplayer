{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","raw","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","useState","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","background","inactiveButton","disabled","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","marginLeft","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","mousePositionRef","clearInterval","handleKey","keyCode","preventDefault","playing","onPause","onPlay","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","onUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","onUnloadVideo","clock","onMouseOver","onMouseOut","Fade","Grid","direction","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","backgroundColor","default","table","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","clockRef","subtitles","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndex","setSelectedSubtitleIndex","selectedSubtitleIndexRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","currentSubtitleIndex","selectedSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToSubtitle","jumpToIndex","s","subtitleTable","handleClick","subtitleIndex","stopPropagation","onCopy","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","subtitlesLength","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","b","arrayEquals","handleSubtitlesToggle","nocontrols","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","main","secondary","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.e6c773f1.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.raw\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default'\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        props.onSeek(progress);\r\n    }, [props]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(props.mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(props.mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = props.mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = props.mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [props.mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (props.playing) {\r\n                    props.onPause();\r\n                } else {\r\n                    props.onPlay();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        props.onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        props.onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        props.onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        props.onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const progress = props.clock.progress(props.length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => props.playing ? props.onPause() : props.onPlay()}\r\n                            >\r\n                                {props.playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.timeDisplay}>\r\n                                {displayTime(progress * props.length)} / {displayTime(props.length)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.subtitlesToggle && (\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.videoFile && (\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioFile && (\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75 // so the last row doesn't collide with controls\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const clock = props.clock;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitles = props.subtitles;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndex, setSelectedSubtitleIndex] = useState(0);\r\n    const selectedSubtitleIndexRef = useRef(0);\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let currentSubtitleIndex = -1;\r\n            for (let i = subtitles.length - 1; i >=0; --i) {\r\n                if (progress >= subtitles[i].start / length) {\r\n                    currentSubtitleIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentSubtitleIndex !== -1 && currentSubtitleIndex !== selectedSubtitleIndexRef.current) {\r\n                selectedSubtitleIndexRef.current = currentSubtitleIndex;\r\n                setSelectedSubtitleIndex(currentSubtitleIndex);\r\n                const selectedSubtitleRef = subtitleRefs[currentSubtitleIndex];\r\n                const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                if (selectedSubtitleRef?.current && allowScroll) {\r\n                    selectedSubtitleRef.current.scrollIntoView({\r\n                        block: \"center\",\r\n                        inline: \"nearest\",\r\n                        behavior: \"smooth\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = Math.max(0, selectedSubtitleIndex - 1);\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = Math.min(props.subtitles.length - 1, selectedSubtitleIndex + 1);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n            const progress = props.subtitles[newSubtitleIndex].start / props.length;\r\n            props.onSeek(progress, false);\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props, selectedSubtitleIndex, subtitles]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!props.jumpToSubtitle || !props.subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of props.subtitles) {\r\n            if (s.start === props.jumpToSubtitle.start && s.text === props.jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [props.jumpToSubtitle, props.subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = props.subtitles[subtitleIndex].start / props.length;\r\n        props.onSeek(progress, !props.playing && subtitleIndex === selectedSubtitleIndex);\r\n    }, [props, selectedSubtitleIndex]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = props.subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        props.onCopy(text, subtitle.start, subtitle.end);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [props]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!props.subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (props.subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {props.subtitles.map((s, index) => {\r\n                            const selected = index === selectedSubtitleIndex;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles) {\r\n    const subtitlesLength = subtitles && subtitles.length > 0 ? subtitles[subtitles.length - 1].end : 0;\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0\r\n                        ? nodes[nodes.length - 1].end - nodes[0].start\r\n                        : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {text: s.text, start: s.start, end: s.end, displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((text, start, end) => {\r\n        props.onCopy(\r\n            text,\r\n            start,\r\n            end,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((text, start, end, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            timestamp: Date.now(),\n            text: text,\n            start: start,\n            end: end,\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, start: item.start});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e00cf',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}