{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","raw","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","height","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","useCallback","element","scrollIntoView","content","items","lastSeenItemName","item","ListSubheader","disableSticky","ref","ListItem","ListItemIcon","Tooltip","navigator","clipboard","writeText","fontSize","disabled","audioFile","videoFile","onClipAudio","onSelect","ListItemText","onDelete","timestamp","list","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","cursor","background","button","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","marginLeft","current","currentTarget","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","Popover","disableEnforceFocus","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","useState","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","mousePositionRef","clearInterval","handleKey","keyCode","preventDefault","playing","onPause","onPlay","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","onUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","onUnloadVideo","clock","onMouseOver","onMouseOut","Fade","Grid","direction","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","subtitles","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","selectedSubtitleIndex","setSelectedSubtitleIndex","selectedSubtitleIndexRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","currentSubtitleIndex","selectedSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","table","jumpToSubtitle","jumpToIndex","s","subtitleTable","handleClick","subtitleIndex","handleCopy","stopPropagation","onCopy","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","target","rel","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","subtitlesLength","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","subtitlesCallbacks","backgroundColor","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","b","arrayEquals","handleSubtitlesToggle","nocontrols","Fragment","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","handleClipAudio","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","palette","primary","main","secondary","red","A400","default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.3835b807.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.raw\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    root: {\r\n        height: '64px'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton onClick={(e) => navigator.clipboard.writeText(item.text)}>\r\n                                <FileCopyIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Clip Audio\">\r\n                            <IconButton disabled={!item.audioFile && !item.videoFile} onClick={() => props.onClipAudio(item)}>\r\n                                <AudiotrackIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Jump To\">\r\n                            <IconButton onClick={() => props.onSelect(item)}>\r\n                                <ForwardIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={props.open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}>\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={props.onClose}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.listContainer}>\r\n                {list}\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: 'white',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default'\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: 'white'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        props.onSeek(progress);\r\n    }, [props]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(props.mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(props.mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = props.mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = props.mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [props.mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (props.playing) {\r\n                    props.onPause();\r\n                } else {\r\n                    props.onPlay();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        props.onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        props.onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        props.onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        props.onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const progress = props.clock.progress(props.length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => props.playing ? props.onPause() : props.onPlay()}\r\n                            >\r\n                                {props.playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.timeDisplay}>\r\n                                {displayTime(progress * props.length)} / {displayTime(props.length)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.subtitlesToggle && (\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : null} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.videoFile && (\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioFile && (\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : null} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n});\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const clock = props.clock;\r\n    const subtitles = props.subtitles;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const [selectedSubtitleIndex, setSelectedSubtitleIndex] = useState(0);\r\n    const selectedSubtitleIndexRef = useRef(0);\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    // The clock is essentially a singleton, so it is fine as a dependency.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let currentSubtitleIndex = -1;\r\n            for (let i = subtitles.length - 1; i >=0; --i) {\r\n                if (progress >= subtitles[i].start / length) {\r\n                    currentSubtitleIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentSubtitleIndex !== -1 && currentSubtitleIndex !== selectedSubtitleIndexRef.current) {\r\n                selectedSubtitleIndexRef.current = currentSubtitleIndex;\r\n                setSelectedSubtitleIndex(currentSubtitleIndex);\r\n                const selectedSubtitleRef = subtitleRefs[currentSubtitleIndex];\r\n                const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                if (selectedSubtitleRef.current && allowScroll) {\r\n                    selectedSubtitleRef.current.scrollIntoView({\r\n                        block: \"center\",\r\n                        inline: \"nearest\",\r\n                        behavior: \"smooth\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, [clock, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = Math.max(0, selectedSubtitleIndex - 1);\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = Math.min(props.subtitles.length - 1, selectedSubtitleIndex + 1);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n            const progress = props.subtitles[newSubtitleIndex].start / props.length;\r\n            props.onSeek(progress, false);\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props, selectedSubtitleIndex, subtitles]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!props.jumpToSubtitle || !props.subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of props.subtitles) {\r\n            if (s.start === props.jumpToSubtitle.start && s.text === props.jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [props.jumpToSubtitle, props.subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = props.subtitles[subtitleIndex].start / props.length;\r\n        props.onSeek(progress, !props.playing && subtitleIndex === selectedSubtitleIndex);\r\n    }, [props, selectedSubtitleIndex]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = props.subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        props.onCopy(text, subtitle.start, subtitle.end);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [props]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!props.subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <span>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </span>\r\n                <span>\r\n                    Install the <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</a> to sync subtitles with videos in other tabs.\r\n                </span>\r\n            </div>\r\n        );\r\n    } else if (props.subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {props.subtitles.map((s, index) => {\r\n                            const selected = index === selectedSubtitleIndex;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}>\r\n                                   <TableCell className={className}>\r\n                                       {s.text}\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.copyButton}>\r\n                                       <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                           <FileCopy />\r\n                                       </IconButton>\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.timestamp}>\r\n                                       {s.displayTime}\r\n                                   </TableCell>\r\n                               </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </div>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles) {\r\n    const subtitlesLength = subtitles && subtitles.length > 0\r\n        ? subtitles[subtitles.length - 1].end - subtitles[0].start\r\n        : 0;\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0\r\n                        ? nodes[nodes.length - 1].end - nodes[0].start\r\n                        : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {text: s.text, start: s.start, end: s.end, displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((text, start, end) => {\r\n        props.onCopy(\r\n            text,\r\n            start,\r\n            end,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((text, start, end, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            timestamp: Date.now(),\n            text: text,\n            start: start,\n            end: end,\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                videoFile: previous.videoFile\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                videoFile: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile !== item.subtitleFile) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, start: item.start});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    audioFile = previous.audioFile;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}