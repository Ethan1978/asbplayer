{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","text","definition","audioClip","image","word","source","customFieldValues","fields","_appendField","sentenceField","definitionField","wordField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","customFields","setDefinition","setText","setWord","setCustomFieldValues","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","map","DialogActions","Button","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","blob","Audio","src","URL","createObjectURL","preload","load","Promise","resolve","reject","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","a","reader","FileReader","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","push","onstop","Blob","audioTracks","length","id","currentTime","captureStream","mozCaptureStream","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","padding","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","opacity","DragOverlay","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","onload","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","Tooltip","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","command","tabId","postMessage","tab","callback","i","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","background","defaultBackground","LandingPage","latestExtensionVersion","loading","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","Date","now","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","clock","closeEnabled","onMouseOver","onMouseOut","Grid","direction","volumeEnabled","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","condensedModeToggleEnabled","onCondensedModeToggle","condensedModeEnabled","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","popOutEnabled","onPopOutToggle","popOut","fullscreenEnabled","onFullscreenToggle","fullscreen","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","copy","subtitleIndex","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","console","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","ready","subtitleSettings","condensedModeToggle","onExit","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","includes","DialogTitle","helperText","trim","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","anki","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","fieldValue","Tabs","newIndex","Tab","DialogContentText","location","hostname","type","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","fileName","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"8WAGO,SAASA,EAAcC,GAAU,IAAD,EACXC,mBAAS,CAAC,EAAG,IADF,mBAC5BC,EAD4B,KACtBC,EADsB,KAgBnC,OAbAC,2BAAgB,WACZ,SAASC,IACDL,GACAG,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAO3C,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,CAACL,IAEGE,E,6BCdLS,EAAiBC,YAAW,CAC9BC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QACVC,IAAK,GACLC,MAAO,OACPC,cAAe,OACfC,OAAQ,OAID,SAASC,EAAMC,GAC1B,IAAMC,EAAUZ,IAWhB,OATAa,qBAAU,WACN,GAAIF,EAAMG,KAAM,CACZ,IAAMC,EAAUC,WAAWL,EAAMM,QAASN,EAAMO,kBAChD,OAAO,kBAAMC,aAAaJ,IAG9B,OAAO,OACR,CAACJ,EAAMG,KAAMH,EAAMO,iBAAkBP,EAAMM,UAG1C,qBAAKG,UAAWR,EAAQV,KAAxB,SACI,cAACmB,EAAA,EAAD,CAAMC,GAAIX,EAAMG,KAAhB,SACG,cAAC,IAAD,CAAUS,SAAUZ,EAAMY,SAA1B,SACKZ,EAAMa,e,oBCjCLC,E,WAEjB,WAAYC,GAAmB,oBAC3BC,KAAKD,iBAAmBA,E,+FAGZE,G,uFACWD,KAAKE,eAAeD,EAAgB,a,cAArDE,E,yBACCA,EAASC,Q,iLAGHH,G,uFACUD,KAAKE,eAAeD,EAAgB,c,cAArDE,E,yBACCA,EAASC,Q,sLAGEH,EAAgBI,G,uFACXL,KAAKE,eAAeD,EAAgB,kBAAmB,CAACI,UAAWA,I,cAApFF,E,yBACCA,EAASC,Q,+KAGPH,EAAgBK,EAAMC,EAAYC,EAAWC,EAAOC,EAAMC,EAAQC,G,iFAQ3E,GAPMC,EAAS,GAEfb,KAAKc,aAAaD,EAAQb,KAAKD,iBAAiBgB,cAAeT,GAAM,GACrEN,KAAKc,aAAaD,EAAQb,KAAKD,iBAAiBiB,gBAAiBT,GAAY,GAC7EP,KAAKc,aAAaD,EAAQb,KAAKD,iBAAiBkB,UAAWP,GAAM,GACjEV,KAAKc,aAAaD,EAAQb,KAAKD,iBAAiBmB,YAAaP,GAAQ,GAEjEC,EACA,UAA8BO,OAAOC,KAAKR,GAA1C,eAAWS,EAAmD,KAC1DrB,KAAKc,aAAaD,EAAQb,KAAKD,iBAAiBuB,iBAAiBD,GAAkBT,EAAkBS,IAAkB,G,GAIzHE,EAAS,CACXC,KAAM,CACFC,SAAUzB,KAAKD,iBAAiB2B,KAChCrB,UAAWL,KAAKD,iBAAiB4B,SACjCd,OAAQA,EACRe,QAAS,CACLC,gBAAgB,EAChBC,eAAgB,OAChBC,sBAAuB,CACnBN,SAAUzB,KAAKD,iBAAiB2B,KAChCM,eAAe,OAM3BhC,KAAKD,iBAAiBkC,aAAczB,E,6BAEtBA,EAAU0B,K,UACR1B,EAAU2B,S,yBACd,CACJnC,KAAKD,iBAAiBkC,YAJ9BV,EAAOC,KAAKY,M,CACRC,S,KACAC,K,KACAzB,O,kBAMJb,KAAKD,iBAAiBwC,aAAc9B,E,6BAEtBA,EAAMyB,K,UACJzB,EAAM0B,S,yBACV,CACJnC,KAAKD,iBAAiBwC,YAJ9BhB,EAAOC,KAAKgB,Q,CACRH,S,KACAC,K,KACAzB,O,+BAMeb,KAAKE,eAAeD,EAAgB,UAAWsB,G,eAAhEpB,E,yBACCA,EAASC,Q,yJAGPS,EAAQ4B,EAAWC,EAAOC,GACnC,GAAKF,GAAcC,EAAnB,CAIA,IAAIE,EAAYD,EAAYD,EAAMG,MAAM,MAAMC,KAAK,QAAUJ,EACvDK,EAAgBlC,EAAO4B,GAEzBM,IACAH,EAAWG,EAAgB,OAASH,GAGxC/B,EAAO4B,GAAaG,K,8EAGH3C,EAAgB+C,EAAQzB,G,kFACnC0B,EAAO,CACTD,OAAQA,EACRE,QAAS,GAGT3B,IACA0B,EAAK1B,OAASA,G,SAGK4B,MAAMlD,EAAgB,CACzCmD,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,K,cAFnB9C,E,gBAKaA,EAASoD,O,YAAtBA,E,QAEGC,M,uBACC,IAAIC,MAAMF,EAAKC,O,iCAGlBD,G,+MClGTG,EAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCpF,KAAM,CACF,uBAAwB,CACpBqF,aAAcD,EAAME,QAAQ,KAGpCC,MAAO,CACHC,SAAU,GAEdC,WAAY,CACRC,OAAQ,UACR,UAAW,CACPA,OAAQ,gBAKL,SAASC,EAAWlF,GAC/B,IAAMC,EAAUyE,IACTvE,EAA+HH,EAA/HG,KAAMgF,EAAyHnF,EAAzHmF,SAAgBC,EAAyGpF,EAA/GsB,KAAmB+D,EAA4FrF,EAA5FqF,UAAWC,EAAiFtF,EAAjFsF,SAAUC,EAAuEvF,EAAvEuF,YAAaC,EAA0DxF,EAA1DwF,eAAgBhE,EAA0CxB,EAA1CwB,UAAWC,EAA+BzB,EAA/ByB,MAAOE,EAAwB3B,EAAxB2B,OAAQ8D,EAAgBzF,EAAhByF,aAFhF,EAGF9G,mBAAS,IAHP,mBAG/B4C,EAH+B,KAGnBmE,EAHmB,OAId/G,qBAJc,mBAI/B2C,EAJ+B,KAIzBqE,EAJyB,OAKdhH,qBALc,mBAK/B+C,EAL+B,KAKzBkE,EALyB,OAMYjH,mBAAS,IANrB,mBAM/BiD,EAN+B,KAMZiE,EANY,KAQtC3F,qBAAU,WACNyF,EAAQP,KACT,CAACA,IAEJlF,qBAAU,WACFC,IACCuF,EAAc,IACdE,EAAQ,IACRC,EAAqB,OAE3B,CAAC1F,IAEJ,IAAM2F,EAAkBC,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBACF1E,EAAU2E,SACX,CAAC3E,IAEE4E,EAAkBL,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBACFX,EAAY9D,KACb,CAACA,EAAO8D,IAELc,EAA0BN,uBAAY,SAAC1D,EAAiBqB,GAC1D,IAAM4C,EAAuB,GAC7BnE,OAAOoE,OAAOD,EAAsB1E,GACpC0E,EAAqBjE,GAAmBqB,EACxCmC,EAAqBS,KACtB,CAAC1E,IAEJ,OACI,eAAC4E,EAAA,EAAD,CACIrG,KAAMA,EACNsG,qBAAmB,EACnBC,WAAS,EACTC,SAAS,KACTC,gBAAiB,kBAAMtB,KAL3B,UAOI,eAACuB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CACIC,QAAQ,KACRtG,UAAWR,EAAQ6E,MAFvB,yBAMA,cAACkC,EAAA,EAAD,CACIC,KAAK,MACLC,QAAS,kBAAM1B,KAFnB,SAII,cAAC,IAAD,SAGJ,cAAC2B,EAAA,EAAD,UACI,uBAAM1G,UAAWR,EAAQV,KAAzB,UACI,cAAC6H,EAAA,EAAD,CACIL,QAAQ,SACRpD,WAAS,EACT+C,WAAS,EACTW,QAAS,EACTC,MAAM,WACN5D,MAAOpC,EACPiG,SAAU,SAACvB,GAAD,OAAOL,EAAQK,EAAEwB,OAAO9D,UAEtC,cAAC0D,EAAA,EAAD,CACIL,QAAQ,SACRpD,WAAS,EACT+C,WAAS,EACTe,KAAM,EACNH,MAAM,aACN5D,MAAOnC,EACPgG,SAAU,SAACvB,GAAD,OAAON,EAAcM,EAAEwB,OAAO9D,UAE5C,cAAC0D,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACTY,MAAM,OACN5D,MAAOhC,EACP6F,SAAU,SAACvB,GAAD,OAAOJ,EAAQI,EAAEwB,OAAO9D,UAErCvB,OAAOC,KAAKqD,GAAciC,KAAI,SAACrF,GAAD,OAC3B,cAAC+E,EAAA,EAAD,CAEIL,QAAQ,SACRL,WAAS,EACTY,MAAOjF,EACPqB,MAAO9B,EAAkBS,IAAoB,GAC7CkF,SAAU,SAACvB,GAAD,OAAOK,EAAwBhE,EAAiB2D,EAAEwB,OAAO9D,SAL9DrB,MAQZb,GACG,qBACIf,UAAWR,EAAQ+E,WACnBkC,QAASpB,EAFb,SAII,cAACsB,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACThD,MAAOlC,EAAU0B,KACjBoE,MAAM,YAIjB7F,GACG,qBACIhB,UAAWR,EAAQ+E,WACnBkC,QAASd,EAFb,SAII,cAACgB,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACThD,MAAOjC,EAAMyB,KACboE,MAAM,YAIlB,cAACF,EAAA,EAAD,CACIL,QAAQ,SACRL,WAAS,EACTY,MAAM,SACN5D,MAAO/B,SAInB,eAACgG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIzC,SAAUA,EACV+B,QAAS,kBAAM5B,KAFnB,oBAKA,cAACsC,EAAA,EAAD,CACIzC,SAAUA,EACV+B,QAAS,kBAAM7B,EAAU/D,EAAMC,EAAYC,EAAWC,EAAOC,EAAMC,EAAQC,IAF/E,0BCxKhB,IAAMiG,EAAc,CAAC,wBAAyB,MAAO,yBAA0B,Q,cACjC1F,OAAOC,KAAKyF,GAAaC,OAAOC,cAAcC,iBAAiBN,KAAI,SAAAO,GAAC,MAAI,CAACA,EAAGJ,EAAYI,OAAK,G,GAApIC,E,KAAkBC,E,KAEnBC,E,WAEF,WAAYlF,EAAMmF,EAAOC,EAAKnF,EAAQoF,GAAY,oBAC9CvH,KAAKkC,KAAOA,EACZlC,KAAKqH,MAAQA,EACbrH,KAAKsH,IAAMA,EACXtH,KAAKwH,QAAUrF,EACfnC,KAAKuH,UAAYA,E,wLAIVvH,KAAKwH,S,6PAICxH,KAAKyH,Q,oTAICzH,KAAKyH,Q,cAAlBC,E,QACAtF,EAAQ,IAAIuF,OACZC,IAAMC,IAAIC,gBAAgBJ,GAChCtF,EAAM2F,QAAU,OAChB3F,EAAM4F,O,SAEA5F,EAAM+C,O,gCAEL,IAAI8C,SAAQ,SAACC,EAASC,GACzB9I,YAAW,WACP+C,EAAMgG,QACN,IAAMR,EAAMxF,EAAMwF,IAClBxF,EAAMwF,IAAM,KACZC,IAAIQ,gBAAgBT,GACpBM,MACD,EAAKZ,IAAM,EAAKD,MAAQ,S,kPAK1BrH,KAAKsI,W,gCACyBnF,MAAM,cAAgBnD,KAAKuH,UAAY,WAAavH,KAAKwH,S,8BAAUE,O,OAAlG1H,KAAKsI,W,uCAGFtI,KAAKsI,Y,6GAIdC,E,WAEF,WAAYC,EAAMnB,EAAOC,EAAKmB,GAAU,oBACpCzI,KAAKwI,KAAOA,EACZxI,KAAKkC,KAAOsG,EAAKtG,KAAO,IAAMmF,EAAQ,IAAMC,EAAM,IAAMH,EACxDnH,KAAKqH,MAAQA,EACbrH,KAAKsH,IAAMA,EACXtH,KAAKyI,QAAUA,EACfzI,KAAKuH,UAAYJ,E,mMAIV,IAAIc,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAAO,EAAA,6DACXC,EAAS,IAAIC,WADF,KAEfD,EAFe,SAEY,EAAKjB,OAFjB,wBAERmB,cAFQ,gBAGfF,EAAOG,UAAY,WACf,IAAM1I,EAASuI,EAAOvI,OAChB+B,EAAS/B,EAAO2I,OAAO3I,EAAO4I,QAAQ,KAAO,GACnDd,EAAQ/F,IANG,2CAAZ,0D,iPAYFnC,KAAKyH,M,gCACazH,KAAKiJ,a,cAAxBjJ,KAAKyH,M,wCAIHrF,EAAQpC,KAAKkJ,cAAclJ,KAAKyH,O,SAChCrF,EAAM+C,O,wBACNnF,KAAKmJ,WAAW/G,G,iPAIjBpC,KAAKyH,M,gCACazH,KAAKiJ,a,OAAxBjJ,KAAKyH,M,uCAGFzH,KAAKyH,O,uRAIL,IAAIQ,SAAQ,SAACC,EAASC,GACzB,IAAM/F,EAAQ,EAAK8G,cAAc,EAAKV,MAEtCpG,EAAMgH,UAAN,+BAAAV,EAAA,MAAkB,WAAO1D,GAAP,uBAAA0D,EAAA,sDACdtG,EAAM+C,OACAkE,EAAS,EAAKC,eAAelH,GAFrB,cAIEiH,EAAOE,kBAJT,IAId,2BAAyC,QACnCC,OALQ,qCAQRC,EAAW,IAAI1C,cAAcsC,EAAQ,CAAEK,SAAUxC,IACjDyC,EAAS,GAEfF,EAASG,gBAAkB,SAAC5E,GACxB2E,EAAOE,KAAK7E,EAAE1C,OAGlBmH,EAASK,OAAS,SAAC9E,GACfkD,EAAQ,IAAI6B,KAAKJ,KAGrBF,EAASpC,QAnBK,UAoBR,EAAK8B,WAAW/G,GApBR,QAqBdqH,EAASD,OArBK,4CAAlB,0D,qIA0BM7I,GACV,IAAMyB,EAAQ,IAAIuF,MAKlB,GAJAvF,EAAMwF,IAAMC,IAAIC,gBAAgBnH,GAChCyB,EAAM2F,QAAU,OAGZ/H,KAAKyI,SAAWrG,EAAM4H,aAAe5H,EAAM4H,YAAYC,OAAS,EAAG,CAAC,IAAD,gBACnD7H,EAAM4H,aAD6C,IACnE,2BAAmC,CAAC,IAAzB/C,EAAwB,QAC/BA,EAAEvJ,QAAUsC,KAAKyI,UAAYxB,EAAEiD,IAFgC,+BASvE,OAHA9H,EAAM+H,YAAcnK,KAAKqH,MAAQ,IACjCjF,EAAM4F,OAEC5F,I,qCAGIA,GACX,GAAmC,oBAAxBA,EAAMgI,cACb,OAAOhI,EAAMgI,gBAGjB,GAAsC,oBAA3BhI,EAAMiI,iBACb,OAAOjI,EAAMiI,mBAGjB,MAAM,IAAI5G,MAAM,yC,0EAGHrB,G,qGACN,IAAI6F,SAAQ,SAACC,EAASC,GACzB9I,YAAW,WACP+C,EAAMgG,QACN,IAAMR,EAAMxF,EAAMwF,IAClBxF,EAAMwF,IAAM,KACZC,IAAIQ,gBAAgBT,GACpBM,MACD,EAAKZ,IAAM,EAAKD,MAAQ,S,yGAKlBiD,E,WAEjB,WAAYhI,GAAO,oBACftC,KAAKsC,KAAOA,E,6KAiBNtC,KAAKsC,KAAK6C,O,+PAIHnF,KAAKsC,KAAKH,S,mTAIJnC,KAAKsC,KAAKoF,O,OAAvBA,E,OACA6C,EAAMvM,OAAO6J,IAAIC,gBAAgBJ,GACjCgB,EAAI8B,SAASC,cAAc,KACjCD,SAASvH,KAAKyH,YAAYhC,GAC1BA,EAAEiC,MAAQ,gBACVjC,EAAEkC,KAAOL,EACT7B,EAAEmC,SAAW7K,KAAKsC,KAAKJ,KACvBwG,EAAEoC,QACFjD,IAAIQ,gBAAgBkC,GACpB7B,EAAEqC,S,kIArBF,OAAO/K,KAAKsC,KAAKJ,Q,kCAVH8I,EAAc3D,EAAOC,EAAKnF,EAAQoF,GAChD,IAAM0D,EAAYD,EAAa9I,KAAKgJ,UAAU,EAAGF,EAAa9I,KAAKiJ,YAAY,MAAQ,IAAM9D,EAAQ,IAAMC,EAAM,IAAMC,EACvH,OAAO,IAAI+C,EAAU,IAAIlD,EAAgB6D,EAAW5D,EAAOC,EAAKnF,EAAQoF,M,+BAG5DiB,EAAMnB,EAAOC,EAAKmB,GAC9B,OAAO,IAAI6B,EAAU,IAAI/B,EAAcC,EAAMnB,EAAOC,EAAKmB,Q,cCjLlD,MAA0B,+CCInC/E,EAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCpF,KAAM,kBAAiB,CACnBG,SAAU,WACV0M,OAAQ,oBACRxM,MAAO,OACPE,OAAQ,IACRD,cALE,EAAEwM,SAKsB,OAAS,SAEvCC,sBAAuB,CACnB,YAAa,CACTC,QAAS,MACT7M,SAAU,WACV0M,OAAQ,qBACRxM,MAAO,OACPE,OAAQ,IACRN,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChBgN,WAAY,SACZC,QAAS,GACTC,UAAW,SACXC,eAAgB,cAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAAD,OAASC,EAAT,KACfC,QAAS,SAKN,SAASC,EAAT,GAAkC,IAAZb,EAAW,EAAXA,SAC3BpM,EAAUyE,EAAU,CAAC2H,SAAUA,IAErC,OACI,qBAAK5L,UAAWR,EAAQV,KAAxB,SACI,cAAC4N,EAAA,EAAD,CAAMxM,GAAI0L,EAAV,SACI,qBAAK5L,UAAWR,EAAQqM,4B,2HCxBlC5H,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCyI,WAAY,CACRzG,SAAU,MACVyF,OAAQ,GACR5M,QAAS,cACTgN,cAAe,SACfa,SAAU,OACVZ,WAAY,QACZE,UAAW,YAGJ,SAASW,GAAWtN,GAC/B,IAAMC,EAAUyE,KACTvE,EAA+BH,EAA/BG,KAAMoN,EAAyBvN,EAAzBuN,aAAcjN,EAAWN,EAAXM,QAE3B,OACI,eAACkG,EAAA,EAAD,CACIrG,KAAMA,EACNyG,gBAAiB,kBAAMtG,KAF3B,UAII,eAAC6G,EAAA,EAAD,WACI,cAACL,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,4FAGA,yHAKJ,uBACA,cAAC1G,EAAA,EAAD,CAAYC,QAAQ,KAApB,yDAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,qDACuB,cAACC,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAM2B,EAA/D,uBADvB,OAGA,uDAGA,6BACI,sBAAK9M,UAAWR,EAAQmN,WAAxB,yBACkB,cAAC,KAAD,CAAcQ,SAAS,UADzC,wCAIJ,2GAIJ,uBACA,cAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAApB,kBAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,6BACI,sBAAK/M,UAAWR,EAAQmN,WAAxB,yBACkB,cAAC,KAAD,CAAUQ,SAAS,UADrC,wCAIJ,wIAGA,uGAIJ,uBACA,cAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,2FAGA,oEAIJ,uBACA,cAAC1G,EAAA,EAAD,CAAYC,QAAQ,KAApB,qDAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,gFAGA,6BACI,sBAAK/M,UAAWR,EAAQmN,WAAxB,yBACkB,cAAC,KAAD,CAAWQ,SAAS,UADtC,2CAKR,uBACA,cAAC9G,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCAGA,cAAC8G,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAOlP,KAAK,QAAZ,SACI,eAACmP,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,2BACX,cAACmH,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,0CAEf,eAACkH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,sBACX,cAACmH,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,8BAEf,eAACkH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,6BACX,cAACmH,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,yCAEf,eAACkH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,6BACX,cAACmH,GAAA,EAAD,UAAW,cAACnH,EAAA,EAAD,iFAK3B,uBACA,cAACA,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAGA,eAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,UACI,6BACI,cAACC,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAK,8CAA9D,2CAEJ,6BACI,cAAC6B,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAK,8CAA9D,kDAGR,uBACA,cAAC9E,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAGA,cAACD,EAAA,EAAD,CAAY0G,UAAU,KAAtB,SACI,6BACI,cAACC,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAK,4CAA9D,uDAIZ,cAACjE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQV,QAAS,kBAAM5G,KAAvB,qB,wBCzJVoE,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrClD,MAAO,kBAAsB,CACzB7B,MADG,EAAEA,MAELwM,OAFG,EAASA,OAGZQ,eAAgB,gBAIT,SAASsB,GAAYlO,GAAQ,IAOpCmO,EANGhO,EAAwBH,EAAxBG,KAAMsB,EAAkBzB,EAAlByB,MAAOnB,EAAWN,EAAXM,QADmB,EAET3B,qBAFS,mBAEhCyP,EAFgC,KAEvBC,EAFuB,OAGb1P,qBAHa,mBAGhCiB,EAHgC,KAGzB0O,EAHyB,OAIX3P,qBAJW,mBAIhCyN,EAJgC,KAIxBmC,EAJwB,OAKH9P,GAAc,GALX,mBAKhC+P,EALgC,KAKnBC,EALmB,KAUnCN,EADAvO,EAAQ,GAAKwM,EAAS,EACRsC,KAAKC,IAAI,EAAGD,KAAKC,IAAIH,GAAe,EAAI5O,GAAQ6O,GAAgB,EAAIrC,KAEpE,EAGlB,IAAMnM,EAAUyE,GAAU,CAAC9E,MAAOA,EAAQuO,EAAa/B,OAAQA,EAAS+B,IA6BxE,OA3BAjO,qBAAU,WAAM,4CAKZ,8BAAAwJ,EAAA,sEAC0BjI,EAAM2M,UADhC,OACUA,EADV,QAEUQ,EAAM,IAAIC,OACZC,OAAS,WACTR,EAASM,EAAIhP,OACb2O,EAAUK,EAAIxC,QACdiC,EAAWD,IAEfQ,EAAIhG,IAAMwF,EARd,4CALY,sBACP3M,GADO,mCAgBZsN,KACD,CAACtN,IAEJvB,qBAAU,WACDC,IACDmO,EAAS,GACTC,EAAU,GACVF,EAAW,SAEhB,CAAClO,IAECsB,EAKD,cAAC+E,EAAA,EAAD,CACIrG,KAAMA,EACNyG,gBAAiB,kBAAMtG,KACvBqG,SAAS,KAHb,SAKI,cAACqI,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIxO,UAAWR,EAAQwB,MACnBA,MAAO2M,EACPtJ,MAAOrD,EAAMyB,KACbyI,MAAO,CAAC/L,MAAOA,EAAQuO,EAAa/B,OAAQA,EAAS+B,SAd1D,K,kCCzDMe,G,2IAED1F,G,6EACRA,EAAKtG,KAAKiM,SAAS,Q,4BACLC,K,SAAe5F,EAAKlI,O,0BAA5B+N,G,gCACCA,EAAM3H,KAAI,SAAA4H,GAAI,OAAIA,EAAKhM,QAAMiM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGnH,MAAQoH,EAAGpH,U,WAGnEmB,EAAKtG,KAAKiM,SAAS,Q,yCACZ,IAAIlG,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAO,EAAA,6DACTgG,EAAS,IAAIC,UAAOC,OAAO5Q,OAAQ2Q,UAAOE,iBAC1CC,EAAO,GACbJ,EAAOK,MAAQ,SAACC,GAAD,OAAOF,EAAKjF,KAAKmF,IAChCN,EAAOO,QAAU,kBAAM/G,EACnB4G,EACKpI,KAAI,SAACsI,GAAD,MAAQ,CACT3H,MAAOqG,KAAKwB,MAAoB,IAAdF,EAAEG,WACpB7H,IAAKoG,KAAKwB,MAAkB,IAAZF,EAAEI,SAClB9O,KAAM0O,EAAE1O,SAEXiO,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGnH,MAAQoH,EAAGpH,WAXzB,KAafqH,EAbe,SAaIlG,EAAKlI,OAbT,wBAaR+O,MAbQ,gBAcfX,EAAOY,QAdQ,4CAAZ,0D,WAkBP9G,EAAKtG,KAAKiM,SAAS,Q,6BACLoB,K,UAAe/G,EAAKlI,O,2BAA5B+N,G,gCACCA,EAAMmB,OAAOC,SAAS/I,KAAI,SAAAgJ,GAAK,MAAK,CACvCrI,MAAOqG,KAAKiC,MAAoB,IAAdD,EAAME,OACxBtI,IAAKoG,KAAKiC,MAAkB,IAAZD,EAAMG,KACtBvP,KAAMoP,EAAMI,KAAKC,aAEpBxB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGnH,MAAQoH,EAAGpH,U,cAG9B,IAAI5D,MAAM,oC,6LC7BlBC,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCG,MAAO,CACHC,SAAU,GAEdiM,OAAQ,CACJC,WAAYtM,EAAMuM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASC,iBAG7CC,YAAa,CACT5R,MAAO,gBAAE6R,EAAF,EAAEA,YAAF,4BAAkCA,EAAlC,QACPR,WAAYtM,EAAMuM,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQzM,EAAMuM,YAAYE,OAAOM,QACjCJ,SAAU3M,EAAMuM,YAAYI,SAASK,iBAEvCC,YAAa,qBAAEH,cAEnBI,kBAAmB,CACfC,UAAW,YACXlS,MAAO,GACP8M,QAAS,GACTuE,WAAYtM,EAAMuM,YAAYC,OAAO,CAAC,YAAa,UAAW,SAAU,CACpEC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASC,iBAG7CQ,uBAAwB,CACpBD,UAAW,YACXlS,MAAO,EACP8M,QAAS,EACTuE,WAAYtM,EAAMuM,YAAYC,OAAO,CAAC,YAAa,UAAW,SAAU,CACpEC,OAAQzM,EAAMuM,YAAYE,OAAOM,QACjCJ,SAAU3M,EAAMuM,YAAYI,SAASK,kBAG7CK,KAAM,CACFxS,QAAS,YAIF,SAASyS,GAAIjS,GACxB,IAAMC,EAAUyE,GAAU1E,GAC1B,OACI,cAACkS,GAAA,EAAD,CACIxS,SAAS,SACTe,UAAW0R,YAAKlS,EAAQ+Q,OAAT,eACV/Q,EAAQuR,YAAcxR,EAAMoS,aAHrC,SAMI,eAACvL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKtG,UAAWR,EAAQ6E,MAA5C,SACK9E,EAAM8E,QAEX,cAACuN,GAAA,EAAD,CAASvN,MAAM,eAAf,SACI,cAACkC,EAAA,EAAD,CACIC,KAAK,MACLuG,UAAU,IACV5B,KAAK,mDACLpE,OAAO,SACPmG,IAAI,aALR,SAOI,cAAC,KAAD,QAGR,cAAC0E,GAAA,EAAD,CAASvN,MAAM,OAAf,SACI,cAACkC,EAAA,EAAD,CACIC,KAAK,MACLC,QAASlH,EAAMsS,WAFnB,SAII,cAAC,KAAD,QAGR,cAACD,GAAA,EAAD,CAASvN,MAAM,WAAf,SACI,cAACkC,EAAA,EAAD,CACIC,KAAK,MACLC,QAASlH,EAAMwF,eAFnB,SAII,cAAC,IAAD,QAGR,cAAC6M,GAAA,EAAD,CAASvN,MAAM,eAAf,SACI,cAACkC,EAAA,EAAD,CACIC,KAAK,MACLyG,MAAM,UACN6E,aAAW,OACXrL,QAASlH,EAAMwS,kBACf/R,UAAW0R,YAAKlS,EAAQ4R,kBAAT,eACV5R,EAAQ8R,uBAAyB/R,EAAMoS,aANhD,SASI,cAAC,KAAD,a,ICvGHK,G,WAEjB,aAAe,IAAD,2BACVzR,KAAK0R,mBAAqB,GAC1B1R,KAAK2R,KAAO,GACZ3R,KAAK4R,eAAiB,IAAI3J,SAAQ,SAACC,EAASC,GACxC,EAAK0J,eAAiB3J,KAG1BlK,OAAOG,iBAAiB,WAAW,SAACuR,GAChC,GAAIA,EAAM/O,SAAW3C,QAIK,kCAAtB0R,EAAMpN,KAAKwP,QACPpC,EAAMpN,KAAKyP,QAAS,CACpB,GAAmC,SAA/BrC,EAAMpN,KAAKyP,QAAQC,QAEnB,YADA,EAAKL,KAAOjC,EAAMpN,KAAKyP,QAAQJ,MAInC,GAAmC,YAA/BjC,EAAMpN,KAAKyP,QAAQC,QAEnB,YADA,EAAKH,eAAenC,EAAMpN,KAAKyP,QAAQ7O,SAPvB,oBAWN,EAAKwO,oBAXC,IAWpB,2BAAuC,EACnC1C,EADmC,SACjC,CACE1M,KAAMoN,EAAMpN,KAAKyP,QACjBE,MAAOvC,EAAMpN,KAAK2P,SAdN,mC,yLAuBnBjS,KAAK4R,e,gLAGVG,EAASE,GACjBjU,OAAOkU,YAAY,CAACJ,OAAQ,YAAaC,QAASA,EAASE,MAAOA,GAAQ,O,qCAG/DF,GAAU,IAAD,gBACF/R,KAAK2R,MADH,IACpB,2BAA6B,CAAC,IAAnBQ,EAAkB,QACzBnU,OAAOkU,YAAY,CAACJ,OAAQ,YAAaC,QAASA,EAASE,MAAOE,EAAIjI,IAAK,MAF3D,iC,gCAMdkI,GACNpS,KAAK0R,mBAAmB7H,KAAKuI,K,kCAGrBA,GACR,IAAK,IAAIC,EAAIrS,KAAK0R,mBAAmBzH,OAAS,EAAGoI,GAAK,IAAKA,EACvD,GAAID,IAAapS,KAAK0R,mBAAmBW,GAAI,CACzCrS,KAAK0R,mBAAmBY,OAAOD,EAAG,GAClC,W,oJC1CV3O,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrC4O,OAAQ,CACJ3T,MAAO,qBAAE6R,aACT+B,WAAY,GAEhBC,YAAa,CACT7T,MAAO,qBAAE6R,cAEbiC,aAAa,yBACTlU,QAAS,OACTiN,WAAY,SACZ/M,SAAU,SACVgN,QAAS/H,EAAME,QAAQ,EAAG,IAEvBF,EAAMgP,OAAOC,SANR,IAORnU,eAAgB,eAEpBoU,cAAe,CACXnU,SAAU,WACV0M,OAAQ,OACR0H,UAAW,OACXC,UAAW,UAEfC,SAAU,CACN,UAAW,CACPC,gBAAiBtP,EAAMuP,QAAQlQ,OAAOmQ,QAG9CC,gBAAiB,CACbC,YAAa,EACbC,aAAc,GAElBC,iBAAkB,CACdC,SAAU,QAIlB,SAASC,GAAKzU,GAAQ,IACXG,EAAyEH,EAAzEG,KAAMuU,EAAmE1U,EAAnE0U,SAAUpU,EAAyDN,EAAzDM,QAASqU,EAAgD3U,EAAhD2U,SAAUC,EAAsC5U,EAAtC4U,YAAaC,EAAyB7U,EAAzB6U,gBAAiBC,EAAQ9U,EAAR8U,KAElEC,EAAahP,uBAAY,WAC3BiP,UAAUC,UAAUC,UAAUJ,EAAKxT,MACnChB,MACD,CAACwU,EAAMxU,IAEJ6U,EAAepP,uBAAY,WAC7B4O,EAASG,GACTxU,MACD,CAACwU,EAAMH,EAAUrU,IAEd8U,EAAkBrP,uBAAY,WAChC6O,EAAYE,GACZxU,MACD,CAACwU,EAAMF,EAAatU,IAEjB+U,EAAsBtP,uBAAY,WACpC8O,EAAgBC,GAChBxU,MACD,CAACwU,EAAMD,EAAiBvU,IAE3B,OAAKwU,EAKD,cAACQ,GAAA,EAAD,CACI7O,qBAAqB,EACrBtG,KAAMA,EACNuU,SAAUA,EACVpU,QAASA,EACTiV,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAXpB,SAaI,eAAC,KAAD,WACI,cAACE,GAAA,EAAD,CAAUC,QAAM,EAAC1O,QAAS6N,EAA1B,SACI,cAACc,GAAA,EAAD,CAAcC,uBAAwB,CAAC/O,QAAS,SAAUgP,QAAQ,WAEtE,cAACJ,GAAA,EAAD,CAAUC,QAAM,EAAC1O,QAASiO,EAA1B,SACI,cAACU,GAAA,EAAD,CAAcC,uBAAwB,CAAC/O,QAAS,SAAUgP,QAAQ,eAEpEjB,EAAKkB,WAAalB,EAAKmB,WAAanB,EAAK1R,QACvC,cAACuS,GAAA,EAAD,CAAUC,QAAM,EAAC1O,QAASkO,EAA1B,SACI,cAACS,GAAA,EAAD,CAAcC,uBAAwB,CAAC/O,QAAS,SAAUgP,QAAQ,sBAGxEjB,EAAKkB,WAAalB,EAAKrT,QACrB,cAACkU,GAAA,EAAD,CAAUC,QAAM,EAAC1O,QAASmO,EAA1B,SACI,cAACQ,GAAA,EAAD,CAAcC,uBAAwB,CAAC/O,QAAS,SAAUgP,QAAQ,0BA/B3E,KAuCA,SAASG,GAAYlW,GAChC,IAAMC,EAAUyE,GAAU1E,GACpBmW,EAA6BpQ,uBAAY,SAAAqQ,GACvCA,GACAA,EAAQC,mBAEb,IANoC,EAOP1X,qBAPO,mBAOhC2X,EAPgC,KAOtBC,EAPsB,OAQP5X,oBAAS,GARF,mBAQhC6X,EARgC,KAQtBC,EARsB,OASC9X,qBATD,mBAShC+X,EATgC,KASlBC,EATkB,KAWjCC,EAAa7Q,uBAAY,SAACC,EAAG8O,GAC/ByB,EAAYzB,GACZ2B,GAAY,GACZE,EAAgB3Q,EAAE6Q,iBACnB,IAEGC,EAAmB/Q,uBAAY,SAACC,EAAG8O,GACrCyB,EAAY,MACZE,GAAY,GACZE,EAAgB,QACjB,IAEGI,EAAehR,uBAAY,SAAC+O,GAC9B9U,EAAMgX,SAASlC,KAChB,CAAC9U,IAEAuM,EAAU,KAEd,GAAIvM,EAAMiX,MAAMhM,OAAS,EAAG,CACxBsB,EAAU,GACV,IAFwB,EAEpB2K,EAAmB,KACnB7D,EAAI,EAHgB,cAKLrT,EAAMiX,OALD,yBAKbnC,EALa,QAMK,OAArBoC,GAA6BA,IAAqBpC,EAAK5R,OACvDgU,EAAmBpC,EAAK5R,KACxBqJ,EAAQ1B,KAAM,cAACsM,GAAA,EAAD,CAAeC,eAAe,EAA9B,SAAqDtC,EAAK5R,MAAjB4R,EAAK5R,QAGhE,IAAMmU,EAAMhE,IAAMrT,EAAMiX,MAAMhM,OAAS,EAAIkL,EAA4B,KAEvE5J,EAAQ1B,KACJ,eAAC8K,GAAA,EAAD,CACI0B,IAAKA,EAEL5W,UAAWR,EAAQ+T,SACnB/T,QAAS,CAACqX,QAASrX,EAAQmU,iBAJ/B,UAMI,cAACmD,GAAA,EAAD,CAActX,QAAS,CAACV,KAAMU,EAAQsU,kBAAtC,SACI,cAAClC,GAAA,EAAD,CAASvN,MAAM,iBAAf,SACI,cAACkC,EAAA,EAAD,CAAYE,QAAS,kBAAMlH,EAAMwX,OAAO1C,IAAxC,SACI,cAAC,KAAD,CAAUlH,SAAS,gBAI/B,cAAC2J,GAAA,EAAD,CAActX,QAAS,CAACV,KAAMU,EAAQsU,kBAAtC,SACI,cAACvN,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAO4Q,EAAW5Q,EAAG8O,IAA1C,SACI,cAAC,KAAD,CAAclH,SAAS,cAG/B,cAACiI,GAAA,EAAD,UAAef,EAAKxT,OACpB,cAACiW,GAAA,EAAD,CAActX,QAAS,CAACV,KAAMU,EAAQsU,kBAAtC,SACI,cAACvN,EAAA,EAAD,CAAYE,QAAS,kBAAM6P,EAAajC,IAAxC,SACI,cAAC,KAAD,CAAYlH,SAAS,gBAnBxBkH,EAAK2C,cAyBhBpE,GApCN,2BAAiC,IALT,oCA6CxB9G,EAAW,cAACoJ,GAAA,EAAD,qCAGf,IAAM+B,EAAQ,cAAC,KAAD,UAAOnL,IAErB,OACI,eAAC,IAAMoL,SAAP,WACI,eAACC,GAAA,EAAD,CACI7Q,QAAQ,aACR8Q,OAAO,QACP1X,KAAMH,EAAMG,KACZM,UAAWR,EAAQsT,OACnBtT,QAAS,CACL6X,MAAO7X,EAAQwT,aANvB,UAQI,qBAAKhT,UAAWR,EAAQyT,aAAxB,SACI,cAAC1M,EAAA,EAAD,CAAYE,QAASlH,EAAMM,QAA3B,SACI,cAAC,KAAD,QAGR,cAACyX,GAAA,EAAD,IACA,qBAAKtX,UAAWR,EAAQ4T,cAAxB,SACK6D,OAGT,cAACjD,GAAD,CACItU,KAAMH,EAAMG,MAAQqW,EACpB9B,SAAUgC,EACV5B,KAAMwB,EACNhW,QAASwW,EACTnC,SAAU3U,EAAM2U,SAChBC,YAAa5U,EAAM4U,YACnBC,gBAAiB7U,EAAM6U,qB,IC/NjCmD,G,WAEF,WAAY9U,EAAMC,EAAQoF,GAAY,oBAClCvH,KAAKkC,KAAOA,EACZlC,KAAKwH,QAAUrF,EACfnC,KAAKuH,UAAYA,E,wLAIVvH,KAAKwH,S,6PAICxH,KAAKyH,Q,yRAIbzH,KAAKsI,W,gCACyBnF,MAAMnD,KAAKiX,Y,8BAAavP,O,OAAvD1H,KAAKsI,W,uCAGFtI,KAAKsI,Y,yQAILtI,KAAKiX,Y,uIAIZ,MAAO,cAAgBjX,KAAKuH,UAAY,WAAavH,KAAKwH,Y,KAI5D0P,G,WAEF,WAAY1O,EAAMiO,GAAY,oBAC1BzW,KAAKwI,KAAOA,EACZxI,KAAKkC,KAAOsG,EAAKtG,KAAO,IAAMuU,EAAY,QAC1CzW,KAAKyW,UAAYA,E,mMAIV,IAAIxO,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAO,EAAA,sEACM,EAAKyO,UADX,OACTC,EADS,OAEThK,EAAUgK,EAAOC,UAAU,cACjCnP,EAAQkF,EAAQrE,OAAOqE,EAAQpE,QAAQ,KAAO,IAH/B,2CAAZ,0D,4QAQA,IAAIf,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,SAAAO,EAAA,sEACM,EAAKyO,UADX,cAERG,QAAO,SAAC5P,GACX,EAAKD,MAAQC,EACbQ,EAAQR,KACT,cALY,2CAAZ,0D,iQAUc1H,KAAKmX,U,cAApBC,E,yBACCA,EAAOC,a,oRAIP,IAAIpP,SAAQ,SAACC,EAASC,GACzB,IAAMoP,EAAQ,EAAKC,cAAc,EAAKhP,MAEtC+O,EAAMnO,UAAN,uCAAkB,WAAOpE,GAAP,eAAA0D,EAAA,uDACR0O,EAAS5M,SAASC,cAAc,WAC/B7L,MAAQ2Y,EAAME,WACrBL,EAAOhM,OAASmM,EAAMG,YACVN,EAAOO,WAAW,MAC1BC,UAAUL,EAAO,EAAG,EAAGH,EAAOxY,MAAOwY,EAAOhM,QAChDlD,EAAQkP,GACRvP,IAAIQ,gBAAgBkP,EAAM3P,KAPZ,2CAAlB,0D,qIAYMjH,GACV,IAAM4W,EAAQ/M,SAASC,cAAc,SAMrC,OALA8M,EAAM3P,IAAMC,IAAIC,gBAAgBnH,GAChC4W,EAAMxP,QAAU,OAChBwP,EAAMpN,YAAcnK,KAAKyW,UAAY,IACrCc,EAAMvP,OAECuP,M,KAIM1J,G,WAEjB,WAAYvL,GAAO,oBACftC,KAAKsC,KAAOA,E,+KAiBCtC,KAAKsC,KAAKH,S,wSAIVnC,KAAKsC,KAAK8K,U,mTAIJpN,KAAKsC,KAAKoF,O,OAAvBA,E,OACA6C,EAAMvM,OAAO6J,IAAIC,gBAAgBJ,GACjCgB,EAAI8B,SAASC,cAAc,KACjCD,SAASvH,KAAKyH,YAAYhC,GAC1BA,EAAEiC,MAAQ,gBACVjC,EAAEkC,KAAOL,EACT7B,EAAEmC,SAAW7K,KAAKsC,KAAKJ,KACvBwG,EAAEoC,QACFjD,IAAIQ,gBAAgBkC,GACpB7B,EAAEqC,S,kIArBF,OAAO/K,KAAKsC,KAAKJ,Q,kCAVH8I,EAAcyL,EAAWtU,EAAQoF,GAC/C,IAAMsQ,EAAY7M,EAAa9I,KAAKgJ,UAAU,EAAGF,EAAa9I,KAAKiJ,YAAY,MAAQ,IAAMsL,EAAY,IAAMlP,EAC/G,OAAO,IAAIsG,EAAM,IAAImJ,GAAgBa,EAAW1V,EAAQoF,M,+BAG5CiB,EAAMiO,GAClB,OAAO,IAAI5I,EAAM,IAAIqJ,GAAc1O,EAAMiO,Q,KCvGlC,OAA0B,uCCQnC/S,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCmU,WAAY,CACRpZ,SAAU,WACV0M,OAAQ,qBACRxM,MAAO,OACPE,OAAQ,IACRN,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChBgN,WAAY,SACZC,QAAS,GACTC,UAAW,SACXC,eAAgB,cAChBC,iBAAkB,YAClBC,mBAAoB,UAExBiM,kBAAmB,CACfhM,gBAAgB,OAAD,OAAS+L,GAAT,MAEnB9L,kBAAmB,CACfD,gBAAgB,OAAD,OAASC,EAAT,UAIR,SAASgM,GAAYhZ,GAChC,IAAMC,EAAUyE,KACT6D,EAAsEvI,EAAtEuI,UAAW0Q,EAA2DjZ,EAA3DiZ,uBAAwB1L,EAAmCvN,EAAnCuN,aAAc2L,EAAqBlZ,EAArBkZ,QAAS7M,EAAYrM,EAAZqM,SAF1B,EAG2B1N,qBAH3B,mBAGhCwa,EAHgC,KAGLC,EAHK,KAKvClZ,qBAAU,WAAM,4CACZ,sBAAAwJ,EAAA,kEACI0P,EADJ,SACuC7Q,EAAU8Q,mBADjD,8EADY,uBAAC,WAAD,wBAKZC,KACD,CAAC/Q,IAEJ,IAAMgR,EAA2BN,EAAyBE,EACpDK,GAAyBL,EAE/B,OACI,eAAC,IAAMxB,SAAP,WACI,qBAAKlX,UAAS,UAAKR,EAAQ6Y,WAAb,YAA2B7Y,EAAQ8Y,mBAAjD,SACI,cAAC5L,EAAA,EAAD,CAAMxM,IAAKuY,IAAY7M,EAAUjM,QAAS,IAA1C,SACI,eAAC0G,EAAA,EAAD,oEAC0D,uBACrD0S,GACG,gDACgB,cAAC/L,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAM2B,EAA/D,uBADhB,mDAIHgM,GACG,iDACiB,cAAC9L,EAAA,EAAD,CAAMC,MAAM,YAAYlG,OAAO,SAASmG,IAAI,aAAa/B,KAAM2B,EAA/D,oBADjB,2BAOhB,cAACJ,EAAA,EAAD,CAAMxM,GAAIuY,IAAY7M,EAAUjM,QAAS,IAAzC,SACI,qBAAKK,UAAS,UAAKR,EAAQ6Y,WAAb,YAA2B7Y,EAAQ+M,0B,ICpE5CyM,G,WAEjB,WAAYC,GAAY,oBACpB1Y,KAAK2Y,QAAU,IAAIC,iBAAiBF,GACpC,IAAMG,EAAO7Y,KACbA,KAAK2Y,QAAQG,UAAY,SAACpJ,GAAW,IAAD,EAChC,UAAAmJ,EAAKE,iBAAL,cAAAF,EAAiBnJ,I,wDAIbqC,GACR/R,KAAK2Y,QAAQzG,YAAYH,K,8BAIzB/R,KAAK2Y,QAAQK,Y,KCfAC,G,WAEjB,WAAYhH,EAAO1K,GAAY,IAAD,2BAC1BvH,KAAKiS,MAAQA,EACbjS,KAAKkZ,SAAW,SAACnH,GACiB,IAAD,EAAzBA,EAAQE,QAAUA,IAClB,YAAK8G,iBAAL,gBAAiB,CACbzW,KAAMyP,EAAQzP,SAK1BiF,EAAU4R,UAAUnZ,KAAKkZ,UACzBlZ,KAAKuH,UAAYA,E,wDAGTwK,GACR/R,KAAKuH,UAAU6R,YAAYrH,EAAS/R,KAAKiS,S,8BAIzCjS,KAAKuH,UAAU8R,YAAYrZ,KAAKkZ,c,KCrBnBI,G,WAEjB,aAAe,oBACXtZ,KAAKuZ,YAAc,EACnBvZ,KAAKwZ,SAAU,E,iDAGdC,GACD,OAAIzZ,KAAKwZ,QACE9L,KAAKC,IAAI8L,EAAKzZ,KAAKuZ,YAAcG,KAAKC,MAAQ3Z,KAAKmP,WAGvDzB,KAAKC,IAAI8L,EAAKzZ,KAAKuZ,e,6BAIrBvZ,KAAKwZ,UAIVxZ,KAAKwZ,SAAU,EACfxZ,KAAKuZ,aAAeG,KAAKC,MAAQ3Z,KAAKmP,a,8BAItCnP,KAAKmP,UAAYuK,KAAKC,MACtB3Z,KAAKwZ,SAAU,I,8BAGXI,GACA5Z,KAAKwZ,SACLxZ,KAAKmP,UAAYuK,KAAKC,MACtB3Z,KAAKuZ,YAAcK,GAEnB5Z,KAAKuZ,YAAcK,I,+BAIlBH,GACL,OAAe,IAARA,EAAY,EAAI/L,KAAKC,IAAI,EAAG3N,KAAK4Z,KAAKH,GAAOA,O,kRCdtDI,GAAmBvb,aAAW,SAACqF,GAAD,MAAY,CAC5CmW,UAAW,CACPpb,SAAU,WACVqb,KAAM,MACNnb,MAAO,MACPob,OAAQ,EACRnb,cAAe,QAEnBob,gBAAiB,CACbzO,cAAe,OAEnB0O,YAAa,CACTxN,MAAO/I,EAAMuP,QAAQlQ,OAAOmX,OAC5B3b,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChB2M,OAAQ,OACRnH,OAAQ,UACR2I,SAAU,GACVwN,WAAY,IAEhBC,YAAa,CACTjP,OAAQ,OACR5M,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChBmO,SAAU,GACVwN,WAAY,GACZxb,MAAO,IACP8N,MAAO/I,EAAMuP,QAAQ5S,KAAKga,UAC1Bzb,cAAe,QAEnB0b,0BAA2B,CACvBtK,WAAYtM,EAAMuM,YAAYC,OAAO,SAAU,CAC3CC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzC5J,YAAa,EACb/R,cAAe,QAEnB4b,2BAA4B,CACxBxK,WAAYtM,EAAMuM,YAAYC,OAAO,SAAU,CAC3CC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzC5J,YAAa,EACb/R,cAAe,QAEnB6b,kBAAmB,CACfzK,WAAYtM,EAAMuM,YAAYC,OAAO,QAAS,CAC1CC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzC5b,MAAO,EACPC,cAAe,QAEnB8b,iBAAkB,CACd1K,WAAYtM,EAAMuM,YAAYC,OAAO,QAAS,CAC1CC,OAAQzM,EAAMuM,YAAYE,OAAOM,QACjCJ,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzC5b,MAAO,IACPC,cAAe,QAEnB+b,uBAAwB,CACpB3K,WAAYtM,EAAMuM,YAAYC,OAAO,aAAc,CAC/CC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzCvO,QAAS,EACTpN,cAAe,QAEnBgc,sBAAuB,CACnB5K,WAAYtM,EAAMuM,YAAYC,OAAO,aAAc,CAC/CC,OAAQzM,EAAMuM,YAAYE,OAAOM,QACjCJ,SAAU3M,EAAMuM,YAAYI,SAASkK,QAEzCvO,QAAS,EACTpN,cAAe,QAEnBic,aAAc,CACVhD,WAAY,6DACZpZ,SAAU,WACVqb,KAAM,QACNnb,MAAO,OACPE,OAAQ,GACR4M,QAAS,IAEbkJ,OAAQ,CACJlI,MAAO/I,EAAMuP,QAAQlQ,OAAOmX,OAC5Btb,cAAe,QAEnBkc,eAAgB,CACZrO,MAAO/I,EAAMuP,QAAQlQ,OAAOmB,SAC5BtF,cAAe,QAEnBmc,SAAU,CACNC,OAAQ,GAEZC,YAAa,CACTxc,SAAU,WACVC,IAAK,EACLwc,MAAO,EACPtc,cAAe,QAEnBuc,cAAe,CACXvc,cAAe,YAIjBwc,GAAuB/c,aAAW,SAACqF,GAAD,MAAY,CAChDmW,UAAW,CACPhC,WAAY,qBACZ1M,OAAQ,EACR6P,OAAQ,kBACRhX,OAAQ,UACRpF,cAAe,QAEnByc,cAAe,CACX1c,MAAO,QAEX2c,KAAM,CACFzD,WAAY,6CACZ1M,OAAQ,QAEZoQ,gBAAiB,CACb9c,SAAU,WACVE,MAAO,EACPwM,OAAQ,GAEZqQ,OAAQ,CACJC,aAAc,MACd9c,MAAO,GACPwM,OAAQ,GACR0M,WAAY,QACZpZ,SAAU,WACVC,IAAK,EACLob,KAAM,GACNjT,OAAQ,gDAIV6U,GAAeC,cAAW,SAACjY,GAAD,MAAY,CACxCpF,KAAM,CACFmO,MAAO/I,EAAMuP,QAAQ5S,KAAKga,UAC1BuB,cAAe,UAEnBC,MAAO,CACH7I,gBAAiB,QACjBvG,MAAO/I,EAAMuP,QAAQ5S,KAAKga,UAC1B,UAAW,CACPyB,UAAW,WAEf,oBAAqB,CACjBA,UAAW,6CAGnB5B,OAAQ,CACJzN,MAAO/I,EAAMuP,QAAQ5S,KAAKga,cAhBbsB,CAkBjBI,MAEJ,SAASC,GAAYC,GACjB,IAAMC,EAAUzO,KAAKwB,MAAMgN,EAAe,KACpCE,EAAU1O,KAAKwB,MAAMiN,EAAU,IAC/BE,EAAkBF,EAAU,GAClC,OAAOG,OAAOF,GAAW,IAAME,OAAOD,GAAiBE,SAAS,EAAG,KAGvE,SAASC,GAAapH,GAClB,IAAMqH,EAAOrH,EAAQsH,wBACrB,OAAOD,EAAKtB,MAAQsB,EAAK1C,KAG7B,SAAS4C,GAAY3d,GACjB,IAAMC,EAAUoc,KACVuB,EAAeC,iBAAO,MAU5B,IAAMC,EAAY,CAACle,MAAOI,EAAM0D,MAAQ,KAClCqa,EAAc,CAAC3C,WAAYwC,EAAaI,QAAUR,GAAaI,EAAaI,SAAWhe,EAAM0D,MAAQ,IAAM,GAEjH,OACI,sBAAK2T,IAAKuG,EAAc1W,QAZ5B,SAAqBlB,GACjB,IAAMyX,EAAOzX,EAAE6Q,cAAc6G,wBACvB9d,EAAQ6d,EAAKtB,MAAQsB,EAAK1C,KAC1BiB,EAAWtN,KAAKC,IAAI,EAAGD,KAAK+L,IAAI,GAAIzU,EAAEiY,MAAQR,EAAK1C,MAAQnb,IAEjEI,EAAMke,OAAOlC,IAOiCvb,UAAWR,EAAQ6a,UAAjE,UACI,qBAAKra,UAAWR,EAAQsc,KAAM5Q,MAAOmS,IACrC,qBAAKrd,UAAWR,EAAQke,aAAxB,SACI,qBAAK1d,UAAWR,EAAQwc,OAAQ9Q,MAAOoS,SAMvD,SAASK,GAAmBpe,GACxB,IAAKA,EAAMgL,aAA4C,IAA7BhL,EAAMgL,YAAYC,OACxC,OAAO,KAGX,IAAMyM,EAAO1X,EAAMgL,YAAYtD,KAAI,SAACO,GAChC,OACI,eAAC0N,GAAA,EAAD,CAEI0I,SAAUpW,EAAEiD,KAAOlL,EAAMse,mBACzB1I,QAAM,EAAC1O,QAAS,kBAAMlH,EAAMue,qBAAqBtW,EAAEiD,KAHvD,UAIKjD,EAAEuW,SAJP,IAIkBvW,EAAEX,QAHXW,EAAEiD,OAQnB,OACI,8BACI,cAACoK,GAAA,EAAD,CACI7O,qBAAqB,EACrBtG,KAAMH,EAAMG,KACZuU,SAAU1U,EAAM0U,SAChBpU,QAASN,EAAMM,QACfiV,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UAAOiC,QAMvB,SAAS+G,GAAYze,GACjB,IAAKA,EAAM2S,MAA8B,IAAtB3S,EAAM2S,KAAK1H,OAC1B,OAAO,KAGX,IAAMyM,EAAO1X,EAAM2S,KAAKjL,KAAI,SAACO,GACzB,OACI,eAAC0N,GAAA,EAAD,CAEI0I,SAAUpW,EAAEiD,KAAOlL,EAAM0e,YACzB9I,QAAM,EAAC1O,QAAS,kBAAMlH,EAAM2e,cAAc1W,EAAEiD,KAHhD,UAIKjD,EAAEiD,GAJP,IAIYjD,EAAEnD,MAJd,IAIsBmD,EAAEW,MAHfX,EAAEiD,OAQnB,OACI,8BACI,cAACoK,GAAA,EAAD,CACI7O,qBAAqB,EACrBtG,KAAMH,EAAMG,KACZuU,SAAU1U,EAAM0U,SAChBpU,QAASN,EAAMM,QACfiV,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UAAOiC,QAMvB,SAASkH,GAAc5e,GACnB,OACI,8BACI,cAACsV,GAAA,EAAD,CACI7O,qBAAqB,EACrBtG,KAAMH,EAAMG,KACZuU,SAAU1U,EAAM0U,SAChBpU,QAASN,EAAMM,QACfiV,aAAc,CACVC,SAAU,MACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,UAXpB,SAaI,cAAC,KAAD,UACI,eAACE,GAAA,EAAD,CAAUC,QAAM,EAAC1O,QAAS,SAAClB,GAAD,OAAOhG,EAAM6e,YAAvC,oBACY7e,EAAMwJ,cAQvB,SAASsV,GAAS9e,GAC7B,IAAMC,EAAU4a,KACTkE,EAAmP/e,EAAnP+e,QAAS9T,EAA0OjL,EAA1OiL,OAAQ+T,EAAkOhf,EAAlOgf,cAAeC,EAAmNjf,EAAnNif,cAAeC,EAAoMlf,EAApMkf,OAAQX,EAA4Lve,EAA5Lue,qBAAsBL,EAAsKle,EAAtKke,OAAQiB,EAA8Jnf,EAA9Jmf,iBAAkBC,EAA4Ipf,EAA5Iof,OAAQC,EAAoIrf,EAApIqf,QAASC,EAA2Htf,EAA3Hsf,OAAQX,EAAmH3e,EAAnH2e,cAAeY,EAAoGvf,EAApGuf,cAAeC,EAAqFxf,EAArFwf,cAAeC,EAAsEzf,EAAtEyf,eAAgBC,EAAsD1f,EAAtD0f,eAAgBC,EAAsC3f,EAAtC2f,iBAAkB5e,EAAoBf,EAApBe,iBAFlM,EAGZpC,oBAAS,GAHG,mBAG7BihB,EAH6B,KAGvBC,EAHuB,OAIwBlhB,oBAAS,GAJjC,mBAI7BmhB,EAJ6B,KAILC,EAJK,OAKgCphB,qBALhC,mBAK7BqhB,EAL6B,KAKDC,EALC,OAMUthB,oBAAS,GANnB,mBAM7BuhB,EAN6B,KAMZC,EANY,OAOkBxhB,qBAPlB,mBAO7ByhB,EAP6B,KAORC,EAPQ,OAQc1hB,oBAAS,GARvB,mBAQ7B2hB,EAR6B,KAQVC,EARU,OASsB5hB,qBATtB,mBAS7B6hB,EAT6B,KASNC,EATM,QAUc9hB,oBAAS,GAVvB,qBAU7B+hB,GAV6B,MAUVC,GAVU,SAWsBhiB,qBAXtB,qBAW7BiiB,GAX6B,MAWNC,GAXM,SAYMliB,oBAAS,GAZf,qBAY7BmiB,GAZ6B,MAYdC,GAZc,SAaRpiB,mBAAS,KAbD,qBAa7BqiB,GAb6B,MAarBC,GAbqB,SAckBtiB,mBAAS,KAd3B,qBAc7BuiB,GAd6B,MAcRC,GAdQ,MAe9BC,GAAuBvD,iBAAO,CAACwD,EAAG,EAAGC,EAAG,IACxCC,GAAuB1D,iBAAOnD,KAAKC,OACnC6G,GAAc3D,kBAAO,GACrB4D,GAAe5D,kBAAO,GACtB6D,GAAiB7D,mBAnBa,GAoBZlf,qBAAfgjB,GApB2B,qBAqB9BC,GAAc7b,uBAAY,kBAAM4b,GAAY,MAAK,IAEjDE,GAAa9b,uBAAY,SAACiW,GAC5BkC,EAAOlC,KACR,CAACkC,IAUJhe,qBAAU,WACN,IAAM4hB,EAAcC,OAAOhhB,EAAiBigB,QAC5CC,GAAUa,GACVpC,EAAeoC,EAAc,KAEzBA,EAAc,GACdX,GAAuBW,KAE5B,CAAC/gB,EAAkB2e,IAEtBxf,qBAAU,WACN,IAAM8hB,EAAWC,aAAY,WACzB,IAAMC,EAAcxH,KAAKC,MAAQ4G,GAAqBvD,QAAU,KACzDtP,KAAKyT,IAAIhD,EAAiBnB,QAAQqD,EAAID,GAAqBpD,QAAQqD,EAAG,GACnE3S,KAAKyT,IAAIhD,EAAiBnB,QAAQsD,EAAIF,GAAqBpD,QAAQsD,EAAG,GAAK,KAC9EG,GAAazD,SACb0D,GAAe1D,UAAYxS,SAAS4W,cAEvCF,IAAgBV,GAAYxD,SAC5BuD,GAAqBvD,QAAUtD,KAAKC,MACpCkF,EAAQqC,KACAA,GAAeV,GAAYxD,SACnC6B,EAAQqC,GAGZV,GAAYxD,QAAUkE,EACtBd,GAAqBpD,QAAQqD,EAAIlC,EAAiBnB,QAAQqD,EAC1DD,GAAqBpD,QAAQsD,EAAInC,EAAiBnB,QAAQsD,IAC3D,KACH,OAAO,kBAAMe,cAAcL,MAC5B,CAAC7C,EAAkBU,EAASD,IAE/B1f,qBAAU,yBAAMkf,QAAN,IAAMA,OAAN,EAAMA,EAASQ,KAAO,CAACR,EAAQQ,IAEzC1f,qBAAU,WACN,IAAIyf,EA6BJ,OAFA3gB,OAAOG,iBAAiB,UAAWmjB,GAE5B,WACHtjB,OAAOI,oBAAoB,UAAWkjB,IA1B1C,SAASA,EAAU5R,GACf,GAAsB,KAAlBA,EAAM6R,QACN7R,EAAMzK,iBAEF8Y,EACAM,IAEAC,SAED,GAAsB,KAAlB5O,EAAM6R,SACTb,GAAe1D,UAAYxS,SAAS4W,cAAe,CACnD,IAAMlD,EAAS6C,OAAOL,GAAe1D,QAAQta,OAE7C,GAAIqe,OAAOS,MAAMtD,GACb,OAGHO,EAAwB,IAATP,GACfwC,GAAe1D,QAAQyE,WAUrC,CAAC1D,EAASM,EAASC,EAAQG,EAAgBE,IAE9C,IAAM+C,GAA2B3c,uBAAY,SAACC,GAAD,aAAOA,EAAEwB,OAAOmb,kBAAkB,GAAG,UAAA3c,EAAEwB,OAAO9D,aAAT,eAAgBuH,SAAU,KAAI,IAEhH/K,qBAAU,WACN,IAAM8hB,EAAWC,aAAY,WACzBL,OACD,KAEH,OAAO,kBAAMS,cAAcL,MAC5B,CAACJ,KAEJ1hB,qBAAU,WACN,GAAIwhB,GAAe1D,QACf,GAAe,IAAXkB,EACAwC,GAAe1D,QAAQta,MAAQ,SAC5B,CACH,IAAMkf,EAAgB1D,EAAS,IACzBxb,EAAQkf,GAAiB,EAAI,IAAMA,EAAcC,QAAQ,GAAKvF,OAAOsF,EAAcC,QAAQ,IACjGnB,GAAe1D,QAAQta,MAAQA,KAGxC,CAACwb,IAEJ,IAAM4D,GAAiC/c,uBAAY,WAC/Cka,EAA8B,MAC9BF,GAA0B,KAC3B,IAEGgD,GAAiChd,uBAAY,SAACC,GAChDia,EAA8Bja,EAAE6Q,eAChCkJ,GAA0B,KAC3B,IAEGiD,GAA2Bjd,uBAAY,SAACmF,GAC1CqT,EAAqBrT,GACrB+U,EAA8B,MAC9BF,GAA0B,KAC3B,CAACxB,IAEE0E,GAA0Bld,uBAAY,WACxCsa,EAAuB,MACvBF,GAAmB,KACpB,IAEG+C,GAA0Bnd,uBAAY,SAACC,GACzCqa,EAAuBra,EAAE6Q,eACzBsJ,GAAmB,KACpB,IAEGgD,GAAoBpd,uBAAY,SAACmF,GACnCyT,EAAczT,GACdmV,EAAuB,MACvBF,GAAmB,KACpB,CAACxB,IAEEyE,GAA4Brd,uBAAY,WAC1C0a,EAAyB,MACzBF,GAAqB,KACtB,IAEG8C,GAA4Btd,uBAAY,SAACC,GAC3Cya,EAAyBza,EAAE6Q,eAC3B0J,GAAqB,KACtB,IAEG+C,GAAoBvd,uBAAY,WAClCwZ,IACAgB,GAAqB,KACtB,CAAChB,IAEEgE,GAA4Bxd,uBAAY,SAACC,GAC3C6a,GAAyB,MACzBF,IAAqB,KACtB,IAEG6C,GAA4Bzd,uBAAY,SAACC,GAC3C6a,GAAyB7a,EAAE6Q,eAC3B8J,IAAqB,KACtB,IAEG8C,GAAoB1d,uBAAY,WAClCyZ,IACAmB,IAAqB,KACtB,CAACnB,IAEEkE,GAAuB3d,uBAAY,kBAAMgb,IAAiB,KAAQ,IAClE4C,GAAwB5d,uBAAY,kBAAMgb,IAAiB,KAAO,IAElE6C,GAAqB7d,uBAAY,SAACC,EAAGtC,GACvCud,GAAUvd,GACVgc,EAAehc,EAAQ,OACxB,CAACgc,IAEEmE,GAA8B9d,uBAAY,SAACC,EAAGtC,GAC5CA,EAAQ,GACRyd,GAAuBzd,GAG3B3C,EAAiBigB,OAAStd,IAC3B,CAAC3C,IAEE+iB,GAAqB/d,uBAAY,SAACC,EAAGtC,GACvCud,IAAU,SAACD,GACP,IAAM+C,EAAY/C,EAAS,EAAI,EAAIE,GAEnC,OADAxB,EAAeqE,EAAY,KACpBA,OAEZ,CAACrE,EAAgBwB,KAEdlF,GAAWhc,EAAMgkB,MAAMhI,SAAS/Q,GAEtC,OACI,eAAC,IAAM0M,SAAP,WACK3X,EAAMikB,cACH,cAAC9W,EAAA,EAAD,CAAMxM,GAAIif,EAAMxf,QAAS,IAAzB,SACI,cAAC4G,EAAA,EAAD,CACIvG,UAAWR,EAAQic,YACnBhV,QAAS,kBAAMlH,EAAMM,WAFzB,SAII,cAAC,KAAD,QAIZ,sBAAKG,UAAWR,EAAQ6a,UAAWoJ,YAvM3C,SAAyBle,GACrByb,GAAazD,SAAU,GAsM8CmG,WAnMzE,SAAwBne,GACpByb,GAAazD,SAAU,GAkMnB,UACI,cAAC7Q,EAAA,EAAD,CAAMxM,GAAIif,EAAMxf,QAAS,IAAzB,SACI,sBAAKK,UAAWR,EAAQ6b,aAAxB,UACI,cAAC6B,GAAD,CACIO,OAAQ2D,GACRne,MAAkB,IAAXsY,KAEX,eAACoI,GAAA,EAAD,CACItJ,WAAS,EACTra,UAAWR,EAAQmc,cACnBiI,UAAU,MAHd,UAKI,cAACD,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CACIE,QAAS,kBAAM6X,EAAUM,IAAYC,KADzC,SAGKP,EACK,cAAC,KAAD,CAAWte,UAAWR,EAAQ2V,SAC9B,cAAC,KAAD,CAAenV,UAAWR,EAAQ2V,aAG/C5V,EAAMskB,eACH,eAACF,GAAA,EAAD,CAAMtP,MAAI,EACNoP,YAAaP,GACbQ,WAAYT,GACZjjB,UAAWqgB,GAAgB7gB,EAAQsb,0BAA4Btb,EAAQwb,2BAH3E,UAKI,cAACzU,EAAA,EAAD,CAAYE,QAAS4c,GAArB,SACgB,IAAX9C,GAAgB,cAAC,KAAD,IAAsB,cAAC,KAAD,MAE3C,cAACrE,GAAD,CACIpV,SAAUqc,GACVW,kBAAmBV,GACnBngB,MAAOsd,GACPwD,aAAc,IACdvkB,QAAS,CACLV,KAAMuhB,GAAgB7gB,EAAQ0b,iBAAmB1b,EAAQyb,kBACzDoB,MAAOgE,GAAgB7gB,EAAQ4b,sBAAwB5b,EAAQ2b,6BAK/E,cAACwI,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,sBAAKrU,UAAWR,EAAQib,YAAxB,UACK+B,GAAYjB,GAAW/Q,GAD5B,MACwCgS,GAAYgC,GAAiBhU,QAGxE+T,GACG,cAACoF,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC2P,GAAA,EAAD,CACIC,SAAUhD,GACViD,kBAAkB,EAClBlkB,UAAWR,EAAQob,YACnBuJ,YAAa,OAAM7C,OAAO,GAAGc,QAAQ,GAAK,mBAC1C3b,QAASwb,OAIrB,cAAC0B,GAAA,EAAD,CAAMtP,MAAI,EAACnJ,MAAO,CAAC5G,SAAU,KAE5B/E,EAAM6kB,4BACH,cAACT,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAACzC,GAAA,EAAD,CAASvN,MAAM,iBAAf,SACI,cAACkC,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAOhG,EAAM8kB,yBAAlC,SACI,cAAC,KAAD,CAAWrkB,UAAWT,EAAM+kB,qBAAuB9kB,EAAQ2V,OAAS3V,EAAQ8b,uBAK3F/b,EAAMglB,iBACH,cAACZ,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAOhG,EAAMilB,qBAAlC,SACI,cAAC,KAAD,CAAexkB,UAAWT,EAAMklB,iBAAmBjlB,EAAQ2V,OAAS3V,EAAQ8b,qBAIvF/b,EAAMgW,WACH,cAACoO,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAASsc,GAArB,SACI,cAAC,KAAD,CAAc/iB,UAAWR,EAAQ2V,aAI5C5V,EAAMiW,WACH,cAACmO,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAASmc,GAArB,SACI,cAAC,KAAD,CAAgB5iB,UAAWR,EAAQ2V,aAI9C5V,EAAMgL,aAAehL,EAAMgL,YAAYC,OAAS,GAC7C,cAACmZ,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAAS6b,GAArB,SACI,cAAC,KAAD,CAAgBtiB,UAAWR,EAAQ2V,aAI9C5V,EAAM2S,MAAQ3S,EAAM2S,KAAK1H,OAAS,GAC/B,cAACmZ,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAASgc,GAArB,SACI,cAAC,KAAD,CAAcziB,UAAWT,EAAM0e,YAAcze,EAAQ2V,OAAS3V,EAAQ8b,qBAIjF/b,EAAMmlB,eACH,cAACf,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAAS,kBAAMlH,EAAMolB,kBAAjC,SACI,cAAC,KAAD,CAAe3kB,UAAWR,EAAQ2V,OAAQjK,MAAO3L,EAAMqlB,OAAS,CAACvT,UAAW,mBAAqB,SAI5G9R,EAAMslB,mBACH,cAAClB,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACI,cAAC9N,EAAA,EAAD,CAAYE,QAAS,kBAAMlH,EAAMulB,sBAAjC,SACKvlB,EAAMwlB,WACA,cAAC,KAAD,CAAoB/kB,UAAWR,EAAQ2V,SACvC,cAAC,KAAD,CAAgBnV,UAAWR,EAAQ2V,qBAOlE,cAAC6I,GAAD,CACIte,KAAM+f,GAAmBN,EACzBlL,SAAU0L,EACVzN,KAAM3S,EAAM2S,KACZ+L,YAAa1e,EAAM0e,YACnBpe,QAAS2iB,GACTtE,cAAewE,KAEnB,cAAC/E,GAAD,CACIje,KAAM2f,GAA0BF,EAChClL,SAAUsL,EACVhV,YAAahL,EAAMgL,YACnBsT,mBAAoBte,EAAMse,mBAC1Bhe,QAASwiB,GACTvE,qBAAsByE,KAE1B,cAACpE,GAAD,CACIze,KAAMmgB,EACN5L,SAAU8L,EACVhX,KAAMxJ,EAAMiW,UACZ3V,QAAS8iB,GACTvE,SAAUyE,KAEd,cAAC1E,GAAD,CACIze,KAAMugB,GACNhM,SAAUkM,GACVpX,KAAMxJ,EAAMgW,UACZ1V,QAASijB,GACT1E,SAAU4E,W,IC7rBTgC,G,WAEjB,WAAYpO,GAAM,oBACdrW,KAAKqW,IAAMA,EACXrW,KAAK0kB,cAAgB,G,0FAGd9K,G,qGACA,IAAI3R,SAAQ,SAACC,EAASC,GACrB,EAAKkO,IAAI2G,SACT,EAAK3G,IAAI2G,QAAQ7S,YAAcyP,EAC/B,EAAK+K,iBAAgB,kBAAMzc,QAE3BA,Q,gRAMD,IAAID,SAAQ,SAACC,EAASC,GACrB,EAAKkO,IAAI2G,QACT,EAAK2H,iBAAgB,kBAAMzc,OAE3BA,Q,uIAKIkK,GAAW,IAAD,OACM,IAAxBpS,KAAKqW,IAAIuO,YAKT5kB,KAAKqW,IAAI2G,UAAYhd,KAAKqW,IAAI2G,QAAQ5T,YACtCpJ,KAAKqW,IAAI2G,QAAQ5T,UAAY,SAACpE,GAAO,IAAD,gBACV,EAAK0f,eADK,IAChC,2BAA0C,EACtCxc,EADsC,YADV,8BAKhC,EAAKwc,cAAcza,OAAS,EAC5B,EAAKoM,IAAI2G,QAAQ5T,UAAY,OAKrCpJ,KAAK0kB,cAAc7a,KAAKuI,IAhBpBA,M,6BAmBA,IAAD,EACH,UAAApS,KAAKqW,IAAI2G,eAAT,SAAkB7X,S,8BAGb,IAAD,EACJ,UAAAnF,KAAKqW,IAAI2G,eAAT,SAAkB5U,Y,eCtDnB,SAASyc,GAAWnV,GAEvB,OAAOA,EAAMoV,SAAWpV,EAAMqV,UAA8B,KAAlBrV,EAAM6R,Q,mCCa9CyD,GAA0B1mB,aAAW,SAACqF,GAAD,MAAY,CACnDmW,UAAW,CACP1O,OAAQ,qBACR1M,SAAU,WACVqU,UAAW,SACXE,gBAAiBtP,EAAMuP,QAAQ4E,WAAWmN,QAC1CrmB,MAAO,gBAAEsmB,EAAF,EAAEA,WAAY1X,EAAd,EAAcA,YAAd,OAA+B0X,EAAaxX,KAAK+L,IAAI,IAAK,IAAMjM,GAAe,SAE1F2X,MAAO,CACHlS,gBAAiBtP,EAAMuP,QAAQ4E,WAAWmN,QAC1CrhB,aAAc,IAElBwhB,YAAa,CACTha,OAAQ,OACR5M,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChBgN,WAAY,SACZC,QAAS,GACTC,UAAW,cAIb0Z,GAAuB/mB,aAAW,SAACqF,GAAD,MAAY,CAChD2hB,YAAa,CACT,UAAW,CACPrS,gBAAiBtP,EAAMuP,QAAQlQ,OAAOmQ,QAG9CoS,SAAU,CACN3Y,SAAU,GACV0G,aAAc,EACdE,SAAU,IACV5U,MAAO,OACP4mB,aAAc,YAElBC,mBAAoB,CAChB7Y,SAAU,GACV0G,aAAc,EACdE,SAAU,IACV5U,MAAO,OACP4mB,aAAc,YAElB/O,UAAW,CACP7J,SAAU,GACVF,MAAO,UACPf,UAAW,QACX2H,aAAc,GACdD,YAAa,GAEjBqS,WAAY,CACR/Z,UAAW,QACXD,QAAS,OAIXia,GAAcC,IAAMC,MAAK,SAAC7mB,GAAW,IAChC8mB,EAAyF9mB,EAAzF8mB,MAAOZ,EAAkFlmB,EAAlFkmB,WAAY7H,EAAsEre,EAAtEqe,SAAUkI,EAA4DvmB,EAA5DumB,SAAUQ,EAAkD/mB,EAAlD+mB,YAAa7f,EAAqClH,EAArCkH,QAAS8f,EAA4BhnB,EAA5BgnB,OAAWC,EADzC,aAC0DjnB,EAD1D,+EAEhCC,EAAUomB,KAEZ5lB,EAAYylB,EAAajmB,EAAQwmB,mBAAqBxmB,EAAQsmB,SAElE,OAAIA,EAASle,MAAQ,GAAKke,EAASje,IAAM,EAC9B,KAIP,eAAC0F,GAAA,EAAD,yBACI9G,QAAS,SAAClB,GAAD,OAAOkB,EAAQ4f,IACxBzP,IAAK0P,EACLtmB,UAAWR,EAAQqmB,YACnBjI,SAAUA,GACN4I,GALR,cAOI,cAAChZ,GAAA,EAAD,CAAWxN,UAAWA,EAAtB,SACK8lB,EAASjlB,OAEd,cAAC2M,GAAA,EAAD,CAAWxN,UAAWR,EAAQymB,WAA9B,SACI,cAAC1f,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,OAAOghB,EAAOhhB,EAAG8gB,IAAtC,SACI,cAAC,KAAD,CAAUlZ,SAAUsY,EAAa,QAAU,gBAGnD,cAACjY,GAAA,EAAD,CAAWxN,UAAWR,EAAQwX,UAA9B,SACK8O,EAAStJ,qBAMX,SAASiK,GAAT,GAcP,IAbJlD,EAaG,EAbHA,MACA9F,EAYG,EAZHA,OACA8I,EAWG,EAXHA,OACAjI,EAUG,EAVHA,QACAoI,EASG,EATHA,UACAlc,EAQG,EARHA,OACAmc,EAOG,EAPHA,eACAlB,EAMG,EANHA,WACAhN,EAKG,EALHA,QACA9G,EAIG,EAJHA,WACAiV,EAGG,EAHHA,YACA1H,EAEG,EAFHA,iBACA2H,EACG,EADHA,uBAEMC,EAAa1J,mBACnB0J,EAAWvJ,QAAUe,EACrB,IAAMyI,EAAW3J,mBACjB2J,EAASxJ,QAAUgG,EACnB,IAAMyD,EAAkB5J,mBACxB4J,EAAgBzJ,QAAUmJ,EAC1B,IAAMO,EAAeC,mBAAQ,kBAAMR,EAC7BS,MAAMT,EAAUlc,QAAQsR,OAAO7U,KAAI,SAACmgB,EAAGxU,GAAJ,OAAUyU,yBAC7C,KAAI,CAACX,IACLY,EAAkBlK,mBACxBkK,EAAgB/J,QAAU0J,EAXvB,MAY2D/oB,mBAAS,IAZpE,mBAYIqpB,EAZJ,KAY6BC,EAZ7B,KAaGC,EAA6BrK,iBAAO,IACpCsK,EAAYtK,mBAClBsK,EAAUnK,QAAU/S,EACpB,IAAMmd,EAAyBvK,iBAAO,GAChCwK,EAAsBxK,mBACtBD,EAAeC,mBACCA,mBACRG,QAAU5L,EApBrB,MAqBqB3T,GAAc,GAA/B+P,EArBJ,oBAsBGvO,EAAU+lB,GAAwB,CAACE,aAAY1X,gBA4JrD,SAAS8Z,EAAK5X,EAAOyW,EAAWoB,EAAevB,GAC3CtW,EAAMxK,kBACN,IAAMqgB,EAAWY,EAAUoB,GACrBjnB,EAAOilB,EAASjlB,KACtB0T,UAAUC,UAAUC,UAAU5T,GAC9B0lB,EAAOT,GA7JXrmB,qBAAU,WA2DN,OAFAmoB,EAAoBrK,QAAUwK,uBAxDf,SAATC,EAAU7N,GAWZ,IAVA,IAAMuM,EAAYM,EAAgBzJ,SAAW,GACvC0J,EAAeK,EAAgB/J,QAC/B/S,EAASkd,EAAUnK,QAEnBhC,EADQwL,EAASxJ,QACAhC,SAASmM,EAAUnK,SAEtC0K,EAAgB3G,OAAO4G,iBACvBC,GAAiB,EACfC,EAAyB,GAEtBxV,EAAI8T,EAAUlc,OAAS,EAAGoI,GAAK,IAAKA,EAAG,CAC5C,IAAMyV,EAAI3B,EAAU9T,GACdhL,EAAQygB,EAAEzgB,MAAQ4C,EAClB3C,EAAMwgB,EAAExgB,IAAM2C,EAEpB,GAAI+Q,GAAY3T,EACR2T,EAAW1T,IACXogB,EAAgBrV,EAAIqV,EAAgBrV,EAAIqV,EACxCG,EAAuBxV,IAAK,IAGT,IAAnBuV,IACAA,EAAgBvV,QAEjB,GAAIqV,IAAkB3G,OAAO4G,iBAChC,MASR,GAJID,IAAkB3G,OAAO4G,mBAAuC,IAAnBC,IAC7CC,EAAuBD,IAAiB,ICnKjD,SAAsBlf,EAAGqf,GAC5B,IAAK,IAAIC,KAAOtf,EACZ,KAAMsf,KAAOD,GACT,OAAO,EAIf,IAAK,IAAIC,KAAOD,EACZ,KAAMC,KAAOtf,GACT,OAAO,EAIf,OAAO,EDyJMuf,CAAaJ,EAAwBX,EAA2BlK,WACjEkK,EAA2BlK,QAAU6K,EACrCZ,EAA2BY,GAEvBH,IAAkB3G,OAAO4G,kBAAkB,CAC3C,IAAMO,EAAsBxB,EAAagB,GACnCS,EAAczO,KAAKC,MAAQyN,EAAuBpK,QAAU,KAE3C,OAAnBkL,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBlL,UAAWmL,GAChCD,EAAoBlL,QAAQ3H,eAAe,CACvC+S,MAAO,SACPC,OAAQ,UACRC,SAAU,WAM1BjB,EAAoBrK,QAAUwK,sBAAsBC,MAKjD,kBAAMc,qBAAqBlB,EAAoBrK,YACvD,IAEH9d,qBAAU,WACN,IAAMwnB,EAAeK,EAAgB/J,QAEhC0J,GAAwC,IAAxBA,EAAazc,QAITyc,EAAa,GACrB1J,QAAQ3H,eAAe,CACpC+S,MAAO,SACPC,OAAQ,UACRC,SAAU,aAEf,CAAChC,IAEJpnB,qBAAU,WACN,SAASoiB,EAAU5R,GACf,IAAIiP,GAICwH,GAAkC,IAArBA,EAAUlc,OAA5B,CAIA,IAAIue,EAEJ,GAAsB,KAAlB9Y,EAAM6R,QAAgB,CACtB,IAAMlE,EAAWlc,OAAOC,KAAK4lB,GAC7BwB,EAAmBnL,EAASpT,OAAS,EAC/ByD,KAAK+L,IAAI,EAAG/L,KAAKC,IAAL,MAAAD,KAAI,YAAQ2P,IAAY,IACnC,MACJ,IAAsB,KAAlB3N,EAAM6R,QAMb,OALA,IAAMlE,EAAWlc,OAAOC,KAAK4lB,GAC7BwB,EAAmBnL,EAASpT,OAAS,EAC/ByD,KAAKC,IAAIwY,EAAUlc,OAAS,EAAGyD,KAAK+L,IAAL,MAAA/L,KAAI,YAAQ2P,IAAY,IACtD,EAKX,IAA0B,IAAtBmL,EAAyB,CACzB9Y,EAAMzK,iBACN,IAAM+V,EAAWmL,EAAUqC,GAAkBnhB,MAAQ4C,EACrDiT,EAAOlC,GAAU,KAMzB,OAFAhd,OAAOG,iBAAiB,UAAWmjB,GAE5B,kBAAMtjB,OAAOI,oBAAoB,UAAWkjB,MACpD,CAACpE,EAAQ8J,EAAyBb,EAAWlc,EAAQ0U,IAExDzf,qBAAU,WACN,SAASupB,EAAa/Y,GAClB0X,EAAuBpK,QAAUtD,KAAKC,MAG1C,IAAMwL,EAAQvI,EAAaI,QAG3B,OAFK,OAALmI,QAAK,IAALA,KAAOhnB,iBAAiB,QAASsqB,GAE1B,yBAAMtD,QAAN,IAAMA,OAAN,EAAMA,EAAO/mB,oBAAoB,QAASqqB,MAClD,CAAC7L,EAAcwK,IAElBloB,qBAAU,WACN,GAAKknB,GAAmBD,EAAxB,CAIA,IALY,EAKRuC,GAAe,EACfrW,EAAI,EANI,cAQE8T,GARF,IAQZ,2BAAyB,CAAC,IAAjB2B,EAAgB,QACrB,GAAIA,EAAEa,gBAAkBvC,EAAeuC,eAAiBb,EAAExnB,OAAS8lB,EAAe9lB,KAAM,CACpFooB,EAAcrW,EACd,QAGFA,GAdM,+BAiBS,IAAjBqW,GACAhC,EAAagC,GAAa1L,QAAQ3H,eAAe,CAC5C+S,MAAO,SACPC,OAAQ,UACRC,SAAU,cAGpB,CAAClC,EAAgBD,EAAWO,IAU/BxnB,qBAAU,WACN,SAAS0pB,EAAalZ,GAClB,IAAMmZ,EAAkB1nB,OAAOC,KAAK8lB,EAA2BlK,SAE/D,GAA+B,IAA3B6L,EAAgB5e,QAIf4a,GAAWnV,GAAhB,CAIA,IAAMoW,EAAQpY,KAAKC,IAAL,MAAAD,KAAI,YAAQmb,IAC1BvB,EAAK5X,EAAOyW,EAAWL,EAAOE,IAKlC,OAFAhoB,OAAOG,iBAAiB,UAAWyqB,GAE5B,kBAAM5qB,OAAOI,oBAAoB,UAAWwqB,MACpD,CAACzC,EAAWH,IAEf,IAOI8C,EAPEC,EAAchkB,uBAAY,SAAC+gB,GAC7B,IAAM9K,EAAWmL,EAAUL,GAAOze,MAAQ4C,EAC1CiT,EAAOlC,GAAWuL,EAAWvJ,SAAW8I,KAASkB,KAClD,CAACb,EAAWlc,EAAQiT,EAAQ8J,IAEzBjT,EAAahP,uBAAY,SAACC,EAAG8gB,GAAJ,OAAcwB,EAAKtiB,EAAGmhB,EAAWL,EAAOE,KAAS,CAACG,EAAWH,IAuC5F,OA1BI8C,EATC3C,GAAiC,IAApBA,EAAUlc,OAUpB,cAAC4C,GAAA,EAAD,CAAgBpN,UAAWR,EAAQkmB,MAAnC,SACI,cAACrY,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACKoZ,EAAUzf,KAAI,SAACohB,EAAGhC,GACf,IAAMzI,EAAWyI,KAASkB,EAE1B,OACI,cAACrB,GAAD,CAEIG,MAAOA,EACPZ,WAAYA,EACZ7H,SAAUA,EACVkI,SAAUY,EAAUL,GACpBC,YAAaW,EAAaZ,GAC1B5f,QAAS6iB,EACT/C,OAAQjS,GAPH+R,aAjBhB5N,GAAWmO,GACxB,qBAAK5mB,UAAWR,EAAQmmB,YAAxB,SACI,cAACtf,EAAA,EAAD,4DAiCR,cAACkjB,GAAA,EAAD,CACIC,QAAM,EACNC,UAAW,EACX7S,IAAKuG,EACLnd,UAAWR,EAAQ6a,UAJvB,SAMKgP,I,IExXQK,G,WAEjB,WAAYC,GAAW,oBACnBppB,KAAKopB,SAAWA,EAChBppB,KAAK4Z,KAAO,EACZ5Z,KAAKsQ,SAAW,EAChBtQ,KAAKqpB,SAAU,EACfrpB,KAAK4kB,WAAa,EAClB5kB,KAAKsd,mBAAqB,KAC1Btd,KAAKspB,eAAiB,GACtBtpB,KAAKupB,cAAgB,GACrBvpB,KAAKwpB,eAAiB,GACtBxpB,KAAKypB,qBAAuB,GAC5BzpB,KAAK0pB,4BAA8B,GACnC1pB,KAAK2pB,cAAgB,GACrB3pB,KAAK4pB,gBAAkB,GACvB5pB,KAAK6pB,sBAAwB,GAC7B7pB,KAAK8pB,cAAgB,GACrB9pB,KAAK+pB,6BAA+B,GAEpC,IAAMlR,EAAO7Y,KAEbA,KAAKopB,SAASrQ,UAAY,SAACrJ,GACvB,OAAOA,EAAMpN,KAAK0P,SACd,IAAK,QACD6G,EAAKvI,SAAWZ,EAAMpN,KAAKgO,SAC3BuI,EAAKwQ,SAAU,EACfxQ,EAAK7O,YAAc0F,EAAMpN,KAAK0H,YAC9B6O,EAAKyE,mBAAqB5N,EAAMpN,KAAKgb,mBACrCzE,EAAK+L,WAAa,EAClB/L,EAAKe,KAAOlK,EAAMpN,KAAK6H,YAN3B,oBAQyB0O,EAAKyQ,gBAR9B,IAQI,2BAA0C,EACtClX,EADsC,SAC7B1C,EAAMpN,KAAK0nB,SAT5B,8BAWI,MACJ,IAAK,aAE2B,IAAD,EAA3B,GADAnR,EAAK+L,WAAalV,EAAMpN,KAAKI,MACL,IAApBmW,EAAK+L,WACL,UAAA/L,EAAKzP,iBAAL,cAAAyP,GAEJ,MACJ,IAAK,OAAL,oBACyBA,EAAK0Q,eAD9B,IACI,2BAAyC,EACrCnX,EADqC,SAC5B1C,EAAMpN,KAAK2nB,OAF5B,8BAII,MACJ,IAAK,QAAL,oBACyBpR,EAAK2Q,gBAD9B,IACI,2BAA0C,EACtCpX,EADsC,SAC7B1C,EAAMpN,KAAK2nB,OAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyBpR,EAAK6Q,6BAD9B,IACI,2BAAuD,CAAC,IAA/CtX,EAA8C,QACnDyG,EAAKyE,mBAAqB5N,EAAMpN,KAAK4H,GACrCkI,EAAS1C,EAAMpN,KAAK4H,KAH5B,8BAKI,MACJ,IAAK,cAAL,oBACyB2O,EAAK4Q,sBAD9B,IACI,2BAAgD,EAC5CrX,EAD4C,SACnC1C,EAAMpN,KAAKI,MAAOgN,EAAMpN,KAAK2nB,OAF9C,8BAII,MACJ,IAAK,OAAL,oBACyBpR,EAAK8Q,eAD9B,IACI,2BAAyC,EACrCvX,EADqC,YAD7C,8BAII,MACJ,IAAK,SAAL,oBACyByG,EAAK+Q,iBAD9B,IACI,2BAA2C,EACvCxX,EADuC,SAC9B1C,EAAMpN,KAAKI,QAF5B,8BAII,MACJ,IAAK,eAAL,oBACyBmW,EAAKgR,uBAD9B,IACI,2BAAiD,EAC7CzX,EAD6C,YADrD,8BAII,MACJ,IAAK,OAAL,oBACyByG,EAAKiR,eAD9B,IACI,2BAAyC,EACrC1X,EADqC,SAC5B1C,EAAMpN,KAAKijB,SAAU7V,EAAMpN,KAAKF,MAAOsN,EAAMpN,KAAK7B,QAFnE,8BAII,MACJ,IAAK,sBAAL,oBACyBoY,EAAKkR,8BAD9B,IACI,2BAAwD,EACpD3X,EADoD,YAD5D,8BAII,MACJ,QACI8X,QAAQ1mB,MAAM,sBAAwBkM,EAAMpN,KAAK0P,W,oDAezDI,GACApS,KAAKqpB,SACLjX,IAEJpS,KAAKspB,eAAezf,KAAKuI,K,6BAGtBA,GACHpS,KAAKupB,cAAc1f,KAAKuI,K,8BAGpBA,GACJpS,KAAKwpB,eAAe3f,KAAKuI,K,oCAGfA,GACVpS,KAAKypB,qBAAqB5f,KAAKuI,K,2CAGdA,GACjBpS,KAAK0pB,4BAA4B7f,KAAKuI,K,6BAGnCA,GACHpS,KAAK2pB,cAAc9f,KAAKuI,K,+BAGnBA,GACLpS,KAAK4pB,gBAAgB/f,KAAKuI,K,qCAGfA,GACXpS,KAAK6pB,sBAAsBhgB,KAAKuI,K,6BAG7BA,GACHpS,KAAK8pB,cAAcjgB,KAAKuI,K,4CAGNA,GAClBpS,KAAK+pB,6BAA6BlgB,KAAKuI,K,4BAGrC9B,GACFtQ,KAAKopB,SAASlX,YAAY,CAACF,QAAS,QAAS1B,SAAUA,M,6BAIvDtQ,KAAKopB,SAASlX,YAAY,CAACF,QAAS,W,6BAIpChS,KAAKopB,SAASlX,YAAY,CAACF,QAAS,W,8BAIpChS,KAAKopB,SAASlX,YAAY,CAACF,QAAS,Y,yCAGrB9H,GACflK,KAAKopB,SAASlX,YAAY,CAACF,QAAS,qBAAsB9H,GAAIA,M,gCAGxDic,GACNnmB,KAAKopB,SAASlX,YAAY,CAACF,QAAS,YAAatP,MAAOyjB,M,uCAG3CgE,GACbnqB,KAAKopB,SAASlX,YAAY,CAACF,QAAS,mBAAoBtP,MAAOynB,M,0CAG/CzsB,GAChBsC,KAAKopB,SAASlX,YAAY,CAACF,QAAS,sBAAuBtP,MAAOhF,M,8BAIlEsC,KAAKopB,SAASlX,YAAY,CAACF,QAAS,UACpChS,KAAKopB,SAASpQ,U,kCAtFd,OAAOhZ,KAAK4Z,M,aAGAlX,GACZ1C,KAAK4Z,KAAOlX,EACZ1C,KAAK4kB,WAAa,EAClB5kB,KAAKopB,SAASlX,YAAY,CAACF,QAAS,cAAetP,MAAO1C,KAAK4Z,W,KC1FjElW,GAAYpF,YAAW,CACzBC,KAAM,CACF6rB,UAAW,qBACX1rB,SAAU,WACVqU,UAAW,UAEfsX,WAAY,CACRzrB,MAAO,OACPwM,OAAQ,OACRkf,OAAQ,KAIhB,SAASC,GAAarO,EAAcsO,GAChC,GAAItO,EAAe,EACf,OAAOqO,GAAa,EAAGC,GAG3B,IAAMC,EAAKvO,EAAe,IAEpBwO,GADNxO,GAAgBA,EAAeuO,GAAM,KACT,GAEtBE,GADNzO,GAAgBA,EAAewO,GAAQ,IACX,GAE5B,OAAIF,GAAqB,KAEdI,IADM1O,EAAeyO,GAAQ,IAClB,IAAMC,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGhEG,GAAID,GAAQ,IAAMC,GAAIF,GAAQ,IAAMG,GAAOJ,GAGtD,SAASG,GAAIE,GACT,OAAOxO,OAAOwO,GAAGvO,SAAS,EAAG,KAGjC,SAASsO,GAAOC,GACZ,OAAOxO,OAAOwO,GAAGD,OAAO,EAAG,KAG/B,SAASE,GAAYC,EAAUC,EAAU9E,EAAW+E,GAChD,IAAIC,EAGIA,EAFJhF,GAAaA,EAAUlc,OAAS,EAC5BihB,EACkB/E,EAAUA,EAAUlc,OAAS,GAAG3C,IAEhC6e,EAAUA,EAAUlc,OAAS,GAAGmhB,YAGpC,EAGtB,IAAMC,EAAcL,EAAShO,SAAWgO,EAAShO,QAAQ1M,SACnD,IAAO0a,EAAShO,QAAQ1M,SACxB,EAEAgb,EAAcL,EAASjO,SAAWiO,EAASjO,QAAQ1M,SACnD,IAAO2a,EAASjO,QAAQ1M,SACxB,EAEN,OAAO5C,KAAK+L,IAAI6R,EAAa5d,KAAK+L,IAAI0R,EAAiBE,IAG5C,SAASE,GAAOvsB,GAAQ,IAC5BwsB,EAAiJxsB,EAAjJwsB,eAAgBzrB,EAAiIf,EAAjIe,iBAAkBwH,EAA+GvI,EAA/GuI,UAAWkkB,EAAoGzsB,EAApGysB,UAAWC,EAAyF1sB,EAAzF0sB,cAAeta,EAA0EpS,EAA1EoS,WAAYua,EAA8D3sB,EAA9D2sB,QAASnN,EAAqDxf,EAArDwf,cAAewH,EAAsChnB,EAAtCgnB,OAAQ4F,EAA8B5sB,EAA9B4sB,SAAUjN,EAAoB3f,EAApB2f,iBADlG,EAEuC3f,EAAM6sB,QAAxE7gB,EAF2B,EAE3BA,aAAciK,EAFa,EAEbA,UAAW6W,EAFE,EAEFA,aAAc9W,EAFZ,EAEYA,UAAW+W,EAFvB,EAEuBA,aAFvB,EAGZpuB,qBAHY,mBAG3BwU,EAH2B,KAGtB6Z,EAHsB,OAIAruB,qBAJA,mBAI3BwoB,EAJ2B,KAIhB8F,EAJgB,KAK5BC,EAAerP,mBACrBqP,EAAalP,QAAUmJ,EANW,MAOcxoB,oBAAS,GAPvB,mBAO3BwuB,EAP2B,KAOTC,EAPS,OAQJzuB,oBAAS,GARL,mBAQ3BogB,EAR2B,KAQlBsO,EARkB,OAS0B1uB,mBAAS,GATnC,mBAS3B2oB,EAT2B,KASHgG,EATG,KAU5B/F,EAAa1J,mBACnB0J,EAAWvJ,QAAUe,EAXa,MAYVpgB,qBAAfgjB,EAZyB,sBAaIhjB,qBAbJ,mBAa3BqM,EAb2B,KAaduiB,EAbc,OAckB5uB,qBAdlB,mBAc3B2f,EAd2B,KAcPkP,GAdO,QAeN7uB,mBAAS,GAfH,qBAe3BugB,GAf2B,MAenBuO,GAfmB,SAgBA9uB,qBAhBA,qBAgB3B+a,GAhB2B,MAgBhBgU,GAhBgB,SAiBI/uB,oBAAS,GAjBb,qBAiB3BgvB,GAjB2B,MAiBdC,GAjBc,SAkBsBjvB,oBAAS,GAlB/B,qBAkB3BomB,GAlB2B,MAkBL8I,GAlBK,MAmB5BC,GAA0BjQ,mBAChCiQ,GAAwB9P,QAAU+G,GAClC,IAAMnD,GAAc7b,uBAAY,kBAAM4b,EAAY,MAAK,IACjDxC,GAAmBtB,iBAAO,CAACwD,EAAE,EAAGC,EAAE,IAClC0K,GAAWnO,mBACXoO,GAAWpO,mBACXkQ,GAAepG,mBAAQ,WACzB,OACW,IAAIlC,GADXqH,EACwBd,GACjBe,GAAgB5Z,EACC8Y,GAGJ,MACzB,CAACa,EAAcC,EAAc5Z,IAC1B6Q,GAAQ2D,mBAAQ,kBAAM,IAAIrN,KAAS,IACnCra,GAAUyE,KAnCkB,GAoCQ/F,mBAAS,IApCjB,qBAoC3BqvB,GApC2B,MAoCZC,GApCY,MAqC5B9F,GAAYtK,iBAAO,GACzBsK,GAAUnK,QAAU+N,GAAYC,GAAUC,GAAU9E,GAAW,GAE/D,IAAM+G,GAAOnoB,sBAAW,uCAAC,WAAOiW,EAAUgI,EAAOiH,GAAxB,eAAAvhB,EAAA,yDACfkR,EAAOoB,EAAWmM,GAAUnK,QAClCgG,EAAMmK,QAAQvT,GACdgH,MAEIqJ,EALiB,gCAMX8C,GAAaG,KAAKtT,EAAO,KANd,2CAAD,0DAQrB,CAACgH,GAAamM,KAmOjB,SAAS5nB,GAAK6d,EAAO+J,EAAc9C,GAC/BoC,GAAW,GACXrJ,EAAM3b,QAEF4iB,GACA8C,EAAa5nB,OAIrB,SAASiD,GAAM4a,EAAO+J,EAAc9C,GAChCoC,GAAW,GACXrJ,EAAMxZ,OAEFygB,GACA8C,EAAa3kB,QA/OrBlJ,qBAAU,WAAM,4CACZ,wCAAAwJ,EAAA,yDACI,UAAAuiB,GAASjO,eAAT,SAAkBhE,QAClBiS,GAASjO,QAAU,KACnBgG,GAAMmK,QAAQ,GACdnK,GAAMxZ,OACN6iB,GAAW,GACXE,EAAe,MACfC,GAAsB,MACtBC,GAAU,GACVI,IAAwB,GACxB7B,GAAShO,QAAQ7S,YAAc,EAC/B6gB,GAAShO,QAAQ5U,SAIb4C,EAfR,wBAgBQohB,GAAoB,GAhB5B,oBAmBgCZ,EAAerF,UAAUnb,GAnBzD,QAmBkBqD,EAnBlB,OAoBkBpE,EAASoE,EAAMpE,OAAS,EAAIoE,EAAMA,EAAMpE,OAAS,GAAG3C,IAAM,EAChE6e,EAAY9X,EAAM3H,KAAI,SAACohB,GAAD,MAAQ,CAC1BxnB,KAAMwnB,EAAExnB,KACR+G,MAAOygB,EAAEzgB,MACTshB,cAAeb,EAAEzgB,MACjBC,IAAKwgB,EAAExgB,IACP8jB,YAAatD,EAAExgB,IACf2U,YAAasO,GAAazC,EAAEzgB,MAAO4C,OAGvCgiB,EAAa9F,GACbmG,EAA0B5S,KAAKC,OA/B3C,mDAiCYgS,EAAQ,KAAE5Z,SAjCtB,yBAmCYqa,GAAoB,GAnChC,6CAsCQjG,EAAY,KAtCpB,YAyCQ2F,EAzCR,kCA0CciB,GAAaK,UA1C3B,QA2CQxM,KA3CR,yBA4CemL,GAAgB5Z,KAGnB4Z,GACMrT,EAAY4D,OAAO5C,KAAKC,OAC9BhB,EAAU,IAAIwQ,GAAa,IAAI1Q,GAA8BC,IAC7DgU,GAAahU,IACNvG,IACPwG,EAAU,IAAIwQ,GAAa,IAAIlQ,GAAuB9G,EAAIjI,GAAI3C,KACtD8lB,OAGZpC,GAASjO,QAAUrE,EACf2U,GAAa,EAEjB3U,EAAQyU,SAAQ,SAACpD,GACb7C,GAAUnK,QAAU+N,GAAYC,GAAUC,GAAUiB,EAAalP,SACjErE,EAAQ4U,MAAMpG,GAAUnK,SAEpBkP,EAAalP,UACbrE,EAAQ6U,iBAAiBztB,EAAiBytB,kBAC1C7U,EAAQwN,UAAU+F,EAAalP,UAGnCrE,EAAQ8U,oBAAoBX,GAAwB9P,SAEhDrE,EAAQ3O,aAAe2O,EAAQ3O,YAAYC,OAAS,GACpDsiB,EAAetB,GAASjO,QAAQhT,aAChCwiB,GAAsBvB,GAASjO,QAAQM,sBAEvCiP,EAAe,MACfC,GAAsB,OAG1BxJ,GAAMmK,QAAuC,IAA/BlC,GAASjO,QAAQ7S,aAE3B6f,EACAhH,GAAMxZ,OAENwZ,GAAM3b,QAGVglB,GAAYrC,GAEPsD,IACD3U,EAAQ2F,QAAO,SAAC2L,GAAD,OAAU9kB,GAAK6d,GAAO+J,GAAc9C,MACnDtR,EAAQ0F,SAAQ,SAAC4L,GAAD,OAAU7hB,GAAM4a,GAAO+J,GAAc9C,MACrDtR,EAAQ+U,QAAO,kBAAMlP,EAAcuN,MACnCpT,EAAQgV,UAAS,SAACzP,GAAD,aAAYuO,GAAU/e,KAAK+L,IAAL,WAAU0N,GAAUnK,eAApB,QAA+B,EAAGkB,OACzEvF,EAAQyL,gBAAe,kBAAMwI,IAAe,SAAAvI,GAAM,OAAKA,QACvD1L,EAAQqN,QAAO,SAACT,EAAUnjB,EAAO3B,GAAlB,OAA4BulB,EACvCT,EACAtQ,EACAD,EACAhK,EACA2N,EAAQ2E,mBACRlb,EACA3B,MAEJkY,EAAQmL,uBAAsB,kBAAM+I,IAAwB,SAAAnvB,GACxD,IAAMkF,GAAYlF,EAElB,OADAib,EAAQ8U,oBAAoB7qB,GACrBA,QAEX+V,EAAQiV,cAAR,uCAAsB,WAAOzjB,EAAa8f,GAApB,eAAAvhB,EAAA,6DACZsS,EAAyB,IAAd7Q,EAAqBgd,GAAUnK,QAE5CuJ,EAAWvJ,SACXgG,GAAMxZ,OAJQ,SAOZ0jB,GAAKlS,EAAUgI,GAAOiH,GAPV,OASd1D,EAAWvJ,SACXgG,GAAM3b,QAVQ,2CAAtB,yDAaAsR,EAAQ4E,qBAAR,uCAA6B,WAAOrT,GAAP,SAAAxB,EAAA,6DACrB6d,EAAWvJ,SACXgG,GAAMxZ,OAFe,SAKnBujB,GAAaK,UALM,OAMrB7G,EAAWvJ,SACXgG,GAAM3b,QAGVmlB,GAAsBtiB,GAVG,2CAA7B,uDAaAojB,GAAa,OAtI7B,kEADY,uBAAC,WAAD,gCA6IZD,GAAOQ,MAAK,kBAAMjC,SACnB,CAACJ,EAAgBjkB,EAAWxH,EAAkBijB,GAAO+J,GAAcG,GAAMtB,EAAUD,EAASnN,EAAewH,EAAQhb,EAAciK,EAAW6W,EAAc9W,EAAW+W,EAAc5Z,EAAKyO,GAAa8K,IAExMxsB,qBAAU,WACN,GAAK6kB,IAIAoC,GAAkC,IAArBA,EAAUlc,OAA5B,CAIA,IAAI6jB,GAAU,EACVC,EAAmB,IAEjB/M,EAAWC,YAAW,sBAAC,8CAAAvY,EAAA,yDACnBuB,EAASkd,GAAUnK,QADA,iDAOnBhC,EAAWgI,GAAMhI,SAAS/Q,GAE5B+jB,EAAqB,EACrBC,GAAgB,EAEX5b,EAAI8T,EAAUlc,OAAS,EAZP,YAYUoI,GAAK,GAZf,oBAafyV,EAAI3B,EAAU9T,GACdhL,EAAQygB,EAAEzgB,MAAQ4C,EAClB3C,EAAMwgB,EAAExgB,IAAM2C,IAEhB+Q,GAAY3T,GAjBK,wBAkBb2T,EAAW1T,GACX2mB,EAAe5b,EACf2b,EAAqB3b,GAErB2b,EAAqBtgB,KAAKC,IAAIwY,EAAUlc,OAAS,EAAGoI,EAAI,GAtB3C,+BAYoBA,EAZpB,0BA6BrB4b,IAAiBD,EA7BI,uBA8BfE,EAAe/H,EAAU6H,IAEd3mB,MAAQ2T,EAAW/Q,EAAS8jB,EAAmB,KAhC3C,sDAoCjBxH,EAAWvJ,SACXgG,GAAMxZ,OAGLskB,EAxCgB,wBAyCjBA,GAAU,EACJK,EAAKzU,KAAKC,MA1CC,UA2CXuT,GAAKgB,EAAa7mB,MAAQ4C,EAAQ+Y,IAAO,GA3C9B,QA4CjB+K,EAAmBrU,KAAKC,MAAQwU,EAChCL,GAAU,EA7CO,QAgDjBvH,EAAWvJ,SACXgG,GAAM3b,QAjDW,4CAoD1B,KAEH,OAAO,kBAAMga,cAAcL,OAC5B,CAACmF,EAAWpC,GAAsBf,GAAOkK,KAE5ChuB,qBAAU,WACFytB,IAAejU,IAAaqT,GAC5B/tB,OAAOmB,KACHivB,qBAAsCC,mBAAmBtC,GAAgB,YAAcrT,GAAY,eACnG,mBAAqBqT,EACrB,kCAIRO,EAA0B5S,KAAKC,SAChC,CAACgT,GAAajU,GAAWqT,EAAcL,IAoB1C,IAAM4C,GAAavpB,uBAAY,kBAAMI,GAAK6d,GAAO+J,IAAc,KAAO,CAAC/J,GAAO+J,KACxEwB,GAAcxpB,uBAAY,kBAAMqD,GAAM4a,GAAO+J,IAAc,KAAO,CAAC/J,GAAO+J,KAC1ElM,GAAa9b,sBAAW,uCAAC,WAAOiW,GAAP,SAAAtS,EAAA,6DACvB6d,EAAWvJ,SACXgG,GAAMxZ,OAFiB,SAKrB0jB,GAAKlS,EAAUgI,IAAO,GALD,OAOvBuD,EAAWvJ,SACXgG,GAAM3b,QARiB,2CAAD,sDAU3B,CAAC2b,GAAOkK,KAELsB,GAAuBzpB,sBAAW,uCAAC,WAAOiW,EAAUyT,GAAjB,SAAA/lB,EAAA,6DAChC+lB,GACDrmB,GAAM4a,GAAO+J,IAAc,GAG3BxG,EAAWvJ,SACXgG,GAAMxZ,OAN2B,SAS/B0jB,GAAKlS,EAAUgI,IAAO,GATS,OAWjCyL,IAAelI,EAAWvJ,SAE1B7X,GAAK6d,GAAO+J,IAAc,GAbO,2CAAD,wDAerC,CAAC/J,GAAOkK,GAAMH,KAEXhZ,GAAahP,uBAAY,SAACwgB,EAAUmJ,GACtC1I,EACIT,EACAtQ,EACAD,EACAhK,EACAsS,KAEL,CAAC0I,EAAQ/Q,EAAWD,EAAWhK,EAAcsS,IAE1CqR,GAAkB5pB,uBAAY,SAACC,GACjCmZ,GAAiBnB,QAAQqD,EAAIrb,EAAE4pB,QAC/BzQ,GAAiBnB,QAAQsD,EAAItb,EAAE6pB,UAChC,IAEG7M,GAA2Bjd,sBAAW,uCAAC,WAAOmF,GAAP,SAAAxB,EAAA,6DACrCuiB,GAASjO,SACTiO,GAASjO,QAAQ8R,mBAAmB5kB,GAGxC9B,GAAM4a,GAAO+J,IAAc,GALc,SAOnCG,GAAK,EAAGlK,IAAO,GAPoB,OASrCuD,EAAWvJ,SACX7X,GAAK6d,GAAO+J,IAAc,GAVW,2CAAD,sDAYzC,CAAC/J,GAAO+J,GAAcG,KAEnB/K,GAAoBpd,uBAAY,SAACmF,GACnC,IAAMiI,EAAM6a,GAAclmB,QAAO,SAAAG,GAAC,OAAIA,EAAEiD,KAAOA,KAAI,GACnD8hB,EAAO7Z,KACR,CAAC6a,KAEE+B,GAAqBhqB,uBAAY,SAACmZ,GAAY,IAAD,EAC/CuO,GAAU/e,KAAK+L,IAAL,WAAU0N,GAAUnK,eAApB,QAA+B,EAAGkB,MAC7C,IAEHhf,qBAAU,WACFusB,IACAA,EAAUzO,QAAUkB,IAGxB+N,GAAa,SAAC9F,GAAe,IAAD,EACxB,GAAKA,EAAL,CAIA,IAAMlc,EAASkc,EAAUlc,OAAS,EAAIkc,EAAUA,EAAUlc,OAAS,GAAG3C,IAAM4W,GAAS,EAE/E8Q,EAAe7I,EAAUzf,KAAI,SAAAohB,GAAC,MAAK,CACrCxnB,KAAMwnB,EAAExnB,KACR+G,MAAOygB,EAAEa,cAAgBzK,GACzByK,cAAeb,EAAEa,cACjBrhB,IAAKwgB,EAAEsD,YAAclN,GACrBkN,YAAatD,EAAEsD,YACfnP,YAAasO,GAAazC,EAAEa,cAAgBzK,GAAQjU,OAKxD,OAFA,UAAAghB,GAASjO,eAAT,SAAkBmJ,UAAU6I,GAErBA,QAGZ,CAAC9Q,GAAQuN,IAEZ,IAAM7I,GAAqB7d,uBAAY,SAACkqB,GAChCjE,GAAShO,UACTgO,GAAShO,QAAQgD,OAASiP,KAE/B,IAEGC,GAA4BnqB,uBAAY,kBAAO8nB,IAAwB,SAAAoC,GAAC,OAAKA,OAAI,IAEvF/vB,qBAAU,WACN,IAAM8hB,EAAWC,aAAY,WACzB,IAAMhX,EAASkd,GAAUnK,QACRgG,GAAMhI,SAAS/Q,IAEhB,IACZ+Y,GAAMmK,QAAQ,GACdnK,GAAMxZ,OACNujB,GAAa3kB,QACbikB,GAAW,GACXC,EAA0B5S,KAAKC,UAEpC,KAEH,OAAO,kBAAM0H,cAAcL,MAC5B,CAACgC,GAAOmD,EAAW4G,KAEtB7tB,qBAAU,WACN,IAAM8hB,EAAWC,aAAY,WACzB,GAAIjiB,EAAMuI,UAAUoK,KAAK1H,SAAW+iB,GAAc/iB,OAC9CgjB,GAAiBjuB,EAAMuI,UAAUoK,UAC9B,CAGH,IAFA,IAAI8V,GAAS,EAEJpV,EAAI,EAAGA,EAAI2a,GAAc/iB,SAAUoI,EAAG,CAC3C,IAAM8c,EAAKnC,GAAc3a,GACnB+c,EAAKpwB,EAAMuI,UAAUoK,KAAKU,GAChC,GAAI8c,EAAGjlB,KAAOklB,EAAGllB,IACVilB,EAAGrrB,QAAUsrB,EAAGtrB,OAChBqrB,EAAGvnB,MAAQwnB,EAAGxnB,IAAK,CACtB6f,GAAS,EACT,OAIJA,GACAwF,GAAiBjuB,EAAMuI,UAAUoK,MAIhBQ,GAAyF,IAAlFnT,EAAMuI,UAAUoK,KAAK7K,QAAO,SAAAG,GAAC,OAAIA,EAAEiD,KAAOiI,EAAIjI,IAAMjD,EAAEW,MAAQuK,EAAIvK,OAAKqC,SAGnG+hB,EAAO,MACPhtB,EAAM2sB,QAAQ,4BAA8BxZ,EAAIjI,GAAK,IAAMiI,EAAIrO,UAEpE,KAEH,OAAO,kBAAMud,cAAcL,MAC5B,CAACgM,GAAe7a,EAAKnT,IAExBE,qBAAU,WACN8sB,EAAO,QACR,CAAC/W,EAAWD,IAEf,IAAM/K,GAASkd,GAAUnK,QACnBqS,GAASvD,GAAgBC,GAAgB5F,EACzCmJ,GAAgBD,IAAUtD,GAAgBrT,KAAciU,GAE9D,OACI,sBACI4C,YAAaZ,GACblvB,UAAWR,GAAQV,KAFvB,UAII,eAAC6kB,GAAA,EAAD,CACItJ,WAAS,EACTuJ,UAAU,MACVmM,KAAK,SAHT,UAKSF,IACG,cAAClM,GAAA,EAAD,CAAMtP,MAAI,EAACnJ,MAAO,CAAC5G,SAAU,EAAGyP,SAAU,KAA1C,SACI,wBACI6C,IAAKqV,EACLjsB,UAAWR,GAAQorB,WACnBziB,IAAKwmB,qBAAsCC,mBAAmBtC,GAAgB,YAAcrT,GAAY,gBACxG5U,MAAM,gBAItB,eAACsf,GAAA,EAAD,CAAMtP,MAAI,EAACnJ,MAAO,CAAC5G,SAAUurB,GAAgB,EAAI,GAAjD,UACKD,MAAYtD,IAAiBY,KAC1B,cAAC7O,GAAD,CACIK,iBAAkBA,GAClBJ,QAASA,EACTiF,MAAOA,GACP/Y,OAAQA,GACRgU,cAAe8M,GAAYC,GAAUC,GAAU9E,GAAW,GAC1Dnc,YAAaA,EACbsT,mBAAoBA,EACpB3L,MAAOoa,IAAiBD,GAAgBkB,GACxCtP,YAAavL,GAAOA,EAAIjI,GACxB+K,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW/S,KACtB8S,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAW9S,KACtB8b,eAAe,EACfE,OAAQA,GACRoF,cAAemM,QAAQ3D,GACvBjI,2BAA4B4L,QAAQ3D,GACpC/H,qBAAsBA,GACtBzF,OAAQgQ,GACRjQ,QAASkQ,GACTrR,OAAQ2D,GACRtD,qBAAsByE,GACtBrE,cAAewE,GACf5D,cAAe,kBAAMvf,EAAMuf,cAAcuN,IACzCtN,cAAe,kBAAMxf,EAAMwf,cAAcuN,IACzCtN,eAAgBsQ,GAChBrQ,eAAgBkE,GAChBkB,sBAAuBoL,GACvBvQ,iBAAkBA,EAClB5e,iBAAkBA,IAG1B,cAACmmB,GAAD,CACInI,QAASA,EACToI,UAAWA,EACXnD,MAAOA,GACP/Y,OAAQA,GACRmc,eAAgBpnB,EAAMonB,eACtBhV,WAAYA,EACZ8T,WAAY6G,IAAiBY,GAC7BzU,QAASiU,EACT9F,YAAaoJ,QAAQ1D,GAAgBD,GACrCnN,iBAAkBA,EAClB2H,uBAAwBA,EACxBpJ,OAAQsR,GACRxI,OAAQjS,WAIpB,uBAAOsC,IAAK2U,GAAUpjB,IAAKkkB,O,cCjlBxB,SAAS4D,GAAT,GAAmF,IAAvDvwB,EAAsD,EAAtDA,KAAMkF,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,SAAUqrB,EAA2B,EAA3BA,yBAA2B,EAC3DhyB,mBAAS,IADkD,mBACtF8E,EADsF,KAC3EmtB,EAD2E,KAG7F1wB,qBAAU,WACN0wB,EAAa,MACd,CAACzwB,IAEJ,IAAM0wB,EAAc,sBACbF,GADa,CAEhB,WACA,OACA,aACA,SACA,QACA,UACFG,SAASrtB,GAEX,OACI,eAAC+C,EAAA,EAAD,CACIrG,KAAMA,EACNsG,qBAAmB,EACnBC,WAAS,EACTC,SAAS,KACTC,gBAAiB,kBAAMtB,KAL3B,UAOI,cAACyrB,GAAA,EAAD,+BACA,cAAC5pB,EAAA,EAAD,UACI,+BACI,cAACC,EAAA,EAAD,CACI5C,MAAOqsB,EACPG,WAAYH,GAAW,gBAAaptB,EAAb,mBACvBsD,QAAQ,SACRL,WAAS,EACTY,MAAM,aACN5D,MAAOD,EACP8D,SAAU,SAACvB,GAAD,OAAO4qB,EAAa5qB,EAAEwB,OAAO9D,cAInD,eAACiE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQV,QAAS,kBAAM5B,KAAvB,oBAGA,cAACsC,EAAA,EAAD,CACIzC,SAAU0rB,GAAoC,KAArBptB,EAAUwtB,OACnC/pB,QAAS,kBAAM7B,EAAU5B,EAAUwtB,SAFvC,0B,0EChCVvsB,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrCpF,KAAM,CACF,uBAAwB,CACpB2xB,UAAWvsB,EAAME,QAAQ,GACzBD,aAAcD,EAAME,QAAQ,KAGpCssB,gBAAiB,CACb,uBAAwB,CACpBD,UAAWvsB,EAAME,QAAQ,GACzBD,aAAcD,EAAME,QAAQ,GAC5BjF,MAAO,MAGfwxB,eAAgB,CACZxxB,MAAO,YAITyxB,GAA6B/xB,aAAW,SAACqF,GAAD,MAAY,CACtD2sB,YAAa,CACTrV,OAAQtX,EAAME,QAAQ,GACtB2P,SAAU,KAEdjV,KAAM,CACFC,QAAS,OACTgN,cAAe,MACf/M,eAAgB,MAChBgN,WAAY,gBAIpB,SAAS8kB,GAAT,GAA2G,IAA/EjqB,EAA8E,EAA9EA,MAAO5D,EAAuE,EAAvEA,MAAO8tB,EAAgE,EAAhEA,WAAYC,EAAoD,EAApDA,UAAWlqB,EAAyC,EAAzCA,SAAUmqB,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,UACpF1xB,EAAUoxB,GAA2B,CAACI,UAAWA,IAEvD,OACI,sBAAKhxB,UAAWR,EAAQV,KAAxB,UACI,cAAC6H,EAAA,EAAD,CACIE,MAAOA,EACP5D,MAAOA,EACP6D,SAAUA,IAEd,eAACqqB,GAAA,EAAD,CAAanxB,UAAWR,EAAQqxB,YAAhC,UACI,cAACO,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACIpuB,MAAOA,EACPyB,UAAWqsB,EACXjqB,SAAUmqB,EAHd,SAKKF,GAAcA,EAAW9pB,KAAI,SAAAohB,GAAC,OAC3B,cAACiJ,GAAA,EAAD,CAAkBruB,MAAOolB,EAAzB,SAA6BA,GAAdA,WAI1B2I,GACG,cAACzqB,EAAA,EAAD,CAAYE,QAAS,SAAClB,GAAD,cAAO2rB,QAAP,IAAOA,OAAP,EAAOA,KAA5B,SACI,cAAC,KAAD,SAOpB,SAASK,GAAShyB,GACd,OACI,cAACokB,GAAA,EAAD,CAAMtJ,WAAS,EACXjW,QAAS,EACTwf,UAAU,MACV5X,WAAW,SACXwlB,QAAQ,SAJZ,SAMI,cAAC7N,GAAA,EAAD,CAAMtP,MAAI,EAAV,SACK9U,EAAMa,aAMR,SAASqxB,GAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,KAAMhyB,EAA0B,EAA1BA,KAAMgrB,EAAoB,EAApBA,SAAU7qB,EAAU,EAAVA,QACpDL,EAAUyE,KADoD,EAEpC/F,mBAAS,GAF2B,mBAE7DyzB,EAF6D,KAEnDC,EAFmD,OAGxB1zB,mBAASwsB,EAASlqB,gBAHM,mBAG7DA,EAH6D,KAG7CqxB,EAH6C,OAId3zB,qBAJc,mBAI7D4zB,EAJ6D,KAIxCC,EAJwC,OAKM7zB,mBAAS,GALf,mBAK7D8zB,EAL6D,KAK9BC,EAL8B,OAM5C/zB,mBAASwsB,EAASzoB,MAAQ,IANkB,mBAM7DA,EAN6D,KAMvDiwB,EANuD,OAOlCh0B,qBAPkC,mBAO7Di0B,EAP6D,KAOlDC,EAPkD,OAQpCl0B,mBAASwsB,EAASxoB,UAAY,IARM,mBAQ7DA,EAR6D,KAQnDmwB,EARmD,OAShCn0B,qBATgC,mBAS7Do0B,EAT6D,KASjDC,EATiD,OAU1Br0B,mBAASwsB,EAASppB,eAAiB,IAVT,mBAU7DA,EAV6D,KAU9CkxB,EAV8C,QAWtBt0B,mBAASwsB,EAASnpB,iBAAmB,IAXf,qBAW7DA,GAX6D,MAW5CkxB,GAX4C,SAYhCv0B,mBAASwsB,EAASloB,YAAc,IAZA,qBAY7DA,GAZ6D,MAYjDkwB,GAZiD,SAahCx0B,mBAASwsB,EAAS5nB,YAAc,IAbA,qBAa7DA,GAb6D,MAajD6vB,GAbiD,SAclCz0B,mBAASwsB,EAASlpB,WAAa,IAdG,qBAc7DA,GAd6D,MAclDoxB,GAdkD,SAe9B10B,mBAASwsB,EAASjpB,aAAe,IAfH,qBAe7DA,GAf6D,MAehDoxB,GAfgD,SAgB5B30B,mBAASwsB,EAAS7oB,kBAhBU,qBAgB7DmD,GAhB6D,MAgB/C8tB,GAhB+C,SAiBhC50B,qBAjBgC,qBAiB7D60B,GAjB6D,MAiBjDC,GAjBiD,SAkBV90B,oBAAS,GAlBC,qBAkB7D+0B,GAlB6D,MAkBtCC,GAlBsC,SAmB1Bh1B,mBAASwsB,EAASyI,eAnBQ,qBAmB7DA,GAnB6D,MAmB9CC,GAnB8C,SAoB5Bl1B,mBAASwsB,EAAS2I,cApBU,qBAoB7DA,GApB6D,MAoB/CC,GApB+C,SAqBZp1B,mBAASwsB,EAAS6I,sBArBN,qBAqB7DA,GArB6D,MAqBvCC,GArBuC,SAsBJt1B,mBAASwsB,EAAS+I,0BAtBd,qBAsB7DA,GAtB6D,MAsBnCC,GAtBmC,SAuBNx1B,mBAASwsB,EAASiJ,yBAvBZ,qBAuB7DA,GAvB6D,MAuBpCC,GAvBoC,SAwBF11B,mBAASwsB,EAASmJ,2BAxBhB,qBAwB7DA,GAxB6D,MAwBlCC,GAxBkC,MA0B9DC,GAA6BzuB,uBAAY,SAACC,GAC5CssB,EAAkBtsB,EAAEwB,OAAO9D,OAC3BgvB,EAAiChY,KAAKC,SACvC,IAEG8Z,GAA4B1uB,uBAAY,SAACC,GAAD,OAAO0sB,EAAiChY,KAAKC,SAAQ,IAC7F+Z,GAAmB3uB,uBAAY,SAACC,GAAD,OAAO2sB,EAAQ3sB,EAAEwB,OAAO9D,SAAQ,IAC/DixB,GAAuB5uB,uBAAY,SAACC,GAAD,OAAO8sB,EAAY9sB,EAAEwB,OAAO9D,SAAQ,IACvEkxB,GAA4B7uB,uBAAY,SAACC,GAAD,OAAOitB,EAAiBjtB,EAAEwB,OAAO9D,SAAQ,IACjFmxB,GAA8B9uB,uBAAY,SAACC,GAAD,OAAOktB,GAAmBltB,EAAEwB,OAAO9D,SAAQ,IACrFoxB,GAAyB/uB,uBAAY,SAACC,GAAD,OAAOmtB,GAAcntB,EAAEwB,OAAO9D,SAAQ,IAC3EqxB,GAAyBhvB,uBAAY,SAACC,GAAD,OAAOotB,GAAcptB,EAAEwB,OAAO9D,SAAQ,IAC3EsxB,GAAwBjvB,uBAAY,SAACC,GAAD,OAAOqtB,GAAartB,EAAEwB,OAAO9D,SAAQ,IACzEuxB,GAA0BlvB,uBAAY,SAACC,GAAD,OAAOstB,GAAettB,EAAEwB,OAAO9D,SAAQ,IAC7EwxB,GAA4BnvB,uBAAY,SAACC,GAAD,OAAO6tB,GAAiB7tB,EAAEwB,OAAO9D,SAAQ,IACjFyxB,GAA2BpvB,uBAAY,SAACC,GAAD,OAAO+tB,GAAgB/tB,EAAEwB,OAAO9D,SAAQ,IAC/E0xB,GAAmCrvB,uBAAY,SAACC,GAAD,OAAOiuB,GAAwBjuB,EAAEwB,OAAO9D,SAAQ,IAC/F2xB,GAAuCtvB,uBAAY,SAACC,GAAD,OAAOmuB,GAA4BnuB,EAAEwB,OAAO9D,SAAQ,IACvG4xB,GAAsCvvB,uBAAY,SAACC,GAAD,OAAOquB,GAA2BruB,EAAEwB,OAAO9D,SAAQ,IACrG6xB,GAAwCxvB,uBAAY,SAACC,GAAD,OAAOuuB,GAA6BvuB,EAAEwB,OAAO9D,SAAQ,IACzG8xB,GAAuBzvB,uBAAY,SAAC1D,GACtCkxB,IAAgB,SAAAkC,GACZ,IAAMC,EAAkB,GAGxB,OAFAvzB,OAAOoE,OAAOmvB,EAAiBD,GAC/BC,EAAgBrzB,GAAmB,GAC5BqzB,KAEX/B,IAAyB,KAC1B,IACGttB,GAA0BN,uBAAY,SAAC1D,EAAiBqB,GAC1D6vB,IAAgB,SAAAkC,GACZ,IAAMC,EAAkB,GAGxB,OAFAvzB,OAAOoE,OAAOmvB,EAAiBD,GAC/BC,EAAgBrzB,GAAmBqB,EAC5BgyB,OAEZ,IACGC,GAA2B5vB,uBAAY,SAAC1D,GAAD,OAAqBkxB,IAAgB,SAAAkC,GAC9E,IAAMC,EAAkB,GAGxB,OAFAvzB,OAAOoE,OAAOmvB,EAAiBD,UACxBC,EAAgBrzB,GAChBqzB,OACP,IAEJx1B,qBAAU,WACN,IAAI01B,GAAW,EAETx1B,EAAUC,WAAU,sBAAC,sBAAAqJ,EAAA,mEAEfksB,EAFe,6DAMnB/C,EANmB,SAMAV,EAAKS,UAAU3xB,GANf,8CAOnB+xB,EAPmB,UAOCb,EAAKY,WAAW9xB,GAPjB,mCAQnBuxB,EAAuB,MARJ,sDAUfoD,EAVe,mDAcnB1K,QAAQ1mB,MAAR,MACAquB,EAAa,MACbG,EAAc,MACdR,EAAuB,KAAEzf,SAjBN,0DAmBxB,KAEH,OAAO,WACH6iB,GAAW,EACXp1B,aAAaJ,MAElB,CAAC+xB,EAAMlxB,EAAgBwxB,IAE1BvyB,qBAAU,WACN,GAAKyC,IAAY4vB,EAAjB,CAIA,IAAIqD,GAAW,EAuBf,OA5BY,mCA0BZC,GAEO,kBAAMD,GAAW,GA5BZ,4CAOZ,sBAAAlsB,EAAA,mEAEYksB,EAFZ,6DAMQnC,GANR,MAMuB,IANvB,kBAMoCtB,EAAK2D,gBAAgB70B,EAAgB0B,GANzE,uFAOQ6vB,EAAuB,MAP/B,sDASYoD,EATZ,mDAaQ1K,QAAQ1mB,MAAR,MACAivB,GAAc,MACdjB,EAAuB,KAAEzf,SAfjC,2DAPY,yBA6Bb,CAACof,EAAMxvB,EAAU1B,EAAgBsxB,EAAqBE,IAEzD,IAAMsD,GAAchwB,uBAAY,WAC5BzF,EAAQ,CACJW,eAAgBA,EAChByB,KAAMA,EACNC,SAAUA,EACVZ,cAAeA,EACfC,gBAAiBA,GACjBiB,WAAYA,GACZM,WAAYA,GACZtB,UAAWA,GACXC,YAAaA,GACb4xB,aAAc/R,OAAO+R,IACrBF,cAAeA,GACfM,yBAA0BnS,OAAOmS,IACjCF,qBAAsBA,GACtBI,wBAAyBA,GACzBE,0BAA2BvS,OAAOuS,IAClChyB,iBAAkBmD,OAEvB,CAACnF,EAASW,EAAgByB,EAAMC,EAAUZ,EAAeC,GAAiBiB,GAAYM,GAAYtB,GAAWC,GAAauD,GAAcquB,GAAcF,GAAeM,GAA0BF,GAAsBI,GAAyBE,KAE3O0B,GAAoB7zB,OAAOC,KAAKqD,IAAciC,KAAI,SAAArF,GACpD,OACI,cAACkvB,GAAD,CAEIjqB,MAAK,UAAKjF,EAAL,UACLqB,MAAO+B,GAAapD,GACpBmvB,WAAYgC,GACZjsB,SAAU,SAAA0uB,GAAU,OAAI5vB,GAAwBhE,EAAiB4zB,IACjEvE,kBAAmB,SAAA1rB,GAAC,OAAIK,GAAwBhE,EAAiB2D,EAAEwB,OAAO9D,QAC1EiuB,UAAW,kBAAMgE,GAAyBtzB,IAC1CovB,WAAW,GAPNpvB,MAYjB,OACI,eAAC,IAAMsV,SAAP,WACI,cAAC+Y,GAAD,CACIvwB,KAAMuzB,GACN/C,yBAA0BxuB,OAAOC,KAAKqD,IACtCJ,UAAWmwB,GACXlwB,SAAU,kBAAMquB,IAAyB,MAE7C,eAACntB,EAAA,EAAD,CACIrG,KAAMA,EACNwG,SAAS,KACTD,WAAS,EACTE,gBAAiBmvB,GAJrB,UAMI,eAACG,GAAA,EAAD,CACIxyB,MAAO0uB,EACPrrB,QAAQ,YACRQ,SAAU,SAACvB,EAAGmwB,GAAJ,OAAiB9D,EAAY8D,IAH3C,UAKI,cAACC,GAAA,EAAD,CAAK9uB,MAAM,SACX,cAAC8uB,GAAA,EAAD,CAAK9uB,MAAM,0BAED,IAAb8qB,GACG,eAACjrB,EAAA,EAAD,WACI,eAACkvB,GAAA,EAAD,0BACiBr3B,OAAOs3B,SAASlM,SAAW,KAAOprB,OAAOs3B,SAASC,SADnE,+FAIA,cAACvE,GAAD,UACI,uBAAMvxB,UAAWR,EAAQV,KAAzB,UACI,8BACI,cAAC6H,EAAA,EAAD,CACIE,MAAM,mBACN5D,MAAOzC,EACPuD,MAAOisB,QAAQ8B,GACfvB,WAAYuB,EACZhrB,SAAUitB,OAGlB,cAACjD,GAAD,CACIjqB,MAAM,OACN5D,MAAOhB,EACP8uB,WAAYoB,EACZrrB,SAAUmtB,GACVhD,kBAAmBgD,KAEvB,cAACnD,GAAD,CACIjqB,MAAM,YACN5D,MAAOf,EACP6uB,WAAYuB,EACZxrB,SAAUotB,GACVjD,kBAAmBiD,KAEvB,cAACpD,GAAD,CACIjqB,MAAM,iBACN5D,MAAO3B,EACPyvB,WAAYgC,GACZjsB,SAAUqtB,GACVlD,kBAAmBkD,KAEvB,cAACrD,GAAD,CACIjqB,MAAM,mBACN5D,MAAO1B,GACPwvB,WAAYgC,GACZjsB,SAAUstB,GACVnD,kBAAmBmD,KAEvB,cAACtD,GAAD,CACIjqB,MAAM,aACN5D,MAAOzB,GACPuvB,WAAYgC,GACZjsB,SAAUytB,GACVtD,kBAAmBsD,KAEvB,cAACzD,GAAD,CACIjqB,MAAM,cACN5D,MAAOT,GACPuuB,WAAYgC,GACZjsB,SAAUutB,GACVpD,kBAAmBoD,KAEvB,cAACvD,GAAD,CACIjqB,MAAM,cACN5D,MAAOH,GACPiuB,WAAYgC,GACZjsB,SAAUwtB,GACVrD,kBAAmBqD,KAEvB,cAACxD,GAAD,CACIjqB,MAAM,eACN5D,MAAOxB,GACPsvB,WAAYgC,GACZjsB,SAAU0tB,GACVvD,kBAAmBuD,KAEtBe,GACD,cAACpuB,EAAA,EAAD,CACInH,UAAWR,EAAQmxB,eACnBlqB,QAAS,SAAClB,GAAD,OAAO2tB,IAAyB,IAF7C,sCAUF,IAAbvB,GACG,cAACjrB,EAAA,EAAD,UACI,cAAC6qB,GAAD,UACI,uBAAMvxB,UAAWR,EAAQV,KAAzB,UACI,qBAAKkB,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,QACLlvB,MAAM,iBACN5D,MAAOkwB,GACPrsB,SAAU2tB,OAGlB,qBAAKz0B,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,SACLlvB,MAAM,gBACN5D,MAAOowB,GACPvsB,SAAU4tB,GACVsB,WAAY,CACR9nB,IAAK,EACL+nB,KAAM,OAIlB,qBAAKj2B,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,QACLlvB,MAAM,yBACN5D,MAAOswB,GACPzsB,SAAU6tB,OAGlB,qBAAK30B,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,SACLlvB,MAAM,6BACN5D,MAAOwwB,GACP3sB,SAAU8tB,GACVoB,WAAY,CACR9nB,IAAK,EACL+nB,KAAM,OAIlB,qBAAKj2B,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,QACLlvB,MAAM,4BACN5D,MAAO0wB,GACP7sB,SAAU+tB,OAGlB,qBAAK70B,UAAWR,EAAQkxB,gBAAxB,SACI,cAAC/pB,EAAA,EAAD,CACIovB,KAAK,SACLlvB,MAAM,8BACNmvB,WAAY,CACR9nB,IAAK,EACL8L,IAAK,EACLic,KAAM,IAEVhzB,MAAO4wB,GACP/sB,SAAUguB,cAOlC,eAAC5tB,EAAA,EAAD,WACkB,IAAbyqB,GAAmB,cAACxqB,EAAA,EAAD,CAAQV,QAASutB,GAAjB,4BACpB,cAAC7sB,EAAA,EAAD,CAAQV,QAAS6uB,GAAjB,yBCzbpB,IASMY,GAAoB,iBACpBC,GAAU,OACVC,GAAc,WACdC,GAAmB,gBACnBC,GAAqB,kBACrBC,GAAgB,aAChBC,GAAgB,aAChBC,GAAe,YACfC,GAAiB,cACjBC,GAAsB,mBACtBC,GAAkB,eAClBC,GAAmB,gBACnBC,GAA8B,2BAC9BC,GAA0B,uBAC1BC,GAA6B,0BAC7BC,GAA+B,4BAC/BC,GAAY,SAEGC,G,iGAGb,MAAO,CACH32B,eAAgBD,KAAKC,eACrByB,KAAM1B,KAAK0B,KACXC,SAAU3B,KAAK2B,SACfZ,cAAef,KAAKe,cACpBC,gBAAiBhB,KAAKgB,gBACtBiB,WAAYjC,KAAKiC,WACjBM,WAAYvC,KAAKuC,WACjBtB,UAAWjB,KAAKiB,UAChBK,iBAAkBtB,KAAKsB,iBACvBJ,YAAalB,KAAKkB,YAClB4xB,aAAc9yB,KAAK8yB,aACnBF,cAAe5yB,KAAK4yB,cACpBM,yBAA0BlzB,KAAKkzB,yBAC/BF,qBAAsBhzB,KAAKgzB,qBAC3BI,wBAAyBpzB,KAAKozB,wBAC9BE,0BAA4BtzB,KAAKszB,6B,uCAKrC,MAAO,CACHR,aAAc9yB,KAAK8yB,aACnBF,cAAe5yB,KAAK4yB,cACpBM,yBAA0BlzB,KAAKkzB,yBAC/BF,qBAAsBhzB,KAAKgzB,qBAC3BI,wBAAyBpzB,KAAKozB,wBAC9BE,0BAA4BtzB,KAAKszB,6B,qCAKrC,OAAOuD,aAAaC,QAAQnB,KA9DN,yB,aAiEPprB,GACfssB,aAAaE,QAAQpB,GAAmBprB,K,2BAIxC,OAAOssB,aAAaC,QAAQlB,K,aAGvBl0B,GACLm1B,aAAaE,QAAQnB,GAASl0B,K,+BAI9B,OAAOm1B,aAAaC,QAAQjB,K,aAGnBl0B,GACTk1B,aAAaE,QAAQlB,GAAal0B,K,oCAIlC,OAAOk1B,aAAaC,QAAQhB,K,aAGd/0B,GACd81B,aAAaE,QAAQjB,GAAkB/0B,K,sCAIvC,OAAO81B,aAAaC,QAAQf,K,aAGZ/0B,GAChB61B,aAAaE,QAAQhB,GAAoB/0B,K,iCAIzC,OAAO61B,aAAaC,QAAQd,K,aAGjB/zB,GACX40B,aAAaE,QAAQf,GAAe/zB,K,iCAIpC,OAAO40B,aAAaC,QAAQb,K,aAGjB1zB,GACXs0B,aAAaE,QAAQd,GAAe1zB,K,gCAIpC,OAAOs0B,aAAaC,QAAQZ,K,aAGlBj1B,GACV41B,aAAaE,QAAQb,GAAcj1B,K,kCAInC,OAAO41B,aAAaC,QAAQX,K,aAGhBj1B,GACZ21B,aAAaE,QAAQZ,GAAgBj1B,K,uCAIrC,IAAM81B,EAAmBH,aAAaC,QAAQV,IAE9C,OAAIY,EACO3zB,KAAKgM,MAAM2nB,GAGf,I,aAGU11B,GACjBu1B,aAAaE,QAAQX,GAAqB/yB,KAAKC,UAAUhC,M,oCAIzD,OAAOu1B,aAAaC,QAAQR,KAlJP,W,aAqJP1D,GACdiE,aAAaE,QAAQT,GAAkB1D,K,mCAIvC,OAAOiE,aAAaC,QAAQT,KA3JR,I,aA8JPvD,GACb+D,aAAaE,QAAQV,GAAiBvD,K,2CAItC,OAAO+D,aAAaC,QAAQN,KAhKA,W,aAmKPxD,GACrB6D,aAAaE,QAAQP,GAAyBxD,K,+CAI9C,OAAO6D,aAAaC,QAAQP,KAzKI,G,aA4KPrD,GACzB2D,aAAaE,QAAQR,GAA6BrD,K,8CAIlD,OAAO2D,aAAaC,QAAQL,KA/KG,W,aAkLPrD,GACxByD,aAAaE,QAAQN,GAA4BrD,K,gDAIjD,OAAOyD,aAAaC,QAAQJ,KAtLK,I,aAyLPpD,GAC1BuD,aAAaE,QAAQL,GAA8BpD,K,6BAInD,OAAOuD,aAAaC,QAAQH,KA7Ld,K,aAgMP3W,GACP6W,aAAaE,QAAQJ,GAAW3W,O,KCxMnBiX,G,WAEjB,WAAYte,GAAU,oBAClB3Y,KAAK2Y,QAAU,IAAIC,iBAAiBD,GACpC3Y,KAAK4Z,KAAO,EACZ5Z,KAAKsQ,SAAW,EAChBtQ,KAAKupB,cAAgB,GACrBvpB,KAAKwpB,eAAiB,GACtBxpB,KAAKypB,qBAAuB,GAC5BzpB,KAAK0pB,4BAA8B,GACnC1pB,KAAKk3B,eAAiB,GACtBl3B,KAAKspB,eAAiB,GACtBtpB,KAAKm3B,mBAAqB,GAC1Bn3B,KAAK+pB,6BAA+B,GAEpC,IAAMlR,EAAO7Y,KAEbA,KAAK2Y,QAAQG,UAAY,SAACpJ,GACtB,OAAOA,EAAMpN,KAAK0P,SACd,IAAK,OAED,MACJ,IAAK,QAAL,oBACyB6G,EAAKyQ,gBAD9B,IACI,2BAA0C,EACtClX,EADsC,SAC7B1C,EAAMpN,KAAKgO,WAF5B,8BAII,MACJ,IAAK,OAAL,oBACyBuI,EAAK0Q,eAD9B,IACI,2BAAyC,EACrCnX,EADqC,YAD7C,8BAII,MACJ,IAAK,QAAL,oBACyByG,EAAK2Q,gBAD9B,IACI,2BAA0C,EACtCpX,EADsC,YAD9C,8BAII,MACJ,IAAK,cAAL,oBACyByG,EAAK4Q,sBAD9B,IACI,2BAAgD,EAC5CrX,EAD4C,SACnC1C,EAAMpN,KAAKI,QAF5B,8BAII,MACJ,IAAK,qBAAL,oBACyBmW,EAAK6Q,6BAD9B,IACI,2BAAuD,EACnDtX,EADmD,SAC1C1C,EAAMpN,KAAK4H,KAF5B,8BAII,MACJ,IAAK,QAAL,oBACyB2O,EAAKqe,gBAD9B,IACI,2BAA0C,EACtC9kB,EADsC,YAD9C,8BAII,MACJ,IAAK,YAAL,oBAC0ByG,EAAKse,oBAD/B,IACI,2BAA+C,EAC3C/kB,EAD2C,SAClC1C,EAAMpN,KAAKI,QAF5B,8BAII,MACJ,IAAK,mBAED,MACJ,IAAK,sBAAL,oBAC0BmW,EAAKkR,8BAD/B,IACI,2BAAyD,EACrD3X,EADqD,SAC5C1C,EAAMpN,KAAKI,QAF5B,8BAII,MACJ,QACIwnB,QAAQ1mB,MAAM,sBAAwBkM,EAAMpN,KAAK0P,W,mDAc1DI,GACHpS,KAAKupB,cAAc1f,KAAKuI,K,8BAGpBA,GACJpS,KAAKwpB,eAAe3f,KAAKuI,K,oCAGfA,GACVpS,KAAKypB,qBAAqB5f,KAAKuI,K,2CAGdA,GACjBpS,KAAK0pB,4BAA4B7f,KAAKuI,K,8BAGlCA,GACJpS,KAAKk3B,eAAertB,KAAKuI,K,8BAGrBA,GACJpS,KAAKspB,eAAezf,KAAKuI,K,kCAGjBA,GACRpS,KAAKm3B,mBAAmBttB,KAAKuI,K,4CAGXA,GAClBpS,KAAK+pB,6BAA6BlgB,KAAKuI,K,4BAGrC9B,EAAU0Z,EAAQhgB,EAAasT,GACjCtd,KAAK2Y,QAAQzG,YAAY,CACrBF,QAAS,QACT1B,SAAUA,EACV0Z,OAAQA,EACR7f,YAAa,EACbH,YAAaA,EACbsT,mBAAoBA,M,iCAIjBsH,GACP5kB,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,aAActP,MAAOkiB,M,6BAIxD5kB,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,OAAQiY,MAAM,M,8BAIjDjqB,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,QAASiY,MAAM,M,yCAGnC/f,GACflK,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,qBAAsB9H,GAAIA,M,6BAG1DgU,GACHle,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,SAAUtP,MAAOwb,M,qCAIpDle,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,mB,2BAGlCuT,GACDvlB,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,OAAQuT,SAAUA,M,4CAIrDvlB,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,0B,8BAI/BhS,KAAK2Y,UACL3Y,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,SACnChS,KAAK2Y,QAAQK,QACbhZ,KAAK2Y,QAAU,Q,kCAvFnB,OAAO3Y,KAAK4Z,M,aAGAlX,GACZ1C,KAAK4Z,KAAOlX,EACZ1C,KAAK2Y,QAAQzG,YAAY,CAACF,QAAS,cAAetP,MAAO1C,KAAK4Z,KAAMqQ,MAAM,Q,KCnE5EvmB,GAAYpF,YAAW,CACzBC,KAAM,CACFG,SAAU,WACVuU,gBAAiB,QACjB7H,OAAQ,QACRgsB,SAAU,SACV54B,QAAS,OACTgN,cAAe,SACf/M,eAAgB,SAChBgN,WAAY,UAEhB8L,MAAO,CACH0D,OAAQ,QAEZoc,aAAc,CACVpzB,OAAQ,UAchB,SAASqzB,GACLxE,EACAF,EACAM,EACAF,EACAI,EACAE,GAEA,IAAMiE,EAAS,CACX74B,SAAU,WACV2U,YAAa,GACbC,aAAc,GACd0G,OAAQ,IACRrO,UAAW,SACXe,MAAOkmB,EACPhmB,SAAUmU,OAAO+R,IAGrB,GAAII,EAA2B,EAAG,CAC9B,IAAMsE,EAAYtE,EACZxmB,EAAQsmB,EACduE,EAAM,WAAN,cAA8BC,EAA9B,cAA6C9qB,EAA7C,iBAA2D8qB,EAA3D,cAA0E9qB,EAA1E,iBAAwF8qB,EAAxF,cAAuG9qB,EAAvG,iBAAqH8qB,EAArH,cAAoI9qB,GAGxI,GAAI4mB,EAA4B,EAAG,CAC/B,IAAMrnB,EAAUqnB,EADe,EAjCvC,SAAkBmE,GACd,IAAIr3B,EAAS,4CAA4Cs3B,KAAKD,GAC9D,MAAO,CACHE,EAAGC,SAASx3B,EAAO,GAAI,IACvBy3B,EAAGD,SAASx3B,EAAO,GAAI,IACvB2nB,EAAG6P,SAASx3B,EAAO,GAAI,KA+BL03B,CADJ1E,GACPuE,EAHwB,EAGxBA,EAAGE,EAHqB,EAGrBA,EAAG9P,EAHkB,EAGlBA,EACbwP,EAAM,gBAAN,eAAoCI,EAApC,aAA0CE,EAA1C,aAAgD9P,EAAhD,aAAsD9b,EAAtD,KAGJ,OAAOsrB,EAGX,SAASQ,GAAY3iB,EAAS4iB,EAAezL,EAAgBC,GACzD,GAAIxuB,OAAOi6B,YAAc7iB,EAAQqC,WAAa,GAAKrC,EAAQsC,YAAc,EAAG,CACxE,IAAMwgB,EAAal6B,OAAOm6B,OAAOD,YAAcl6B,OAAOi6B,WAAaj6B,OAAOC,YACpEm6B,EAAcp6B,OAAOm6B,OAAOC,aAAep6B,OAAOq6B,YAAcr6B,OAAOE,aACvEiP,EAAcO,KAAKC,IAAI,EAAGD,KAAKC,IAAIuqB,EAAa9iB,EAAQqC,WAAY2gB,EAAchjB,EAAQsC,cAEhG1Z,OAAOs6B,SACHnrB,EAAciI,EAAQqC,YAAczZ,OAAOi6B,WAAaj6B,OAAOC,YAC/DkP,EAAciI,EAAQsC,aAAe1Z,OAAOq6B,YAAcr6B,OAAOE,cAIzE,IAAIq6B,EACAC,EAEJ,GAAIpjB,EAAQpL,YAAa,CACrBuuB,EAAS,GADY,oBAGPnjB,EAAQpL,aAHD,IAGrB,2BAAmC,CAAC,IAA3B/C,EAA0B,QAC/BsxB,EAAO1uB,KAAK,CACRK,GAAIjD,EAAEiD,GACN5D,MAAOW,EAAEX,MACTkX,SAAUvW,EAAEuW,WAGZvW,EAAEvJ,UACF86B,EAAgBvxB,EAAEiD,KAXL,oCAerBquB,EAAS,KACTC,EAAgB,KAGpBjM,EAAegM,GACf/L,EAAsBgM,GACtBR,EAAczK,MAAMnY,EAAQ9E,SAAU8E,EAAQ4U,OAAQuO,EAAQC,GAuCnD,SAASC,GAAYz5B,GAChC,IAAMC,EAAUyE,KACT3D,EAAyDf,EAAzDe,iBAAkBiV,EAAuChW,EAAvCgW,UAAW2D,EAA4B3Z,EAA5B2Z,QAAS0L,EAAmBrlB,EAAnBqlB,OAAQsH,EAAW3sB,EAAX2sB,QAC/C+M,EAAe7b,mBACfoO,EAAWpO,mBAJsB,EAKHpf,GAAc,GALX,mBAKhC+P,EALgC,KAKnBC,EALmB,KAMnCwd,EAASjO,UACTiO,EAASjO,QAAQpe,MAAQ4O,EACzByd,EAASjO,QAAQ5R,OAASqC,GAE9B,IAAMuqB,EAAgBrR,mBAAQ,kBAAM,IAAIsQ,GAActe,KAAU,CAACA,IAV1B,EAWThb,oBAAS,GAXA,mBAWhCogB,EAXgC,KAWvBsO,EAXuB,KAYjC7H,EAzBV,WAA0B,IAAD,EACe7mB,mBAAS8xB,QAAQjlB,SAASmuB,oBADzC,mBACdnU,EADc,KACFoU,EADE,KAUrB,OAPA15B,qBAAU,WACN,IAAMga,EAAW,kBAAM0f,EAAcnJ,QAAQjlB,SAASmuB,qBAGtD,OAFAnuB,SAASrM,iBAAiB,mBAAoB+a,GAEvC,kBAAM1O,SAASpM,oBAAoB,mBAAoB8a,MAC/D,IAEIsL,EAeYqU,GACbtS,EAAa1J,mBACnB0J,EAAWvJ,QAAUe,EAdkB,MAeXpgB,mBAAS,GAfE,mBAehCsM,EAfgC,KAexB6uB,EAfwB,OAgBXn7B,mBAAS,GAhBE,mBAgBhCugB,EAhBgC,KAgBxBuO,EAhBwB,OAiBD9uB,qBAjBC,mBAiBhCqM,EAjBgC,KAiBnBuiB,EAjBmB,OAkBa5uB,qBAlBb,mBAkBhC2f,EAlBgC,KAkBZkP,EAlBY,OAmBL7uB,mBAAS,IAnBJ,mBAmBhCwoB,EAnBgC,KAmBrB8F,EAnBqB,OAoBGtuB,mBAAS,IApBZ,mBAoBhCo7B,EApBgC,KAoBjBC,EApBiB,OAqBSr7B,oBAAS,GArBlB,mBAqBhCumB,GArBgC,KAqBd+U,GArBc,QAsBiBt7B,oBAAS,GAtB1B,qBAsBhComB,GAtBgC,MAsBV8I,GAtBU,MAuBjCqM,GAAmBrc,iBAAO,IAChCqc,GAAiBlc,QAAU+b,EAC3B,IAAM/V,GAAQ2D,mBAAQ,kBAAM,IAAIrN,KAAS,IACnC6E,GAAmBtB,iBAAO,CAACwD,EAAE,EAAGC,EAAE,IAClC1D,GAAeC,mBA3BkB,GA4Bblf,qBA5Ba,qBA4BhCw7B,GA5BgC,MA4BzBC,GA5ByB,SA6BLz7B,oBAAS,GA7BJ,qBA6BhC07B,GA7BgC,MA6BrBC,GA7BqB,SA8BO37B,oBAAS,GA9BhB,qBA8BhC47B,GA9BgC,MA8BfC,GA9Be,MAgCjCC,GAAmB10B,uBAAY,SAAAqQ,GAC7BA,IACA6V,EAASjO,QAAU5H,EAEQ,IAAvBA,EAAQwP,WACRmT,GAAY3iB,EAAS4iB,EAAezL,EAAgBC,GAEpDpX,EAAQskB,aAAe,SAAChqB,GACpBqoB,GAAY3iB,EAAS4iB,EAAezL,EAAgBC,IAI5DpX,EAAQhM,UAAY,SAACsG,GACjBsoB,EAAcpT,WAAW,GAErB2B,EAAWvJ,SACXgG,GAAM3b,SAId+N,EAAQukB,QAAU,SAACjqB,GAAD,OAAWic,EAxFzC,SAAsBvW,GAClB,IAAI5R,EACJ,OAAQ4R,EAAQ5R,MAAMo2B,MAClB,KAAK,EACDp2B,EAAQ,UACR,MACJ,KAAK,EACDA,EAAQ,gBACR,MACJ,KAAK,EACDA,EAAQ,iBACR,MACJ,KAAK,EACDA,EAAQ,uBACR,MACJ,QACIA,EAAQ,gBAIhB,OAAOA,EAAQ,MAAQ4R,EAAQ5R,MAAMuO,SAAW,qBAoEH8nB,CAAazkB,QAEvD,CAAC4N,GAAOgV,EAAerM,IAE1B,SAASmO,GAAiB5vB,GAAK,IAAD,gBACZ+gB,EAASjO,QAAQhT,aADL,IAC1B,2BAA4C,CAAC,IAApC/C,EAAmC,QACpCA,EAAEiD,KAAOA,EACTjD,EAAEvJ,SAAU,EAEZuJ,EAAEvJ,SAAU,GALM,+BAU9BwB,qBAAU,WAuDN,OAtDA84B,EAAc5K,SAAQ,SAAC9c,GAAD,OAAcwoB,EAAUxoB,MAE9C0nB,EAAc1Z,QAAO,WACjB2M,EAASjO,QAAQ7X,OACjB6d,GAAM3b,QACNglB,GAAW,MAGf2L,EAAc3Z,SAAQ,WAClB4M,EAASjO,QAAQ5U,QACjB4a,GAAMxZ,OACN6iB,GAAW,MAGf2L,EAAcpK,eAAc,SAACzjB,GAAiB,IAAD,EACrC8gB,EAASjO,UACTiO,EAASjO,QAAQ7S,YAAcA,GAGE,KAAjC,UAAA8gB,EAASjO,eAAT,eAAkB4H,aAClBoT,EAAcpT,WAAW,GAG7B5B,GAAMxZ,OACNwZ,GAAMmK,QAAsB,IAAdhjB,MAGlB6tB,EAAcza,sBAAqB,SAACrT,GAChC4vB,GAAiB5vB,GACjB8tB,EAAclJ,mBAAmB5kB,MAGrC8tB,EAAc14B,SAAQ,WAClB04B,EAAchf,QACdhb,OAAOgb,WAGXgf,EAAc+B,aAAY,SAAC5T,GAEvB,GADA8F,EAAa9F,GACTA,GAAaA,EAAUlc,OAAS,EAAG,CACnC,IAAM6d,EAAI3B,EAAU,GACdjI,EAAS4J,EAAEzgB,MAAQygB,EAAEa,cAC3B8D,EAAUvO,OAIlB8Z,EAAclU,uBAAsB,SAACpmB,GAAD,OAAamvB,GAAwBnvB,MAEzEM,OAAOg8B,eAAiB,SAACh1B,GAChB0zB,EAAa1b,SACdgb,EAAchf,SAIf,kBAAMgf,EAAchf,WAC5B,CAACgK,GAAOgV,IAEX,IAAM1J,GAAavpB,uBAAY,WACvBkmB,EAASjO,SACTgb,EAAc7yB,SAEnB,CAAC6yB,IAEEzJ,GAAcxpB,uBAAY,kBAAMizB,EAAc5vB,UAAS,CAAC4vB,IAExDnX,GAAa9b,uBAAY,SAACiW,GACxBuL,EAAWvJ,SACXgG,GAAMxZ,OAGV,IAAMoQ,EAAOoB,EAAW/Q,EACxB+tB,EAAc7tB,YAAcyP,EAAO,MACpC,CAAC3P,EAAQ+Y,GAAOgV,IAOnB,IAAMhW,GAA2Bjd,uBAAY,SAACmF,GACtCqc,EAAWvJ,UACXgG,GAAMxZ,OACNwuB,EAAc5vB,SAGlB0xB,GAAiB5vB,GACjBsiB,EAAsBtiB,GACtB8tB,EAAc7tB,YAAc,EAC5B6tB,EAAclJ,mBAAmB5kB,KAClC,CAAC8tB,EAAehV,KAEnB9jB,qBAAU,WACN,GAAKinB,GAAkC,IAArBA,EAAUlc,OAA5B,CAIA,IAAM+W,EAAWC,aAAY,WAIzB,IAHA,IAAMtH,EAAM,IAAOsR,EAASjO,QAAQ7S,YAC9B4uB,EAAgB,GAEb1mB,EAAI,EAAGA,EAAI8T,EAAUlc,SAAUoI,EAAG,CACvC,IAAMyV,EAAI3B,EAAU9T,GAMpB,GAJIsH,GAAOmO,EAAEzgB,OAASsS,EAAMmO,EAAExgB,KAC1ByxB,EAAclvB,KAAd,2BAAuBie,GAAvB,IAA0BhC,MAAOzT,KAGjCsH,EAAMmO,EAAEzgB,MACR,OPnUb,SAAqBqB,EAAGqf,GAAgC,IAA7BkS,EAA4B,uDAAnB,SAACvxB,EAAGqf,GAAJ,OAAUrf,IAAMqf,GACvD,GAAIrf,EAAEuB,SAAW8d,EAAE9d,OACf,OAAO,EAGX,IAAK,IAAIoI,EAAI,EAAGA,EAAI3J,EAAEuB,SAAUoI,EAC5B,IAAK4nB,EAAOvxB,EAAE2J,GAAI0V,EAAE1V,IAChB,OAAO,EAIf,OAAO,GO4TM6nB,CAAYnB,EAAeG,GAAiBlc,SAAS,SAACmd,EAAIC,GAAL,OAAYD,EAAGrU,QAAUsU,EAAGtU,UAClFkT,EAAiBD,KAEtB,IAEH,OAAO,kBAAMv5B,aAAawhB,OAC3B,CAACmF,IAEJjnB,qBAAU,WACN,SAASm7B,EAAe3qB,GACpB,GAAKub,EAASjO,SAAYmJ,GAAkC,IAArBA,EAAUlc,OAAjD,CAIA,IAAIqwB,EAEJ,GAAsB,KAAlB5qB,EAAM6R,QACN+Y,GAAU,MACP,IAAsB,KAAlB5qB,EAAM6R,QAGb,OAFA+Y,GAAU,EAKd,IAAM3gB,EAAMjM,KAAKiC,MAAM,IAAOsb,EAASjO,QAAQ7S,aAC3Cqe,GAAoB,EAExB,GAAI8R,EAGA,IAFA,IAAIC,EAAUxZ,OAAO4G,iBAEZtV,EAAI,EAAGA,EAAI8T,EAAUlc,SAAUoI,EAAG,CACvC,IAAMyV,EAAI3B,EAAU9T,GACdmoB,EAAO1S,EAAEzgB,MAAQsS,EAEnB4gB,GAAWC,GAIX7gB,EAAMmO,EAAEzgB,QACRkzB,EAAUC,EACVhS,EAAmBnW,QAM3B,IAFA,IAAIkoB,EAAUxZ,OAAO4G,iBAEZtV,EAAI,EAAGA,EAAI8T,EAAUlc,SAAUoI,EAAG,CACvC,IAAMyV,EAAI3B,EAAU9T,GACdmoB,EAAO7gB,EAAMmO,EAAEzgB,MAEjBkzB,GAAWC,GAIX7gB,EAAMmO,EAAEzgB,QACRkzB,EAAUC,EACVhS,EAAmB7O,EAAMmO,EAAExgB,IAAMoG,KAAK+L,IAAI,EAAGpH,EAAI,GAAKA,IAKxC,IAAtBmW,IACA9Y,EAAMzK,iBACN+yB,EAAc7tB,YAAcgc,EAAUqC,GAAkBnhB,MAAQ,MAMxE,OAFArJ,OAAOG,iBAAiB,UAAWk8B,GAE5B,WACHr8B,OAAOI,oBAAoB,UAAWi8B,MAE3C,CAACrC,EAAehV,GAAOmD,EAAWlc,IAErC/K,qBAAU,WACN,SAAS0pB,EAAalZ,GAClB,GAAKwpB,GAAiBlc,SAA+C,IAApCkc,GAAiBlc,QAAQ/S,QAIrD4a,GAAWnV,GAAhB,CAIAA,EAAMxK,kBACNwK,EAAMzK,iBACN,IAAMsgB,EAAW2T,GAAiBlc,QAAQ,GAC1Cgb,EAAc1Q,KAAK/B,GAEff,IACA4U,GAAS,UAAY7T,EAASjlB,MAC9Bg5B,IAAa,KAMrB,OAFAt7B,OAAOG,iBAAiB,UAAWyqB,GAE5B,WACH5qB,OAAOI,oBAAoB,UAAWwqB,MAE3C,CAACoP,EAAexT,IAEnB,IAAMiW,GAAqB11B,uBAAY,SAAC21B,GAAD,OAAalB,GAAmBkB,KAAU,IAC3EC,GAAwB51B,uBAAY,kBAAMk0B,IAAoB,SAAA/U,GAAgB,OAAKA,OAAmB,IAEtG0W,GAAyB71B,uBAAY,WAG/B,IAAD,EAFHyf,EACAha,SAASqwB,iBAET,UAAAje,GAAaI,eAAb,SAAsB8d,sBAE3B,CAACtW,IAEE5B,GAAqB7d,uBAAY,SAACkqB,GAChChE,EAASjO,UACTiO,EAASjO,QAAQgD,OAASiP,KAE/B,IAEGF,GAAqBhqB,uBAAY,SAACmZ,GAAD,OAAY8Z,EAAc9Z,OAAOA,KAAS,CAAC8Z,IAE5E+C,GAAqBh2B,uBAAY,WACnCizB,EAAcgD,eACV3W,IACAqU,EAAa1b,SAAU,EACvBhf,OAAOgb,WAEZ,CAACgf,EAAe3T,IAEb6K,GAA4BnqB,uBAAY,WAC1CizB,EAAcvK,wBACf,CAACuK,IAEEjD,GAAchwB,uBAAY,WAC5BizB,EAAchf,QACdhb,OAAOgb,UACR,CAACgf,IAEEjP,GAAchkB,uBAAY,WACxBgZ,EACAia,EAAc5vB,QAEd4vB,EAAc7yB,SAEnB,CAAC6yB,EAAeja,IAEbkd,GAAoBl2B,uBAAY,kBAAMu0B,IAAa,KAAQ,IArU1B,GAsUmGv5B,EAAiBytB,iBAApJsF,GAtUgC,GAsUhCA,aAAcF,GAtUkB,GAsUlBA,cAAeM,GAtUG,GAsUHA,yBAA0BF,GAtUvB,GAsUuBA,qBAAsBI,GAtU7C,GAsU6CA,wBAAyBE,GAtUtE,GAsUsEA,0BACvG4H,GAAiBvU,mBAAQ,kBAAM2Q,GACjCxE,GACAF,GACAM,GACAF,GACAI,GACAE,MACD,CACCR,GACAF,GACAM,GACAF,GACAI,GACAE,KAGJ,OACI,sBACIjd,IAAKuG,GACL2S,YA7MR,SAAyBvqB,GACrBmZ,GAAiBnB,QAAQqD,EAAIrb,EAAE4pB,QAC/BzQ,GAAiBnB,QAAQsD,EAAItb,EAAE6pB,SA4M3BpvB,UAAWR,EAAQV,KAHvB,UAII,uBACIwJ,QAAQ,OACRozB,WAAY,EACZj1B,QAAS6iB,GACTtpB,UAAW85B,GAAkBt6B,EAAQsY,MAAX,UAAsBtY,EAAQo4B,aAA9B,YAA8Cp4B,EAAQsY,OAChFlB,IAAKojB,GACL7xB,IAAKoN,IACRkP,IACG,qBAAKvZ,MAAOuwB,GAAZ,SACKnC,EAAcryB,KAAI,SAAAohB,GAAC,OAAK,eAAC,IAAMnR,SAAP,WAA+BmR,EAAExnB,KAAK,yBAAjBwnB,EAAEhC,YAGvDtB,GACG,cAAC,EAAD,CACIrlB,KAAMk6B,GACN/5B,QAAS27B,GACT17B,iBAAkB,IAClBK,SAAS,UAJb,SAMKu5B,KAGT,cAACrb,GAAD,CACIK,iBAAkBA,GAClBJ,QAASA,EACTiF,MAAOA,GACP/Y,OAAQA,EACRD,YAAaA,EACbsT,mBAAoBA,EACpB0G,gBAAiBmC,GAAaA,EAAUlc,OAAS,EACjDia,iBAAkBA,GAClBlG,eAAe,EACfE,OAAQA,EACRoG,mBAAmB,EACnBE,WAAYA,EACZvB,cAAeoB,EACfA,OAAQA,EACRf,eAAe,EACfa,eAAe,EACfN,4BAA4B,EAC5BE,qBAAsBA,GACtB3F,OAAQqc,GACRnc,OAAQgQ,GACRjQ,QAASkQ,GACTrR,OAAQ2D,GACRtD,qBAAsByE,GACtBiC,kBAAmB0W,GACnBpW,mBAAoBqW,GACpBlc,eAAgBkE,GAChBnE,eAAgBsQ,GAChB3K,eAAgB2W,GAChBjX,sBAAuBoL,GACvB5vB,QAASy1B,GACTh1B,iBAAkBA,OC9gBlC,IACMwM,GAAe,4DAEf7I,GAAYpF,aAAW,SAACqF,GAAD,MAAY,CACrC4H,QAAS,CACLxH,SAAU,EACVkM,WAAYtM,EAAMuM,YAAYC,OAAO,SAAU,CAC3CC,OAAQzM,EAAMuM,YAAYE,OAAOC,MACjCC,SAAU3M,EAAMuM,YAAYI,SAASC,gBAEzCK,YAAa,GAEjBwqB,aAAc,gBAAE3qB,EAAF,EAAEA,YAAF,MAAoB,CAC9BR,WAAYtM,EAAMuM,YAAYC,OAAO,SAAU,CAC3CC,OAAQzM,EAAMuM,YAAYE,OAAOM,QACjCJ,SAAU3M,EAAMuM,YAAYI,SAASK,iBAEzCC,YAAaH,QAmDrB,SAAS4qB,GAAkBvnB,EAAMoK,GAC7B,OAAIpK,EAAK1R,MACEkI,EAAUgxB,WACbxnB,EAAK9I,aACL8I,EAAKzM,MACLyM,EAAKxM,IACLwM,EAAK1R,MAAMD,OACX2R,EAAK1R,MAAMmF,WAIfuM,EAAKmB,WAAanB,EAAKkB,UAChB1K,EAAUixB,SACbznB,EAAKmB,WAAanB,EAAKkB,UACvBlB,EAAK6U,cAAgBzK,EACrBpK,EAAKsX,YAAclN,EACnBpK,EAAK0nB,YAIN,KAGX,SAASC,GAAc3nB,EAAMoK,GACzB,OAAIpK,EAAKrT,MACEoN,GAAMytB,WACTxnB,EAAK9I,aACL8I,EAAKzM,MACLyM,EAAKrT,MAAM0B,OACX2R,EAAKrT,MAAM8G,WAIfuM,EAAKkB,UACEnH,GAAM0tB,SACTznB,EAAKkB,UACLlB,EAAK6U,cAAgBzK,GAItB,KAGX,SAASwd,GAAQ18B,GACb,IAAMC,EAAUyE,GAAU1E,GAE1B,OACI,sBACIS,UAAW0R,YAAKlS,EAAQsM,QAAT,eACVtM,EAAQm8B,aAAep8B,EAAMoS,aAFtC,SAICpS,EAAMa,WA+aA87B,OA1af,WACI,IAAMnQ,EAAiB7E,mBAAQ,kBAAM,IAAIzY,KAAkB,IACrDnO,EAAmB4mB,mBAAQ,kBAAM,IAAIiQ,KAAoB,IACzDzF,EAAOxK,mBAAQ,kBAAM,IAAI7mB,EAAKC,KAAmB,CAACA,IAClDwH,EAAYof,mBAAQ,kBAAM,IAAIlV,KAAmB,IACjD6jB,EAAWsG,cACXlQ,EAAgB7O,mBAChBgf,EAAsC,WAAtBvG,EAASwG,SAPpB,EAQOr+B,GAAeo+B,GAA1Bj9B,EARI,oBASLm9B,EAAcrQ,EAAc1O,QAAU,GAAK,GAC3Cgf,EAAgBtQ,EAAc1O,QAAU,IAAM,IAC9CvM,EAAc/C,KAAK+L,IAAIuiB,EAAep9B,EAAQm9B,GAXzC,EAYmCp+B,mBAAS,IAZ5C,mBAYJs+B,EAZI,KAYaC,EAZb,OAamCv+B,oBAAS,GAb5C,mBAaJw+B,EAbI,KAaaC,EAbb,OAcez+B,qBAdf,mBAcJw7B,EAdI,KAcGC,EAdH,OAeuBz7B,oBAAS,GAfhC,mBAeJ07B,EAfI,KAeOC,EAfP,OAgB+B37B,qBAhB/B,mBAgBJ0+B,EAhBI,KAgBWC,EAhBX,OAiBiC3+B,qBAjBjC,mBAiBJyoB,EAjBI,KAiBYmW,EAjBZ,OAkBmB5+B,mBAAS,IAlB5B,mBAkBJkuB,EAlBI,KAkBK2Q,EAlBL,QAmBmB7+B,oBAAS,GAnB5B,qBAmBJua,GAnBI,MAmBKukB,GAnBL,SAoBqB9+B,oBAAS,GApB9B,qBAoBJ0N,GApBI,MAoBMqxB,GApBN,MAqBLC,GAAe9f,mBArBV,GAsBqBlf,qBAtBrB,qBAsBJi/B,GAtBI,MAsBMC,GAtBN,SAuBiCl/B,oBAAS,GAvB1C,qBAuBJm/B,GAvBI,MAuBYC,GAvBZ,SAwByCp/B,oBAAS,GAxBlD,qBAwBJq/B,GAxBI,MAwBgBC,GAxBhB,SAyBiCt/B,qBAzBjC,qBAyBJu/B,GAzBI,MAyBYC,GAzBZ,SA0ByCx/B,oBAAS,GA1BlD,qBA0BJy/B,GA1BI,MA0BgBC,GA1BhB,SA2BiC1/B,oBAAS,GA3B1C,qBA2BJ2/B,GA3BI,MA2BYC,GA3BZ,SA4BmC5/B,oBAAS,GA5B5C,qBA4BJ6/B,GA5BI,MA4BaC,GA5Bb,SA6BqC9/B,oBAAS,GA7B9C,qBA6BJghB,GA7BI,MA6Bc+e,GA7Bd,SA8Be//B,qBA9Bf,qBA8BJ8C,GA9BI,MA8BGk9B,GA9BH,MA+BLlS,GAAY5O,mBACV7R,GAAiB6gB,EAAjB7gB,aAEF+I,GAAahP,uBAAY,SAACwgB,EAAUtQ,EAAWD,EAAWhK,EAAcwwB,EAAYp5B,EAAO3B,GAC7Fy7B,GAAmB,SAAAD,GAAe,4BAAQA,GAAR,4BAC3B1W,GAD2B,IAE9B9O,UAAWiD,KAAKC,MAChBzX,KAAM06B,GACN5xB,aAAcA,EACdiK,UAAWA,EACXD,UAAWA,EACXwmB,WAAYA,EACZp5B,MAAOA,EACP3B,MAAOA,SAEX67B,EAAiB,WACjBlD,EAAS,UAAY7T,EAASjlB,MAC9Bg5B,GAAa,KACd,CAACsD,KAEEgB,GAAwB74B,uBAAY,kBAAMq3B,GAAmB,SAAAD,GAAe,OAAKA,OAAkB,IACnG0B,GAAyB94B,uBAAY,kBAAMq3B,GAAmB,KAAQ,IACtE0B,GAAqB/4B,uBAAY,kBAAMs4B,IAAsB,KAAO,IACpEU,GAAiBh5B,uBAAY,kBAAMw4B,IAAkB,KAAO,IAC5DS,GAAkBj5B,uBAAY,kBAAMw4B,IAAkB,KAAQ,IAC9DtC,GAAoBl2B,uBAAY,kBAAMu0B,GAAa,KAAQ,IAC3D2E,GAA0Bl5B,uBAAY,kBAAM04B,IAAmB,KAAQ,IACvES,GAAsBn5B,uBAAY,SAACo5B,GACrCp+B,EAAiBE,eAAiBk+B,EAAYl+B,eAC9CF,EAAiB2B,KAAOy8B,EAAYz8B,KACpC3B,EAAiB4B,SAAWw8B,EAAYx8B,SACxC5B,EAAiBgyB,WAAaoM,EAAYpM,WAC1ChyB,EAAiBgB,cAAgBo9B,EAAYp9B,cAC7ChB,EAAiBiB,gBAAkBm9B,EAAYn9B,gBAC/CjB,EAAiBkC,WAAak8B,EAAYl8B,WAC1ClC,EAAiBwC,WAAa47B,EAAY57B,WAC1CxC,EAAiBkB,UAAYk9B,EAAYl9B,UACzClB,EAAiBmB,YAAci9B,EAAYj9B,YAC3CnB,EAAiB+yB,aAAeqL,EAAYrL,aAC5C/yB,EAAiB6yB,cAAgBuL,EAAYvL,cAC7C7yB,EAAiBmzB,yBAA2BiL,EAAYjL,yBACxDnzB,EAAiBizB,qBAAuBmL,EAAYnL,qBACpDjzB,EAAiBqzB,wBAA0B+K,EAAY/K,wBACvDrzB,EAAiBuzB,0BAA4B6K,EAAY7K,0BACzDvzB,EAAiBuB,iBAAmB68B,EAAY78B,iBAChD+7B,IAAsB,GACtB91B,EAAU62B,eAAe,CAACpsB,QAAS,mBAAoBtP,MAAO3C,EAAiBytB,qBAChF,CAACjmB,EAAWxH,IAETs+B,GAA8Bt5B,uBAAY,SAAA+O,GAC5C,IADoD,EAC9CwqB,EAAqB,GADyB,cAG/BrC,GAH+B,IAGpD,2BAAsC,CAAC,IAA9B1W,EAA6B,QAC9BzR,EAAK2C,YAAc8O,EAAS9O,WAC5B6nB,EAAmBz0B,KAAK0b,IALoB,8BASpD2W,EAAmBoC,KACpB,CAACrC,IAEEsC,GAAcx5B,uBAAY,SAACgN,GAC7BuqB,EAAiB,SACjBlD,EAASrnB,GACTunB,GAAa,KACd,IAEGhX,GAAoBvd,uBAAY,SAAC+mB,GAC/BA,IAAiBD,EAAQC,cAI7B0Q,GAAW,SAAAgC,GAGP,OAFA32B,IAAIQ,gBAAgByjB,GAEb,CACH9gB,aAAcwzB,EAASxzB,aACvBiK,UAAW,KACX6W,aAAc,KACd9W,UAAWwpB,EAASxpB,UACpB+W,aAAcyS,EAASzS,mBAGhC,CAACF,IAEEpJ,GAAoB1d,uBAAY,SAACgnB,GAC/BA,IAAiBF,EAAQE,cAI7ByQ,GAAW,SAAAgC,GAGP,OAFA32B,IAAIQ,gBAAgB0jB,GAEb,CACH/gB,aAAcwzB,EAASxzB,aACvBiK,UAAWupB,EAASvpB,UACpB6W,aAAc0S,EAAS1S,aACvB9W,UAAW,KACX+W,aAAc,WAGvB,CAACF,IAEEzX,GAAkBrP,sBAAW,uCAAC,WAAO+O,GAAP,SAAApL,EAAA,+EAEtB2yB,GAAkBvnB,EAAM2X,GAAUzO,SAAW,GAAGnS,WAF1B,sDAI5Bqf,QAAQ1mB,MAAR,MACA+6B,GAAY,KAAExsB,SALc,wDAAD,sDAOhC,CAACwsB,KAEElqB,GAAsBtP,sBAAW,uCAAC,WAAO+O,GAAP,SAAApL,EAAA,+EAE1B+yB,GAAc3nB,EAAM2X,GAAUzO,SAAW,GAAGnS,WAFlB,sDAIhCqf,QAAQ1mB,MAAR,MACA+6B,GAAY,KAAExsB,SALkB,wDAAD,sDAOpC,CAACwsB,KAEEE,GAA8B15B,uBAAY,SAAC+O,GACzC9I,GAAa9I,OAAS4R,EAAK9I,aAAa9I,KAK5Cq6B,EAAkB,CAACj8B,KAAMwT,EAAKxT,KAAMqoB,cAAe7U,EAAK6U,gBAJpD4V,GAAY,iBAAmBzqB,EAAK9I,aAAa9I,KAAO,mBAK7D,CAAC8I,GAAcuzB,KAEZG,GAAa35B,uBAAY,SAAC+O,GAC5BqpB,GAAkBrpB,GAClBipB,IAAkB,GAClBE,IAAsB,GACtBS,IAAoB,KACrB,IAEGiB,GAAyB55B,uBAAY,WACvCg4B,IAAkB,GAClBE,IAAsB,GACtBS,IAAoB,KACrB,IAEGkB,GAA0B75B,sBAAW,uCAAC,WAAOzE,EAAMC,EAAYC,EAAWC,EAAOC,EAAMC,EAAQC,GAAzD,eAAA8H,EAAA,6DACxCu0B,IAAsB,GADkB,kBAIf9L,EAAK0N,OACtB9+B,EAAiBE,eACjBK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAZgC,OAI9BR,EAJ8B,OAepCk8B,EAAiB,WACjBlD,EAAS,qBAAuBh5B,GAChCk5B,GAAa,GACbyD,IAAkB,GAlBkB,kDAoBpC7S,QAAQ1mB,MAAR,MACA+6B,GAAY,KAAExsB,SArBsB,yBAuBpCkrB,IAAsB,GACtBS,IAAoB,GAxBgB,6EAAD,kEA0BxC,CAACvM,EAAMpxB,EAAkBw+B,KAEtBn5B,GAAkBL,uBAAY,SAACtE,GACjCk9B,GAASl9B,GACTg9B,IAAmB,KACpB,IAYGqB,GAAa/5B,uBAAY,SAACC,GAG5B,GAFAA,EAAEC,iBAEE42B,EACA0C,GAAY,2FAOhB,GAHA7B,IAAY,GACZC,GAAa3f,QAAU,KAElBhY,EAAE+5B,aAAaC,OAAyC,IAAhCh6B,EAAE+5B,aAAaC,MAAM/0B,OAIlD,IAAK,IAAD,EA/UZ,SAAwB+0B,GACpB,IAD2B,EACvBh0B,EAAe,KACfiK,EAAY,KACZD,EAAY,KAHW,cAKXgqB,GALW,IAK3B,2BAAuB,CAAC,IAAbC,EAAY,QACbC,EAAsBD,EAAE/8B,KAAKiJ,YAAY,KAE/C,IAA6B,IAAzB+zB,EACA,MAAM,IAAIz7B,MAAM,oCAAsCw7B,EAAE/8B,MAG5D,IAAMqF,EAAY03B,EAAE/8B,KAAKgJ,UAAUg0B,EAAsB,EAAGD,EAAE/8B,KAAK+H,QACnE,OAAQ1C,GACJ,IAAK,MACL,IAAK,MACL,IAAK,MACD,GAAIyD,EACA,MAAM,IAAIvH,MAAM,iDAEpBuH,EAAei0B,EACf,MACJ,IAAK,MACD,GAAIjqB,EACA,MAAM,IAAIvR,MAAM,8CAEpBuR,EAAYiqB,EACZ,MACJ,IAAK,MACL,IAAK,MACD,GAAIhqB,EACA,MAAM,IAAIxR,MAAM,8CAEpBwR,EAAYgqB,EACZ,MACJ,QACI,MAAM,IAAIx7B,MAAM,yBAA2B8D,KApC5B,8BAwC3B,GAAIyN,GAAaC,EACb,MAAM,IAAIxR,MAAM,2DAGpB,MAAO,CAACuH,aAAcA,EAAciK,UAAWA,EAAWD,UAAWA,GAoSlBmqB,CAAen6B,EAAE+5B,aAAaC,OAApEh0B,EADL,EACKA,aAAciK,EADnB,EACmBA,UAAWD,EAD9B,EAC8BA,UAE9BwnB,GAAW,SAAAgC,GACFA,EAASxzB,cACVyxB,IAAW,GAGf,IAAI1Q,EAAe,KACfD,EAAe,KAyBnB,OAvBI9W,GAAaC,IApC7B,SAAoB4W,GACZA,EAAQC,cACRjkB,IAAIQ,gBAAgBwjB,EAAQC,cAG5BD,EAAQE,cACRlkB,IAAIQ,gBAAgBwjB,EAAQE,cA+BpBqT,CAAWZ,GAEPxpB,EACA+W,EAAelkB,IAAIC,gBAAgBkN,GAC5BC,IACP6W,EAAejkB,IAAIC,gBAAgBmN,MAGvCD,EAAYwpB,EAASxpB,UACrB+W,EAAeyS,EAASzS,aACxB9W,EAAYupB,EAASvpB,UACrB6W,EAAe0S,EAAS1S,cAGZ,CACZ9gB,aAAcA,GAAgBwzB,EAASxzB,aACvCiK,UAAWA,EACX6W,aAAcA,EACd9W,UAAWA,EACX+W,aAAcA,MAMlB/gB,GACA6xB,GAAY7xB,EAAa9I,MAE/B,MAAO8C,GACLklB,QAAQ1mB,MAAMwB,GACdu5B,GAAYv5B,EAAE+M,YAEnB,CAAC8pB,EAAe0C,KACbc,GAAkBt6B,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBAEG22B,IACDc,GAAa3f,QAAUhY,EAAEwB,OACzBk2B,IAAY,MAGjB,CAACb,IACEyD,GAAkBv6B,uBAAY,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,kBAEG22B,GAAiBc,GAAa3f,UAAYhY,EAAEwB,QAC7Ck2B,IAAY,KAEjB,CAACb,IACE0D,GAAsBx6B,uBAAY,kBAAM03B,IAAW,KAAQ,IAC3D+C,GAAiBtnB,KAAYwT,EAAc1O,UAAc6O,EAAQ7gB,eAAiB6gB,EAAQ5W,YAAc4W,EAAQ7W,UAEtH,OACI,sBACIyqB,OAAQX,GACRY,WAAY,SAAC16B,GAAD,OAAOA,EAAEC,kBACrB06B,YAAaN,GACbO,YAAaN,GAJjB,UAMI,cAAC,EAAD,CACIngC,KAAMk6B,EACN/5B,QAAS27B,GACT17B,iBAAkB,IAClBK,SAAUy8B,EAJd,SAMKlD,IAEL,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAAO,IAAD,EAC1Bx+B,EAAS,IAAIy+B,gBAAgBhiC,OAAOs3B,SAAS2K,QAC7CjrB,EAAYzT,EAAO2+B,IAAI,SACvBvnB,EAAUpX,EAAO2+B,IAAI,WACrB7b,EAAS9iB,EAAO2+B,IAAI,UAE1B,OAAIlrB,GAAa2D,EACL,cAAC,IAAD,CAAUwnB,GAAI,gBAAkB9R,mBAAmBrZ,GAAa,YAAc2D,EAAU,WAAa0L,IAI7G,gCACI,cAACnP,GAAD,CACIe,MAAOgmB,EACP98B,KAAMg9B,EACN1rB,YAAaA,EACbnR,QAASu+B,GACT7nB,SAAUqoB,GACVzqB,YAAaQ,GACbP,gBAAiBQ,GACjBV,SAAU8qB,GACVjoB,OAAQkoB,KAEZ,cAACx6B,EAAD,CACI/E,KAAM29B,GACN34B,SAAU64B,GACV18B,KAAI,OAAE48B,SAAF,IAAEA,QAAF,EAAEA,GAAgB58B,KACtBE,UAAW08B,IAAkB7B,GAAkB6B,GAAgBzR,GAAUzO,SAAW,GACpFvc,MAAOy8B,IAAkBzB,GAAcyB,GAAgBzR,GAAUzO,SAAW,GAC5Erc,OAAM,OAAEu8B,SAAF,IAAEA,IAAF,UAAEA,GAAgBlyB,oBAAlB,aAAE,EAA8B9I,KACtCuC,aAAc1E,EAAiBuB,iBAC/BgD,SAAUq6B,GACVt6B,UAAWu6B,GACXr6B,YAAaa,GACbZ,eAAgBs5B,KAEpB,cAAC5wB,GAAD,CACI/N,KAAMq+B,GACN/8B,MAAOA,GACPnB,QAAS2+B,KAEb,cAAC/M,GAAD,CACIC,KAAMA,EACNhyB,KAAMi+B,GACN99B,QAAS4+B,GACT/T,SAAUpqB,EAAiBoqB,WAE/B,cAAC7d,GAAD,CACInN,KAAMm+B,GACN/wB,aAAcA,GACdjN,QAAS0+B,KAEb,cAAC/sB,GAAD,CACInN,MAAO84B,IAAY,YACnBnsB,YAAaA,EACbW,WAAY+qB,EACZ3qB,kBAAmBosB,GACnBp5B,eAAgBs5B,GAChBxsB,WAAYysB,KAEhB,eAACrC,GAAD,CAASjrB,YAAaA,EAAaW,WAAY+qB,EAA/C,UACKqD,IACG,cAACxnB,GAAD,CACIC,uBArfT,QAsfS1L,aAAcA,GACdhF,UAAWA,EACX2Q,QAASA,GACT7M,SAAUA,KAGlB,cAACa,EAAD,CAAab,SAAUA,KACvB,cAACkgB,GAAD,CACIC,eAAgBA,EAChBzrB,iBAAkBA,EAClBimB,OAAQjS,GACR4X,QAAS4S,GACThgB,cAAe+D,GACf9D,cAAeiE,GACfmJ,SAAU2T,GACV9T,UAAWA,GACXI,QAASA,EACTzF,eAAgBA,EAChBsF,cAAeA,EACfnkB,UAAWA,EACX6J,WAAY+qB,EACZxd,iBAAkBA,cAMtC,cAAC,IAAD,CAAOkhB,OAAK,EAACC,KAAK,SAASC,OAAQ,WAC/B,IAAMx+B,EAAS,IAAIy+B,gBAAgBhiC,OAAOs3B,SAAS2K,QAC7CjrB,EAAYzT,EAAO2+B,IAAI,SACvBvnB,EAAUpX,EAAO2+B,IAAI,WACrB7b,EAAkC,SAAzB9iB,EAAO2+B,IAAI,UAE1B,OACI,cAACzH,GAAD,CACI14B,iBAAkBA,EAClBiV,UAAWA,EACXqP,OAAQA,EACR1L,QAASA,EACTgT,QAAS4S,e,oBCjiBtB56B,GAfDy8B,aAAe,CAC3BltB,QAAS,CACP6B,QAAS,CACPsrB,KAAM,WAER/lB,UAAW,CACT+lB,KAAM,WAER78B,MAAO,CACL68B,KAAMC,KAAIC,MAEZ/K,KAAM,UCHKgL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7S,MAAK,YAAkD,IAA/C8S,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCGdO,IAASjB,OACL,cAAC,KAAD,CAAekB,SAAU7S,aAAwB8S,cAAc,EAA/D,SACI,eAACC,EAAA,EAAD,CAAex9B,MAAOA,GAAtB,UAEA,cAACy9B,EAAA,EAAD,IACA,cAAC,GAAD,SAGJ52B,SAAS62B,cAAc,UAM3Bb,O","file":"static/js/main.a6f2df09.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","export default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'deckNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelNames');\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(ankiConnectUrl, modelName) {\r\n        const response = await this._executeAction(ankiConnectUrl, 'modelFieldNames', {modelName: modelName});\r\n        return response.result;\r\n    }\r\n\r\n    async export(ankiConnectUrl, text, definition, audioClip, image, word, source, customFieldValues) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                fields: fields,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            params.note.audio = {\r\n                filename: audioClip.name,\r\n                data: await audioClip.base64(),\r\n                fields: [\r\n                    this.settingsProvider.audioField\r\n                ]\r\n            };\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            params.note.picture = {\r\n                filename: image.name,\r\n                data: await image.base64(),\r\n                fields: [\r\n                    this.settingsProvider.imageField\r\n                ]\r\n            }\r\n        }\r\n\r\n        const response = await this._executeAction(ankiConnectUrl, 'addNote', params);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _executeAction(ankiConnectUrl, action, params) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, onOpenSettings, audioClip, image, source, customFields} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","const AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end + \".\" + recorderExtension;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end + \".\" + extension;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            zIndex: 100,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            padding: 15,\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            opacity: 0.3\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n}));\r\n\r\nexport default function LandingPage(props) {\r\n    const classes = useStyles();\r\n    const {extension, latestExtensionVersion, extensionUrl, loading, dragging} = props;\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                <Fade in={!loading && !dragging} timeout={500}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files. <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </Fade>\r\n            </div>\r\n            <Fade in={loading && !dragging} timeout={5000}>\r\n                <div className={`${classes.background} ${classes.coloredBackground}`} />\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offset, onAudioTrackSelected, onSeek, mousePositionRef, onShow, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange, onVolumeChange, disableKeyEvents, settingsProvider} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={() => props.onClose()}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {props.volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {props.condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={(e) => props.onCondensedModeToggle()}>\r\n                                            <SpeedIcon className={props.condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {props.subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                        <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {props.audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.audioTracks && props.audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onPopOutToggle()}>\r\n                                        <OpenInNewIcon className={classes.button} style={props.popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {props.fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={() => props.onFullscreenToggle()}>\r\n                                        {props.fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={props.tabs}\r\n                    selectedTab={props.selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={props.audioTracks}\r\n                    selectedAudioTrack={props.selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={props.audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={props.videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                {subtitle.text}\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles({removable: removable});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {removable && (\r\n                <IconButton onClick={(e) => onRemoval?.()}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(ankiConnectUrl, noteType)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={fieldValue => handleCustomFieldChange(customFieldName, fieldValue)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <Tabs\r\n                    value={tabIndex}\r\n                    variant=\"fullWidth\"\r\n                    onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n                >\r\n                    <Tab label=\"Anki\" />\r\n                    <Tab label=\"In-Video Subtitles\" />\r\n                </Tabs>\r\n                {tabIndex === 0 && (\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                            Leaving a field blank is fine.\r\n                        </DialogContentText>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Anki Connect URL\"\r\n                                        value={ankiConnectUrl}\r\n                                        error={Boolean(ankiConnectUrlError)}\r\n                                        helperText={ankiConnectUrlError}\r\n                                        onChange={handleAnkiConnectUrlChange}\r\n                                    />\r\n                                </div>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                {tabIndex === 1 && (\r\n                    <DialogContent>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        value={subtitleColor}\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        value={subtitleSize}\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        value={subtitleOutlineColor}\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        value={subtitleBackgroundColor}\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                <DialogActions>\r\n                    {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.1\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            await audioClipFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                settingsProvider.ankiConnectUrl,\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues\n            );\n\n            setAlertSeverity(\"success\");\n            setAlert(\"Export succeeded: \" + result);\n            setAlertOpen(true);\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, settingsProvider, handleError]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                if (!previous.subtitleFile) {\n                    setLoading(true);\n                }\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [inVideoPlayer, handleError]);\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}