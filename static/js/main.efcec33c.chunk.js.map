{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","raw","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","useCallback","element","scrollIntoView","content","items","lastSeenItemName","item","ListSubheader","disableSticky","ref","ListItem","ListItemIcon","Tooltip","navigator","clipboard","writeText","fontSize","disabled","audioFile","videoFile","onClipAudio","onSelect","ListItemText","onDelete","timestamp","list","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","background","button","inactiveButton","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","marginLeft","current","currentTarget","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","Popover","disableEnforceFocus","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","useState","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","mousePositionRef","clearInterval","handleKey","keyCode","preventDefault","playing","onPause","onPlay","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","onUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","onUnloadVideo","clock","onMouseOver","onMouseOut","Fade","Grid","direction","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","table","backgroundColor","default","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","subtitles","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","selectedSubtitleIndex","setSelectedSubtitleIndex","selectedSubtitleIndexRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","currentSubtitleIndex","selectedSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToSubtitle","jumpToIndex","s","subtitleTable","handleClick","subtitleIndex","handleCopy","stopPropagation","onCopy","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","subtitlesLength","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","b","arrayEquals","handleSubtitlesToggle","nocontrols","Fragment","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","handleClipAudio","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","primary","main","secondary","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.efcec33c.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.raw\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Copy\">\r\n                            <IconButton onClick={(e) => navigator.clipboard.writeText(item.text)}>\r\n                                <FileCopyIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Clip Audio\">\r\n                            <IconButton disabled={!item.audioFile && !item.videoFile} onClick={() => props.onClipAudio(item)}>\r\n                                <AudiotrackIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Jump To\">\r\n                            <IconButton onClick={() => props.onSelect(item)}>\r\n                                <ForwardIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => props.onDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={props.open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}>\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={props.onClose}>\r\n                    <ChevronRightIcon />\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.listContainer}>\r\n                {list}\r\n            </div>\r\n        </Drawer>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default'\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        props.onSeek(progress);\r\n    }, [props]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(props.mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(props.mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current;\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = props.mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = props.mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [props.mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (props.playing) {\r\n                    props.onPause();\r\n                } else {\r\n                    props.onPlay();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        props.onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        props.onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [props]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        props.onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        props.onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [props]);\r\n\r\n    const progress = props.clock.progress(props.length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => props.playing ? props.onPause() : props.onPlay()}\r\n                            >\r\n                                {props.playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\" className={classes.timeDisplay}>\r\n                                {displayTime(progress * props.length)} / {displayTime(props.length)}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.subtitlesToggle && (\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.videoFile && (\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioFile && (\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n//        background: theme.palette.background.default\r\n    },\r\n    table: {\r\n            backgroundColor: theme.palette.background.default\r\n\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const clock = props.clock;\r\n    const subtitles = props.subtitles;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const [selectedSubtitleIndex, setSelectedSubtitleIndex] = useState(0);\r\n    const selectedSubtitleIndexRef = useRef(0);\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    // The clock is essentially a singleton, so it is fine as a dependency.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let currentSubtitleIndex = -1;\r\n            for (let i = subtitles.length - 1; i >=0; --i) {\r\n                if (progress >= subtitles[i].start / length) {\r\n                    currentSubtitleIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentSubtitleIndex !== -1 && currentSubtitleIndex !== selectedSubtitleIndexRef.current) {\r\n                selectedSubtitleIndexRef.current = currentSubtitleIndex;\r\n                setSelectedSubtitleIndex(currentSubtitleIndex);\r\n                const selectedSubtitleRef = subtitleRefs[currentSubtitleIndex];\r\n                const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                if (selectedSubtitleRef.current && allowScroll) {\r\n                    selectedSubtitleRef.current.scrollIntoView({\r\n                        block: \"center\",\r\n                        inline: \"nearest\",\r\n                        behavior: \"smooth\"\r\n                    });\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, [clock, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = Math.max(0, selectedSubtitleIndex - 1);\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = Math.min(props.subtitles.length - 1, selectedSubtitleIndex + 1);\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n            const progress = props.subtitles[newSubtitleIndex].start / props.length;\r\n            props.onSeek(progress, false);\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [props, selectedSubtitleIndex, subtitles]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!props.jumpToSubtitle || !props.subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of props.subtitles) {\r\n            if (s.start === props.jumpToSubtitle.start && s.text === props.jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [props.jumpToSubtitle, props.subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = props.subtitles[subtitleIndex].start / props.length;\r\n        props.onSeek(progress, !props.playing && subtitleIndex === selectedSubtitleIndex);\r\n    }, [props, selectedSubtitleIndex]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = props.subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        props.onCopy(text, subtitle.start, subtitle.end);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [props]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!props.subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (props.subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {props.subtitles.map((s, index) => {\r\n                            const selected = index === selectedSubtitleIndex;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}>\r\n                                   <TableCell className={className}>\r\n                                       {s.text}\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.copyButton}>\r\n                                       <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                           <FileCopy />\r\n                                       </IconButton>\r\n                                   </TableCell>\r\n                                   <TableCell className={classes.timestamp}>\r\n                                       {s.displayTime}\r\n                                   </TableCell>\r\n                               </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles) {\r\n    const subtitlesLength = subtitles && subtitles.length > 0\r\n        ? subtitles[subtitles.length - 1].end - subtitles[0].start\r\n        : 0;\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0\r\n                        ? nodes[nodes.length - 1].end - nodes[0].start\r\n                        : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {text: s.text, start: s.start, end: s.end, displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((text, start, end) => {\r\n        props.onCopy(\r\n            text,\r\n            start,\r\n            end,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((text, start, end, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            timestamp: Date.now(),\n            text: text,\n            start: start,\n            end: end,\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile !== item.subtitleFile) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, start: item.start});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e00cf',\r\n    },\r\n    secondary: {\r\n      main: '#1f9aff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}