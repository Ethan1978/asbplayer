{"version":3,"sources":["hooks/useWindowSize/index.js","components/Alert.js","services/Anki.js","components/AnkiDialog.js","services/mp3-encoder-worker.js","services/Mp3Encoder.js","services/AudioClip.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","services/Image.js","components/background.png","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/KeyEvents.js","components/SubtitlePlayer.js","services/Util.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","theme.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","specialCharacters","Anki","settingsProvider","this","ankiConnectUrl","_executeAction","response","result","modelName","word","query","wordField","_escapeQuery","escaped","i","length","char","includes","text","definition","audioClip","image","source","customFieldValues","gui","fields","_appendField","sentenceField","definitionField","sourceField","Object","keys","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","audioField","name","base64","_storeMediaFile","fileName","audio","filename","data","imageField","picture","fieldName","value","multiline","newValue","split","join","existingValue","action","body","version","fetch","method","JSON","stringify","json","error","Error","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","Date","now","trimmedWord","trim","a","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","e","preventDefault","stopPropagation","play","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","rowsMax","label","onChange","target","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","map","DialogActions","Button","Worker_fn","Worker","audioContext","AudioContext","Mp3Encoder","blob","Promise","resolve","reject","reader","FileReader","onload","decodeAudioData","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","buffer","type","terminate","onerror","readAsArrayBuffer","AUDIO_TYPES","filter","MediaRecorder","isTypeSupported","t","recorderMimeType","recorderExtension","Base64AudioData","start","end","extension","_base64","_blob","Audio","src","URL","createObjectURL","preload","load","pause","revokeObjectURL","cachedBlob","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","audioTracks","id","currentTime","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","appendChild","style","href","download","click","remove","subtitleFile","audioName","substring","lastIndexOf","height","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","color","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","dataUrl","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","Math","min","img","Image","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","sort","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","event","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","Bar","AppBar","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","onMessageCallbacks","tabs","versionPromise","versionResolve","sender","message","tabId","tab","callback","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","items","lastSeenItemName","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","timestamp","list","Fragment","Drawer","anchor","paper","Divider","Base64ImageData","_dataUrl","FileImageData","_canvas","canvas","toDataURL","toBlob","video","_videoElement","videoWidth","videoHeight","getContext","drawImage","imageName","defaultBackground","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","time","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","active","marginLeft","offsetInput","secondary","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","right","gridContainer","useProgressBarStyles","fillContainer","fill","handleContainer","handle","borderRadius","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","ProgressBar","containerRef","useRef","fillStyle","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","Number","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","onMouseOver","onMouseOut","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","detectCopy","ctrlKey","shiftKey","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","subtitle","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","onCopy","tableRowProps","SubtitlePlayer","subtitles","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","playingRef","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","lastScrollTimestampRef","requestAnimationRef","copy","subtitleIndex","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","handleScroll","jumpToIndex","originalStart","copySubtitle","subtitleIndexes","subtitleTable","handleClick","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","paused","echo","settings","maxHeight","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","subtitleReader","offsetRef","videoFrameRef","onError","onLoaded","sources","audioFileUrl","videoFileUrl","setTab","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setAudioTracks","setSelectedAudioTrack","setOffset","setChannelId","videoPopOut","setVideoPopOut","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","onReady","init","subscribed","onExit","ready","subtitleSettings","condensedModeToggle","onOffset","onCurrentTime","then","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioBase64","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","newSubtitles","v","handleCondensedModeToggle","t1","t2","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","Centered","justify","SettingsDialog","tabIndex","setTabIndex","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","preferMp3","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","subtitleColor","setSubtitleColor","subtitleSize","setSubtitleSize","subtitleOutlineColor","setSubtitleOutlineColor","subtitleOutlineThickness","setSubtitleOutlineThickness","subtitleBackgroundColor","setSubtitleBackgroundColor","subtitleBackgroundOpacity","setSubtitleBackgroundOpacity","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","Tabs","newIndex","Tab","DialogContentText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","volumeKey","preferMp3Key","SettingsProvider","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","cursorHidden","makeSubtitleStyles","styles","thickness","hex","exec","r","parseInt","g","hexToRgb","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","videoRefCallback","onloadeddata","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","equals","arrayEquals","s1","s2","seekToSubtitle","forward","minDiff","diff","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","exitFullscreen","requestFullscreen","handlePopOutToggle","popOutToggle","handleAlertClosed","subtitleStyles","nocontrols","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","useLocation","inVideoPlayer","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","fileInputRef","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","newSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","toMp3","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","hidden","createMuiTheme","main","red","A400","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.cd43b0a6.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","const specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider) {\r\n        this.settingsProvider = settingsProvider;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, gui, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n        const response = await this._executeAction(gui ? 'guiAddCards' : 'addNote', params, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const response = await fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, disabled, text: initialText, onProceed, onCancel, onViewImage, onOpenSettings, audioClip, image, source, customFields, settingsProvider, anki} = props;\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n             setDefinition(\"\");\r\n             setWord(\"\");\r\n             setDuplicateNotes([]);\r\n             setCustomFieldValues({});\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, true)}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, false)}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder-worker.b940f60b.worker.js\");\n}\n","// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder-worker.js';\r\n\r\nconst audioContext = new AudioContext();\r\n\r\nexport default class Mp3Encoder {\r\n\r\n    static async encode(blob) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = new Worker();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject('MP3 encoding failed');\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","import Mp3Encoder from './Mp3Encoder';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob());\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, start, end, base64, extension) {\r\n        const audioName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3() {\r\n        return new AudioClip(new Mp3AudioData(this.data));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>\r\n                        Load a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Click on the subtitle offset input field in the controls.\r\n                    </li>\r\n                    <li>\r\n                        Type in a number and hit enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ol\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=7v0Hly_Q_Bs\">Sentence mining video files</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=m55HbFJMilk\">Sentence mining streaming video</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Guides\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://learnjapanese.moe/streamworkflow/\">Sentence mining streaming workflow</Link>\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setWidth(0);\r\n            setHeight(0);\r\n            setDataUrl(null);\r\n        }\r\n    }, [open]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={() => onClose()}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Copy History\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={props.onOpenCopyHistory}\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id}, '*');\r\n        }\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFile, timestamp, base64, extension) {\r\n        const imageName = subtitleFile.name.substring(0, subtitleFile.name.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/background.aa598bb3.png\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport background from './background.png';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\",\r\n        backgroundSize: \"500px 500px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\"\r\n    },\r\n    defaultBackground: {\r\n        backgroundImage: `url(${background})`\r\n    },\r\n    coloredBackground: {\r\n        backgroundImage: `url(${coloredBackground})`,\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = latestExtensionVersion > installedExtensionVersion;\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={`${classes.background} ${classes.defaultBackground}`}>\r\n                    <Typography>\r\n                        Drag and drop srt, ass, vtt, mp3, m4a, and mkv files or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link> to sync subtitles with videos in other tabs.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none'\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 200,\r\n        color: theme.palette.text.secondary,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active,\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled,\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto'\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        margin: '0 10px 5px 10px',\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 12,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.text.secondary,\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: theme.palette.text.secondary,\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: theme.palette.text.secondary\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left) / width));\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2) + \" subtitle offset\"}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function detectCopy(event) {\r\n    // Ctrl + Shift + A\r\n    return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 && subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef.current.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (disableKeyEvents) {\r\n                return;\r\n            }\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n\r\n            if (event.keyCode === 37) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                const selected = Object.keys(selectedSubtitleIndexes);\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => window.removeEventListener('keydown', handleKey);\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length, disableKeyEvents]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    function copy(event, subtitles, subtitleIndex, onCopy) {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n            if (subtitleIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const index = Math.min(...subtitleIndexes);\r\n            copy(event, subtitles, index, onCopy);\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => window.removeEventListener('keydown', copySubtitle);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const progress = subtitles[index].start / length;\r\n        onSeek(progress, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, length, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((e, index) => copy(e, subtitles, index, onCopy), [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    No subtitles loaded. Drag and drop to load.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxHeight: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const {subtitleReader, settingsProvider, extension, offsetRef, videoFrameRef, drawerOpen, onError, onUnloadVideo, onCopy, onLoaded, disableKeyEvents} = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offset, setOffset] = useState(0);\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (progress, clock, echo) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setOffset(0);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current);\r\n                    }\r\n\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((echo) => play(clock, mediaAdapter, echo));\r\n                        channel.onPause((echo) => pause(clock, mediaAdapter, echo));\r\n                        channel.onOffset((offset) => setOffset(Math.max(-lengthRef.current ?? 0, offset)));\r\n                        channel.onCopy((subtitle, audio, image) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, echo) => {\r\n                            const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(progress, clock, echo);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start / length, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, audioBase64) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(Math.max(-lengthRef.current ?? 0, offset));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (offsetRef) {\r\n            offsetRef.current = offset;\r\n        }\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            videoRef.current?.subtitles(newSubtitles);\r\n\r\n            return newSubtitles;\r\n        });\r\n\r\n    }, [offset, offsetRef]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && channelId && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n            >\r\n                    {videoInWindow && (\r\n                        <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                            <iframe\r\n                                ref={videoFrameRef}\r\n                                className={classes.videoFrame}\r\n                                src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                                title=\"asbplayer\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                <Grid item style={{flexGrow: videoInWindow ? 0 : 1}}>\r\n                    {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                        <Controls\r\n                            mousePositionRef={mousePositionRef}\r\n                            playing={playing}\r\n                            clock={clock}\r\n                            length={length}\r\n                            displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                            audioTracks={audioTracks}\r\n                            selectedAudioTrack={selectedAudioTrack}\r\n                            tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                            selectedTab={tab && tab.id}\r\n                            audioFile={audioFile?.name}\r\n                            videoFile={videoFile?.name}\r\n                            offsetEnabled={true}\r\n                            offset={offset}\r\n                            volumeEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeToggleEnabled={Boolean(audioFileUrl)}\r\n                            condensedModeEnabled={condensedModeEnabled}\r\n                            onPlay={handlePlay}\r\n                            onPause={handlePause}\r\n                            onSeek={handleSeek}\r\n                            onAudioTrackSelected={handleAudioTrackSelected}\r\n                            onTabSelected={handleTabSelected}\r\n                            onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                            onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onCondensedModeToggle={handleCondensedModeToggle}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            settingsProvider={settingsProvider}\r\n                        />\r\n                    )}\r\n                    <SubtitlePlayer\r\n                        playing={playing}\r\n                        subtitles={subtitles}\r\n                        clock={clock}\r\n                        length={length}\r\n                        jumpToSubtitle={props.jumpToSubtitle}\r\n                        drawerOpen={drawerOpen}\r\n                        compressed={videoFileUrl && !videoPopOut}\r\n                        loading={loadingSubtitles}\r\n                        displayHelp={Boolean(videoFileUrl || audioFileUrl)}\r\n                        disableKeyEvents={disableKeyEvents}\r\n                        lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                        onSeek={handleSeekToSubtitle}\r\n                        onCopy={handleCopy}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={() => onCancel()}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Select from '@material-ui/core/Select';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: 320\r\n        },\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Centered(props) {\r\n    return (\r\n        <Grid container\r\n            spacing={0}\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            <Grid item>\r\n                {props.children}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n            >\r\n                <Tabs\r\n                    value={tabIndex}\r\n                    variant=\"fullWidth\"\r\n                    onChange={(e, newIndex) => setTabIndex(newIndex)}\r\n                >\r\n                    <Tab label=\"Anki\" />\r\n                    <Tab label=\"In-Video Subtitles\" />\r\n                </Tabs>\r\n                {tabIndex === 0 && (\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings.\r\n                            Leaving a field blank is fine.\r\n                        </DialogContentText>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div>\r\n                                    <TextField\r\n                                        label=\"Anki Connect URL\"\r\n                                        value={ankiConnectUrl}\r\n                                        error={Boolean(ankiConnectUrlError)}\r\n                                        helperText={ankiConnectUrlError}\r\n                                        onChange={handleAnkiConnectUrlChange}\r\n                                    />\r\n                                </div>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                {tabIndex === 1 && (\r\n                    <DialogContent>\r\n                        <Centered>\r\n                            <form className={classes.root}>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        value={subtitleColor}\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        value={subtitleSize}\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        value={subtitleOutlineColor}\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        value={subtitleBackgroundColor}\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                        </Centered>\r\n                    </DialogContent>\r\n                )}\r\n                <DialogActions>\r\n                    {tabIndex === 0 && (<Button onClick={handleRetryAnkiConnectUrl}>Retry Anki URL</Button>)}\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            preferMp3: this.preferMp3,\r\n        };\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals } from '../services/Util'\r\nimport { detectCopy } from '../services/KeyEvents';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nfunction makeSubtitleStyles(\r\n    subtitleSize,\r\n    subtitleColor,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundColor,\r\n    subtitleBackgroundOpacity\r\n) {\r\n    const styles = {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    return styles;\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        function seekToSubtitle(event) {\r\n            if (!videoRef.current || !subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (event.keyCode === 37) {\r\n                forward = false;\r\n            } else if (event.keyCode === 39) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const now = Math.round(1000 * videoRef.current.currentTime);\r\n            let newSubtitleIndex = -1;\r\n\r\n            if (forward) {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = s.start - now;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now < s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = i;\r\n                    }\r\n                }\r\n            } else {\r\n                let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n                for (let i = 0; i < subtitles.length; ++i) {\r\n                    const s = subtitles[i];\r\n                    const diff = now - s.start;\r\n\r\n                    if (minDiff <= diff) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (now > s.start) {\r\n                        minDiff = diff;\r\n                        newSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitles[newSubtitleIndex].start / 1000;\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', seekToSubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', seekToSubtitle);\r\n        };\r\n    }, [playerChannel, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function copySubtitle(event) {\r\n            if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                return;\r\n            }\r\n\r\n            if (!detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            const subtitle = showSubtitlesRef.current[0];\r\n            playerChannel.copy(subtitle);\r\n\r\n            if (fullscreen) {\r\n                setAlert(\"Copied \" + subtitle.text);\r\n                setAlertOpen(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', copySubtitle);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', copySubtitle);\r\n        };\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleOffsetChange = useCallback((offset) => playerChannel.offset(offset), [playerChannel]);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity} = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(() => makeSubtitleStyles(\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ), [\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={true}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Anki from '../services/Anki.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport AudioClip from '../services/AudioClip';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Image from '../services/Image';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.6.2\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item, offset) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.originalStart + offset,\n            item.originalEnd + offset,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item, offset) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.originalStart + offset\n        );\n    }\n\n    return null;\n}\n\nfunction Content(props) {\n    const classes = useStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const videoFrameRef = useRef();\n    const inVideoPlayer = location.pathname === '/video';\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const offsetRef = useRef();\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack,\n            audio: audio,\n            image: image\n        }]);\n        setAlertSeverity(\"success\");\n        setAlert(\"Copied \" + subtitle.text);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => setSettingsDialogOpen(true), []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.ankiConnectUrl = newSettings.ankiConnectUrl;\n        settingsProvider.deck = newSettings.deck;\n        settingsProvider.noteType = newSettings.noteType;\n        settingsProvider.modelNames = newSettings.modelNames;\n        settingsProvider.sentenceField = newSettings.sentenceField;\n        settingsProvider.definitionField = newSettings.definitionField;\n        settingsProvider.audioField = newSettings.audioField;\n        settingsProvider.imageField = newSettings.imageField;\n        settingsProvider.wordField = newSettings.wordField;\n        settingsProvider.sourceField = newSettings.sourceField;\n        settingsProvider.subtitleSize = newSettings.subtitleSize;\n        settingsProvider.subtitleColor = newSettings.subtitleColor;\n        settingsProvider.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\n        settingsProvider.subtitleOutlineColor = newSettings.subtitleOutlineColor;\n        settingsProvider.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\n        settingsProvider.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\n        settingsProvider.customAnkiFields = newSettings.customAnkiFields;\n        settingsProvider.preferMp3 = newSettings.preferMp3;\n        setSettingsDialogOpen(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings})\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item, offsetRef.current || 0);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item, offsetRef.current || 0).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n    }, []);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, gui) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                settingsProvider.preferMp3 ? audioClip?.toMp3() : audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                gui\n            );\n\n            if (!gui) {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, settingsProvider]);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop into the subtitle section instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={handleDragEnter}\n            onDragLeave={handleDragLeave}\n        >\n            <Alert\n                open={alertOpen}\n                onClose={handleAlertClosed}\n                autoHideDuration={3000}\n                severity={alertSeverity}\n            >\n                {alert}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onDownloadImage={handleDownloadImage}\n                                onSelect={handleSelectCopyHistoryItem}\n                                onAnki={handleAnki}\n                            />\n                            <AnkiDialog\n                                open={ankiDialogOpen}\n                                disabled={ankiDialogDisabled}\n                                text={ankiDialogItem?.text}\n                                audioClip={ankiDialogItem && audioClipFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                image={ankiDialogItem && imageFromItem(ankiDialogItem, offsetRef.current || 0)}\n                                source={ankiDialogItem?.subtitleFile?.name}\n                                customFields={settingsProvider.customAnkiFields}\n                                anki={anki}\n                                settingsProvider={settingsProvider}\n                                onCancel={handleAnkiDialogCancel}\n                                onProceed={handleAnkiDialogProceed}\n                                onViewImage={handleViewImage}\n                                onOpenSettings={handleOpenSettings}\n                            />\n                            <ImageDialog\n                                open={imageDialogOpen}\n                                image={image}\n                                onClose={handleImageDialogClosed}\n                            />\n                            <SettingsDialog\n                                anki={anki}\n                                open={settingsDialogOpen}\n                                onClose={handleCloseSettings}\n                                settings={settingsProvider.settings}\n                            />\n                            <HelpDialog\n                                open={helpDialogOpen}\n                                extensionUrl={extensionUrl}\n                                onClose={handleCloseHelp}\n                            />\n                            <Bar\n                                title={fileName || \"asbplayer\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                                onOpenSettings={handleOpenSettings}\n                                onOpenHelp={handleOpenHelp}\n                                onFileSelector={handleFileSelector}\n                            />\n                            <input\n                                ref={fileInputRef}\n                                onChange={handleFileInputChange}\n                                type=\"file\"\n                                accept=\".srt,.ass,.vtt,.mp3,.m4a,.mkv\"\n                                multiple\n                                hidden\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                {nothingLoaded && (\n                                    <LandingPage\n                                        latestExtensionVersion={latestExtensionVersion}\n                                        extensionUrl={extensionUrl}\n                                        extension={extension}\n                                        loading={loading}\n                                        dragging={dragging}\n                                        onFileSelector={handleFileSelector}\n                                    />\n                                )}\n                                <DragOverlay dragging={dragging} loading={loading} />\n                                <Player\n                                    subtitleReader={subtitleReader}\n                                    settingsProvider={settingsProvider}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    onLoaded={handleSourcesLoaded}\n                                    offsetRef={offsetRef}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    videoFrameRef={videoFrameRef}\n                                    extension={extension}\n                                    drawerOpen={copyHistoryOpen}\n                                    disableKeyEvents={disableKeyEvents}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n                    const popOut = params.get('popout') === 'true';\n\n                    return (\n                        <VideoPlayer\n                            settingsProvider={settingsProvider}\n                            videoFile={videoFile}\n                            popOut={popOut}\n                            channel={channel}\n                            onError={handleError}\n                        />\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#49007a',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './components/App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}