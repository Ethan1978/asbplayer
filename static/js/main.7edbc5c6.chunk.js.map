{"version":3,"sources":["hooks/useWindowSize/index.js","../../common/src/KeyEvents.js","../../common/src/KeyBindings.js","../../common/src/Mp3Encoder.js","../../common/src/mp3-encoder.js","../../common/src/AudioClip.js","../../common/src/Image.js","../../common/src/HttpFetcher.js","../../common/src/Anki.js","components/Alert.js","components/AnkiDialog.js","components/background-colored.png","components/DragOverlay.js","components/HelpDialog.js","components/ImageDialog.js","services/SubtitleReader.js","components/Bar.js","services/ChromeExtension.js","components/CopyHistory.js","components/LandingPage.js","services/BroadcastChannelVideoProtocol.js","services/ChromeTabVideoProtocol.js","services/Clock.js","components/Controls.js","services/MediaAdapter.js","services/Util.js","components/SubtitlePlayer.js","services/VideoChannel.js","components/Player.js","components/CustomFieldDialog.js","components/SettingsDialog.js","services/SettingsProvider.js","services/PlayerChannel.js","components/VideoPlayer.js","components/App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","enabled","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","KeyEvents","event","ctrlKey","shiftKey","keyCode","detectDecreaseOffset","detectIncreaseOffset","detectIncreaseOffsetToPreviousSubtitle","detectDecreaseOffsetToNextSubtitle","KeyBindings","onCopy","disabledGetter","subtitleGetter","useCapture","_bind","detectCopy","subtitle","onAnkiExport","detectAnkiExport","onSeekToSubtitle","timeGetter","subtitlesGetter","subtitles","length","forward","detectPreviousSubtitle","detectNextSubtitle","_adjacentSubtitle","start","end","onOffsetChange","time","subtitleStart","originalStart","now","adjacentSubtitleIndex","minDiff","Number","MAX_SAFE_INTEGER","i","s","diff","Math","max","increase","currentOffset","onToggleSubtitles","detectToggleSubtitles","handler","Mp3Encoder","blob","workerFactory","Promise","resolve","reject","a","reader","FileReader","onload","e","audioContext","AudioContext","decodeAudioData","target","result","audioBuffer","channels","numberOfChannels","push","getChannelData","worker","postMessage","command","sampleRate","onmessage","Blob","data","buffer","type","terminate","onerror","Error","readAsArrayBuffer","Worker_fn","Worker","AUDIO_TYPES","Object","keys","filter","MediaRecorder","isTypeSupported","map","t","recorderMimeType","recorderExtension","defaultMp3WorkerFactory","Base64AudioData","name","base64","extension","this","_base64","_blob","audio","Audio","src","URL","createObjectURL","preload","load","play","setTimeout","pause","revokeObjectURL","cachedBlob","fetch","FileAudioData","file","trackId","readAsDataURL","onloadend","substr","indexOf","_clipAudio","_audioElement","currentTime","_stopAudio","oncanplay","stream","_captureStream","getVideoTracks","stop","recorder","mimeType","chunks","ondataavailable","onstop","source","audioTracks","id","captureStream","mozCaptureStream","Mp3AudioData","encode","AudioClip","url","document","createElement","body","appendChild","style","href","download","click","remove","mp3WorkerFactory","subtitleFileName","audioName","substring","lastIndexOf","Base64ImageData","_dataUrl","FileImageData","timestamp","_canvas","canvas","dataUrl","toDataURL","toBlob","video","_videoElement","width","videoWidth","height","videoHeight","getContext","drawImage","Image","imageName","HttpFetcher","method","JSON","stringify","response","json","specialCharacters","Anki","settingsProvider","fetcher","ankiConnectUrl","_executeAction","modelName","word","query","wordField","_escapeQuery","escaped","char","includes","text","definition","audioClip","image","customFieldValues","mode","fields","_appendField","sentenceField","definitionField","sourceField","customFieldName","customAnkiFields","params","note","deckName","deck","noteType","options","allowDuplicate","duplicateScope","duplicateScopeOptions","checkChildren","gui","audioField","_storeMediaFile","fileName","filename","imageField","picture","recentNotes","sort","lastNoteId","fieldName","value","multiline","newValue","split","join","existingValue","action","version","error","useAlertStyles","makeStyles","root","display","justifyContent","position","top","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","useStyles","theme","marginBottom","spacing","title","flexGrow","mediaField","cursor","AnkiDialog","disabled","initialText","onProceed","onCancel","onViewImage","onOpenSettings","initialAudioClip","customFields","anki","setDefinition","setText","setWord","lastSearchedWord","setLastSearchedWord","duplicateNotes","setDuplicateNotes","wordTimestamp","setWordTimestamp","setCustomFieldValues","useMemo","preferMp3","toMp3","Date","trimmedWord","trim","findNotesWithWord","console","wordHelperText","handlePlayAudio","useCallback","preventDefault","stopPropagation","handleViewImage","handleCustomFieldChange","newCustomFieldValues","assign","Dialog","disableEnforceFocus","fullWidth","maxWidth","onBackdropClick","onEscapeKeyDown","Toolbar","Typography","variant","IconButton","edge","onClick","DialogContent","TextField","color","rowsMax","label","onChange","rows","helperText","InputProps","endAdornment","InputAdornment","Tooltip","findNotesWithWordGui","DialogActions","Button","dragging","transparentBackground","content","flexDirection","alignItems","textAlign","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","coloredBackground","backgroundBlendMode","background","DragOverlay","loading","Fade","inlineIcon","flexWrap","HelpDialog","extensionUrl","component","Link","rel","fontSize","TableContainer","Table","TableBody","TableRow","TableCell","ImageDialog","resizeRatio","setDataUrl","setWidth","setHeight","windowWidth","windowHeight","min","img","fetchImage","Card","CardMedia","SubtitleReader","endsWith","parseSrt","nodes","node","n1","n2","parser","WebVTT","Parser","StringDecoder","cues","oncue","c","onflush","floor","startTime","endTime","parse","flush","parseAss","events","dialogue","round","Start","End","Text","combined","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","drawerWidth","easeOut","enteringScreen","marginRight","copyHistoryButton","transform","padding","copyHistoryButtonShift","hide","useCopyHistoryTooltipStyles","tooltip","show","CopyHistoryTooltip","toolTipProps","Bar","AppBar","elevation","clsx","drawerOpen","onFileSelector","onOpenHelp","aria-label","onOpenCopyHistory","ChromeExtension","heartbeat","onMessageCallbacks","onTabsCallbacks","tabs","versionPromise","versionResolve","uuidv4","sender","message","tabId","_sendHeartbeat","setInterval","tab","callback","_remove","callbacks","splice","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","listContainer","overflowY","overflowX","listItem","backgroundColor","palette","hover","listItemGutters","paddingLeft","paddingRight","listItemIconRoot","minWidth","emptyState","Menu","anchorEl","onSelect","onClipAudio","onDownloadImage","onDelete","item","handleCopy","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","handleDownloadImage","handleDelete","Popover","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","scrollToBottomRefCallback","element","scrollIntoView","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","items","lastSeenItemName","itemNameCounters","ListSubheader","disableSticky","ref","gutters","ListItemIcon","onAnki","Fragment","Drawer","anchor","paper","Divider","browseLink","LandingPage","latestExtensionVersion","installedExtensionVersion","setInstalledExtensionVersion","installedVersion","fetchInstalledExtensionVersion","extensionUpdateAvailable","gt","extensionNotInstalled","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onMessage","close","ChromeTabVideoProtocol","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","useControlStyles","container","left","bottom","buttonContainer","timeDisplay","marginLeft","offsetInput","volumeInputContainerShown","short","volumeInputContainerHidden","volumeInputHidden","volumeInputShown","volumeInputThumbHidden","opacity","volumeInputThumbShown","subContainer","inactiveButton","progress","margin","closeButton","hideSubtitlePlayerToggleButton","right","gridContainer","useProgressBarStyles","mouseEventListener","fillContainer","fillContainerThick","easeInOut","fill","handleContainer","handle","borderRadius","handleOn","shortest","VolumeSlider","withStyles","verticalAlign","thumb","boxShadow","active","Slider","displayTime","milliseconds","seconds","minutes","secondsInMinute","String","padStart","ProgressBar","mouseOver","setMouseOver","containerRef","useRef","onSeek","handleClick","rect","getBoundingClientRect","pageX","handleMouseOver","handleMouseOut","progressWidth","current","elementWidth","fillStyle","handleStyle","fillContainerClassName","handleClassName","onMouseOver","onMouseOut","AudioTrackSelector","list","selected","selectedAudioTrack","onAudioTrackSelected","language","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","clock","playing","offsetEnabled","displayLength","offset","mousePositionRef","onShow","onPause","onPlay","onUnloadAudio","onUnloadVideo","onVolumeChange","disableKeyEvents","closeEnabled","volumeEnabled","condensedModeEnabled","condensedModeToggleEnabled","onCondensedModeToggle","subtitlesEnabled","subtitlesToggle","onSubtitlesToggle","popOutEnabled","popOut","onPopOutToggle","fullscreenEnabled","fullscreen","onFullscreenToggle","hideSubtitlePlayerToggleEnabled","subtitlePlayerHidden","onHideSubtitlePlayerToggle","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","showVolumeBar","setShowVolumeBar","volume","setVolume","lastCommittedVolume","setLastCommittedVolume","lastMousePositionRef","x","y","lastShowTimestampRef","lastOffsetInputChangeTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","savedVolume","interval","currentShow","pow","activeElement","clearInterval","handleKey","isNaN","blur","handleOffsetInputClicked","setSelectionRange","offsetSeconds","toFixed","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","handleVolumeMouseOut","handleVolumeMouseOver","handleVolumeChange","handleVolumeChangeCommitted","handleVolumeToggle","newVolume","Grid","direction","onChangeCommitted","defaultValue","Input","inputRef","disableUnderline","placeholder","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","computeStyles","subtitleColor","subtitleSize","subtitleOutlineThickness","subtitleOutlineColor","subtitleBackgroundOpacity","subtitleBackgroundColor","subtitleFontFamily","styles","thickness","hex","exec","r","parseInt","g","b","hexToRgb","useSubtitlePlayerStyles","default","compressed","table","noSubtitles","useSubtitleRowStyles","subtitleRow","overflowWrap","compressedSubtitle","copyButton","SubtitleRow","React","memo","index","subtitleRef","tableRowProps","SubtitlePlayer","onAnkiDialogRequest","jumpToSubtitle","displayHelp","lastJumpToTopTimestamp","hidden","playingRef","clockRef","subtitleListRef","subtitleRefs","Array","_","createRef","subtitleRefsRef","disableKeyEventsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","hiddenRef","lastScrollTimestampRef","requestAnimationRef","requestAnimationFrame","update","smallestIndex","fallbackIndex","currentSubtitleIndexes","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","scrollToCurrentSubtitle","indexes","scrollIfVisible","visibilityState","firstSubtitleRef","unbind","bindAdjustOffset","bindOffsetToSubtitle","bindSeekToSubtitle","handleScroll","jumpToIndex","bindCopy","subtitleIndexes","bindAnkiExport","subtitleTable","Paper","square","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","offsetCallbacks","popOutToggleCallbacks","copyCallbacks","condensedModeToggleCallbacks","hideSubtitlePlayerToggleCallbacks","ankiDialogRequestCallbacks","paused","echo","preventDuplicate","forwardToVideo","settings","videoFrame","border","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","sources","subtitleFile","audioFileUrl","videoFileUrl","subtitleReader","videoFrameRef","availableTabs","ankiDialogRequestToVideo","ankiDialogRequested","ankiDialogFinishedRequest","onError","onLoaded","setSubtitles","subtitlesRef","loadingSubtitles","setLoadingSubtitles","setPlaying","setLastJumpToTopTimestamp","setOffset","setAudioTracks","setSelectedAudioTrack","setChannelId","videoPopOut","setVideoPopOut","setResumeOnFinishedAnkiDialogRequest","hideSubtitlePlayer","setHideSubtitlePlayer","hideSubtitlePlayerRef","setCondensedModeEnabled","condensedModeEnabledRef","mediaAdapter","seek","forwardToMedia","setTime","applyOffset","newSubtitles","channelClosed","onReady","init","subscribed","onExit","hideSubtitlePlayerToggle","ready","subtitleSettings","ankiSettings","condensedModeToggle","onOffset","onCurrentTime","then","ankiDialogRequest","finishedAnkiDialogRequest","resumeOnFinishedAnkiDialogRequest","seeking","expectedSeekTime","currentOrNextIndex","currentIndex","nextSubtitle","t0","process","encodeURIComponent","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","handleMouseMove","screenX","screenY","audioTrackSelected","handleOffsetChange","v","handleCondensedModeToggle","loaded","videoInWindow","onMouseMove","wrap","Boolean","CustomFieldDialog","existingCustomFieldNames","setFieldName","fieldExists","DialogTitle","marginTop","subtitleSetting","subtitlePreview","disabledBackground","subtitlePreviewInput","outline","addFieldButton","useSelectableSettingStyles","formControl","SelectableSetting","selections","removable","onSelectionChange","onRemoval","FormControl","InputLabel","Select","MenuItem","SettingsDialog","setAnkiConnectUrl","ankiConnectUrlError","setAnkiConnectUrlError","ankiConnectUrlChangeTimestamp","setAnkiConnectUrlChangeTimestamp","setDeck","deckNames","setDeckNames","setNoteType","modelNames","setModelNames","setSentenceField","setDefinitionField","setAudioField","setImageField","setWordField","setSourceField","setCustomFields","setPreferMp3","fieldNames","setFieldNames","customFieldDialogOpen","setCustomFieldDialogOpen","setSubtitleColor","setSubtitleSize","setSubtitleOutlineColor","setSubtitleOutlineThickness","setSubtitleBackgroundColor","setSubtitleBackgroundOpacity","setSubtitleFontFamily","setSubtitlePreview","themeType","setThemeType","handleAnkiConnectUrlChange","handleRetryAnkiConnectUrl","handleDeckChange","handleNoteTypeChange","handleSentenceFieldChange","handleDefinitionFieldChange","handleAudioFieldChange","handleImageFieldChange","handleWordFieldChange","handleSourceFieldChange","handleSubtitleColorChange","handleSubtitleSizeChange","handleSubtitleOutlineColorChange","handleSubtitleOutlineThicknessChange","handleSubtitleBackgroundColorChange","handleSubtitleBackgroundOpacityChange","handleSubtitleFontFamilyChange","handleSubtitlePreviewChange","handleAddCustomField","oldCustomFields","newCustomFields","handleCustomFieldRemoval","handlePreferMp3Change","checked","handleThemeTypeChange","subtitlePreviewStyles","canceled","refreshFieldNames","modelFieldNames","handleClose","customFieldInputs","FormLabel","FormGroup","FormHelperText","location","hostname","FormControlLabel","control","Checkbox","inputProps","step","Radio","ankiConnectUrlKey","deckKey","noteTypeKey","sentenceFieldKey","definitionFieldKey","audioFieldKey","imageFieldKey","wordFieldKey","sourceFieldKey","customAnkiFieldsKey","subtitleSizeKey","subtitleColorKey","subtitleOutlineThicknessKey","subtitleOutlineColorKey","subtitleBackgroundColorKey","subtitleBackgroundOpacityKey","subtitleFontFamilyKey","subtitlePreviewKey","volumeKey","preferMp3Key","themeTypeKey","SettingsProvider","newSettings","localStorage","getItem","setItem","ankiFieldsString","PlayerChannel","closeCallbacks","subtitlesCallbacks","finishedAnkiDialogRequestCallbacks","overflow","cursorHidden","notifyReady","playerChannel","outerWidth","availWidth","screen","availHeight","outerHeight","resizeTo","tracks","selectedTrack","VideoPlayer","poppingInRef","fullscreenElement","setFullscreen","useFullscreen","fullscreenRef","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","setSubtitlePlayerHidden","showSubtitlesRef","alert","setAlert","alertOpen","setAlertOpen","controlsShowing","setControlsShowing","returnToFullscreenOnFinishedAnkiDialogRequest","setReturnToFullscreenOnFinishedAnkiDialogRequest","returnToFullscreenOnFinishedAnkiDialogRequestRef","videoRefCallback","onloadeddata","ontimeupdate","code","errorMessage","selectAudioTrack","onSubtitles","exitFullscreen","onFinishedAnkiDialogRequest","requestFullscreen","onbeforeunload","equals","arrayEquals","s1","s2","copy","bindToggleSubtitles","handleShowControls","showing","handleSubtitlesToggle","handleFullscreenToggle","handlePopOutToggle","popOutToggle","handleHideSubtitlePlayerToggle","handleAlertClosed","subtitleStyles","nocontrols","isMobile","useContentStyles","contentShift","audioClipFromItem","fromBase64","fromFile","audioTrack","imageFromItem","Content","App","createMuiTheme","main","secondary","red","A400","inVideoPlayer","useLocation","pathname","drawerRatio","minDrawerSize","copiedSubtitles","setCopiedSubtitles","copiedSubtitlesRef","copyHistoryOpen","setCopyHistoryOpen","alertSeverity","setAlertSeverity","setJumpToSubtitle","setSources","setLoading","setDragging","dragEnterRef","setFileName","ankiDialogOpen","setAnkiDialogOpen","ankiDialogDisabled","setAnkiDialogDisabled","ankiDialogItem","setAnkiDialogItem","ankiDialogAudioClip","ankiDialogImage","setAnkiDialogRequestToVideo","setAnkiDialogRequested","setAnkiDialogFinishedRequest","settingsDialogOpen","setSettingsDialogOpen","helpDialogOpen","setHelpDialogOpen","imageDialogOpen","setImageDialogOpen","setDisableKeyEvents","setImage","setTab","setAvailableTabs","fileInputRef","last","handleOpenCopyHistory","handleCloseCopyHistory","handleOpenSettings","handleOpenHelp","handleCloseHelp","handleImageDialogClosed","handleCloseSettings","publishMessage","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleError","previous","clip","handleSelectCopyHistoryItem","handleAnki","handleAnkiDialogCancel","handleAnkiDialogProceed","export","handleAnkiDialogRequest","onTabs","t1","t2","subscribeTabs","unsubscribeTabs","handleFiles","files","f","extensionStartIndex","extractSources","revokeUrls","File","handleDrop","dataTransfer","handleFileInputChange","handleFileSelector","handleDragEnter","handleDragLeave","handleSourcesLoaded","nothingLoaded","ThemeProvider","CssBaseline","onDrop","onDragOver","onDragEnter","onDragLeave","exact","path","render","URLSearchParams","search","get","to","accept","multiple","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","querySelector"],"mappings":"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","file":"static/js/main.7edbc5c6.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react';\r\n\r\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\r\nexport function useWindowSize(enabled) {\r\n    const [size, setSize] = useState([0, 0]);\r\n\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            if (enabled) {\r\n                setSize([window.innerWidth, window.innerHeight]);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, [enabled]);\r\n\r\n    return size;\r\n}","export default class KeyEvents {\r\n\r\n    static detectCopy(event) {\r\n        // Ctrl + Shift + A\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 65;\r\n    }\r\n\r\n    static detectDecreaseOffset(event) {\r\n        // Ctrl + Shift + Right\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectAnkiExport(event) {\r\n        // Ctrl + Shift + Q\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 81;\r\n    }\r\n\r\n    static detectIncreaseOffset(event) {\r\n        // Ctrl + Shift + Left\r\n        return event.ctrlKey && event.shiftKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectDecreaseOffsetToNextSubtitle(event) {\r\n        // Ctrl + Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && event.ctrlKey && event.keyCode === 39;\r\n    }\r\n\r\n    static detectIncreaseOffsetToPreviousSubtitle(event) {\r\n        // Ctrl + Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && event.ctrlKey && event.keyCode === 37;\r\n    }\r\n\r\n    static detectPreviousSubtitle(event) {\r\n        // Left\r\n        return !KeyEvents.detectIncreaseOffset(event) && !KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event) && event.keyCode === 37;\r\n    }\r\n\r\n    static detectNextSubtitle(event) {\r\n        // Right\r\n        return !KeyEvents.detectDecreaseOffset(event) && !KeyEvents.detectDecreaseOffsetToNextSubtitle(event) && event.keyCode === 39;\r\n    }\r\n\r\n    static detectToggleSubtitles(event) {\r\n        // S\r\n        return event.keyCode === 83;\r\n    }\r\n}","import KeyEvents from './KeyEvents';\r\n\r\nexport default class KeyBindings {\r\n\r\n    static bindCopy(onCopy, disabledGetter, subtitleGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectCopy(event)) {\r\n                return;\r\n            }\r\n\r\n            const subtitle = subtitleGetter();\r\n\r\n            if (!subtitle) {\r\n                return;\r\n            }\r\n\r\n            onCopy(event, subtitle);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindAnkiExport(onAnkiExport, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectAnkiExport(event)) {\r\n                return;\r\n            }\r\n\r\n            onAnkiExport(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindSeekToSubtitle(onSeekToSubtitle, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, timeGetter(), subtitles);\r\n\r\n            if (subtitle !== null && subtitle.start >= 0 && subtitle.end >= 0) {\r\n                onSeekToSubtitle(event, subtitle);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindOffsetToSubtitle(onOffsetChange, disabledGetter, timeGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let forward;\r\n\r\n            if (KeyEvents.detectIncreaseOffsetToPreviousSubtitle(event)) {\r\n                forward = false;\r\n            } else if (KeyEvents.detectDecreaseOffsetToNextSubtitle(event)) {\r\n                forward = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const time = timeGetter();\r\n            const subtitle = KeyBindings._adjacentSubtitle(forward, time, subtitles);\r\n\r\n            if (subtitle !== null) {\r\n                const subtitleStart = subtitle.originalStart;\r\n                const newOffset = time - subtitleStart;\r\n                onOffsetChange(event, newOffset);\r\n            }\r\n        }, useCapture);\r\n    }\r\n\r\n    static _adjacentSubtitle(forward, time, subtitles) {\r\n        const now = time;\r\n        let adjacentSubtitleIndex = -1;\r\n        let minDiff = Number.MAX_SAFE_INTEGER;\r\n\r\n        for (let i = 0; i < subtitles.length; ++i) {\r\n            const s = subtitles[i];\r\n            const diff = forward ? s.start - now : now - s.start;\r\n\r\n            if (minDiff <= diff) {\r\n                continue;\r\n            }\r\n\r\n            if (forward && now < s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = i;\r\n            } else if (!forward && now > s.start) {\r\n                minDiff = diff;\r\n                adjacentSubtitleIndex = now < s.end ? Math.max(0, i - 1) : i;\r\n            }\r\n        }\r\n\r\n        if (adjacentSubtitleIndex !== -1) {\r\n            return subtitles[adjacentSubtitleIndex];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static bindAdjustOffset(onOffsetChange, disabledGetter, subtitlesGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            const subtitles = subtitlesGetter();\r\n\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let increase;\r\n\r\n            if (KeyEvents.detectDecreaseOffset(event)) {\r\n                increase = false;\r\n            } else if (KeyEvents.detectIncreaseOffset(event)) {\r\n                increase = true;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            const currentOffset = subtitles[0].start - subtitles[0].originalStart;\r\n            const newOffset = currentOffset + (increase ? 100 : -100);\r\n            onOffsetChange(event, newOffset);\r\n        }, useCapture);\r\n    }\r\n\r\n    static bindToggleSubtitles(onToggleSubtitles, disabledGetter, useCapture = false) {\r\n        return KeyBindings._bind((event) => {\r\n            if (disabledGetter()) {\r\n                return;\r\n            }\r\n\r\n            if (!KeyEvents.detectToggleSubtitles(event)) {\r\n                return;\r\n            }\r\n\r\n            onToggleSubtitles(event);\r\n        }, useCapture);\r\n    }\r\n\r\n    static _bind(handler, useCapture) {\r\n        window.addEventListener('keydown', handler, useCapture);\r\n\r\n        return () => window.removeEventListener('keydown', handler, useCapture);\r\n    }\r\n}","export default class Mp3Encoder {\r\n\r\n    static async encode(blob, workerFactory) {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.onload = async (e) => {\r\n                try {\r\n                    const audioContext = new AudioContext();\r\n                    const audioBuffer = await audioContext.decodeAudioData(e.target.result);\r\n                    const channels = [];\r\n\r\n                    for (let i = 0; i < audioBuffer.numberOfChannels; ++i) {\r\n                        channels.push(audioBuffer.getChannelData(i));\r\n                    }\r\n\r\n                    const worker = workerFactory();\r\n                    worker.postMessage({\r\n                        command: 'encode',\r\n                        audioBuffer: {\r\n                            channels: channels,\r\n                            numberOfChannels: audioBuffer.numberOfChannels,\r\n                            length: audioBuffer.length,\r\n                            sampleRate: audioBuffer.sampleRate,\r\n                        }\r\n                    });\r\n                    worker.onmessage = (e) => {\r\n                        resolve(new Blob(e.data.buffer, {type: 'audio/mp3'}));\r\n                        worker.terminate();\r\n                    };\r\n                    worker.onerror = () => {\r\n                        reject(new Error('MP3 encoding failed'));\r\n                        worker.terminate();\r\n                    };\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            };\r\n            reader.readAsArrayBuffer(blob);\r\n        });\r\n    }\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/mp3-encoder.04720f9c.worker.js\");\n}\n","import Mp3Encoder from './Mp3Encoder';\r\n// eslint-disable-next-line\r\nimport Worker from 'worker-loader!./mp3-encoder.js';\r\nconst AUDIO_TYPES = {\"audio/ogg;codecs=opus\": \"ogg\", \"audio/webm;codecs=opus\": \"webm\"}\r\nconst [recorderMimeType, recorderExtension] = Object.keys(AUDIO_TYPES).filter(MediaRecorder.isTypeSupported).map(t => [t, AUDIO_TYPES[t]])[0];\r\nconst defaultMp3WorkerFactory = () => new Worker();\r\n\r\nclass Base64AudioData {\r\n\r\n    constructor(name, start, end, base64, extension) {\r\n        this.name = name;\r\n        this.start = start;\r\n        this.end = end;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async play() {\r\n        const blob = await this._blob();\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(blob);\r\n        audio.preload = \"none\";\r\n        audio.load();\r\n\r\n        await audio.play();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 1000);\r\n        });\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(\"data:audio/\" + this.extension + \";base64,\" + this._base64)).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n}\r\n\r\nclass FileAudioData {\r\n\r\n    constructor(file, start, end, trackId) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + start + \"_\" + end;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.trackId = trackId;\r\n        this.extension = recorderExtension;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(await this.blob());\r\n            reader.onloadend = () => {\r\n                const result = reader.result;\r\n                const base64 = result.substr(result.indexOf(',') + 1);\r\n                resolve(base64);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n            return;\r\n        }\r\n\r\n        const audio = this._audioElement(this._blob);\r\n        audio.currentTime = 0;\r\n        await audio.play();\r\n        await this._stopAudio(audio);\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await this._clipAudio();\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n\r\n    async _clipAudio() {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = this._audioElement(this.file);\r\n\r\n            audio.oncanplay = async (e) => {\r\n                audio.play();\r\n                const stream = this._captureStream(audio);\r\n\r\n                for (const t of stream.getVideoTracks()) {\r\n                    t.stop();\r\n                }\r\n\r\n                const recorder = new MediaRecorder(stream, { mimeType: recorderMimeType });\r\n                const chunks = [];\r\n\r\n                recorder.ondataavailable = (e) => {\r\n                    chunks.push(e.data);\r\n                };\r\n\r\n                recorder.onstop = (e) => {\r\n                    resolve(new Blob(chunks));\r\n                };\r\n\r\n                recorder.start();\r\n                await this._stopAudio(audio);\r\n                recorder.stop();\r\n            };\r\n        });\r\n    }\r\n\r\n    _audioElement(source) {\r\n        const audio = new Audio();\r\n        audio.src = URL.createObjectURL(source);\r\n        audio.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (this.trackId && audio.audioTracks && audio.audioTracks.length > 0) {\r\n            for (const t of audio.audioTracks) {\r\n                t.enabled = this.trackId === t.id;\r\n            }\r\n        }\r\n\r\n        audio.currentTime = this.start / 1000;\r\n        audio.load();\r\n\r\n        return audio;\r\n    }\r\n\r\n    _captureStream(audio) {\r\n        if (typeof audio.captureStream === \"function\") {\r\n            return audio.captureStream();\r\n        }\r\n\r\n        if (typeof audio.mozCaptureStream === \"function\") {\r\n            return audio.mozCaptureStream();\r\n        }\r\n\r\n        throw new Error(\"Unable to capture stream from audio\");\r\n    }\r\n\r\n    async _stopAudio(audio) {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                audio.pause();\r\n                const src = audio.src;\r\n                audio.src = null;\r\n                URL.revokeObjectURL(src);\r\n                resolve();\r\n            }, this.end - this.start + 100);\r\n        });\r\n    }\r\n}\r\n\r\nclass Mp3AudioData {\r\n\r\n    constructor(data, workerFactory) {\r\n        this.data = data;\r\n        this.workerFactory = workerFactory;\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    get extension() {\r\n        return \"mp3\";\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(await this.blob());\r\n                reader.onloadend = () => {\r\n                    const result = reader.result;\r\n                    const base64 = result.substr(result.indexOf(',') + 1);\r\n                    resolve(base64);\r\n                }\r\n            } catch(e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async blob() {\r\n        if (!this._blob) {\r\n            this._blob = await Mp3Encoder.encode(await this.data.blob(), this.workerFactory);\r\n        }\r\n\r\n        return this._blob;\r\n    }\r\n}\r\n\r\nexport default class AudioClip {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, start, end, base64, extension) {\r\n        const audioName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + start + \"_\" + end;\r\n        return new AudioClip(new Base64AudioData(audioName, start, end, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, start, end, trackId) {\r\n        return new AudioClip(new FileAudioData(file, start, end, trackId));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name + \".\" + this.data.extension;\r\n    }\r\n\r\n    async play() {\r\n        await this.data.play();\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n\r\n    toMp3(mp3WorkerFactory = defaultMp3WorkerFactory) {\r\n        return new AudioClip(new Mp3AudioData(this.data, mp3WorkerFactory));\r\n    }\r\n}","class Base64ImageData {\r\n\r\n    constructor(name, base64, extension) {\r\n        this.name = name;\r\n        this._base64 = base64;\r\n        this.extension = extension;\r\n    }\r\n\r\n    async base64() {\r\n        return this._base64;\r\n    }\r\n\r\n    async blob() {\r\n        return await this._blob();\r\n    }\r\n\r\n    async _blob() {\r\n        if (!this.cachedBlob) {\r\n            this.cachedBlob = await (await fetch(this._dataUrl())).blob();\r\n        }\r\n\r\n        return this.cachedBlob;\r\n    }\r\n\r\n    async dataUrl() {\r\n        return this._dataUrl();\r\n    }\r\n\r\n    _dataUrl() {\r\n        return \"data:image/\" + this.extension + \";base64,\" + this._base64;\r\n    }\r\n}\r\n\r\nclass FileImageData {\r\n\r\n    constructor(file, timestamp) {\r\n        this.file = file;\r\n        this.name = file.name + \"_\" + timestamp + \".jpeg\";\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    async base64() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            const dataUrl = canvas.toDataURL('image/jpeg');\r\n            resolve(dataUrl.substr(dataUrl.indexOf(',') + 1));\r\n        });\r\n    }\r\n\r\n    async blob() {\r\n        return new Promise(async (resolve, reject) => {\r\n            const canvas = await this._canvas();\r\n            canvas.toBlob((blob) => {\r\n                this._blob = blob;\r\n                resolve(blob)\r\n            }, 'image/jpeg');\r\n        });\r\n    }\r\n\r\n    async dataUrl() {\r\n        const canvas = await this._canvas();\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    async _canvas() {\r\n        return new Promise((resolve, reject) => {\r\n            const video = this._videoElement(this.file);\r\n\r\n            video.oncanplay = async (e) => {\r\n                const canvas = document.createElement('canvas');\r\n                canvas.width = video.videoWidth;\r\n                canvas.height = video.videoHeight;\r\n                const ctx = canvas.getContext('2d');\r\n                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n                resolve(canvas);\r\n                URL.revokeObjectURL(video.src);\r\n            };\r\n        });\r\n    }\r\n\r\n    _videoElement(source) {\r\n        const video = document.createElement('video');\r\n        video.src = URL.createObjectURL(source);\r\n        video.preload = \"none\";\r\n        video.currentTime = this.timestamp / 1000;\r\n        video.load();\r\n\r\n        return video;\r\n    }\r\n}\r\n\r\nexport default class Image {\r\n\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    static fromBase64(subtitleFileName, timestamp, base64, extension) {\r\n        const imageName = subtitleFileName.substring(0, subtitleFileName.lastIndexOf(\".\")) + \"_\" + timestamp + \".\" + extension;\r\n        return new Image(new Base64ImageData(imageName, base64, extension));\r\n    }\r\n\r\n    static fromFile(file, timestamp) {\r\n        return new Image(new FileImageData(file, timestamp));\r\n    }\r\n\r\n    get name() {\r\n        return this.data.name;\r\n    }\r\n\r\n    async base64() {\r\n        return await this.data.base64();\r\n    }\r\n\r\n    async dataUrl() {\r\n        return await this.data.dataUrl();\r\n    }\r\n\r\n    async download() {\r\n        const blob = await this.data.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = this.data.name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","export default class HttpFetcher {\r\n\r\n    async fetch(url, body) {\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(body)\r\n        });\r\n        return await response.json();\r\n    }\r\n}","import HttpFetcher from './HttpFetcher';\r\n\r\nconst specialCharacters = ['\"', '*', '_', '\\\\', ':'];\r\n\r\nexport default class Anki {\r\n\r\n    constructor(settingsProvider, fetcher = new HttpFetcher()) {\r\n        this.settingsProvider = settingsProvider;\r\n        this.fetcher = fetcher;\r\n    }\r\n\r\n    async deckNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('deckNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelNames(ankiConnectUrl) {\r\n        const response = await this._executeAction('modelNames', null, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async modelFieldNames(modelName, ankiConnectUrl) {\r\n        const response = await this._executeAction('modelFieldNames', {modelName: modelName}, ankiConnectUrl);\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWord(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'findNotes',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    async findNotesWithWordGui(word, ankiConnectUrl) {\r\n        const response = await this._executeAction(\r\n            'guiBrowse',\r\n            {query: this.settingsProvider.wordField + \":\" + this._escapeQuery(word)},\r\n            ankiConnectUrl\r\n        );\r\n        return response.result;\r\n    }\r\n\r\n    _escapeQuery(query) {\r\n        let escaped = \"\";\r\n\r\n        for (let i = 0; i < query.length; ++i) {\r\n            const char = query[i];\r\n            if (specialCharacters.includes(char)) {\r\n                escaped += `\\\\${char}`;\r\n            } else {\r\n                escaped += char;\r\n            }\r\n        }\r\n\r\n        return `\"${escaped}\"`\r\n    }\r\n\r\n    async export(text, definition, audioClip, image, word, source, customFieldValues, mode, ankiConnectUrl) {\r\n        const fields = {};\r\n\r\n        this._appendField(fields, this.settingsProvider.sentenceField, text, true);\r\n        this._appendField(fields, this.settingsProvider.definitionField, definition, true);\r\n        this._appendField(fields, this.settingsProvider.wordField, word, false);\r\n        this._appendField(fields, this.settingsProvider.sourceField, source, false);\r\n\r\n        if (customFieldValues) {\r\n            for (const customFieldName of Object.keys(customFieldValues)) {\r\n                this._appendField(fields, this.settingsProvider.customAnkiFields[customFieldName], customFieldValues[customFieldName], false);\r\n            }\r\n        }\r\n\r\n        const params = {\r\n            note: {\r\n                deckName: this.settingsProvider.deck,\r\n                modelName: this.settingsProvider.noteType,\r\n                options: {\r\n                    allowDuplicate: false,\r\n                    duplicateScope: 'deck',\r\n                    duplicateScopeOptions: {\r\n                        deckName: this.settingsProvider.deck,\r\n                        checkChildren: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const gui = mode === 'gui';\r\n\r\n        if (this.settingsProvider.audioField && audioClip) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(audioClip.name, await audioClip.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.audioField, `[sound:${fileName}]`, false)\r\n            } else {\r\n                params.note.audio = {\r\n                    filename: audioClip.name,\r\n                    data: await audioClip.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.audioField\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n\r\n        if (this.settingsProvider.imageField && image) {\r\n            if (gui) {\r\n                const fileName = (await this._storeMediaFile(image.name, await image.base64(), ankiConnectUrl)).result;\r\n                this._appendField(fields, this.settingsProvider.imageField, `<div><img src=\"${fileName}\"></div>`, false);\r\n            } else {\r\n                params.note.picture = {\r\n                    filename: image.name,\r\n                    data: await image.base64(),\r\n                    fields: [\r\n                        this.settingsProvider.imageField\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        params.note.fields = fields;\r\n\r\n        switch (mode) {\r\n            case 'gui':\r\n                return (await this._executeAction('guiAddCards', params, ankiConnectUrl)).result;\r\n            case 'updateLast':\r\n                const recentNotes = (await this._executeAction(\r\n                    'findNotes',\r\n                    {query: 'added:1'},\r\n                    ankiConnectUrl\r\n                )).result.sort();\r\n\r\n                if (recentNotes.length === 0) {\r\n                    throw new Error('Could not find note to update');\r\n                }\r\n\r\n                const lastNoteId = recentNotes[recentNotes.length - 1];\r\n                params.note.id = lastNoteId;\r\n                await this._executeAction('updateNoteFields', params, ankiConnectUrl);\r\n                return lastNoteId;\r\n            case 'default':\r\n                return (await this._executeAction('addNote', params, ankiConnectUrl)).result;\r\n            default:\r\n                throw new Error('Unknown export mode: ' + mode);\r\n        }\r\n\r\n    }\r\n\r\n    _appendField(fields, fieldName, value, multiline) {\r\n        if (!fieldName || !value) {\r\n            return;\r\n        }\r\n\r\n        let newValue =  multiline ? value.split(\"\\n\").join(\"<br>\") : value;\r\n        const existingValue = fields[fieldName];\r\n\r\n        if (existingValue) {\r\n            newValue = existingValue + \"<br>\" + newValue;\r\n        }\r\n\r\n        fields[fieldName] = newValue;\r\n    }\r\n\r\n    async _storeMediaFile(name, base64, ankiConnectUrl) {\r\n        return this._executeAction('storeMediaFile', {filename: name, data: base64}, ankiConnectUrl);\r\n    }\r\n\r\n    async _executeAction(action, params, ankiConnectUrl) {\r\n        const body = {\r\n            action: action,\r\n            version: 6\r\n        };\r\n\r\n        if (params) {\r\n            body.params = params;\r\n        }\r\n\r\n        const json = await this.fetcher.fetch(ankiConnectUrl || this.settingsProvider.ankiConnectUrl, body);\r\n\r\n        if (json.error) {\r\n            throw new Error(json.error);\r\n        }\r\n\r\n        return json;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    mediaField: {\r\n        cursor: 'pointer',\r\n        '& input': {\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function AnkiDialog({\r\n    open,\r\n    disabled,\r\n    text: initialText,\r\n    onProceed,\r\n    onCancel,\r\n    onViewImage,\r\n    onOpenSettings,\r\n    audioClip: initialAudioClip,\r\n    image,\r\n    source,\r\n    customFields,\r\n    settingsProvider,\r\n    anki,\r\n    }) {\r\n    const classes = useStyles();\r\n    const [definition, setDefinition] = useState(\"\");\r\n    const [text, setText] = useState();\r\n    const [word, setWord] = useState();\r\n    const [lastSearchedWord, setLastSearchedWord] = useState();\r\n    const [duplicateNotes, setDuplicateNotes] = useState([]);\r\n    const [wordTimestamp, setWordTimestamp] = useState(0);\r\n    const [customFieldValues, setCustomFieldValues] = useState({});\r\n    const audioClip = useMemo(() => {\r\n        if (initialAudioClip && settingsProvider.preferMp3) {\r\n            return initialAudioClip.toMp3();\r\n        }\r\n\r\n        return initialAudioClip;\r\n    }, [initialAudioClip, settingsProvider.preferMp3])\r\n\r\n    useEffect(() => {\r\n        setText(initialText);\r\n        setDefinition(\"\");\r\n        setWord(\"\");\r\n        setDuplicateNotes([]);\r\n        setCustomFieldValues({});\r\n    }, [initialText]);\r\n\r\n    useEffect(() => {\r\n        setWordTimestamp(Date.now());\r\n    }, [word]);\r\n\r\n    useEffect(() => {\r\n        if (!word || !settingsProvider.wordField) {\r\n            return;\r\n        }\r\n\r\n        const trimmedWord = word.trim();\r\n\r\n        if (trimmedWord === \"\" || trimmedWord === lastSearchedWord) {\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                setDuplicateNotes(await anki.findNotesWithWord(trimmedWord));\r\n                setLastSearchedWord(trimmedWord);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }, 500);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [word, wordTimestamp, lastSearchedWord, anki, settingsProvider.wordField]);\r\n\r\n    const handlePlayAudio = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        audioClip.play();\r\n    }, [audioClip]);\r\n\r\n    const handleViewImage = useCallback((e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onViewImage(image);\r\n    }, [image, onViewImage]);\r\n\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        const newCustomFieldValues = {};\r\n        Object.assign(newCustomFieldValues, customFieldValues);\r\n        newCustomFieldValues[customFieldName] = value;\r\n        setCustomFieldValues(newCustomFieldValues);\r\n    }, [customFieldValues]);\r\n\r\n    let wordHelperText;\r\n\r\n    if (word && word.trim() === lastSearchedWord && settingsProvider.wordField) {\r\n        wordHelperText = duplicateNotes.length > 0\r\n            ? `Found ${duplicateNotes.length} notes with word \"${word}\" in field \"${settingsProvider.wordField}\"`\r\n            : `No notes found with word \"${word.trim()}\" in field \"${settingsProvider.wordField}\"`;\r\n    } else {\r\n        wordHelperText = \"\";\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"sm\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <Toolbar>\r\n            <Typography\r\n                variant=\"h6\"\r\n                className={classes.title}\r\n            >\r\n                Anki Export\r\n            </Typography>\r\n            <IconButton\r\n                edge=\"end\"\r\n                onClick={() => onOpenSettings()}\r\n            >\r\n                <SettingsIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n            <DialogContent>\r\n                <form className={classes.root}>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rowsMax={8}\r\n                        label=\"Sentence\"\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        multiline\r\n                        fullWidth\r\n                        rows={8}\r\n                        label=\"Definition\"\r\n                        value={definition}\r\n                        onChange={(e) => setDefinition(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                        helperText={wordHelperText}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                <Tooltip title=\"Search in Anki\">\r\n                                    <span>\r\n                                    <IconButton\r\n                                        disabled={disabled || !settingsProvider.wordField || !word || word.trim() === \"\"}\r\n                                        onClick={() => anki.findNotesWithWordGui(word.trim())}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        <SearchIcon />\r\n                                    </IconButton>\r\n                                    </span>\r\n                                </Tooltip>\r\n                                </InputAdornment>\r\n                            )\r\n                        }}\r\n                    />\r\n                    {Object.keys(customFields).map((customFieldName) => (\r\n                        <TextField\r\n                            key={customFieldName}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            label={customFieldName}\r\n                            value={customFieldValues[customFieldName] || \"\"}\r\n                            onChange={(e) => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                        />\r\n                    ))}\r\n                    {audioClip && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handlePlayAudio}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={audioClip.name}\r\n                                label=\"Audio\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {image && (\r\n                        <div\r\n                            className={classes.mediaField}\r\n                            onClick={handleViewImage}\r\n                        >\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                value={image.name}\r\n                                label=\"Image\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        label=\"Source\"\r\n                        value={source}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'gui')}\r\n                >\r\n                    Open in Anki\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'updateLast')}\r\n                >\r\n                    Update Last Card\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    onClick={() => onProceed(text, definition, audioClip, image, word, source, customFieldValues, 'default')}\r\n                >\r\n                    Export\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/background-colored.8c5dbfe0.png\";","import { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport coloredBackground from './background-colored.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: ({dragging}) => ({\r\n        position: \"absolute\",\r\n        height: \"calc(100% - 64px)\",\r\n        width: \"100%\",\r\n        zIndex: 101,\r\n        pointerEvents: dragging ? \"auto\" : \"none\"\r\n    }),\r\n    transparentBackground: {\r\n        \"&::before\": {\r\n            content: \"' '\",\r\n            position: \"absolute\",\r\n            height: 'calc(100vh - 64px)',\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            backgroundSize: \"500px 500px\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundImage: `url(${coloredBackground})`,\r\n            backgroundBlendMode: 'overlay',\r\n            background: \"rgba(0, 0, 0, .3)\",\r\n            filter: \"drop-shadow(10px 10px 10px rgb(0, 0, 0, .4))\"\r\n        },\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nexport default function DragOverlay({dragging, loading}) {\r\n    const classes = useStyles({dragging: dragging});\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fade in={dragging || loading}>\r\n                <div className={classes.transparentBackground} />\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Link from '@material-ui/core/Link';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inlineIcon: {\r\n        maxWidth: '80%',\r\n        height: 20,\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"start\",\r\n        textAlign: \"left\"\r\n    }\r\n}));\r\nexport default function HelpDialog(props) {\r\n    const classes = useStyles();\r\n    const {open, extensionUrl, onClose} = props;\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n        >\r\n            <DialogContent>\r\n                <Typography variant=\"h6\">\r\n                    Loading files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Drag and drop mkv, srt, ass, or mp3 files into the player.\r\n                    </li>\r\n                    <li>\r\n                        Multiple files can be dragged and dropped\r\n                        simultaneously e.g. mkv+srt, mp3+ass, etc.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Syncing with streaming video in another tab\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Install the Chrome <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>extension</Link>.\r\n                    </li>\r\n                    <li>Drag-and-drop a subtitle file into the video element you want to sync.</li>\r\n                    <li>\r\n                        Or, load a subtitle file into asbplayer.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<VideocamIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        If the icon does not appear try refreshing the video in the other tab.\r\n                    </li>\r\n                    <li>\r\n                        It is recommended to use the extension keyboard shortcut (Ctrl+Alt+X by default) to mine subtitles since that will include audio/screenshots.\r\n                        If the keyboard shortcut  is not working for some reason try:\r\n                        <Typography component=\"ul\">\r\n                            <li>Uninstalling and reinstalling the extension and restarting Chrome.</li>\r\n                            <li>Verifying the keyboard shortcut is  bound as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/wYWbgovfNlI\">video</Link>.</li>\r\n                        </Typography>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Anki\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<StarIcon fontSize=\"small\" />&nbsp; button in the copy history.\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        Audio/image will be exported only if an audio/image source was available when the subtitle was copied.\r\n                    </li>\r\n                    <li>\r\n                        Specifically, for synced streaming video, an audio/image will only be available if the extension keyboard shortcut was used (Ctrl+Alt+X by default).\r\n                    </li>\r\n                    <li>\r\n                        Configure Anki settings with the settings button in the top right. See this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link> for how to configure AnkiConnect so that asbplayer can connect to Anki.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Changing subtitle offset\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Use Ctrl+Left/Right to cause the previous/next subtitle to appear at the current timestamp.\r\n                    </li>\r\n                    <li>\r\n                        Use Ctrl+Shift+Left/Right to adjust timing further by 100 ms increments.\r\n                    </li>\r\n                    <li>\r\n                        Or, click on the subtitle offset input field in the controls, type a number, and hit Enter.\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Condensed playback of local media files\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        Load an audio/video file with a subtitle file.\r\n                    </li>\r\n                    <li>\r\n                        <div className={classes.inlineIcon}>\r\n                            Use the &nbsp;<SpeedIcon fontSize=\"small\" />&nbsp; button in the bottom right.\r\n                        </div>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Keyboard shortcuts\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+A</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Q</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Z</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+X</Typography></TableCell>\r\n                                <TableCell><Typography>Copy current subtitle and open Anki export dialog (streaming video in another tab)</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Space</Typography></TableCell>\r\n                                <TableCell><Typography>Play/pause</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>S</Typography></TableCell>\r\n                                <TableCell><Typography>Toggle subtitles</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Seek to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset to previous/next subtitle</Typography></TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Ctrl+Shift+Left/Right</Typography></TableCell>\r\n                                <TableCell><Typography>Adjust offset by +/- 100 ms</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Demos\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=W9Lf3C7sRzc\">Sentence mining streaming video (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=kJXVVixD8H8\">Sentence mining streaming video (asynchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=J3E82spYqIk\">Sentence mining video files (synchronous workflow)</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.youtube.com/watch?v=HsrrpnfM4pI\">Sentence mining video files (asynchronous workflow)</Link>\r\n                    </li>\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"h6\">\r\n                    Browser Compatibility\r\n                </Typography>\r\n                <Typography component=\"ul\">\r\n                    <li>\r\n                        The asbplayer application and extension have only been tested on Chrome 91 and later.\r\n                    </li>\r\n                    <li>\r\n                        The asbplayer application and extension may work on other Chromium-based browsers.\r\n                    </li>\r\n                    <li>\r\n                        Local video file playback is supported only for codecs supported by the browser.\r\n                    </li>\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>OK</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: ({width, height}) => ({\r\n        width: width,\r\n        height: height,\r\n        backgroundSize: 'contain'\r\n    })\r\n}));\r\n\r\nexport default function ImageDialog(props) {\r\n    const {open, image, onClose} = props;\r\n    const [dataUrl, setDataUrl] = useState();\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n\r\n    let resizeRatio;\r\n\r\n    if (width > 0 && height > 0) {\r\n        resizeRatio = Math.min(1, Math.min(windowWidth / (2 * width), windowHeight / (2 * height)));\r\n    } else {\r\n        resizeRatio = 1;\r\n    }\r\n\r\n    const classes = useStyles({width: width * resizeRatio, height: height * resizeRatio});\r\n\r\n    useEffect(() => {\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        setDataUrl(null);\r\n        async function fetchImage() {\r\n            const dataUrl = await image.dataUrl();\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                setWidth(img.width);\r\n                setHeight(img.height);\r\n                setDataUrl(dataUrl);\r\n            };\r\n            img.src = dataUrl;\r\n        }\r\n\r\n        fetchImage();\r\n    }, [image]);\r\n\r\n    if (!image || !dataUrl) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onBackdropClick={onClose}\r\n            onEscapeKeyDown={onClose}\r\n            maxWidth='lg'\r\n        >\r\n            <Card>\r\n                <CardMedia\r\n                    className={classes.image}\r\n                    image={dataUrl}\r\n                    title={image.name}\r\n                    style={{width: width * resizeRatio, height: height * resizeRatio}}\r\n                />\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { parseSync as parseSrt } from 'subtitle';\r\nimport { parse as parseAss } from 'ass-compiler';\r\nimport { WebVTT } from 'vtt.js';\r\n\r\nexport default class SubtitleReader {\r\n\r\n    async subtitles(file) {\r\n        if (file.name.endsWith('.srt') ) {\r\n            const nodes = parseSrt(await file.text());\r\n            return nodes.map(node => node.data).sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        if (file.name.endsWith('.vtt')) {\r\n            return new Promise(async (resolve, reject) => {\r\n                const parser = new WebVTT.Parser(window, WebVTT.StringDecoder());\r\n                const cues = [];\r\n                parser.oncue = (c) => cues.push(c);\r\n                parser.onflush = () => resolve(\r\n                    cues\r\n                        .map((c) => ({\r\n                            start: Math.floor(c.startTime * 1000),\r\n                            end: Math.floor(c.endTime * 1000),\r\n                            text: c.text\r\n                        }))\r\n                        .sort((n1, n2) => n1.start - n2.start)\r\n                );\r\n                parser.parse(await file.text());\r\n                parser.flush();\r\n            });\r\n        }\r\n\r\n        if (file.name.endsWith('.ass')) {\r\n            const nodes = parseAss(await file.text());\r\n            return nodes.events.dialogue.map(event => ({\r\n                start: Math.round(event.Start * 1000),\r\n                end: Math.round(event.End * 1000),\r\n                text: event.Text.combined\r\n            }))\r\n            .sort((n1, n2) => n1.start - n2.start);\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: ({drawerWidth}) => `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    copyHistoryButton: {\r\n        transform: 'scaleX(1)',\r\n        width: 48,\r\n        padding: 12,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    copyHistoryButtonShift: {\r\n        transform: 'scaleX(0)',\r\n        width: 0,\r\n        padding: 5,\r\n        transition: theme.transitions.create(['transform', 'padding', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nconst useCopyHistoryTooltipStyles = makeStyles((theme) => ({\r\n    tooltip: ({show}) => ({\r\n        display: show ? 'block' : 'none',\r\n    }),\r\n}));\r\n\r\nfunction CopyHistoryTooltip({show, ...toolTipProps}) {\r\n    const classes = useCopyHistoryTooltipStyles({show: show});\r\n    return <Tooltip classes={classes} {...toolTipProps} />;\r\n}\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            elevation={0}\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <Tooltip title=\"Open Files\">\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onFileSelector}\r\n                    >\r\n                        <FolderOpenIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <Tooltip title=\"Submit Issue\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        component=\"a\"\r\n                        href=\"https://github.com/killergerbah/asbplayer/issues\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <BugReportIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Help\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenHelp}\r\n                    >\r\n                        <HelpIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Settings\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        onClick={props.onOpenSettings}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <CopyHistoryTooltip title=\"Copy History\" show={!props.drawerOpen}>\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        className={clsx(classes.copyHistoryButton, {\r\n                            [classes.copyHistoryButtonShift]: props.drawerOpen,\r\n                        })}\r\n                        onClick={props.onOpenCopyHistory}\r\n                    >\r\n                        <ListIcon />\r\n                    </IconButton>\r\n                </CopyHistoryTooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class ChromeExtension {\r\n\r\n    constructor(heartbeat) {\r\n        this.onMessageCallbacks = [];\r\n        this.onTabsCallbacks = [];\r\n        this.tabs = [];\r\n        this.versionPromise = new Promise((resolve, reject) => {\r\n            this.versionResolve = resolve;\r\n        });\r\n        this.id = uuidv4();\r\n\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n\r\n                        for (let c of this.onTabsCallbacks) {\r\n                            c(this.tabs);\r\n                        }\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (event.data.message.command === 'version') {\r\n                        this.versionResolve(event.data.message.version);\r\n                        return;\r\n                    }\r\n\r\n                    for (let c of this.onMessageCallbacks) {\r\n                        c({\r\n                            data: event.data.message,\r\n                            tabId: event.data.tabId,\r\n                            src: event.data.src\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (heartbeat) {\r\n            this._sendHeartbeat();\r\n            setInterval(() => this._sendHeartbeat(), 1000);\r\n        }\r\n    }\r\n\r\n    _sendHeartbeat() {\r\n        window.postMessage({\r\n            sender: 'asbplayerv2',\r\n            message: {\r\n                command: 'heartbeat',\r\n                id: this.id\r\n            }\r\n        }, '*');\r\n    }\r\n\r\n    async installedVersion() {\r\n        return await this.versionPromise;\r\n    }\r\n\r\n    sendMessage(message, tabId, src) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId, src: src}, '*');\r\n    }\r\n\r\n    publishMessage(message) {\r\n        for (const tab of this.tabs) {\r\n            window.postMessage({sender: 'asbplayer', message: message, tabId: tab.id, src: tab.src}, '*');\r\n        }\r\n    }\r\n\r\n    subscribeTabs(callback) {\r\n        this.onTabsCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribeTabs(callback) {\r\n        this._remove(callback, this.onTabsCallbacks);\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        this._remove(callback, this.onMessageCallbacks);\r\n    }\r\n\r\n    _remove(callback, callbacks) {\r\n        for (let i = callbacks.length - 1; i >= 0; --i) {\r\n            if (callback === callbacks[i]) {\r\n                callbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: ({drawerWidth}) => drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItem: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    listItemGutters: {\r\n        paddingLeft: 5,\r\n        paddingRight: 5\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    },\r\n    emptyState: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        textAlign: \"center\",\r\n        height: \"100%\",\r\n        padding: 15\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, onDownloadImage, onDelete, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    const handleDownloadImage = useCallback(() => {\r\n        onDownloadImage(item);\r\n        onClose();\r\n    }, [item, onDownloadImage, onClose]);\r\n\r\n    const handleDelete = useCallback(() => {\r\n        onDelete(item);\r\n        onClose();\r\n    }, [item, onDelete, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile || item.audio) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Audio\" />\r\n                    </ListItem>\r\n                )}\r\n                {(item.videoFile || item.image) && (\r\n                    <ListItem button onClick={handleDownloadImage}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Download Image\" />\r\n                    </ListItem>\r\n                )}\r\n                <ListItem button onClick={handleDelete}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Delete\" />\r\n                </ListItem>\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props);\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content;\r\n\r\n    if (props.items.length > 0) {\r\n        const items = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n        const itemNameCounters = {};\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                if (item.name in itemNameCounters) {\r\n                    itemNameCounters[item.name]++;\r\n                } else {\r\n                    itemNameCounters[item.name] = 0;\r\n                }\r\n\r\n                lastSeenItemName = item.name;\r\n                items.push((<ListSubheader disableSticky={true} key={item.name + \"-\" + itemNameCounters[item.name]}>{item.name}</ListSubheader>));\r\n\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            items.push((\r\n                <ListItem\r\n                    ref={ref}\r\n                    key={item.timestamp}\r\n                    className={classes.listItem}\r\n                    classes={{gutters: classes.listItemGutters}}\r\n                >\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <Tooltip title=\"Export to Anki\">\r\n                            <IconButton onClick={() => props.onAnki(item)}>\r\n                                <StarIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItemIcon>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n        content = (\r\n            <div className={classes.listContainer}>\r\n                <List>{items}</List>\r\n            </div>\r\n        );\r\n    } else {\r\n        content = (\r\n            <div className={classes.emptyState}>\r\n                <Typography variant=\"h6\">Copy history is empty.</Typography>\r\n                <Typography variant=\"caption\">\r\n                    See the help for keyboard shortcuts.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {content}\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n                onDownloadImage={props.onDownloadImage}\r\n                onDelete={handleDelete}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport gt from 'semver/functions/gt';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    background: {\r\n        position: \"absolute\",\r\n        height: 'calc(100vh - 64px)',\r\n        width: \"100%\",\r\n        zIndex: 100,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    browseLink: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport default function LandingPage({extension, latestExtensionVersion, extensionUrl, loading, dragging, onFileSelector}) {\r\n    const classes = useStyles();\r\n    const [installedExtensionVersion, setInstalledExtensionVersion] = useState();\r\n\r\n    useEffect(() => {\r\n        async function fetchInstalledExtensionVersion() {\r\n            setInstalledExtensionVersion(await extension.installedVersion());\r\n        }\r\n\r\n        fetchInstalledExtensionVersion();\r\n    }, [extension]);\r\n\r\n    const extensionUpdateAvailable = installedExtensionVersion && gt(latestExtensionVersion, installedExtensionVersion);\r\n    const extensionNotInstalled = !installedExtensionVersion;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Fade in={!loading && !dragging} timeout={500}>\r\n                <div className={classes.background}>\r\n                    <Typography variant=\"h6\">\r\n                        Drag and drop subtitle and media files, or <Link target=\"#\" className={classes.browseLink} onClick={onFileSelector} color=\"secondary\" component=\"label\">browse</Link>.\r\n                        <br />\r\n                        {extensionNotInstalled && (\r\n                            <span>\r\n                                Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>Chrome extension</Link> to sync subtitles with streaming video.\r\n                            </span>\r\n                        )}\r\n                        {extensionUpdateAvailable && (\r\n                            <span>\r\n                                An extension <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href={extensionUrl}>update</Link> is available.\r\n                            </span>\r\n                        )}\r\n                    </Typography>\r\n                </div>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel?.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel?.close();\r\n        this.channel = null;\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, src, extension) {\r\n        this.tabId = tabId;\r\n        this.src = src;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId && (!message.src || message.src === src)) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId, this.src);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0,\r\n        pointerEvents: 'none',\r\n        color: \"#fff\"\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: \"#fff\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20,\r\n        marginLeft: 10\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: \"#fff\",\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerShown: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 5,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputContainerHidden: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        marginRight: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputHidden: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputShown: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        width: 100,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbHidden: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 0,\r\n        pointerEvents: 'auto'\r\n    },\r\n    volumeInputThumbShown: {\r\n        transition: theme.transitions.create('visibility', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.short,\r\n        }),\r\n        opacity: 1,\r\n        pointerEvents: 'auto'\r\n    },\r\n    subContainer: {\r\n        background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4) 40%, rgba(0, 0, 0, 0.7))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n    },\r\n    button: {\r\n        pointerEvents: 'auto'\r\n    },\r\n    inactiveButton: {\r\n        color: 'rgba(72, 72, 72, 0.7)',\r\n        pointerEvents: 'auto'\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    hideSubtitlePlayerToggleButton: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        pointerEvents: 'auto',\r\n        color: '#fff'\r\n    },\r\n    gridContainer: {\r\n        pointerEvents: 'auto',\r\n        padding: 2,\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 10,\r\n    },\r\n    container: {\r\n        height: 10,\r\n        pointerEvents: 'auto',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        width: \"calc(100% - 20px)\",\r\n        marginLeft: 10\r\n    },\r\n    mouseEventListener: {\r\n        zIndex: 1,\r\n        height: 10,\r\n        cursor: 'pointer',\r\n        pointerEvents: 'auto',\r\n        position: \"absolute\",\r\n        width: '100%',\r\n    },\r\n    fillContainer: {\r\n        background: 'rgba(30,30,30,0.7)',\r\n        width: '100%',\r\n        height: 5,\r\n        position: 'relative',\r\n    },\r\n    fillContainerThick: {\r\n        transition: theme.transitions.create('height', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: 50,\r\n        }),\r\n        height: 8\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #ff1f62, #49007a)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'absolute',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '100%',\r\n        bottom: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 16,\r\n        height: 16,\r\n        opacity: 0,\r\n        left: -8,\r\n        background: 'white',\r\n        position: 'absolute',\r\n    },\r\n    handleOn: {\r\n        opacity: 1,\r\n        transition: theme.transitions.create('opacity', {\r\n            easing: theme.transitions.easing.easeInOut,\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst VolumeSlider = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        verticalAlign: 'middle'\r\n    },\r\n    thumb: {\r\n        backgroundColor: 'white',\r\n        color: 'white',\r\n        '&:focus': {\r\n            boxShadow: 'inherit'\r\n        },\r\n        '&:hover, &$active': {\r\n            boxShadow: '0px 0px 0px 8px rgba(255, 255, 255, 0.1)',\r\n        },\r\n    },\r\n    active: {\r\n        color: 'white'\r\n    },\r\n}))(Slider);\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const onSeek = props.onSeek;\r\n\r\n    const handleClick = useCallback((e) => {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        // Account for margins by subtracting 10 from left/right sides\r\n        const width = rect.right - rect.left - 20;\r\n        const progress = Math.min(1, Math.max(0, (e.pageX - rect.left - 10) / width));\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    const handleMouseOver = useCallback(() => setMouseOver(true), []);\r\n    const handleMouseOut = useCallback(() => setMouseOver(false), []);\r\n    const progressWidth = containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0;\r\n    const fillStyle = {width: progressWidth};\r\n    const handleStyle = {marginLeft: progressWidth};\r\n    const fillContainerClassName = mouseOver ? classes.fillContainer + \" \" + classes.fillContainerThick : classes.fillContainer;\r\n    const handleClassName = mouseOver ? classes.handle + \" \" + classes.handleOn : classes.handle;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div\r\n                ref={containerRef}\r\n                className={classes.container}>\r\n                <div\r\n                    className={fillContainerClassName}\r\n                >\r\n                    <div className={classes.fill} style={fillStyle}></div>\r\n                    <div className={classes.handleContainer}>\r\n                        <div className={handleClassName} style={handleStyle} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={classes.mouseEventListener}\r\n                onClick={handleClick}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector({open, anchorEl, onClose, tabs, selectedTab, onTabSelected}) {\r\n    if (!tabs || tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={selectedTab && t.id === selectedTab.id && t.src === selectedTab.src}\r\n                button onClick={() => onTabSelected(t)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls({\r\n    clock,\r\n    playing,\r\n    length,\r\n    offsetEnabled,\r\n    displayLength,\r\n    offset,\r\n    onAudioTrackSelected,\r\n    onSeek,\r\n    mousePositionRef,\r\n    onShow,\r\n    onPause,\r\n    onPlay,\r\n    onTabSelected,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onOffsetChange,\r\n    onVolumeChange,\r\n    disableKeyEvents,\r\n    settingsProvider,\r\n    closeEnabled,\r\n    onClose,\r\n    volumeEnabled,\r\n    condensedModeEnabled,\r\n    condensedModeToggleEnabled,\r\n    onCondensedModeToggle,\r\n    subtitlesEnabled,\r\n    subtitlesToggle,\r\n    onSubtitlesToggle,\r\n    videoFile,\r\n    audioFile,\r\n    audioTracks,\r\n    selectedAudioTrack,\r\n    tabs,\r\n    selectedTab,\r\n    popOutEnabled,\r\n    popOut,\r\n    onPopOutToggle,\r\n    fullscreenEnabled,\r\n    fullscreen,\r\n    onFullscreenToggle,\r\n    hideSubtitlePlayerToggleEnabled,\r\n    subtitlePlayerHidden,\r\n    onHideSubtitlePlayerToggle,\r\n    }) {\r\n    const classes = useControlStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const [showVolumeBar, setShowVolumeBar] = useState(false);\r\n    const [volume, setVolume] = useState(100);\r\n    const [lastCommittedVolume, setLastCommittedVolume] = useState(100);\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastOffsetInputChangeTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const savedVolume = Number(settingsProvider.volume);\r\n        setVolume(savedVolume);\r\n        onVolumeChange(savedVolume / 100);\r\n\r\n        if (savedVolume > 0) {\r\n            setLastCommittedVolume(savedVolume);\r\n        }\r\n    }, [settingsProvider, onVolumeChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const now = Date.now();\r\n            const currentShow = now - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n                || now - lastOffsetInputChangeTimestampRef.current < 2000\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => onShow?.(show), [onShow, show]);\r\n\r\n    useEffect(() => {\r\n        if (disableKeyEvents) {\r\n            return;\r\n        }\r\n\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange, disableKeyEvents]);\r\n\r\n    const handleOffsetInputClicked = useCallback((e) => e.target.setSelectionRange(0, e.target.value?.length || 0), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            if (offset === 0) {\r\n                offsetInputRef.current.value = null;\r\n            } else {\r\n                const offsetSeconds = offset / 1000;\r\n                const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n                offsetInputRef.current.value = value;\r\n                lastOffsetInputChangeTimestampRef.current = Date.now();\r\n            }\r\n        }\r\n    }, [offset]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((tab) => {\r\n        onTabSelected(tab);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const handleVolumeMouseOut = useCallback(() => setShowVolumeBar(false), []);\r\n    const handleVolumeMouseOver = useCallback(() => setShowVolumeBar(true), []);\r\n\r\n    const handleVolumeChange = useCallback((e, value) => {\r\n        setVolume(value);\r\n        onVolumeChange(value / 100);\r\n    }, [onVolumeChange]);\r\n\r\n    const handleVolumeChangeCommitted = useCallback((e, value) => {\r\n        if (value > 0) {\r\n            setLastCommittedVolume(value);\r\n        }\r\n\r\n        settingsProvider.volume = value;\r\n    }, [settingsProvider]);\r\n\r\n    const handleVolumeToggle = useCallback((e, value) => {\r\n        setVolume((volume) => {\r\n            const newVolume = volume > 0 ? 0 : lastCommittedVolume;\r\n            onVolumeChange(newVolume / 100);\r\n            return newVolume;\r\n        });\r\n    }, [onVolumeChange, lastCommittedVolume]);\r\n\r\n    const progress = clock.progress(length);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {closeEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.closeButton}\r\n                        onClick={onClose}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            {hideSubtitlePlayerToggleEnabled && (\r\n                <Fade in={show} timeout={200}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={classes.hideSubtitlePlayerToggleButton}\r\n                        onClick={onHideSubtitlePlayerToggle}\r\n                        onMouseOver={handleMouseOver}\r\n                        onMouseOut={handleMouseOut}\r\n                    >\r\n                        {subtitlePlayerHidden ? <ArrowBackIcon /> : <ArrowForwardIcon />}\r\n                    </IconButton>\r\n                </Fade>\r\n            )}\r\n            <div\r\n                className={classes.container}\r\n                onMouseOver={handleMouseOver}\r\n                onMouseOut={handleMouseOut}\r\n            >\r\n                <Fade in={show} timeout={200}>\r\n                    <div className={classes.subContainer}>\r\n                        <ProgressBar\r\n                            onSeek={handleSeek}\r\n                            value={progress * 100}\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            className={classes.gridContainer}\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => playing ? onPause() : onPlay()}\r\n                                >\r\n                                    {playing\r\n                                        ? <PauseIcon className={classes.button} />\r\n                                        : <PlayArrowIcon className={classes.button} />}\r\n                                </IconButton>\r\n                            </Grid>\r\n                            {volumeEnabled && (\r\n                                <Grid item\r\n                                    onMouseOver={handleVolumeMouseOver}\r\n                                    onMouseOut={handleVolumeMouseOut}\r\n                                    className={showVolumeBar ? classes.volumeInputContainerShown : classes.volumeInputContainerHidden}\r\n                                >\r\n                                    <IconButton color=\"inherit\" onClick={handleVolumeToggle}>\r\n                                        {volume === 0 ? (<VolumeOffIcon />) : (<VolumeUpIcon />)}\r\n                                    </IconButton>\r\n                                    <VolumeSlider\r\n                                        onChange={handleVolumeChange}\r\n                                        onChangeCommitted={handleVolumeChangeCommitted}\r\n                                        value={volume}\r\n                                        defaultValue={100}\r\n                                        classes={{\r\n                                            root: showVolumeBar ? classes.volumeInputShown : classes.volumeInputHidden,\r\n                                            thumb: showVolumeBar ? classes.volumeInputThumbShown : classes.volumeInputThumbHidden\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item>\r\n                                <div className={classes.timeDisplay}>\r\n                                    {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                                </div>\r\n                            </Grid>\r\n                            {offsetEnabled && (\r\n                                <Grid item>\r\n                                    <Input\r\n                                        inputRef={offsetInputRef}\r\n                                        disableUnderline={true}\r\n                                        className={classes.offsetInput}\r\n                                        placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                        onClick={handleOffsetInputClicked}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item style={{flexGrow: 1}}>\r\n                            </Grid>\r\n                            {condensedModeToggleEnabled && (\r\n                                <Grid item>\r\n                                    <Tooltip title=\"Condensed Mode\">\r\n                                        <IconButton color=\"inherit\" onClick={onCondensedModeToggle}>\r\n                                            <SpeedIcon className={condensedModeEnabled ? classes.button : classes.inactiveButton} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            )}\r\n                            {subtitlesToggle && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onSubtitlesToggle}>\r\n                                        <SubtitlesIcon className={subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {videoFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleVideoUnloaderOpened}>\r\n                                        <VideocamIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                 </Grid>\r\n                            )}\r\n                            {audioFile && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioUnloaderOpened}>\r\n                                        <AudiotrackIcon className={classes.button} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {audioTracks && audioTracks.length > 1 &&  (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleAudioTrackSelectorOpened}>\r\n                                        <QueueMusicIcon className={classes.button}  />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {tabs && tabs.length > 0 && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={handleTabSelectorOpened}>\r\n                                        <VideocamIcon className={selectedTab ? classes.button : classes.inactiveButton} />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {popOutEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onPopOutToggle}>\r\n                                        <OpenInNewIcon className={classes.button} style={popOut ? {transform: 'rotateX(180deg)'} : {}}/>\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                            {fullscreenEnabled && (\r\n                                <Grid item>\r\n                                    <IconButton color=\"inherit\" onClick={onFullscreenToggle}>\r\n                                        {fullscreen\r\n                                            ? (<FullscreenExitIcon className={classes.button} />)\r\n                                            : (<FullscreenIcon className={classes.button} />)}\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    </div>\r\n                </Fade>\r\n                <TabSelector\r\n                    open={tabSelectorOpen && show}\r\n                    anchorEl={tabSelectorAnchorEl}\r\n                    tabs={tabs}\r\n                    selectedTab={selectedTab}\r\n                    onClose={handleTabSelectorClosed}\r\n                    onTabSelected={handleTabSelected}\r\n                />\r\n                <AudioTrackSelector\r\n                    open={audioTrackSelectorOpen && show}\r\n                    anchorEl={audioTrackSelectorAnchorEl}\r\n                    audioTracks={audioTracks}\r\n                    selectedAudioTrack={selectedAudioTrack}\r\n                    onClose={handleAudioTrackSelectorClosed}\r\n                    onAudioTrackSelected={handleAudioTrackSelected}\r\n                />\r\n                <MediaUnloader\r\n                    open={audioUnloaderOpen}\r\n                    anchorEl={audioUnloaderAnchorEl}\r\n                    file={audioFile}\r\n                    onClose={handleAudioUnloaderClosed}\r\n                    onUnload={handleUnloadAudio}\r\n                />\r\n                <MediaUnloader\r\n                    open={videoUnloaderOpen}\r\n                    anchorEl={videoUnloaderAnchorEl}\r\n                    file={videoFile}\r\n                    onClose={handleVideoUnloaderClosed}\r\n                    onUnload={handleUnloadVideo}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    async seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    async onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","export function arrayEquals(a, b, equals = (a, b) => a === b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (!equals(a[i], b[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n// https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\nfunction hexToRgb(hex) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    }\r\n}\r\n\r\nexport function computeStyles({\r\n    subtitleColor,\r\n    subtitleSize,\r\n    subtitleOutlineThickness,\r\n    subtitleOutlineColor,\r\n    subtitleBackgroundOpacity,\r\n    subtitleBackgroundColor,\r\n    subtitleFontFamily\r\n}) {\r\n    const styles = {\r\n        color: subtitleColor,\r\n        fontSize: Number(subtitleSize),\r\n    };\r\n\r\n    if (subtitleOutlineThickness > 0) {\r\n        const thickness = subtitleOutlineThickness;\r\n        const color = subtitleOutlineColor;\r\n        styles['textShadow'] = `0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}, 0 0 ${thickness}px ${color}`;\r\n    }\r\n\r\n    if (subtitleBackgroundOpacity > 0) {\r\n        const opacity = subtitleBackgroundOpacity;\r\n        const color = subtitleBackgroundColor;\r\n        const {r, g, b} = hexToRgb(color);\r\n        styles['backgroundColor'] = `rgba(${r}, ${g}, ${b}, ${opacity})`\r\n    }\r\n\r\n    if (subtitleFontFamily && subtitleFontFamily.length > 0) {\r\n        styles['fontFamily'] = subtitleFontFamily;\r\n    }\r\n\r\n    return styles;\r\n}\r\n","import React, { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from '../services/Util';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { KeyBindings } from '@project/common';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n        width: ({compressed, windowWidth}) => compressed ? Math.max(350, .25 * windowWidth) : '100%'\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75, // so the last row doesn't collide with controls\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: 15,\r\n        textAlign: \"center\"\r\n    },\r\n}));\r\n\r\nconst useSubtitleRowStyles = makeStyles((theme) => ({\r\n    subtitleRow: {\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.action.hover\r\n        }\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    compressedSubtitle: {\r\n        fontSize: 16,\r\n        paddingRight: 0,\r\n        minWidth: 200,\r\n        width: '100%',\r\n        overflowWrap: 'anywhere'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right',\r\n        paddingRight: 15,\r\n        paddingLeft: 5\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n}));\r\n\r\nconst SubtitleRow = React.memo((props) => {\r\n    const {index, compressed, selected, subtitle, subtitleRef, onClick, onCopy, ...tableRowProps} = props;\r\n    const classes = useSubtitleRowStyles();\r\n    let className = compressed ? classes.compressedSubtitle : classes.subtitle;\r\n\r\n    if (subtitle.start < 0 || subtitle.end < 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <TableRow\r\n            onClick={(e) => onClick(index)}\r\n            ref={subtitleRef}\r\n            className={classes.subtitleRow}\r\n            selected={selected}\r\n            {...tableRowProps}\r\n        >\r\n            <TableCell className={className}>\r\n                <span onClick={(e) => e.stopPropagation()}>\r\n                    {subtitle.text}\r\n                </span>\r\n            </TableCell>\r\n            <TableCell className={classes.copyButton}>\r\n                <IconButton onClick={(e) => onCopy(e, index)}>\r\n                    <FileCopy fontSize={compressed ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            </TableCell>\r\n            <TableCell className={classes.timestamp}>\r\n                {subtitle.displayTime}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n});\r\n\r\nexport default function SubtitlePlayer({\r\n    clock,\r\n    onSeek,\r\n    onCopy,\r\n    onOffsetChange,\r\n    onAnkiDialogRequest,\r\n    playing,\r\n    subtitles,\r\n    length,\r\n    jumpToSubtitle,\r\n    compressed,\r\n    loading,\r\n    drawerOpen,\r\n    displayHelp,\r\n    disableKeyEvents,\r\n    lastJumpToTopTimestamp,\r\n    hidden,\r\n    }) {\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const disableKeyEventsRef = useRef();\r\n    disableKeyEventsRef.current = disableKeyEvents;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = length;\r\n    const hiddenRef = useRef();\r\n    hiddenRef.current = hidden;\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const containerRef = useRef();\r\n    const drawerOpenRef = useRef();\r\n    drawerOpenRef.current = drawerOpen;\r\n    const [windowWidth, ] = useWindowSize(true);\r\n    const classes = useSubtitlePlayerStyles({compressed, windowWidth});\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = !hiddenRef.current && (Date.now() - lastScrollTimestampRef.current > 5000);\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    const scrollToCurrentSubtitle = useCallback(() => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current;\r\n\r\n        if (!selectedSubtitleIndexes) {\r\n            return;\r\n        }\r\n\r\n        const indexes = Object.keys(selectedSubtitleIndexes);\r\n\r\n        if (indexes.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const scrollToSubtitleRef = subtitleRefs[indexes[0]];\r\n\r\n        scrollToSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        function scrollIfVisible() {\r\n            if (document.visibilityState === 'visible') {\r\n                scrollToCurrentSubtitle();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", scrollIfVisible);\r\n\r\n        return () => document.removeEventListener(\"visibilitychange\", scrollIfVisible);\r\n    }, [hidden, selectedSubtitleIndexes, subtitleRefs, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (!hidden) {\r\n            scrollToCurrentSubtitle();\r\n        }\r\n    }, [hidden, scrollToCurrentSubtitle]);\r\n\r\n    useEffect(() => {\r\n        if (hiddenRef.current) {\r\n            return;\r\n        }\r\n\r\n        const subtitleRefs = subtitleRefsRef.current;\r\n\r\n        if (!subtitleRefs || subtitleRefs.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const firstSubtitleRef = subtitleRefs[0];\r\n        firstSubtitleRef?.current?.scrollIntoView({\r\n            block: \"center\",\r\n            inline: \"nearest\",\r\n            behavior: \"smooth\"\r\n        });\r\n    }, [lastJumpToTopTimestamp]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onOffsetChange(offset);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onOffsetChange, disableKeyEvents, clock, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onSeek(subtitle.start, false);\r\n            },\r\n            () => disableKeyEvents,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onSeek, subtitles, disableKeyEvents, clock, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = containerRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => table?.removeEventListener('wheel', handleScroll);\r\n    }, [containerRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (hidden) {\r\n            return;\r\n        }\r\n\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex]?.current?.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [hidden, jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                onCopy(subtitle, false);\r\n            },\r\n            () => disableKeyEventsRef.current,\r\n            () => {\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (!subtitleIndexes || subtitleIndexes.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                const index = Math.min(...subtitleIndexes);\r\n                return subtitles[index];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [subtitles, onCopy]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const subtitleIndexes = Object.keys(selectedSubtitleIndexesRef.current);\r\n\r\n                if (subtitleIndexes && subtitleIndexes.length > 0) {\r\n                    onCopy(subtitles[Math.min(...subtitleIndexes)], true);\r\n                }\r\n\r\n                onAnkiDialogRequest();\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [onAnkiDialogRequest, onCopy, subtitles]);\r\n\r\n    const handleClick = useCallback((index) => {\r\n        const selectedSubtitleIndexes = selectedSubtitleIndexesRef.current || {};\r\n        onSeek(subtitles[index].start, !playingRef.current && index in selectedSubtitleIndexes);\r\n    }, [subtitles, onSeek]);\r\n\r\n    const handleCopy = useCallback((e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        onCopy(subtitles[index], false);\r\n    }, [subtitles, onCopy]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles || subtitles.length ===0) {\r\n        subtitleTable = !loading && displayHelp && (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    {displayHelp}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n\r\n                            return (\r\n                                <SubtitleRow\r\n                                    key={index}\r\n                                    index={index}\r\n                                    compressed={compressed}\r\n                                    selected={selected}\r\n                                    subtitle={subtitles[index]}\r\n                                    subtitleRef={subtitleRefs[index]}\r\n                                    onClick={handleClick}\r\n                                    onCopy={handleCopy}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            square\r\n            elevation={0}\r\n            ref={containerRef}\r\n            className={classes.container}\r\n        >\r\n            {subtitleTable}\r\n        </Paper>\r\n    );\r\n}\r\n","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.selectedAudioTrack = null;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        that.selectedAudioTrack = event.data.id;\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'offset':\r\n                    for (let callback of that.offsetCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'popOutToggle':\r\n                    for (let callback of that.popOutToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'copy':\r\n                    for (let callback of that.copyCallbacks) {\r\n                        callback(event.data.subtitle, event.data.audio, event.data.image, event.data.preventDuplicate);\r\n                    }\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback of that.condensedModeToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'sync':\r\n                    // ignore\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback(event.data.forwardToVideo);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    onOffset(callback) {\r\n        this.offsetCallbacks.push(callback);\r\n    }\r\n\r\n    onPopOutToggle(callback) {\r\n        this.popOutToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onCopy(callback) {\r\n        this.copyCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles, subtitleFileName) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles, name: subtitleFileName});\r\n    }\r\n\r\n    subtitleSettings(settings) {\r\n        this.protocol.postMessage({command: 'subtitleSettings', value: settings});\r\n    }\r\n\r\n    condensedModeToggle(enabled) {\r\n        this.protocol.postMessage({command: 'condensedModeToggle', value: enabled});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle(hidden) {\r\n        this.protocol.postMessage({command: 'hideSubtitlePlayerToggle', value: hidden});\r\n    }\r\n\r\n    ankiDialogRequest() {\r\n        this.protocol.postMessage({command: 'ankiDialogRequest'});\r\n    }\r\n\r\n    finishedAnkiDialogRequest() {\r\n        this.protocol.postMessage({command: 'finishedAnkiDialogRequest'});\r\n    }\r\n\r\n    ankiSettings(settings) {\r\n        this.protocol.postMessage({command: 'ankiSettings', value: settings});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n        this.offsetCallbacks = [];\r\n        this.popOutToggleCallbacks = [];\r\n        this.copyCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BroadcastChannelVideoProtocol from '../services/BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from '../services/ChromeTabVideoProtocol';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaAdapter from '../services/MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from '../services/VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    },\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    videoFrame: {\r\n        width: '100%',\r\n        height: '100%',\r\n        border: 0\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    milliseconds = Math.round(milliseconds);\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player({\r\n    sources: {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl},\r\n    subtitleReader,\r\n    settingsProvider,\r\n    extension,\r\n    videoFrameRef,\r\n    drawerOpen,\r\n    tab,\r\n    availableTabs,\r\n    ankiDialogRequestToVideo,\r\n    ankiDialogRequested,\r\n    ankiDialogFinishedRequest,\r\n    onError,\r\n    onUnloadAudio,\r\n    onUnloadVideo,\r\n    onCopy,\r\n    onLoaded,\r\n    onTabSelected,\r\n    onAnkiDialogRequest,\r\n    disableKeyEvents,\r\n    jumpToSubtitle\r\n    }) {\r\n    const [subtitles, setSubtitles] = useState();\r\n    const subtitlesRef = useRef();\r\n    subtitlesRef.current = subtitles;\r\n    const [loadingSubtitles, setLoadingSubtitles] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [lastJumpToTopTimestamp, setLastJumpToTopTimestamp] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [channelId, setChannelId] = useState();\r\n    const [videoPopOut, setVideoPopOut] = useState(false);\r\n    const [, setResumeOnFinishedAnkiDialogRequest] = useState(false);\r\n    const [hideSubtitlePlayer, setHideSubtitlePlayer] = useState(false);\r\n    const hideSubtitlePlayerRef = useRef();\r\n    hideSubtitlePlayerRef.current = hideSubtitlePlayer;\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const condensedModeEnabledRef = useRef();\r\n    condensedModeEnabledRef.current = condensedModeEnabled;\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback(async (time, clock, forwardToMedia) => {\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (forwardToMedia) {\r\n            await mediaAdapter.seek(time / 1000);\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    const applyOffset = useCallback((offset, forwardToVideo) => {\r\n        setOffset(offset);\r\n\r\n        setSubtitles((subtitles) => {\r\n            if (!subtitles) {\r\n                return;\r\n            }\r\n\r\n            const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n            const newSubtitles = subtitles.map(s => ({\r\n                text: s.text,\r\n                start: s.originalStart + offset,\r\n                originalStart: s.originalStart,\r\n                end: s.originalEnd + offset,\r\n                originalEnd: s.originalEnd,\r\n                displayTime: timeDuration(s.originalStart + offset, length)\r\n            }));\r\n\r\n            if (forwardToVideo) {\r\n                videoRef.current?.subtitles(newSubtitles, subtitleFile?.name);\r\n            }\r\n\r\n            return newSubtitles;\r\n        });\r\n    }, [subtitleFile]);\r\n\r\n    useEffect(() => {\r\n        let channel = null;\r\n        let channelClosed = false;\r\n\r\n        async function init() {\r\n            videoRef.current?.close();\r\n            videoRef.current = null;\r\n            clock.setTime(0);\r\n            clock.stop();\r\n            setOffset(0);\r\n            setPlaying(false);\r\n            setAudioTracks(null);\r\n            setSelectedAudioTrack(null);\r\n            setCondensedModeEnabled(false);\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.pause();\r\n\r\n            let subtitles;\r\n\r\n            if (subtitleFile) {\r\n                setLoadingSubtitles(true);\r\n\r\n                try {\r\n                    const nodes = await subtitleReader.subtitles(subtitleFile);\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n                    subtitles = nodes.map((s) => ({\r\n                        text: s.text,\r\n                        start: s.start,\r\n                        originalStart: s.start,\r\n                        end: s.end,\r\n                        originalEnd: s.end,\r\n                        displayTime: timeDuration(s.start, length)\r\n                    }));\r\n\r\n                    setSubtitles(subtitles);\r\n                    setLastJumpToTopTimestamp(Date.now());\r\n                } catch (e) {\r\n                    onError(e.message);\r\n                } finally {\r\n                    setLoadingSubtitles(false);\r\n                }\r\n            } else {\r\n                subtitles = null;\r\n            }\r\n\r\n            if (audioFileUrl) {\r\n                await mediaAdapter.onReady();\r\n                forceUpdate();\r\n            } else if (videoFileUrl || tab) {\r\n                if (channelClosed) {\r\n                    return;\r\n                }\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = uuidv4();\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    setChannelId(channelId);\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, tab.src, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n                let subscribed = false;\r\n\r\n                channel.onExit(() => onUnloadVideo(videoFileUrl));\r\n                channel.onPopOutToggle(() => setVideoPopOut(popOut => !popOut));\r\n                channel.onHideSubtitlePlayerToggle(() => {\r\n                    setHideSubtitlePlayer(hidden => {\r\n                        channel.hideSubtitlePlayerToggle(!hidden);\r\n                        return !hidden;\r\n                    });\r\n                });\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitlesRef.current);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitlesRef.current) {\r\n                        channel.subtitleSettings(settingsProvider.subtitleSettings);\r\n                        channel.subtitles(subtitlesRef.current, subtitleFile?.name);\r\n                    }\r\n\r\n                    channel.ankiSettings(settingsProvider.ankiSettings);\r\n                    channel.condensedModeToggle(condensedModeEnabledRef.current);\r\n                    channel.hideSubtitlePlayerToggle(hideSubtitlePlayerRef.current);\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n\r\n                    if (!subscribed) {\r\n                        channel.onPlay((forwardToMedia) => play(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onPause((forwardToMedia) => pause(clock, mediaAdapter, forwardToMedia));\r\n                        channel.onOffset((offset) => applyOffset(Math.max(-lengthRef.current ?? 0, offset), false));\r\n                        channel.onCopy((subtitle, audio, image, preventDuplicate) => onCopy(\r\n                            subtitle,\r\n                            audioFile,\r\n                            videoFile,\r\n                            subtitleFile,\r\n                            channel.selectedAudioTrack,\r\n                            audio,\r\n                            image,\r\n                            preventDuplicate\r\n                        ));\r\n                        channel.onCondensedModeToggle(() => setCondensedModeEnabled(enabled => {\r\n                            const newValue = !enabled;\r\n                            channel.condensedModeToggle(newValue);\r\n                            return newValue;\r\n                        }));\r\n                        channel.onCurrentTime(async (currentTime, forwardToMedia) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await seek(currentTime * 1000, clock, forwardToMedia);\r\n\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                        channel.onAudioTrackSelected(async (id) => {\r\n                            if (playingRef.current) {\r\n                                clock.stop();\r\n                            }\r\n\r\n                            await mediaAdapter.onReady();\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n\r\n                            setSelectedAudioTrack(id);\r\n                        });\r\n                        channel.onAnkiDialogRequest((forwardToVideo) => onAnkiDialogRequest(forwardToVideo));\r\n\r\n                        subscribed = true;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        init().then(() => onLoaded());\r\n\r\n        return () => {\r\n            channel?.close();\r\n            channelClosed = true;\r\n        };\r\n    }, [subtitleReader, extension, settingsProvider, clock, mediaAdapter, seek, onLoaded, onError, onUnloadVideo, onCopy, onAnkiDialogRequest, subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl, tab, forceUpdate, videoFrameRef, applyOffset]);\r\n\r\n    function play(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, forwardToMedia) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (forwardToMedia) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequestToVideo) {\r\n            videoRef.current?.ankiDialogRequest();\r\n        }\r\n    }, [ankiDialogRequestToVideo]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogFinishedRequest) {\r\n            videoRef.current?.finishedAnkiDialogRequest();\r\n            setResumeOnFinishedAnkiDialogRequest(resumeOnFinishedAnkiDialogRequest => {\r\n                if (resumeOnFinishedAnkiDialogRequest) {\r\n                    play(clock, mediaAdapter, true);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n    }, [ankiDialogFinishedRequest, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (ankiDialogRequested && playingRef.current) {\r\n            pause(clock, mediaAdapter, true);\r\n            setResumeOnFinishedAnkiDialogRequest(true);\r\n        }\r\n    }, [ankiDialogRequested, clock, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        if (!condensedModeEnabled) {\r\n            return;\r\n        }\r\n\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let seeking = false;\r\n        let expectedSeekTime = 1000;\r\n\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n\r\n            if (!length) {\r\n                return;\r\n            }\r\n\r\n            const progress = clock.progress(length);\r\n\r\n            let currentOrNextIndex = 0;\r\n            let currentIndex = -1;\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        currentIndex = i;\r\n                        currentOrNextIndex = i;\r\n                    } else {\r\n                        currentOrNextIndex = Math.min(subtitles.length - 1, i + 1);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentIndex !== currentOrNextIndex) {\r\n                const nextSubtitle = subtitles[currentOrNextIndex];\r\n\r\n                if (nextSubtitle.start - progress * length < expectedSeekTime + 500) {\r\n                    return;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.stop();\r\n                }\r\n\r\n                if (!seeking) {\r\n                    seeking = true;\r\n                    const t0 = Date.now();\r\n                    await seek(nextSubtitle.start, clock, true);\r\n                    expectedSeekTime = Date.now() - t0;\r\n                    seeking = false;\r\n                }\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [subtitles, condensedModeEnabled, clock, seek]);\r\n\r\n    useEffect(() => {\r\n        if (videoPopOut && channelId && videoFileUrl) {\r\n            window.open(\r\n                process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=true',\r\n                'asbplayer-video-' + videoFileUrl,\r\n                \"resizable,width=800,height=450\"\r\n            );\r\n        }\r\n\r\n        setLastJumpToTopTimestamp(Date.now());\r\n    }, [videoPopOut, channelId, videoFileUrl, videoFrameRef]);\r\n\r\n    const handlePlay = useCallback(() => play(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handlePause = useCallback(() => pause(clock, mediaAdapter, true), [clock, mediaAdapter]);\r\n    const handleSeek = useCallback(async (progress) => {\r\n        if (!lengthRef.current) {\r\n            return;\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(progress * lengthRef.current, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            clock.start();\r\n        }\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback(async (time, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        await seek(time, clock, true);\r\n\r\n        if (shouldPlay && !playingRef.current) {\r\n            // play method will start the clock again\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle, preventDuplicate) => {\r\n        onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack,\r\n            null,\r\n            null,\r\n            preventDuplicate\r\n        );\r\n    }, [onCopy, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback(async (id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        await seek(0, clock, true);\r\n\r\n        if (playingRef.current) {\r\n            play(clock, mediaAdapter, true);\r\n        }\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        applyOffset(Math.max(-lengthRef.current ?? 0, offset), true);\r\n    }, [applyOffset]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (audioRef.current) {\r\n            audioRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handleCondensedModeToggle = useCallback(() =>  setCondensedModeEnabled(v => !v), []);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                pause(clock, mediaAdapter, true);\r\n                await seek(0, clock, true);\r\n                setLastJumpToTopTimestamp(Date.now());\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter, seek]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n    const videoInWindow = loaded && videoFileUrl && !videoPopOut;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                wrap=\"nowrap\"\r\n                className={classes.container}\r\n            >\r\n                {videoInWindow && (\r\n                    <Grid item style={{flexGrow: 1, minWidth: 600}}>\r\n                        <iframe\r\n                            ref={videoFrameRef}\r\n                            className={classes.videoFrame}\r\n                            src={process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId + '&popout=false'}\r\n                            title=\"asbplayer\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n                {(!videoInWindow || subtitles?.length > 0) && (\r\n                    <Grid item style={{flexGrow: videoInWindow ? 0 : 1, width: videoInWindow && hideSubtitlePlayer ? 0 : 'auto'}}>\r\n                        {loaded && !(videoFileUrl && !videoPopOut) && (\r\n                            <Controls\r\n                                mousePositionRef={mousePositionRef}\r\n                                playing={playing}\r\n                                clock={clock}\r\n                                length={length}\r\n                                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                                audioTracks={audioTracks}\r\n                                selectedAudioTrack={selectedAudioTrack}\r\n                                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                                selectedTab={tab}\r\n                                audioFile={audioFile?.name}\r\n                                videoFile={videoFile?.name}\r\n                                offsetEnabled={true}\r\n                                offset={offset}\r\n                                volumeEnabled={Boolean(audioFileUrl)}\r\n                                condensedModeToggleEnabled={Boolean(audioFileUrl) && subtitles?.length > 0}\r\n                                condensedModeEnabled={condensedModeEnabled}\r\n                                onPlay={handlePlay}\r\n                                onPause={handlePause}\r\n                                onSeek={handleSeek}\r\n                                onAudioTrackSelected={handleAudioTrackSelected}\r\n                                onTabSelected={onTabSelected}\r\n                                onUnloadAudio={() => onUnloadAudio(audioFileUrl)}\r\n                                onUnloadVideo={() => onUnloadVideo(videoFileUrl)}\r\n                                onOffsetChange={handleOffsetChange}\r\n                                onVolumeChange={handleVolumeChange}\r\n                                onCondensedModeToggle={handleCondensedModeToggle}\r\n                                disableKeyEvents={disableKeyEvents}\r\n                                settingsProvider={settingsProvider}\r\n                            />\r\n                        )}\r\n                        <SubtitlePlayer\r\n                            playing={playing}\r\n                            subtitles={subtitles}\r\n                            clock={clock}\r\n                            length={length}\r\n                            jumpToSubtitle={jumpToSubtitle}\r\n                            drawerOpen={drawerOpen}\r\n                            compressed={videoFileUrl && !videoPopOut}\r\n                            loading={loadingSubtitles}\r\n                            displayHelp={audioFile?.name || (videoPopOut && videoFile?.name)}\r\n                            disableKeyEvents={disableKeyEvents}\r\n                            lastJumpToTopTimestamp={lastJumpToTopTimestamp}\r\n                            hidden={videoInWindow && hideSubtitlePlayer}\r\n                            onSeek={handleSeekToSubtitle}\r\n                            onCopy={handleCopy}\r\n                            onOffsetChange={handleOffsetChange}\r\n                            onAnkiDialogRequest={onAnkiDialogRequest}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function CustomFieldDialog({open, onProceed, onCancel, existingCustomFieldNames}) {\r\n    const [fieldName, setFieldName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setFieldName(\"\");\r\n    }, [open]);\r\n\r\n    const fieldExists = [\r\n        ...existingCustomFieldNames,\r\n        'Sentence',\r\n        'Word',\r\n        'Definition',\r\n        'Source',\r\n        'Image',\r\n        'Audio'\r\n    ].includes(fieldName);\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            disableEnforceFocus\r\n            fullWidth\r\n            maxWidth=\"xs\"\r\n            onBackdropClick={onCancel}\r\n            onEscapeKeyDown={onCancel}\r\n        >\r\n            <DialogTitle>New Custom Field</DialogTitle>\r\n            <DialogContent>\r\n                <form>\r\n                    <TextField\r\n                        error={fieldExists}\r\n                        helperText={fieldExists && `Field ${fieldName} already exists`}\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Field Name\"\r\n                        value={fieldName}\r\n                        color=\"secondary\"\r\n                        onChange={(e) => setFieldName(e.target.value)}\r\n                    />\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onCancel()}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    disabled={fieldExists || fieldName.trim() === \"\"}\r\n                    onClick={() => onProceed(fieldName.trim())}\r\n                >\r\n                    Create\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, {  useCallback, useState, useEffect, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { computeStyles } from '../services/Util';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CustomFieldDialog from './CustomFieldDialog';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    subtitleSetting: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1)\r\n        },\r\n    },\r\n    subtitlePreview: {\r\n        backgroundImage: `linear-gradient(45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(-45deg, ${theme.palette.action.disabledBackground} 25%, transparent 25%), linear-gradient(45deg, transparent 75%, ${theme.palette.action.disabledBackground} 75%), linear-gradient(-45deg, transparent 75%,${theme.palette.action.disabledBackground} 75%)`,\r\n        backgroundSize: '20px 20px',\r\n        backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        maxWidth: '100%',\r\n        padding: 10\r\n    },\r\n    subtitlePreviewInput: {\r\n        border: 'none',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgba(0,0,0,0)',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    addFieldButton: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nconst useSelectableSettingStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"end\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction SelectableSetting({label, value, selections, removable, onChange, onSelectionChange, onRemoval}) {\r\n    const classes = useSelectableSettingStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <TextField\r\n                label={label}\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                color=\"secondary\"\r\n                InputProps={{\r\n                    endAdornment: removable && (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={(e) => onRemoval?.()}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel></InputLabel>\r\n                <Select\r\n                    value={value}\r\n                    disabled={!selections}\r\n                    color=\"secondary\"\r\n                    onChange={onSelectionChange}\r\n                >\r\n                    {selections && selections.map(s => (\r\n                        <MenuItem key={s} value={s}>{s}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function SettingsDialog({anki, open, settings, onClose}) {\r\n    const classes = useStyles();\r\n    const [ankiConnectUrl, setAnkiConnectUrl] = useState(settings.ankiConnectUrl);\r\n    const [ankiConnectUrlError, setAnkiConnectUrlError] = useState();\r\n    const [ankiConnectUrlChangeTimestamp, setAnkiConnectUrlChangeTimestamp] = useState(0);\r\n    const [deck, setDeck] = useState(settings.deck || \"\");\r\n    const [deckNames, setDeckNames] = useState();\r\n    const [noteType, setNoteType] = useState(settings.noteType || \"\");\r\n    const [modelNames, setModelNames] = useState();\r\n    const [sentenceField, setSentenceField] = useState(settings.sentenceField || \"\");\r\n    const [definitionField, setDefinitionField] = useState(settings.definitionField || \"\");\r\n    const [audioField, setAudioField] = useState(settings.audioField || \"\");\r\n    const [imageField, setImageField] = useState(settings.imageField || \"\");\r\n    const [wordField, setWordField] = useState(settings.wordField || \"\");\r\n    const [sourceField, setSourceField] = useState(settings.sourceField || \"\");\r\n    const [customFields, setCustomFields] = useState(settings.customAnkiFields);\r\n    const [preferMp3, setPreferMp3] = useState(settings.preferMp3);\r\n    const [fieldNames, setFieldNames] = useState();\r\n    const [customFieldDialogOpen, setCustomFieldDialogOpen] = useState(false);\r\n    const [subtitleColor, setSubtitleColor] = useState(settings.subtitleColor);\r\n    const [subtitleSize, setSubtitleSize] = useState(settings.subtitleSize);\r\n    const [subtitleOutlineColor, setSubtitleOutlineColor] = useState(settings.subtitleOutlineColor);\r\n    const [subtitleOutlineThickness, setSubtitleOutlineThickness] = useState(settings.subtitleOutlineThickness);\r\n    const [subtitleBackgroundColor, setSubtitleBackgroundColor] = useState(settings.subtitleBackgroundColor);\r\n    const [subtitleBackgroundOpacity, setSubtitleBackgroundOpacity] = useState(settings.subtitleBackgroundOpacity);\r\n    const [subtitleFontFamily, setSubtitleFontFamily] = useState(settings.subtitleFontFamily);\r\n    const [subtitlePreview, setSubtitlePreview] = useState(settings.subtitlePreview);\r\n    const [themeType, setThemeType] = useState(settings.themeType);\r\n\r\n    const handleAnkiConnectUrlChange = useCallback((e) => {\r\n        setAnkiConnectUrl(e.target.value);\r\n        setAnkiConnectUrlChangeTimestamp(Date.now());\r\n    }, []);\r\n\r\n    const handleRetryAnkiConnectUrl = useCallback((e) => setAnkiConnectUrlChangeTimestamp(Date.now()), []);\r\n    const handleDeckChange = useCallback((e) => setDeck(e.target.value), []);\r\n    const handleNoteTypeChange = useCallback((e) => setNoteType(e.target.value), []);\r\n    const handleSentenceFieldChange = useCallback((e) => setSentenceField(e.target.value), []);\r\n    const handleDefinitionFieldChange = useCallback((e) => setDefinitionField(e.target.value), []);\r\n    const handleAudioFieldChange = useCallback((e) => setAudioField(e.target.value), []);\r\n    const handleImageFieldChange = useCallback((e) => setImageField(e.target.value), []);\r\n    const handleWordFieldChange = useCallback((e) => setWordField(e.target.value), []);\r\n    const handleSourceFieldChange = useCallback((e) => setSourceField(e.target.value), []);\r\n    const handleSubtitleColorChange = useCallback((e) => setSubtitleColor(e.target.value), []);\r\n    const handleSubtitleSizeChange = useCallback((e) => setSubtitleSize(e.target.value), []);\r\n    const handleSubtitleOutlineColorChange = useCallback((e) => setSubtitleOutlineColor(e.target.value), []);\r\n    const handleSubtitleOutlineThicknessChange = useCallback((e) => setSubtitleOutlineThickness(e.target.value), []);\r\n    const handleSubtitleBackgroundColorChange = useCallback((e) => setSubtitleBackgroundColor(e.target.value), []);\r\n    const handleSubtitleBackgroundOpacityChange = useCallback((e) => setSubtitleBackgroundOpacity(e.target.value), []);\r\n    const handleSubtitleFontFamilyChange = useCallback((e) => setSubtitleFontFamily(e.target.value), []);\r\n    const handleSubtitlePreviewChange = useCallback((e) => setSubtitlePreview(e.target.value), []);\r\n    const handleAddCustomField = useCallback((customFieldName) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = \"\";\r\n            return newCustomFields;\r\n        });\r\n        setCustomFieldDialogOpen(false);\r\n    }, []);\r\n    const handleCustomFieldChange = useCallback((customFieldName, value) => {\r\n        setCustomFields(oldCustomFields => {\r\n            const newCustomFields = {};\r\n            Object.assign(newCustomFields, oldCustomFields);\r\n            newCustomFields[customFieldName] = value;\r\n            return newCustomFields;\r\n        });\r\n    }, []);\r\n    const handleCustomFieldRemoval = useCallback((customFieldName) => setCustomFields(oldCustomFields => {\r\n        const newCustomFields = {};\r\n        Object.assign(newCustomFields, oldCustomFields);\r\n        delete newCustomFields[customFieldName];\r\n        return newCustomFields;\r\n    }), []);\r\n    const handlePreferMp3Change = useCallback((e) => setPreferMp3(e.target.checked), []);\r\n    const handleThemeTypeChange = useCallback((e) => setThemeType(e.target.value), []);\r\n    const subtitlePreviewStyles = useMemo(() => computeStyles({\r\n        subtitleColor: subtitleColor,\r\n        subtitleSize: subtitleSize,\r\n        subtitleOutlineThickness: subtitleOutlineThickness,\r\n        subtitleOutlineColor: subtitleOutlineColor,\r\n        subtitleBackgroundOpacity: subtitleBackgroundOpacity,\r\n        subtitleBackgroundColor: subtitleBackgroundColor,\r\n        subtitleFontFamily: subtitleFontFamily\r\n    }), [subtitleColor, subtitleSize, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundOpacity, subtitleBackgroundColor, subtitleFontFamily]);\r\n\r\n    useEffect(() => {\r\n        let canceled = false;\r\n\r\n        const timeout = setTimeout(async () => {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setDeckNames(await anki.deckNames(ankiConnectUrl));\r\n                setModelNames(await anki.modelNames(ankiConnectUrl));\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setDeckNames(null);\r\n                setModelNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => {\r\n            canceled = true;\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [anki, ankiConnectUrl, ankiConnectUrlChangeTimestamp]);\r\n\r\n    useEffect(() => {\r\n        if (!noteType || ankiConnectUrlError) {\r\n            return;\r\n        }\r\n\r\n        let canceled = false;\r\n\r\n        async function refreshFieldNames() {\r\n            try {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                setFieldNames([\"\", ...await anki.modelFieldNames(noteType, ankiConnectUrl)]);\r\n                setAnkiConnectUrlError(null);\r\n            } catch (e) {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                console.error(e);\r\n                setFieldNames(null);\r\n                setAnkiConnectUrlError(e.message);\r\n            }\r\n        }\r\n\r\n        refreshFieldNames();\r\n\r\n        return () => canceled = true;\r\n    }, [anki, noteType, ankiConnectUrl, ankiConnectUrlError, ankiConnectUrlChangeTimestamp]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        onClose({\r\n            ankiConnectUrl: ankiConnectUrl,\r\n            deck: deck,\r\n            noteType: noteType,\r\n            sentenceField: sentenceField,\r\n            definitionField: definitionField,\r\n            audioField: audioField,\r\n            imageField: imageField,\r\n            wordField: wordField,\r\n            sourceField: sourceField,\r\n            subtitleSize: Number(subtitleSize),\r\n            subtitleColor: subtitleColor,\r\n            subtitleOutlineThickness: Number(subtitleOutlineThickness),\r\n            subtitleOutlineColor: subtitleOutlineColor,\r\n            subtitleBackgroundColor: subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity: Number(subtitleBackgroundOpacity),\r\n            subtitleFontFamily: subtitleFontFamily,\r\n            subtitlePreview: subtitlePreview,\r\n            customAnkiFields: customFields,\r\n            preferMp3: preferMp3,\r\n            themeType: themeType\r\n        });\r\n    }, [onClose, ankiConnectUrl, deck, noteType, sentenceField, definitionField, audioField, imageField, wordField, sourceField, customFields, preferMp3, subtitleSize, subtitleColor, subtitleOutlineThickness, subtitleOutlineColor, subtitleBackgroundColor, subtitleBackgroundOpacity, subtitleFontFamily, subtitlePreview, themeType]);\r\n\r\n    const customFieldInputs = Object.keys(customFields).map(customFieldName => {\r\n        return (\r\n            <SelectableSetting\r\n                key={customFieldName}\r\n                label={`${customFieldName} Field`}\r\n                value={customFields[customFieldName]}\r\n                selections={fieldNames}\r\n                onChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onSelectionChange={e => handleCustomFieldChange(customFieldName, e.target.value)}\r\n                onRemoval={() => handleCustomFieldRemoval(customFieldName)}\r\n                removable={true}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CustomFieldDialog\r\n                open={customFieldDialogOpen}\r\n                existingCustomFieldNames={Object.keys(customFields)}\r\n                onProceed={handleAddCustomField}\r\n                onCancel={() => setCustomFieldDialogOpen(false)}\r\n            />\r\n            <Dialog\r\n                open={open}\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                onBackdropClick={handleClose}\r\n                onEscapeKeyDown={handleClose}\r\n            >\r\n                <DialogTitle>\r\n                    Settings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                            <FormLabel>Anki</FormLabel>\r\n                            <FormGroup className={classes.root}>\r\n                                <TextField\r\n                                    label=\"Anki Connect URL\"\r\n                                    value={ankiConnectUrl}\r\n                                    error={Boolean(ankiConnectUrlError)}\r\n                                    helperText={ankiConnectUrlError}\r\n                                    color=\"secondary\"\r\n                                    onChange={handleAnkiConnectUrlChange}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton onClick={handleRetryAnkiConnectUrl}>\r\n                                                    <RefreshIcon />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <FormHelperText>\r\n                                    Ensure that {window.location.protocol + \"//\" + window.location.hostname} is in the webCorsOriginList in your AnkiConnect settings as in this <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://youtu.be/Mv7fEVb6PHo?t=44\">video</Link>.\r\n                                </FormHelperText>\r\n                                <SelectableSetting\r\n                                    label=\"Deck\"\r\n                                    value={deck}\r\n                                    selections={deckNames}\r\n                                    onChange={handleDeckChange}\r\n                                    onSelectionChange={handleDeckChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Note Type\"\r\n                                    value={noteType}\r\n                                    selections={modelNames}\r\n                                    onChange={handleNoteTypeChange}\r\n                                    onSelectionChange={handleNoteTypeChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Sentence Field\"\r\n                                    value={sentenceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSentenceFieldChange}\r\n                                    onSelectionChange={handleSentenceFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Definition Field\"\r\n                                    value={definitionField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleDefinitionFieldChange}\r\n                                    onSelectionChange={handleDefinitionFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Word Field\"\r\n                                    value={wordField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleWordFieldChange}\r\n                                    onSelectionChange={handleWordFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Audio Field\"\r\n                                    value={audioField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleAudioFieldChange}\r\n                                    onSelectionChange={handleAudioFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Image Field\"\r\n                                    value={imageField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleImageFieldChange}\r\n                                    onSelectionChange={handleImageFieldChange}\r\n                                />\r\n                                <SelectableSetting\r\n                                    label=\"Source Field\"\r\n                                    value={sourceField}\r\n                                    selections={fieldNames}\r\n                                    onChange={handleSourceFieldChange}\r\n                                    onSelectionChange={handleSourceFieldChange}\r\n                                />\r\n                                {customFieldInputs}\r\n                                <Button\r\n                                    className={classes.addFieldButton}\r\n                                    onClick={(e) => setCustomFieldDialogOpen(true)}\r\n                                >\r\n                                    Add Custom Field\r\n                                </Button>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={preferMp3} onChange={handlePreferMp3Change} />}\r\n                                    label=\"Re-encode audio as mp3 (slower)\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Video Subtitle Appearance</FormLabel>\r\n                            <FormGroup>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Color\"\r\n                                        fullWidth\r\n                                        value={subtitleColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Size\"\r\n                                        fullWidth\r\n                                        value={subtitleSize}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleSizeChange}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Outline Color\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleOutlineColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Outline Thickness\"\r\n                                        fullWidth\r\n                                        value={subtitleOutlineThickness}\r\n                                        onChange={handleSubtitleOutlineThicknessChange}\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            step: 1\r\n                                        }}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"color\"\r\n                                        label=\"Subtitle Background Color\"\r\n                                        fullWidth\r\n                                        value={subtitleBackgroundColor}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundColorChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        label=\"Subtitle Background Opacity\"\r\n                                        fullWidth\r\n                                        inputProps={{\r\n                                            min: 0,\r\n                                            max: 1,\r\n                                            step: 0.1\r\n                                        }}\r\n                                        value={subtitleBackgroundOpacity}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleBackgroundOpacityChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitleSetting}>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        label=\"Subtitle Font Family\"\r\n                                        placeholder=\"Inherited\"\r\n                                        fullWidth\r\n                                        value={subtitleFontFamily}\r\n                                        color=\"secondary\"\r\n                                        onChange={handleSubtitleFontFamilyChange}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.subtitlePreview}>\r\n                                    <input\r\n                                        value={subtitlePreview}\r\n                                        className={classes.subtitlePreviewInput}\r\n                                        onChange={handleSubtitlePreviewChange}\r\n                                        style={subtitlePreviewStyles}\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormLabel>Theme</FormLabel>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'light'}\r\n                                            value=\"light\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                         />\r\n                                    }\r\n                                    label=\"Light\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            checked={themeType === 'dark'}\r\n                                            value=\"dark\"\r\n                                            onChange={handleThemeTypeChange}\r\n                                        />\r\n                                    }\r\n                                    label=\"Dark\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","const defaultAnkiConnectUrl = \"http://127.0.0.1:8765\";\r\nconst defaultSubtitleSize = 36;\r\nconst defaultSubtitleColor = \"#ffffff\";\r\nconst defaultSubtitleOutlineThickness = 0;\r\nconst defaultSubtitleOutlineColor = \"#000000\";\r\nconst defaultSubtitleBackgroundColor = \"#000000\";\r\nconst defaultSubtitleBackgroundOpacity = 0.5;\r\nconst defaultSubtitleFontFamily = \"\";\r\nconst defaultSubtitlePreview = \"アあ安\"\r\nconst defaultVolume = 100;\r\n\r\nconst ankiConnectUrlKey = \"ankiConnectUrl\";\r\nconst deckKey = \"deck\";\r\nconst noteTypeKey = \"noteType\";\r\nconst sentenceFieldKey = \"sentenceField\";\r\nconst definitionFieldKey = \"definitionField\";\r\nconst audioFieldKey = \"audioField\";\r\nconst imageFieldKey = \"imageField\";\r\nconst wordFieldKey = \"wordField\";\r\nconst sourceFieldKey = \"sourceField\";\r\nconst customAnkiFieldsKey = \"customAnkiFields\";\r\nconst subtitleSizeKey = \"subtitleSize\";\r\nconst subtitleColorKey = \"subtitleColor\";\r\nconst subtitleOutlineThicknessKey = \"subtitleOutlineThickness\";\r\nconst subtitleOutlineColorKey = \"subtitleOutlineColor\";\r\nconst subtitleBackgroundColorKey = \"subtitleBackgroundColor\";\r\nconst subtitleBackgroundOpacityKey = \"subtitleBackgroundOpacity\";\r\nconst subtitleFontFamilyKey = \"subtitleFontFamily\";\r\nconst subtitlePreviewKey = \"subtitlePreview\";\r\nconst volumeKey = \"volume\";\r\nconst preferMp3Key = \"preferMp3\";\r\nconst themeTypeKey = \"themeType\";\r\n\r\nexport default class SettingsProvider {\r\n\r\n    get settings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            sourceField: this.sourceField,\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n            subtitlePreview: this.subtitlePreview,\r\n            preferMp3: this.preferMp3,\r\n            themeType: this.themeType\r\n        };\r\n    }\r\n\r\n    set settings(newSettings) {\r\n        this.ankiConnectUrl = newSettings.ankiConnectUrl;\r\n        this.deck = newSettings.deck;\r\n        this.noteType = newSettings.noteType;\r\n        this.modelNames = newSettings.modelNames;\r\n        this.sentenceField = newSettings.sentenceField;\r\n        this.definitionField = newSettings.definitionField;\r\n        this.audioField = newSettings.audioField;\r\n        this.imageField = newSettings.imageField;\r\n        this.wordField = newSettings.wordField;\r\n        this.sourceField = newSettings.sourceField;\r\n        this.subtitleSize = newSettings.subtitleSize;\r\n        this.subtitleColor = newSettings.subtitleColor;\r\n        this.subtitleOutlineThickness = newSettings.subtitleOutlineThickness;\r\n        this.subtitleOutlineColor = newSettings.subtitleOutlineColor;\r\n        this.subtitleBackgroundColor = newSettings.subtitleBackgroundColor;\r\n        this.subtitleBackgroundOpacity = newSettings.subtitleBackgroundOpacity;\r\n        this.subtitleFontFamily = newSettings.subtitleFontFamily;\r\n        this.subtitlePreview = newSettings.subtitlePreview;\r\n        this.customAnkiFields = newSettings.customAnkiFields;\r\n        this.preferMp3 = newSettings.preferMp3;\r\n        this.themeType = newSettings.themeType;\r\n    }\r\n\r\n    get subtitleSettings() {\r\n        return {\r\n            subtitleSize: this.subtitleSize,\r\n            subtitleColor: this.subtitleColor,\r\n            subtitleOutlineThickness: this.subtitleOutlineThickness,\r\n            subtitleOutlineColor: this.subtitleOutlineColor,\r\n            subtitleBackgroundColor: this.subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity : this.subtitleBackgroundOpacity,\r\n            subtitleFontFamily: this.subtitleFontFamily,\r\n        };\r\n    }\r\n\r\n    get ankiSettings() {\r\n        return {\r\n            ankiConnectUrl: this.ankiConnectUrl,\r\n            deck: this.deck,\r\n            noteType: this.noteType,\r\n            modelNames: this.modelNames,\r\n            sentenceField: this.sentenceField,\r\n            definitionField: this.definitionField,\r\n            audioField: this.audioField,\r\n            imageField: this.imageField,\r\n            wordField: this.wordField,\r\n            sourceField: this.sourceField,\r\n            customAnkiFields: this.customAnkiFields,\r\n            preferMp3: this.preferMp3\r\n        };\r\n    }\r\n\r\n    get ankiConnectUrl() {\r\n        return localStorage.getItem(ankiConnectUrlKey) || defaultAnkiConnectUrl;\r\n    }\r\n\r\n    set ankiConnectUrl(url) {\r\n        localStorage.setItem(ankiConnectUrlKey, url);\r\n    }\r\n\r\n    get deck() {\r\n        return localStorage.getItem(deckKey);\r\n    }\r\n\r\n    set deck(deck) {\r\n        localStorage.setItem(deckKey, deck);\r\n    }\r\n\r\n    get noteType() {\r\n        return localStorage.getItem(noteTypeKey);\r\n    }\r\n\r\n    set noteType(noteType) {\r\n        localStorage.setItem(noteTypeKey, noteType);\r\n    }\r\n\r\n    get sentenceField() {\r\n        return localStorage.getItem(sentenceFieldKey);\r\n    }\r\n\r\n    set sentenceField(sentenceField) {\r\n        localStorage.setItem(sentenceFieldKey, sentenceField);\r\n    }\r\n\r\n    get definitionField() {\r\n        return localStorage.getItem(definitionFieldKey);\r\n    }\r\n\r\n    set definitionField(definitionField) {\r\n        localStorage.setItem(definitionFieldKey, definitionField);\r\n    }\r\n\r\n    get audioField() {\r\n        return localStorage.getItem(audioFieldKey);\r\n    }\r\n\r\n    set audioField(audioField) {\r\n        localStorage.setItem(audioFieldKey, audioField);\r\n    }\r\n\r\n    get imageField() {\r\n        return localStorage.getItem(imageFieldKey);\r\n    }\r\n\r\n    set imageField(imageField) {\r\n        localStorage.setItem(imageFieldKey, imageField);\r\n    }\r\n\r\n    get wordField() {\r\n        return localStorage.getItem(wordFieldKey);\r\n    }\r\n\r\n    set wordField(wordField) {\r\n        localStorage.setItem(wordFieldKey, wordField);\r\n    }\r\n\r\n    get sourceField() {\r\n        return localStorage.getItem(sourceFieldKey);\r\n    }\r\n\r\n    set sourceField(sourceField) {\r\n        localStorage.setItem(sourceFieldKey, sourceField);\r\n    }\r\n\r\n    get customAnkiFields() {\r\n        const ankiFieldsString = localStorage.getItem(customAnkiFieldsKey);\r\n\r\n        if (ankiFieldsString) {\r\n            return JSON.parse(ankiFieldsString);\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    set customAnkiFields(customAnkiFields) {\r\n        localStorage.setItem(customAnkiFieldsKey, JSON.stringify(customAnkiFields));\r\n    }\r\n\r\n    get subtitleColor() {\r\n        return localStorage.getItem(subtitleColorKey) || defaultSubtitleColor;\r\n    }\r\n\r\n    set subtitleColor(subtitleColor) {\r\n        localStorage.setItem(subtitleColorKey, subtitleColor);\r\n    }\r\n\r\n    get subtitleSize() {\r\n        return localStorage.getItem(subtitleSizeKey) || defaultSubtitleSize;\r\n    }\r\n\r\n    set subtitleSize(subtitleSize) {\r\n        localStorage.setItem(subtitleSizeKey, subtitleSize);\r\n    }\r\n\r\n    get subtitleOutlineColor() {\r\n        return localStorage.getItem(subtitleOutlineColorKey) || defaultSubtitleOutlineColor;\r\n    }\r\n\r\n    set subtitleOutlineColor(subtitleOutlineColor) {\r\n        localStorage.setItem(subtitleOutlineColorKey, subtitleOutlineColor);\r\n    }\r\n\r\n    get subtitleOutlineThickness() {\r\n        return localStorage.getItem(subtitleOutlineThicknessKey) || defaultSubtitleOutlineThickness;\r\n    }\r\n\r\n    set subtitleOutlineThickness(subtitleOutlineThickness) {\r\n        localStorage.setItem(subtitleOutlineThicknessKey, subtitleOutlineThickness);\r\n    }\r\n\r\n    get subtitleBackgroundColor() {\r\n        return localStorage.getItem(subtitleBackgroundColorKey) || defaultSubtitleBackgroundColor;\r\n    }\r\n\r\n    set subtitleBackgroundColor(subtitleBackgroundColor) {\r\n        localStorage.setItem(subtitleBackgroundColorKey, subtitleBackgroundColor);\r\n    }\r\n\r\n    get subtitleBackgroundOpacity() {\r\n        return localStorage.getItem(subtitleBackgroundOpacityKey) || defaultSubtitleBackgroundOpacity;\r\n    }\r\n\r\n    set subtitleBackgroundOpacity(subtitleBackgroundOpacity) {\r\n        localStorage.setItem(subtitleBackgroundOpacityKey, subtitleBackgroundOpacity);\r\n    }\r\n\r\n    get subtitleFontFamily() {\r\n        return localStorage.getItem(subtitleFontFamilyKey) || defaultSubtitleFontFamily;\r\n    }\r\n\r\n    set subtitleFontFamily(subtitleFontFamily) {\r\n        localStorage.setItem(subtitleFontFamilyKey, subtitleFontFamily);\r\n    }\r\n\r\n    get subtitlePreview() {\r\n        return localStorage.getItem(subtitlePreviewKey) || defaultSubtitlePreview;\r\n    }\r\n\r\n    set subtitlePreview(subtitlePreview) {\r\n        localStorage.setItem(subtitlePreviewKey, subtitlePreview);\r\n    }\r\n\r\n    get volume() {\r\n        return localStorage.getItem(volumeKey) || defaultVolume;\r\n    }\r\n\r\n    set volume(volume) {\r\n        localStorage.setItem(volumeKey, volume);\r\n    }\r\n\r\n    get preferMp3() {\r\n        return localStorage.getItem(preferMp3Key) === 'true' || false;\r\n    }\r\n\r\n    set preferMp3(preferMp3) {\r\n        localStorage.setItem(preferMp3Key, preferMp3);\r\n    }\r\n\r\n    get themeType() {\r\n        return localStorage.getItem(themeTypeKey) || 'dark';\r\n    }\r\n\r\n    set themeType(themeType) {\r\n        localStorage.setItem(themeTypeKey, themeType);\r\n    }\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n        this.condensedModeToggleCallbacks = [];\r\n        this.hideSubtitlePlayerToggleCallbacks = [];\r\n        this.ankiDialogRequestCallbacks = [];\r\n        this.finishedAnkiDialogRequestCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'subtitleSettings':\r\n                    // ignore\r\n                    break;\r\n                case 'condensedModeToggle':\r\n                    for (let callback  of that.condensedModeToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'hideSubtitlePlayerToggle':\r\n                    for (let callback  of that.hideSubtitlePlayerToggleCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'ankiDialogRequest':\r\n                    for (let callback of that.ankiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'finishedAnkiDialogRequest':\r\n                    for (let callback of that.finishedAnkiDialogRequestCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'ankiSettings':\r\n                    // ignore\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel?.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    onCondensedModeToggle(callback) {\r\n        this.condensedModeToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onHideSubtitlePlayerToggle(callback) {\r\n        this.hideSubtitlePlayerToggleCallbacks.push(callback);\r\n    }\r\n\r\n    onAnkiDialogRequest(callback) {\r\n        this.ankiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    onFinishedAnkiDialogRequest(callback) {\r\n        this.finishedAnkiDialogRequestCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel?.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel?.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel?.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel?.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel?.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    offset(offset) {\r\n        this.channel?.postMessage({command: 'offset', value: offset});\r\n    }\r\n\r\n    popOutToggle() {\r\n        this.channel?.postMessage({command: 'popOutToggle'});\r\n    }\r\n\r\n    copy(subtitle, preventDuplicate) {\r\n        this.channel?.postMessage({command: 'copy', subtitle: subtitle, preventDuplicate: preventDuplicate});\r\n    }\r\n\r\n    condensedModeToggle() {\r\n        this.channel?.postMessage({command: 'condensedModeToggle'});\r\n    }\r\n\r\n    hideSubtitlePlayerToggle() {\r\n        this.channel?.postMessage({command: 'hideSubtitlePlayerToggle'});\r\n    }\r\n\r\n    ankiDialogRequest(forwardToVideo) {\r\n        this.channel?.postMessage({command: 'ankiDialogRequest', forwardToVideo: forwardToVideo});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n            this.playCallbacks = [];\r\n            this.pauseCallbacks = [];\r\n            this.currentTimeCallbacks = [];\r\n            this.audioTrackSelectedCallbacks = [];\r\n            this.closeCallbacks = [];\r\n            this.readyCallbacks = [];\r\n            this.subtitlesCallbacks = [];\r\n            this.condensedModeToggleCallbacks = [];\r\n            this.hideSubtitlePlayerToggleCallbacks = [];\r\n            this.ankiDialogRequestCallbacks = [];\r\n            this.finishedAnkiDialogRequestCallbacks = [];\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useWindowSize } from '../hooks/useWindowSize';\r\nimport { arrayEquals, computeStyles } from '../services/Util'\r\nimport { KeyBindings } from '@project/common';\r\nimport Alert from './Alert';\r\nimport Clock from '../services/Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from '../services/PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        height: '100vh',\r\n        overflow: 'hidden',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    video: {\r\n        margin: \"auto\"\r\n    },\r\n    cursorHidden: {\r\n        cursor: \"none\"\r\n    }\r\n});\r\n\r\nfunction makeSubtitleStyles(subtitleSettings) {\r\n    return {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        ...computeStyles(subtitleSettings)\r\n    };\r\n}\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nfunction useFullscreen() {\r\n    const [fullscreen, setFullscreen] = useState(Boolean(document.fullscreenElement));\r\n\r\n    useEffect(() => {\r\n        const listener = () => setFullscreen(Boolean(document.fullscreenElement));\r\n        document.addEventListener('fullscreenchange', listener);\r\n\r\n        return () => document.removeEventListener('fullscreenchange', listener);\r\n    }, []);\r\n\r\n    return fullscreen;\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const {settingsProvider, videoFile, channel, popOut, onError} = props;\r\n    const poppingInRef = useRef();\r\n    const videoRef = useRef();\r\n    const [windowWidth, windowHeight] = useWindowSize(true);\r\n    if (videoRef.current) {\r\n        videoRef.current.width = windowWidth;\r\n        videoRef.current.height = windowHeight;\r\n    }\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const fullscreen = useFullscreen();\r\n    const fullscreenRef = useRef();\r\n    fullscreenRef.current = fullscreen;\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [offset, setOffset] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const [condensedModeEnabled, setCondensedModeEnabled] = useState(false);\r\n    const [subtitlePlayerHidden, setSubtitlePlayerHidden] = useState(false);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const containerRef = useRef();\r\n    const [alert, setAlert] = useState();\r\n    const [alertOpen, setAlertOpen] = useState(false);\r\n    const [controlsShowing, setControlsShowing] = useState(true);\r\n    const [returnToFullscreenOnFinishedAnkiDialogRequest, setReturnToFullscreenOnFinishedAnkiDialogRequest] = useState(false);\r\n    const returnToFullscreenOnFinishedAnkiDialogRequestRef = useRef();\r\n    returnToFullscreenOnFinishedAnkiDialogRequestRef.current = returnToFullscreenOnFinishedAnkiDialogRequest;\r\n\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.ontimeupdate = (event) => clock.setTime(element.currentTime * 1000);\r\n\r\n            element.onerror = (event) => onError(errorMessage(element));\r\n        }\r\n    }, [clock, playerChannel, onError]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => setLength(duration));\r\n\r\n        playerChannel.onPlay(async () => {\r\n            await videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n            if (subtitles && subtitles.length > 0) {\r\n                const s = subtitles[0];\r\n                const offset = s.start - s.originalStart;\r\n                setOffset(offset);\r\n            }\r\n        });\r\n\r\n        playerChannel.onCondensedModeToggle((enabled) => setCondensedModeEnabled(enabled));\r\n        playerChannel.onHideSubtitlePlayerToggle((hidden) => setSubtitlePlayerHidden(hidden));\r\n        playerChannel.onAnkiDialogRequest(() => {\r\n            if (fullscreenRef.current && !popOut) {\r\n                document.exitFullscreen();\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(true);\r\n            }\r\n        });\r\n\r\n        playerChannel.onFinishedAnkiDialogRequest(async () => {\r\n            if (returnToFullscreenOnFinishedAnkiDialogRequestRef.current) {\r\n                try {\r\n                    await containerRef.current?.requestFullscreen();\r\n                } catch(e) {\r\n                    console.error(e);\r\n                }\r\n\r\n                setReturnToFullscreenOnFinishedAnkiDialogRequest(false);\r\n            }\r\n        });\r\n\r\n        window.onbeforeunload = (e) => {\r\n            if (!poppingInRef.current) {\r\n                playerChannel.close();\r\n            }\r\n        };\r\n\r\n        return () => playerChannel.close();\r\n    }, [clock, playerChannel, popOut]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => playerChannel.pause(), [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = clock.time(length);\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current, (s1, s2) => s1.index === s2.index)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles, clock, length]);\r\n\r\n    const handleOffsetChange = useCallback((offset) => {\r\n        setOffset(offset);\r\n        setSubtitles(subtitles => subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n        })));\r\n        playerChannel.offset(offset);\r\n    }, [playerChannel]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindSeekToSubtitle(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.currentTime = subtitle.start / 1000;\r\n            },\r\n            () => !videoRef.current,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, subtitles, length, clock]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindCopy(\r\n            (event, subtitle) => {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                playerChannel.copy(subtitle);\r\n\r\n                if (fullscreen) {\r\n                    setAlert(`Copied: \"${subtitle.text}\"`);\r\n                    setAlertOpen(true);\r\n                }\r\n            },\r\n            () => false,\r\n            () => {\r\n                if (!showSubtitlesRef.current || showSubtitlesRef.current.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                return showSubtitlesRef.current[0];\r\n            }\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAdjustOffset(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindToggleSubtitles(\r\n            (event) => setSubtitlesEnabled(enabled => !enabled),\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindOffsetToSubtitle(\r\n            (event, offset) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                handleOffsetChange(offset);\r\n            },\r\n            () => false,\r\n            () => clock.time(length),\r\n            () => subtitles\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [handleOffsetChange, subtitles, clock, length]);\r\n\r\n    useEffect(() => {\r\n        const unbind = KeyBindings.bindAnkiExport(\r\n            (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n\r\n                if (showSubtitlesRef.current && showSubtitlesRef.current.length > 0) {\r\n                    playerChannel.copy(showSubtitlesRef.current[0], true);\r\n                }\r\n\r\n                playerChannel.ankiDialogRequest(fullscreen);\r\n            },\r\n            () => false\r\n        );\r\n\r\n        return () => unbind();\r\n    }, [playerChannel, fullscreen]);\r\n\r\n    const handleShowControls = useCallback((showing) => setControlsShowing(showing), []);\r\n    const handleSubtitlesToggle = useCallback(() => setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled), []);\r\n\r\n    const handleFullscreenToggle = useCallback(() => {\r\n        if (fullscreen) {\r\n            document.exitFullscreen();\r\n        } else {\r\n            containerRef.current?.requestFullscreen();\r\n        }\r\n    }, [fullscreen]);\r\n\r\n    const handleVolumeChange = useCallback((v) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.volume = v;\r\n        }\r\n    }, []);\r\n\r\n    const handlePopOutToggle = useCallback(() => {\r\n        playerChannel.popOutToggle();\r\n        if (popOut) {\r\n            poppingInRef.current = true;\r\n            window.close();\r\n        }\r\n    }, [playerChannel, popOut]);\r\n\r\n    const handleCondensedModeToggle = useCallback(() => {\r\n        playerChannel.condensedModeToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        playerChannel.close();\r\n        window.close();\r\n    }, [playerChannel]);\r\n\r\n    const handleHideSubtitlePlayerToggle = useCallback(() => {\r\n        playerChannel.hideSubtitlePlayerToggle();\r\n    }, [playerChannel]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (playing) {\r\n            playerChannel.pause();\r\n        } else {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel, playing]);\r\n\r\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\r\n    const {\r\n        subtitleSize,\r\n        subtitleColor,\r\n        subtitleOutlineThickness,\r\n        subtitleOutlineColor,\r\n        subtitleBackgroundColor,\r\n        subtitleBackgroundOpacity,\r\n        subtitleFontFamily\r\n    } = settingsProvider.subtitleSettings;\r\n    const subtitleStyles = useMemo(\r\n        () => makeSubtitleStyles({\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        }),\r\n        [\r\n            subtitleSize,\r\n            subtitleColor,\r\n            subtitleOutlineThickness,\r\n            subtitleOutlineColor,\r\n            subtitleBackgroundColor,\r\n            subtitleBackgroundOpacity,\r\n            subtitleFontFamily\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <div\r\n            ref={containerRef}\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                onClick={handleClick}\r\n                className={controlsShowing ? classes.video : `${classes.cursorHidden} ${classes.video}`}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div style={subtitleStyles}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            {fullscreen && (\r\n                <Alert\r\n                    open={alertOpen}\r\n                    onClose={handleAlertClosed}\r\n                    autoHideDuration={3000}\r\n                    severity=\"success\"\r\n                >\r\n                    {alert}\r\n                </Alert>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={true}\r\n                offset={offset}\r\n                fullscreenEnabled={true}\r\n                fullscreen={fullscreen}\r\n                closeEnabled={!popOut}\r\n                popOut={popOut}\r\n                volumeEnabled={true}\r\n                popOutEnabled={!isMobile}\r\n                condensedModeToggleEnabled={true}\r\n                condensedModeEnabled={condensedModeEnabled}\r\n                hideSubtitlePlayerToggleEnabled={subtitles?.length > 0 && !popOut && !fullscreen}\r\n                subtitlePlayerHidden={subtitlePlayerHidden}\r\n                onShow={handleShowControls}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n                onFullscreenToggle={handleFullscreenToggle}\r\n                onVolumeChange={handleVolumeChange}\r\n                onOffsetChange={handleOffsetChange}\r\n                onPopOutToggle={handlePopOutToggle}\r\n                onCondensedModeToggle={handleCondensedModeToggle}\r\n                onClose={handleClose}\r\n                onHideSubtitlePlayerToggle={handleHideSubtitlePlayerToggle}\r\n                settingsProvider={settingsProvider}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useEffect, useState, useMemo, useRef } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { useWindowSize } from '../hooks/useWindowSize';\nimport { red } from '@material-ui/core/colors';\nimport { Anki, AudioClip, Image } from '@project/common';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport AnkiDialog from './AnkiDialog.js';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DragOverlay from './DragOverlay.js';\nimport HelpDialog from './HelpDialog.js';\nimport ImageDialog from './ImageDialog.js';\nimport SubtitleReader from '../services/SubtitleReader.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from '../services/ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport LandingPage from './LandingPage.js';\nimport Player from './Player.js';\nimport SettingsDialog from './SettingsDialog.js';\nimport SettingsProvider from '../services/SettingsProvider.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst latestExtensionVersion = \"0.11.0\";\nconst extensionUrl = \"https://github.com/killergerbah/asbplayer/releases/latest\";\n\nconst useContentStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0\n    },\n    contentShift: ({drawerWidth}) => ({\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth\n    }),\n}));\n\nfunction extractSources(files) {\n    let subtitleFile = null;\n    let audioFile = null;\n    let videoFile = null;\n\n    for (const f of files) {\n        const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n        if (extensionStartIndex === -1) {\n            throw new Error('Unable to determine extension of ' + f.name);\n        }\n\n        const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n        switch (extension) {\n            case \"ass\":\n            case \"srt\":\n            case \"vtt\":\n                if (subtitleFile) {\n                    throw new Error('Cannot open two subtitle files simultaneously');\n                }\n                subtitleFile = f;\n                break;\n            case \"mkv\":\n            case \"mp4\":\n            case \"avi\":\n                if (videoFile) {\n                    throw new Error('Cannot open two video files simultaneously');\n                }\n                videoFile = f;\n                break;\n            case \"mp3\":\n            case \"m4a\":\n            case \"aac\":\n            case \"flac\":\n            case \"ogg\":\n            case \"wav\":\n            case \"opus\":\n                if (audioFile) {\n                    throw new Error('Cannot open two audio files simultaneously');\n                }\n                audioFile = f;\n                break;\n            default:\n                throw new Error(\"Unsupported extension \" + extension);\n        }\n    }\n\n    if (videoFile && audioFile) {\n        throw new Error(\"Cannot load both an audio and video file simultaneously\");\n    }\n\n    return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n}\n\nfunction audioClipFromItem(item) {\n    if (item.audio) {\n        return AudioClip.fromBase64(\n            item.subtitleFile.name,\n            item.start,\n            item.end,\n            item.audio.base64,\n            item.audio.extension\n        );\n    }\n\n    if (item.audioFile || item.videoFile) {\n        return AudioClip.fromFile(\n            item.audioFile || item.videoFile,\n            item.start,\n            item.end,\n            item.audioTrack\n        );\n    }\n\n    return null;\n}\n\nfunction imageFromItem(item) {\n    if (item.image) {\n        return Image.fromBase64(\n            item.subtitleFile.name,\n            item.start,\n            item.image.base64,\n            item.image.extension\n        );\n    }\n\n    if (item.videoFile) {\n        return Image.fromFile(\n            item.videoFile,\n            item.start\n        );\n    }\n\n    return null;\n}\n\nfunction revokeUrls(sources) {\n    if (sources.audioFileUrl) {\n        URL.revokeObjectURL(sources.audioFileUrl);\n    }\n\n    if (sources.videoFileUrl) {\n        URL.revokeObjectURL(sources.videoFileUrl);\n    }\n}\n\nfunction Content(props) {\n    const classes = useContentStyles(props);\n\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\nfunction App() {\n    const subtitleReader = useMemo(() => new SubtitleReader(), []);\n    const settingsProvider = useMemo(() => new SettingsProvider(), []);\n    const theme = useMemo(() => createMuiTheme({\n        palette: {\n            primary: {\n                main: '#49007a',\n            },\n            secondary: {\n                main: '#ff1f62',\n            },\n            error: {\n                main: red.A400,\n            },\n            type: settingsProvider.themeType,\n        }\n    }), [settingsProvider.themeType]);\n    const anki = useMemo(() => new Anki(settingsProvider), [settingsProvider]);\n    const location = useLocation();\n    const inVideoPlayer = location.pathname === '/video';\n    const extension = useMemo(() => new ChromeExtension(!inVideoPlayer), [inVideoPlayer]);\n    const videoFrameRef = useRef();\n    const [width, ] = useWindowSize(!inVideoPlayer);\n    const drawerRatio = videoFrameRef.current ? .2 : .3;\n    const minDrawerSize = videoFrameRef.current ? 150 : 300;\n    const drawerWidth = Math.max(minDrawerSize, width * drawerRatio);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const copiedSubtitlesRef = useRef();\n    copiedSubtitlesRef.current = copiedSubtitles;\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [alert, setAlert] = useState();\n    const [alertOpen, setAlertOpen] = useState(false);\n    const [alertSeverity, setAlertSeverity] = useState();\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [dragging, setDragging] = useState(false);\n    const dragEnterRef = useRef();\n    const [fileName, setFileName] = useState();\n    const [ankiDialogOpen, setAnkiDialogOpen] = useState(false);\n    const [ankiDialogDisabled, setAnkiDialogDisabled] = useState(false);\n    const [ankiDialogItem, setAnkiDialogItem] = useState();\n    const ankiDialogAudioClip = useMemo(() => ankiDialogItem && audioClipFromItem(ankiDialogItem), [ankiDialogItem]);\n    const ankiDialogImage = useMemo(() => ankiDialogItem && imageFromItem(ankiDialogItem), [ankiDialogItem]);\n    const [ankiDialogRequestToVideo, setAnkiDialogRequestToVideo] = useState();\n    const [ankiDialogRequested, setAnkiDialogRequested] = useState(false);\n    const [ankiDialogFinishedRequest, setAnkiDialogFinishedRequest] = useState(0);\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false);\n    const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n    const [imageDialogOpen, setImageDialogOpen] = useState(false);\n    const [disableKeyEvents, setDisableKeyEvents] = useState(false);\n    const [image, setImage] = useState();\n    const [tab, setTab] = useState();\n    const [availableTabs, setAvailableTabs] = useState([]);\n    const fileInputRef = useRef();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack, audio, image, preventDuplicate) => {\n        navigator.clipboard.writeText(subtitle.text);\n        setCopiedSubtitles(copiedSubtitles => {\n            if (preventDuplicate && copiedSubtitles.length > 0) {\n                const last = copiedSubtitles[copiedSubtitles.length - 1];\n\n                if (subtitle.start === last.start\n                    && subtitle.end === last.end\n                    && subtitle.text === last.text\n                    && subtitleFile.name === last.subtitleFile.name) {\n                        return copiedSubtitles;\n                    }\n            }\n\n            return [...copiedSubtitles, {\n                ...subtitle,\n                timestamp: Date.now(),\n                name: fileName,\n                subtitleFile: subtitleFile,\n                audioFile: audioFile,\n                videoFile: videoFile,\n                audioTrack: audioTrack,\n                audio: audio,\n                image: image\n            }];\n        });\n\n        setAlertSeverity(\"success\");\n        setAlert(`Copied: \"${subtitle.text}\"`);\n        setAlertOpen(true);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback(() => setCopyHistoryOpen(copyHistoryOpen => !copyHistoryOpen), []);\n    const handleCloseCopyHistory = useCallback(() => setCopyHistoryOpen(false), []);\n    const handleOpenSettings = useCallback(() => {\n        setDisableKeyEvents(true);\n        setSettingsDialogOpen(true);\n    }, []);\n    const handleOpenHelp = useCallback(() => setHelpDialogOpen(true), []);\n    const handleCloseHelp = useCallback(() => setHelpDialogOpen(false), []);\n    const handleAlertClosed = useCallback(() => setAlertOpen(false), []);\n    const handleImageDialogClosed = useCallback(() => setImageDialogOpen(false), []);\n    const handleCloseSettings = useCallback((newSettings) => {\n        settingsProvider.settings = newSettings;\n        setSettingsDialogOpen(false);\n        setDisableKeyEvents(false);\n        extension.publishMessage({command: 'subtitleSettings', value: settingsProvider.subtitleSettings});\n        extension.publishMessage({command: 'ankiSettings', value: settingsProvider.ankiSettings});\n    }, [extension, settingsProvider]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleError = useCallback((message) => {\n        setAlertSeverity(\"error\");\n        setAlert(message);\n        setAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(async (item) => {\n        try {\n            const clip = await audioClipFromItem(item);\n\n            if (settingsProvider.preferMp3) {\n                clip.toMp3().download();\n            } else {\n                clip.download();\n            }\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError, settingsProvider]);\n\n    const handleDownloadImage = useCallback(async (item) => {\n        try {\n            await imageFromItem(item).download();\n        } catch(e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    const handleAnki = useCallback((item) => {\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n    }, []);\n\n    const handleAnkiDialogCancel = useCallback(() => {\n        setAnkiDialogOpen(false);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(false);\n\n        if (ankiDialogRequested) {\n            setAnkiDialogFinishedRequest(Date.now());\n            setAnkiDialogRequested(false);\n        }\n    }, [ankiDialogRequested]);\n\n    const handleAnkiDialogProceed = useCallback(async (text, definition, audioClip, image, word, source, customFieldValues, mode) => {\n        setAnkiDialogDisabled(true);\n\n        try {\n            const result = await anki.export(\n                text,\n                definition,\n                audioClip,\n                image,\n                word,\n                source,\n                customFieldValues,\n                mode\n            );\n\n            if (mode === 'default') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Export succeeded: \" + result);\n                setAlertOpen(true);\n            } else if (mode === 'updateLast') {\n                setAlertSeverity(\"success\");\n                setAlert(\"Update succeeded: \" + result);\n                setAlertOpen(true);\n            }\n\n            setAnkiDialogOpen(false);\n\n            if (ankiDialogRequested) {\n                setAnkiDialogFinishedRequest(Date.now());\n                setAnkiDialogRequested(false);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        } finally {\n            setAnkiDialogDisabled(false);\n            setDisableKeyEvents(false);\n        }\n    }, [anki, handleError, ankiDialogRequested]);\n\n    const handleAnkiDialogRequest = useCallback((forwardToVideo) => {\n        if (copiedSubtitlesRef.current.length === 0) {\n            return;\n        }\n\n        const item = copiedSubtitlesRef.current[copiedSubtitlesRef.current.length - 1];\n        setAnkiDialogItem(item);\n        setAnkiDialogOpen(true);\n        setAnkiDialogDisabled(false);\n        setDisableKeyEvents(true);\n        setAnkiDialogRequested(true);\n\n        if (forwardToVideo) {\n            setAnkiDialogRequestToVideo(Date.now());\n        }\n    }, []);\n\n    const handleViewImage = useCallback((image) => {\n        setImage(image);\n        setImageDialogOpen(true);\n    }, []);\n\n    useEffect(() => {\n        function onTabs(tabs) {\n            if (tabs.length !== availableTabs.length) {\n                setAvailableTabs(tabs);\n            } else {\n                let update = false;\n\n                for (let i = 0; i < availableTabs.length; ++i) {\n                    const t1 = availableTabs[i];\n                    const t2 = tabs[i];\n                    if (t1.id !== t2.id\n                        || t1.title !== t2.title\n                        || t1.src !== t2.src) {\n                        update = true;\n                        break;\n                    }\n                }\n\n                if (update) {\n                    setAvailableTabs(tabs);\n                }\n            }\n\n            let selectedTabMissing = tab && tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\n\n            if (selectedTabMissing) {\n                setTab(null);\n                handleError('Lost connection with tab ' + tab.id + ' ' + tab.title);\n            }\n        };\n\n        extension.subscribeTabs(onTabs);\n\n        return () => extension.unsubscribeTabs(onTabs);\n    }, [availableTabs, tab, extension, handleError]);\n\n    const handleTabSelected = useCallback((tab) => setTab(tab), []);\n\n    const handleFiles = useCallback((files) => {\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(files);\n\n            setSources(previous => {\n                setLoading(true);\n\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n\n                    setTab(null);\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            console.error(e);\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    useEffect(() => {\n        async function onMessage(message) {\n            if (message.data.command === 'sync') {\n                const tabs = availableTabs.filter(t => {\n                    if (t.id !== message.tabId) {\n                        return false;\n                    }\n\n                    return !message.src || t.src === message.src;\n                });\n\n                if (tabs.length === 0) {\n                    if (message.src) {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" with src \" + message.src + \" was not found\");\n                    } else {\n                        console.error(\"Received sync request but the requesting tab ID \" + message.tabId + \" was not found\");\n                    }\n\n                    return;\n                }\n\n                const tab = tabs[0];\n                const subtitleFile = new File(\n                    [await (await fetch(\"data:text/plain;base64,\" + message.data.subtitles.base64)).blob()],\n                    message.data.subtitles.name\n                );\n                setFileName(subtitleFile.name);\n                setSources({\n                    subtitleFile: subtitleFile,\n                    audioFile: null,\n                    audioFileUrl: null,\n                    videoFile: null,\n                    videoFileUrl: null\n                })\n                setTab(tab);\n            }\n        }\n\n        extension.subscribe(onMessage);\n\n        return () => extension.unsubscribe(onMessage);\n    }, [extension, availableTabs]);\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (inVideoPlayer) {\n            handleError('Video player cannot receive dropped files. Drop outside of the video frame instead.');\n            return;\n        }\n\n        setDragging(false);\n        dragEnterRef.current = null;\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        handleFiles(e.dataTransfer.files);\n    }, [inVideoPlayer, handleError, handleFiles]);\n\n    const handleFileInputChange = useCallback(() => {\n        const files = fileInputRef.current?.files;\n\n        if (files && files.length > 0) {\n            handleFiles(files);\n        }\n    }, [handleFiles]);\n\n    const handleFileSelector = useCallback(() => fileInputRef.current?.click(), []);\n\n    const handleDragEnter = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer) {\n            dragEnterRef.current = e.target;\n            setDragging(true);\n        }\n\n    }, [inVideoPlayer]);\n\n    const handleDragLeave = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!inVideoPlayer && dragEnterRef.current === e.target) {\n            setDragging(false);\n        }\n    }, [inVideoPlayer]);\n\n    const handleSourcesLoaded = useCallback(() => setLoading(false), []);\n    const nothingLoaded = (loading && !videoFrameRef.current) || (!sources.subtitleFile && !sources.audioFile && !sources.videoFile);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <div\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n            >\n                <Alert\n                    open={alertOpen}\n                    onClose={handleAlertClosed}\n                    autoHideDuration={3000}\n                    severity={alertSeverity}\n                >\n                    {alert}\n                </Alert>\n                <Switch>\n                    <Route exact path=\"/\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout');\n\n                        if (videoFile && channel) {\n                            return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel + \"&popout=\" + popOut} />);\n                        }\n\n                        return (\n                            <div>\n                                <CopyHistory\n                                    items={copiedSubtitles}\n                                    open={copyHistoryOpen}\n                                    drawerWidth={drawerWidth}\n                                    onClose={handleCloseCopyHistory}\n                                    onDelete={handleDeleteCopyHistoryItem}\n                                    onClipAudio={handleClipAudio}\n                                    onDownloadImage={handleDownloadImage}\n                                    onSelect={handleSelectCopyHistoryItem}\n                                    onAnki={handleAnki}\n                                />\n                                <AnkiDialog\n                                    open={ankiDialogOpen}\n                                    disabled={ankiDialogDisabled}\n                                    text={ankiDialogItem?.text}\n                                    audioClip={ankiDialogAudioClip}\n                                    image={ankiDialogImage}\n                                    source={ankiDialogItem?.subtitleFile?.name}\n                                    customFields={settingsProvider.customAnkiFields}\n                                    anki={anki}\n                                    settingsProvider={settingsProvider}\n                                    onCancel={handleAnkiDialogCancel}\n                                    onProceed={handleAnkiDialogProceed}\n                                    onViewImage={handleViewImage}\n                                    onOpenSettings={handleOpenSettings}\n                                />\n                                <ImageDialog\n                                    open={imageDialogOpen}\n                                    image={image}\n                                    onClose={handleImageDialogClosed}\n                                />\n                                <SettingsDialog\n                                    anki={anki}\n                                    open={settingsDialogOpen}\n                                    onClose={handleCloseSettings}\n                                    settings={settingsProvider.settings}\n                                />\n                                <HelpDialog\n                                    open={helpDialogOpen}\n                                    extensionUrl={extensionUrl}\n                                    onClose={handleCloseHelp}\n                                />\n                                <Bar\n                                    title={fileName || \"asbplayer\"}\n                                    drawerWidth={drawerWidth}\n                                    drawerOpen={copyHistoryOpen}\n                                    onOpenCopyHistory={handleOpenCopyHistory}\n                                    onOpenSettings={handleOpenSettings}\n                                    onOpenHelp={handleOpenHelp}\n                                    onFileSelector={handleFileSelector}\n                                />\n                                <input\n                                    ref={fileInputRef}\n                                    onChange={handleFileInputChange}\n                                    type=\"file\"\n                                    accept=\".srt,.ass,.vtt,.mp3,.m4a,.aac,.flac,.ogg,.wav,.opus,.mkv,.mp4,.avi\"\n                                    multiple\n                                    hidden\n                                />\n                                <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                    {nothingLoaded && (\n                                        <LandingPage\n                                            latestExtensionVersion={latestExtensionVersion}\n                                            extensionUrl={extensionUrl}\n                                            extension={extension}\n                                            loading={loading}\n                                            dragging={dragging}\n                                            onFileSelector={handleFileSelector}\n                                        />\n                                    )}\n                                    <DragOverlay dragging={dragging} loading={loading} />\n                                    <Player\n                                        subtitleReader={subtitleReader}\n                                        settingsProvider={settingsProvider}\n                                        onCopy={handleCopy}\n                                        onError={handleError}\n                                        onUnloadAudio={handleUnloadAudio}\n                                        onUnloadVideo={handleUnloadVideo}\n                                        onLoaded={handleSourcesLoaded}\n                                        onTabSelected={handleTabSelected}\n                                        onAnkiDialogRequest={handleAnkiDialogRequest}\n                                        tab={tab}\n                                        availableTabs={availableTabs}\n                                        sources={sources}\n                                        jumpToSubtitle={jumpToSubtitle}\n                                        videoFrameRef={videoFrameRef}\n                                        extension={extension}\n                                        drawerOpen={copyHistoryOpen}\n                                        disableKeyEvents={disableKeyEvents}\n                                        ankiDialogRequested={ankiDialogRequested}\n                                        ankiDialogRequestToVideo={ankiDialogRequestToVideo}\n                                        ankiDialogFinishedRequest={ankiDialogFinishedRequest}\n                                    />\n                                </Content>\n                            </div>\n                        );\n                    }} />\n                    <Route exact path=\"/video\" render={() => {\n                        const params = new URLSearchParams(window.location.search);\n                        const videoFile = params.get('video');\n                        const channel = params.get('channel');\n                        const popOut = params.get('popout') === 'true';\n\n                        return (\n                            <VideoPlayer\n                                settingsProvider={settingsProvider}\n                                videoFile={videoFile}\n                                popOut={popOut}\n                                channel={channel}\n                                onError={handleError}\n                            />\n                        );\n                    }} />\n                </Switch>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <App />\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}