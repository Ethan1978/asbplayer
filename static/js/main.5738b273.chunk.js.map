{"version":3,"sources":["Alert.js","Api.js","Bar.js","ChromeExtension.js","CopyHistory.js","BroadcastChannelVideoProtocol.js","ChromeTabVideoProtocol.js","Clock.js","Controls.js","MediaAdapter.js","SubtitlePlayer.js","Util.js","VideoChannel.js","Player.js","PlayerChannel.js","VideoPlayer.js","App.js","theme.js","reportWebVitals.js","index.js"],"names":["useAlertStyles","makeStyles","root","display","justifyContent","position","top","width","pointerEvents","zIndex","Alert","props","classes","useEffect","open","timeout","setTimeout","onClose","autoHideDuration","clearTimeout","className","Grow","in","severity","children","Api","file","name","endsWith","text","then","parseSync","nodes","map","node","data","parse","parsed","events","dialogue","event","start","Math","round","Start","end","End","Text","combined","Error","trackId","Promise","resolve","reject","audio","document","createElement","_clipMedia","video","media","src","URL","createObjectURL","preload","audioTracks","length","t","enabled","id","currentTime","load","oncanplay","e","play","stream","captureStream","getVideoTracks","recorder","MediaRecorder","chunks","ondataavailable","push","onstop","_saveToFile","Blob","_nameWithoutExtension","pause","stop","revokeObjectURL","fileName","substring","lastIndexOf","blob","url","window","a","body","appendChild","style","href","download","click","remove","Bar","drawerWidth","theme","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","hide","AppBar","clsx","drawerOpen","Toolbar","Typography","variant","IconButton","edge","color","aria-label","onClick","onOpenCopyHistory","ChromeExtension","this","onMessageCallbacks","tabs","addEventListener","source","sender","message","command","c","tabId","postMessage","callback","i","splice","Menu","anchorEl","onSelect","onClipAudio","item","handleCopy","useCallback","navigator","clipboard","writeText","handleJumpTo","handleClipAudio","Popover","disableEnforceFocus","anchorOrigin","vertical","horizontal","transformOrigin","ListItem","button","ListItemText","primaryTypographyProps","primary","videoFile","audioFile","CopyHistory","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","listContainer","height","overflowY","overflowX","listItemIconRoot","minWidth","scrollToBottomRefCallback","element","scrollIntoView","useState","menuItem","setMenuItem","menuOpen","setMenuOpen","menuAnchorEl","setMenuAnchorEl","handleMenu","currentTarget","handleMenuClosed","handleDelete","onDelete","content","items","lastSeenItemName","ListSubheader","disableSticky","ref","ListItemIcon","fontSize","timestamp","list","Fragment","Drawer","anchor","paper","Divider","BroadcastChannelVideoProtocol","channelId","channel","BroadcastChannel","that","onmessage","onMessage","close","ChromeTabVideoProtocol","extension","listener","subscribe","sendMessage","unsubscribe","Clock","accumulated","started","max","min","Date","now","startTime","time","useControlStyles","container","left","bottom","buttonContainer","flexDirection","timeDisplay","palette","action","active","cursor","offsetInput","marginLeft","secondary","background","inactiveButton","disabled","progress","margin","bar1Determinate","useProgressBarStyles","marginBottom","fillContainer","fill","handleContainer","handle","borderRadius","filter","displayTime","milliseconds","seconds","floor","minutes","secondsInMinute","String","padStart","elementWidth","rect","getBoundingClientRect","right","ProgressBar","containerRef","useRef","fillStyle","value","handleStyle","current","pageX","onSeek","handleAnchor","AudioTrackSelector","selected","selectedAudioTrack","onAudioTrackSelected","language","label","TabSelector","selectedTab","onTabSelected","MediaUnloader","onUnload","Controls","playing","offsetEnabled","displayLength","offsetValue","mousePositionRef","onPause","onPlay","onUnloadAudio","onUnloadVideo","onOffsetChange","show","setShow","audioTrackSelectorOpen","setAudioTrackSelectorOpen","audioTrackSelectorAnchorEl","setAudioTrackSelectorAnchorEl","tabSelectorOpen","setTabSelectorOpen","tabSelectorAnchorEl","setTabSelectorAnchorEl","audioUnloaderOpen","setAudioUnloaderOpen","audioUnloaderAnchorEl","setAudioUnloaderAnchorEl","videoUnloaderOpen","setVideoUnloaderOpen","videoUnloaderAnchorEl","setVideoUnloaderAnchorEl","lastMousePositionRef","x","y","lastShowTimestampRef","lastShowRef","forceShowRef","offsetInputRef","updateState","forceUpdate","handleSeek","interval","setInterval","currentShow","pow","activeElement","clearInterval","handleKey","keyCode","preventDefault","offset","Number","isNaN","blur","removeEventListener","handleAudioTrackSelectorClosed","handleAudioTrackSelectorOpened","handleAudioTrackSelected","handleTabSelectorClosed","handleTabSelectorOpened","handleTabSelected","handleAudioUnloaderClosed","handleAudioUnloaderOpened","handleUnloadAudio","handleVideoUnloaderClosed","handleVideoUnloaderOpened","handleUnloadVideo","clock","onMouseOver","onMouseOut","Fade","Grid","direction","Input","inputRef","disableUnderline","placeholder","toFixed","subtitlesToggle","onSubtitlesToggle","subtitlesEnabled","MediaAdapter","readyResolves","_onMediaCanPlay","readyState","useSubtitlePlayerStyles","backgroundColor","default","table","selectedSubtitle","subtitle","textAlign","copyButton","noSubtitles","SubtitlePlayer","onCopy","subtitles","jumpToSubtitle","clockRef","subtitleListRef","subtitleRefs","useMemo","Array","_","createRef","subtitleRefsRef","selectedSubtitleIndexes","setSelectedSubtitleIndexes","selectedSubtitleIndexesRef","lengthRef","copyAlertOpen","setCopyAlertOpen","lastCopiedSubtitle","setLastCopiedSubtitle","lastScrollTimestampRef","requestAnimationRef","tableRef","requestAnimationFrame","update","smallestIndex","MAX_SAFE_INTEGER","fallbackIndex","currentSubtitleIndexes","s","b","key","keysAreEqual","scrollToSubtitleRef","allowScroll","block","inline","behavior","cancelAnimationFrame","newSubtitleIndex","Object","keys","handleScroll","jumpToIndex","originalStart","subtitleTable","handleClick","subtitleIndex","stopPropagation","handleCopyAlertClosed","TableContainer","Table","TableBody","index","TableRow","TableCell","Link","target","rel","Paper","square","elevation","VideoChannel","protocol","isReady","readyCallbacks","playCallbacks","pauseCallbacks","currentTimeCallbacks","audioTrackSelectedCallbacks","exitCallbacks","paused","echo","console","error","useStyles","timeDuration","totalMilliseconds","ms","secs","mins","pad","padEnd","n","trackLength","audioRef","videoRef","useOffset","subtitlesLength","originalEnd","audioLength","videoLength","Player","api","onError","sources","subtitleFile","audioFileUrl","videoFileUrl","tab","setTab","setSubtitles","setPlaying","playingRef","setAudioTracks","setSelectedAudioTrack","setOffsetValue","mediaAdapter","availableTabs","setAvailableTabs","seek","setTime","v","subtitlesPromise","catch","onReady","process","encodeURIComponent","init","ready","onCurrentTime","onExit","handlePlay","handlePause","handleSeekToSubtitle","shouldPlay","audioTrackSelected","handleOffsetChange","o","newSubtitles","offsetSeconds","t1","t2","loaded","onMouseMove","screenX","screenY","PlayerChannel","closeCallbacks","subtitlesCallbacks","overflow","objectFit","paddingLeft","paddingRight","textShadow","notifyReady","playerChannel","outerWidth","videoWidth","videoHeight","availWidth","screen","innerWidth","availHeight","outerHeight","innerHeight","resizeRatio","resizeTo","tracks","selectedTrack","VideoPlayer","params","URLSearchParams","location","search","get","setLength","showSubtitles","setShowSubtitles","setSubtitlesEnabled","showSubtitlesRef","videoRefCallback","onloadeddata","onerror","code","errorMessage","selectAudioTrack","onSubtitles","onbeforeunload","arrayEquals","handleSubtitlesToggle","nocontrols","Content","contentShift","App","off","size","setSize","useLayoutEffect","updateSize","useWindowSize","useLocation","pathname","copiedSubtitles","setCopiedSubtitles","copyHistoryOpen","setCopyHistoryOpen","setError","errorAlertOpen","setErrorAlertOpen","setJumpToSubtitle","setSources","setFileName","audioTrack","handleOpenCopyHistory","handleCloseCopyHistory","handleDeleteCopyHistoryItem","newCopiedSubtitles","handleErrorAlertClosed","handleError","previous","clipAudioFromAudioFile","clipAudioFromVideoFile","handleSelectCopyHistoryItem","handleDrop","dataTransfer","files","f","extensionStartIndex","extractSources","revokeUrls","onDrop","onDragOver","exact","path","render","to","createMuiTheme","main","red","A400","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","forceRefresh","ThemeProvider","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.5738b273.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useAlertStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'fixed',\r\n        top: 80,\r\n        width: '100%',\r\n        pointerEvents: 'none',\r\n        zIndex: 2000\r\n    }\r\n});\r\n\r\nexport default function Alert(props) {\r\n    const classes = useAlertStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            const timeout = setTimeout(props.onClose, props.autoHideDuration);\r\n            return () => clearTimeout(timeout);\r\n        }\r\n\r\n        return null;\r\n    }, [props.open, props.autoHideDuration, props.onClose]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grow in={props.open}>\r\n               <MuiAlert severity={props.severity}>\r\n                   {props.children}\r\n               </MuiAlert>\r\n            </Grow>\r\n        </div>\r\n    );\r\n}\r\n","import { parseSync } from 'subtitle';\r\nimport { parse } from 'ass-compiler';\r\n\r\nexport default class Api {\r\n\r\n    subtitles(file) {\r\n        if (file.name.endsWith('.srt')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parseSync(text)\r\n                })\r\n                .then(nodes => {\r\n                    return nodes.map(node => node.data);\r\n                });\r\n        } else if (file.name.endsWith('.ass')) {\r\n            return file.text()\r\n                .then(text => {\r\n                    return parse(text);\r\n                })\r\n                .then(parsed => {\r\n                    return parsed.events.dialogue.map(event => {\r\n                        return {\r\n                            start: Math.round(event.Start * 1000),\r\n                            end: Math.round(event.End * 1000),\r\n                            text: event.Text.combined\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n\r\n        throw new Error('Unsupported subtitle file format');\r\n    }\r\n\r\n    clipAudioFromAudioFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const audio = document.createElement(\"audio\");\r\n            this._clipMedia(audio, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    clipAudioFromVideoFile(file, start, end, trackId) {\r\n        return new Promise((resolve, reject) => {\r\n            const video = document.createElement(\"video\");\r\n            this._clipMedia(video, file, start, end, trackId, resolve);\r\n        });\r\n    }\r\n\r\n    _clipMedia(media, file, start, end, trackId, resolve) {\r\n        media.src = URL.createObjectURL(file);\r\n        media.preload = \"none\";\r\n\r\n        // FIXME: clipping the correct audio track selection doesn't actually work right now.\r\n        if (trackId && media.audioTracks && media.audioTracks.length > 0) {\r\n            for (const t of media.audioTracks) {\r\n                t.enabled = trackId === t.id;\r\n            }\r\n        }\r\n\r\n        media.currentTime = start / 1000;\r\n        media.load();\r\n\r\n        media.oncanplay = (e) => {\r\n            media.play();\r\n            const stream = media.captureStream();\r\n\r\n            for (const t of stream.getVideoTracks()) {\r\n                t.enabled = false;\r\n            }\r\n\r\n            const recorder = new MediaRecorder(stream);\r\n            const chunks = [];\r\n            recorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n            recorder.onstop = (e) => {\r\n                this._saveToFile(\r\n                    new Blob(chunks),\r\n                    this._nameWithoutExtension(file.name) + \"_\" + start + \"_\" + end + \".wav\"\r\n                );\r\n\r\n                resolve();\r\n            };\r\n            recorder.start();\r\n            setTimeout(() => {\r\n                media.pause();\r\n                recorder.stop();\r\n                const src = media.src;\r\n                media.src = null;\r\n                URL.revokeObjectURL(src);\r\n            }, end - start + 100);\r\n        };\r\n    }\r\n\r\n    _nameWithoutExtension(fileName) {\r\n        return fileName.substring(0, fileName.lastIndexOf(\".\"));\r\n    }\r\n\r\n    _saveToFile(blob, name) {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        document.body.appendChild(a);\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = name;\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n        a.remove();\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    hide: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Bar(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: props.drawerOpen,\r\n            })}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n                <IconButton\r\n                    edge=\"end\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    onClick={props.onOpenCopyHistory}\r\n                    className={clsx(props.drawerOpen && classes.hide)}>\r\n                    <ListIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","export default class ChromeExtension {\r\n\r\n    constructor() {\r\n        this.onMessageCallbacks = [];\r\n        this.tabs = [];\r\n        window.addEventListener('message', (event) => {\r\n            if (event.source !== window) {\r\n               return;\r\n            }\r\n\r\n            if (event.data.sender === 'asbplayer-extension-to-player') {\r\n                if (event.data.message) {\r\n                    if (event.data.message.command === 'tabs') {\r\n                        this.tabs = event.data.message.tabs;\r\n                    } else {\r\n                        for (let c of this.onMessageCallbacks) {\r\n                            c({\r\n                                data: event.data.message,\r\n                                tabId: event.data.tabId\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage(message, tabId) {\r\n        window.postMessage({sender: 'asbplayer', message: message, tabId: tabId}, '*');\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this.onMessageCallbacks.push(callback);\r\n    }\r\n\r\n    unsubscribe(callback) {\r\n        for (let i = this.onMessageCallbacks.length - 1; i >= 0; --i) {\r\n            if (callback === this.onMessageCallbacks[i]) {\r\n                this.onMessageCallbacks.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import React, { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'static',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    listContainer: {\r\n        position: 'relative',\r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden'\r\n    },\r\n    listItemIconRoot: {\r\n        minWidth: 20\r\n    }\r\n}));\r\n\r\nfunction Menu(props) {\r\n    const {open, anchorEl, onClose, onSelect, onClipAudio, item} = props;\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(item.text);\r\n        onClose();\r\n    }, [item, onClose]);\r\n\r\n    const handleJumpTo = useCallback(() => {\r\n        onSelect(item);\r\n        onClose();\r\n    }, [item, onSelect, onClose]);\r\n\r\n    const handleClipAudio = useCallback(() => {\r\n        onClipAudio(item);\r\n        onClose();\r\n    }, [item, onClipAudio, onClose]);\r\n\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Popover\r\n            disableEnforceFocus={true}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={onClose}\r\n            anchorOrigin={{\r\n                vertical: 'center',\r\n                horizontal: 'center',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}>\r\n            <List>\r\n                <ListItem button onClick={handleCopy}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Copy\" />\r\n                </ListItem>\r\n                <ListItem button onClick={handleJumpTo}>\r\n                    <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Jump To\" />\r\n                </ListItem>\r\n                {(item.videoFile || item.audioFile) && (\r\n                    <ListItem button onClick={handleClipAudio}>\r\n                        <ListItemText primaryTypographyProps={{variant: \"body2\"}} primary=\"Clip Audio\" />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default function CopyHistory(props) {\r\n    const classes = useStyles(props.drawerWidth)();\r\n    const scrollToBottomRefCallback =  useCallback(element => {\r\n        if (element) {\r\n            element.scrollIntoView();\r\n        }\r\n    }, []);\r\n    const [menuItem, setMenuItem] = useState();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [menuAnchorEl, setMenuAnchorEl] = useState();\r\n\r\n    const handleMenu = useCallback((e, item) => {\r\n        setMenuItem(item);\r\n        setMenuOpen(true);\r\n        setMenuAnchorEl(e.currentTarget);\r\n    }, []);\r\n\r\n    const handleMenuClosed = useCallback((e, item) => {\r\n        setMenuItem(null);\r\n        setMenuOpen(false);\r\n        setMenuAnchorEl(null);\r\n    }, []);\r\n\r\n    const handleDelete = useCallback((item) => {\r\n        props.onDelete(item);\r\n    }, [props]);\r\n\r\n    let content = null;\r\n\r\n    if (props.items.length > 0) {\r\n        content = [];\r\n        let lastSeenItemName = null;\r\n        let i = 0;\r\n\r\n        for (const item of props.items) {\r\n            if (lastSeenItemName === null || lastSeenItemName !== item.name) {\r\n                lastSeenItemName = item.name;\r\n                content.push((<ListSubheader disableSticky={true} key={item.name}>{item.name}</ListSubheader>));\r\n            }\r\n\r\n            const ref = i === props.items.length - 1 ? scrollToBottomRefCallback : null;\r\n\r\n            content.push((\r\n                <ListItem ref={ref} key={item.timestamp}>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={(e) => handleMenu(e, item)}>\r\n                            <MoreVertIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                    <ListItemText>{item.text}</ListItemText>\r\n                    <ListItemIcon classes={{root: classes.listItemIconRoot}}>\r\n                        <IconButton onClick={() => handleDelete(item)}>\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </ListItemIcon>\r\n                </ListItem>\r\n            ));\r\n\r\n            ++i;\r\n        }\r\n\r\n    } else {\r\n        content = (<ListItem>Copy history is empty.</ListItem>);\r\n    }\r\n\r\n    const list = (<List>{content}</List>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={props.open}\r\n                className={classes.drawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={props.onClose}>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.listContainer}>\r\n                    {list}\r\n                </div>\r\n            </Drawer>\r\n            <Menu\r\n                open={props.open && menuOpen}\r\n                anchorEl={menuAnchorEl}\r\n                item={menuItem}\r\n                onClose={handleMenuClosed}\r\n                onSelect={props.onSelect}\r\n                onClipAudio={props.onClipAudio}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default class BroadcastChannelVideoProtocol {\r\n\r\n    constructor(channelId) {\r\n        this.channel = new BroadcastChannel(channelId);\r\n        const that = this;\r\n        this.channel.onmessage = (event) => {\r\n            that.onMessage?.(event);\r\n        };\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.channel.postMessage(message);\r\n    }\r\n\r\n    close() {\r\n        this.channel.close();\r\n    }\r\n}","export default class ChromeTabVideoProtocol {\r\n\r\n    constructor(tabId, extension) {\r\n        this.tabId = tabId;\r\n        this.listener = (message) => {\r\n            if (message.tabId === tabId) {\r\n                this.onMessage?.({\r\n                    data: message.data\r\n                });\r\n            }\r\n        }\r\n\r\n        extension.subscribe(this.listener);\r\n        this.extension = extension;\r\n    }\r\n\r\n    postMessage(message) {\r\n        this.extension.sendMessage(message, this.tabId);\r\n    }\r\n\r\n    close() {\r\n        this.extension.unsubscribe(this.listener);\r\n    }\r\n}","export default class Clock {\r\n\r\n    constructor() {\r\n        this.accumulated = 0;\r\n        this.started = false;\r\n    }\r\n\r\n    time(max) {\r\n        if (this.started) {\r\n            return Math.min(max, this.accumulated + Date.now() - this.startTime);\r\n        }\r\n\r\n        return Math.min(max, this.accumulated);\r\n    }\r\n\r\n    stop() {\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        this.started = false;\r\n        this.accumulated += Date.now() - this.startTime;\r\n    }\r\n\r\n    start() {\r\n        this.startTime = Date.now();\r\n        this.started = true;\r\n    }\r\n\r\n    setTime(time) {\r\n        if (this.started) {\r\n            this.startTime = Date.now();\r\n            this.accumulated = time;\r\n        } else {\r\n            this.accumulated = time;\r\n        }\r\n    }\r\n\r\n    progress(max) {\r\n        return max === 0 ? 0 : Math.min(1, this.time(max) / max);\r\n    }\r\n}","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\n\r\nconst useControlStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50%',\r\n        bottom: 0\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row'\r\n    },\r\n    timeDisplay: {\r\n        color: theme.palette.action.active,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        height: '100%',\r\n        cursor: 'default',\r\n        fontSize: 20\r\n    },\r\n    offsetInput: {\r\n        height: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: 20,\r\n        marginLeft: 10,\r\n        width: 100,\r\n        color: theme.palette.text.secondary\r\n    },\r\n    paper: {\r\n        background: \"linear-gradient(to bottom, rgba(0,0,0,0), rgba(0, 0, 0, 0.5))\",\r\n        position: 'relative',\r\n        left: '-100%',\r\n        width: '200%',\r\n        zIndex: 10,\r\n        padding: 10\r\n    },\r\n    button: {\r\n        color: theme.palette.action.active\r\n    },\r\n    inactiveButton: {\r\n        color: theme.palette.action.disabled\r\n    },\r\n    progress: {\r\n        margin: 5\r\n    },\r\n    bar1Determinate: {\r\n        transition: 'none',\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n    }\r\n}));\r\n\r\nconst useProgressBarStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        background: 'rgba(30,30,30,0.7)',\r\n        height: 5,\r\n        marginBottom: 5,\r\n        cursor: 'pointer'\r\n    },\r\n    fillContainer: {\r\n        width: '100%'\r\n    },\r\n    fill: {\r\n        background: 'linear-gradient(to left, #e21e4a, #a92fff)',\r\n        height: '100%'\r\n    },\r\n    handleContainer: {\r\n        position: 'relative',\r\n        width: 0,\r\n        height: 0\r\n    },\r\n    handle: {\r\n        borderRadius: '50%',\r\n        width: 15,\r\n        height: 15,\r\n        background: 'white',\r\n        position: 'absolute',\r\n        top: 5,\r\n        left: 2,\r\n        filter: 'drop-shadow(3px 3px 3px rgba(0,0,0,0.3))'\r\n    }\r\n}));\r\n\r\nfunction displayTime(milliseconds) {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secondsInMinute = seconds % 60;\r\n    return String(minutes) + ':' + String(secondsInMinute).padStart(2, '0');\r\n}\r\n\r\nfunction elementWidth(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return rect.right - rect.left;\r\n}\r\n\r\nfunction ProgressBar(props) {\r\n    const classes = useProgressBarStyles();\r\n    const containerRef = useRef(null);\r\n\r\n    function handleClick(e) {\r\n        const rect = e.currentTarget.getBoundingClientRect();\r\n        const width = rect.right - rect.left;\r\n        const progress = (e.pageX - rect.left) / width;\r\n\r\n        props.onSeek(progress);\r\n    };\r\n\r\n    const fillStyle = {width: props.value + '%'};\r\n    const handleStyle = {marginLeft: containerRef.current ? elementWidth(containerRef.current) * props.value / 100 : 0};\r\n\r\n    return (\r\n        <div ref={containerRef} onClick={handleClick} className={classes.container}>\r\n            <div className={classes.fill} style={fillStyle}></div>\r\n            <div className={classes.handleAnchor}>\r\n                <div className={classes.handle} style={handleStyle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AudioTrackSelector(props) {\r\n    if (!props.audioTracks || props.audioTracks.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.audioTracks.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedAudioTrack}\r\n                button onClick={() => props.onAudioTrackSelected(t.id)}>\r\n                {t.language} {t.label}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TabSelector(props) {\r\n    if (!props.tabs || props.tabs.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    const list = props.tabs.map((t) => {\r\n        return (\r\n            <ListItem\r\n                key={t.id}\r\n                selected={t.id === props.selectedTab}\r\n                button onClick={() => props.onTabSelected(t.id)}>\r\n                {t.id} {t.title} {t.src}\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>{list}</List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MediaUnloader(props) {\r\n    return (\r\n        <div>\r\n            <Popover\r\n                disableEnforceFocus={true}\r\n                open={props.open}\r\n                anchorEl={props.anchorEl}\r\n                onClose={props.onClose}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <List>\r\n                    <ListItem button onClick={(e) => props.onUnload()}>\r\n                        Unload {props.file}\r\n                    </ListItem>\r\n                </List>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Controls(props) {\r\n    const classes = useControlStyles();\r\n    const {playing, length, offsetEnabled, displayLength, offsetValue, onAudioTrackSelected, onSeek, mousePositionRef, onPause, onPlay, onTabSelected, onUnloadAudio, onUnloadVideo, onOffsetChange} = props;\r\n    const [show, setShow] = useState(true);\r\n    const [audioTrackSelectorOpen, setAudioTrackSelectorOpen] = useState(false);\r\n    const [audioTrackSelectorAnchorEl, setAudioTrackSelectorAnchorEl] = useState();\r\n    const [tabSelectorOpen, setTabSelectorOpen] = useState(false);\r\n    const [tabSelectorAnchorEl, setTabSelectorAnchorEl] = useState();\r\n    const [audioUnloaderOpen, setAudioUnloaderOpen] = useState(false);\r\n    const [audioUnloaderAnchorEl, setAudioUnloaderAnchorEl] = useState();\r\n    const [videoUnloaderOpen, setVideoUnloaderOpen] = useState(false);\r\n    const [videoUnloaderAnchorEl, setVideoUnloaderAnchorEl] = useState();\r\n    const lastMousePositionRef = useRef({x: 0, y: 0});\r\n    const lastShowTimestampRef = useRef(Date.now());\r\n    const lastShowRef = useRef(true);\r\n    const forceShowRef = useRef(false);\r\n    const offsetInputRef = useRef();\r\n    const [, updateState] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        onSeek(progress);\r\n    }, [onSeek]);\r\n\r\n    function handleMouseOver(e) {\r\n        forceShowRef.current = true;\r\n    };\r\n\r\n    function handleMouseOut(e) {\r\n        forceShowRef.current = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const currentShow = Date.now() - lastShowTimestampRef.current < 2000\r\n                || Math.pow(mousePositionRef.current.x - lastMousePositionRef.current.x, 2)\r\n                    + Math.pow(mousePositionRef.current.y - lastMousePositionRef.current.y, 2) > 100\r\n                || forceShowRef.current\r\n                || offsetInputRef.current === document.activeElement\r\n\r\n            if (currentShow && !lastShowRef.current) {\r\n                lastShowTimestampRef.current = Date.now();\r\n                setShow(currentShow);\r\n            } else if (!currentShow && lastShowRef.current) {\r\n                setShow(currentShow);\r\n            }\r\n\r\n            lastShowRef.current = currentShow;\r\n            lastMousePositionRef.current.x = mousePositionRef.current.x;\r\n            lastMousePositionRef.current.y = mousePositionRef.current.y;\r\n        }, 100);\r\n        return () => clearInterval(interval);\r\n    }, [mousePositionRef, setShow, show]);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (event.keyCode === 32) {\r\n                event.preventDefault();\r\n\r\n                if (playing) {\r\n                    onPause();\r\n                } else {\r\n                    onPlay();\r\n                }\r\n            } else if (event.keyCode === 13) {\r\n                if (offsetInputRef.current === document.activeElement) {\r\n                    const offset = Number(offsetInputRef.current.value);\r\n\r\n                    if (Number.isNaN(offset)) {\r\n                        return;\r\n                    }\r\n\r\n                     onOffsetChange(offset * 1000);\r\n                     offsetInputRef.current.blur();\r\n                }\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [playing, onPause, onPlay, onOffsetChange]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            forceUpdate()\r\n        }, 100);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [forceUpdate]);\r\n\r\n    useEffect(() => {\r\n        if (offsetInputRef.current) {\r\n            offsetInputRef.current.value= offsetValue;\r\n        }\r\n    }, [offsetValue]);\r\n\r\n    const handleAudioTrackSelectorClosed = useCallback(() => {\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelectorOpened = useCallback((e) => {\r\n        setAudioTrackSelectorAnchorEl(e.currentTarget);\r\n        setAudioTrackSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        onAudioTrackSelected(id);\r\n        setAudioTrackSelectorAnchorEl(null);\r\n        setAudioTrackSelectorOpen(false);\r\n    }, [onAudioTrackSelected]);\r\n\r\n    const handleTabSelectorClosed = useCallback(() => {\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, []);\r\n\r\n    const handleTabSelectorOpened = useCallback((e) => {\r\n        setTabSelectorAnchorEl(e.currentTarget);\r\n        setTabSelectorOpen(true);\r\n    }, []);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        onTabSelected(id);\r\n        setTabSelectorAnchorEl(null);\r\n        setTabSelectorOpen(false);\r\n    }, [onTabSelected]);\r\n\r\n    const handleAudioUnloaderClosed = useCallback(() => {\r\n        setAudioUnloaderAnchorEl(null);\r\n        setAudioUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleAudioUnloaderOpened = useCallback((e) => {\r\n        setAudioUnloaderAnchorEl(e.currentTarget);\r\n        setAudioUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadAudio = useCallback(() => {\r\n        onUnloadAudio();\r\n        setAudioUnloaderOpen(false);\r\n    }, [onUnloadAudio]);\r\n\r\n    const handleVideoUnloaderClosed = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(null);\r\n        setVideoUnloaderOpen(false);\r\n    }, []);\r\n\r\n    const handleVideoUnloaderOpened = useCallback((e) => {\r\n        setVideoUnloaderAnchorEl(e.currentTarget);\r\n        setVideoUnloaderOpen(true);\r\n    }, []);\r\n\r\n    const handleUnloadVideo = useCallback(() => {\r\n        onUnloadVideo();\r\n        setVideoUnloaderOpen(false);\r\n    }, [onUnloadVideo]);\r\n\r\n    const progress = props.clock.progress(length);\r\n\r\n    return (\r\n        <div className={classes.container} onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n            <Fade in={show} timeout={200}>\r\n                <div className={classes.paper}>\r\n                    <ProgressBar\r\n                        onSeek={handleSeek}\r\n                        value={progress * 100}\r\n                    />\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item>\r\n                            <IconButton\r\n                                onClick={() => playing ? onPause() : onPlay()}\r\n                            >\r\n                                {playing\r\n                                    ? <PauseIcon className={classes.button} />\r\n                                    : <PlayArrowIcon className={classes.button} />}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <div className={classes.timeDisplay}>\r\n                                {displayTime(progress * length)} / {displayTime(displayLength || length)}\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {offsetEnabled && (\r\n                                <Input\r\n                                    inputRef={offsetInputRef}\r\n                                    disableUnderline={true}\r\n                                    className={classes.offsetInput}\r\n                                    placeholder={\"±\" + Number(0).toFixed(2)}\r\n                                />\r\n                            )}\r\n                        </Grid>\r\n                        <Grid style={{flexGrow: 1}} item>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.subtitlesToggle && (\r\n                                <IconButton onClick={(e) => props.onSubtitlesToggle()}>\r\n                                    <SubtitlesIcon className={props.subtitlesEnabled ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.videoFile && (\r\n                                <IconButton onClick={handleVideoUnloaderOpened}>\r\n                                    <VideocamIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioFile && (\r\n                                <IconButton onClick={handleAudioUnloaderOpened}>\r\n                                    <AudiotrackIcon className={classes.button} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.audioTracks && props.audioTracks.length > 1 && (\r\n                                <IconButton onClick={handleAudioTrackSelectorOpened}>\r\n                                    <QueueMusicIcon className={classes.button}  />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {props.tabs && props.tabs.length > 0 && (\r\n                                <IconButton onClick={handleTabSelectorOpened}>\r\n                                    <VideocamIcon className={props.selectedTab ? classes.button : classes.inactiveButton} />\r\n                                </IconButton>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Fade>\r\n            <TabSelector\r\n                open={tabSelectorOpen && show}\r\n                anchorEl={tabSelectorAnchorEl}\r\n                tabs={props.tabs}\r\n                selectedTab={props.selectedTab}\r\n                onClose={handleTabSelectorClosed}\r\n                onTabSelected={handleTabSelected}\r\n            />\r\n            <AudioTrackSelector\r\n                open={audioTrackSelectorOpen && show}\r\n                anchorEl={audioTrackSelectorAnchorEl}\r\n                audioTracks={props.audioTracks}\r\n                selectedAudioTrack={props.selectedAudioTrack}\r\n                onClose={handleAudioTrackSelectorClosed}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n            />\r\n            <MediaUnloader\r\n                open={audioUnloaderOpen}\r\n                anchorEl={audioUnloaderAnchorEl}\r\n                file={props.audioFile}\r\n                onClose={handleAudioUnloaderClosed}\r\n                onUnload={handleUnloadAudio}\r\n            />\r\n            <MediaUnloader\r\n                open={videoUnloaderOpen}\r\n                anchorEl={videoUnloaderAnchorEl}\r\n                file={props.videoFile}\r\n                onClose={handleVideoUnloaderClosed}\r\n                onUnload={handleUnloadVideo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","export default class MediaAdapter {\r\n\r\n    constructor(ref) {\r\n        this.ref = ref;\r\n        this.readyResolves = [];\r\n    }\r\n\r\n    seek(time) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this.ref.current.currentTime = time;\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.ref.current) {\r\n                this._onMediaCanPlay(() => resolve());\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    }\r\n\r\n    _onMediaCanPlay(callback) {\r\n        if (this.ref.readyState === 4) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (this.ref.current && !this.ref.current.oncanplay) {\r\n            this.ref.current.oncanplay = (e) => {\r\n                for (const resolve of this.readyResolves) {\r\n                    resolve();\r\n                }\r\n\r\n                this.readyResolves.length = 0;\r\n                this.ref.current.oncanplay = null;\r\n            }\r\n        }\r\n\r\n\r\n        this.readyResolves.push(callback);\r\n    }\r\n\r\n    play() {\r\n        this.ref.current?.play();\r\n    }\r\n\r\n    pause() {\r\n        this.ref.current?.pause();\r\n    }\r\n}","import { useCallback, useEffect, useState, useMemo, useRef, createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { keysAreEqual } from './Util';\r\nimport Alert from './Alert';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useSubtitlePlayerStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    table: {\r\n        backgroundColor: theme.palette.background.default,\r\n        marginBottom: 75 // so the last row doesn't collide with controls\r\n    },\r\n    selectedSubtitle: {\r\n        fontSize: 20\r\n    },\r\n    subtitle: {\r\n        fontSize: 20,\r\n        width: '100%'\r\n    },\r\n    timestamp: {\r\n        fontSize: 14,\r\n        color: '#aaaaaa',\r\n        textAlign: 'right'\r\n    },\r\n    copyButton: {\r\n        textAlign: 'right',\r\n        padding: 0\r\n    },\r\n    noSubtitles: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function SubtitlePlayer(props) {\r\n    const {clock, onSeek, onCopy, playing, subtitles, length, jumpToSubtitle} = props;\r\n    const clockRef = useRef();\r\n    clockRef.current = clock;\r\n    const subtitleListRef = useRef();\r\n    subtitleListRef.current = subtitles;\r\n    const subtitleRefs = useMemo(() => subtitles\r\n        ? Array(subtitles.length).fill().map((_, i) => createRef())\r\n        : [], [subtitles]);\r\n    const subtitleRefsRef = useRef();\r\n    subtitleRefsRef.current = subtitleRefs;\r\n    const [selectedSubtitleIndexes, setSelectedSubtitleIndexes] = useState({});\r\n    const selectedSubtitleIndexesRef = useRef({});\r\n    const lengthRef = useRef();\r\n    lengthRef.current = props.length;\r\n    const [copyAlertOpen, setCopyAlertOpen] = useState(false);\r\n    const [lastCopiedSubtitle, setLastCopiedSubtitle] = useState(null);\r\n    const lastScrollTimestampRef = useRef(0);\r\n    const requestAnimationRef = useRef();\r\n    const tableRef = createRef();\r\n    const classes = useSubtitlePlayerStyles();\r\n\r\n    // This effect should be scheduled only once as re-scheduling seems to cause performance issues.\r\n    // Therefore all of the state it operates on is contained in refs.\r\n    useEffect(() => {\r\n        const update = (time) => {\r\n            const subtitles = subtitleListRef.current || [];\r\n            const subtitleRefs = subtitleRefsRef.current;\r\n            const length = lengthRef.current;\r\n            const clock = clockRef.current;\r\n            const progress = clock.progress(lengthRef.current);\r\n\r\n            let smallestIndex = Number.MAX_SAFE_INTEGER;\r\n            let fallbackIndex = -1;\r\n            const currentSubtitleIndexes = {};\r\n\r\n            for (let i = subtitles.length - 1; i >= 0; --i) {\r\n                const s = subtitles[i];\r\n                const start = s.start / length;\r\n                const end = s.end / length;\r\n\r\n                if (progress >= start) {\r\n                    if (progress < end) {\r\n                        smallestIndex = i < smallestIndex ? i : smallestIndex;\r\n                        currentSubtitleIndexes[i] = true;\r\n                    }\r\n\r\n                    if (fallbackIndex === -1) {\r\n                        fallbackIndex = i;\r\n                    }\r\n                } else if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Attempt to highlight *something* if no subtitles were found at the current timestamp\r\n            if (smallestIndex === Number.MAX_SAFE_INTEGER && fallbackIndex !== -1) {\r\n                currentSubtitleIndexes[fallbackIndex] = true;\r\n            }\r\n\r\n            if (!keysAreEqual(currentSubtitleIndexes, selectedSubtitleIndexesRef.current)) {\r\n                selectedSubtitleIndexesRef.current = currentSubtitleIndexes;\r\n                setSelectedSubtitleIndexes(currentSubtitleIndexes);\r\n\r\n                if (smallestIndex !== Number.MAX_SAFE_INTEGER) {\r\n                    const scrollToSubtitleRef = subtitleRefs[smallestIndex];\r\n                    const allowScroll = Date.now() - lastScrollTimestampRef.current > 5000;\r\n\r\n                    if (scrollToSubtitleRef?.current && allowScroll) {\r\n                        scrollToSubtitleRef.current.scrollIntoView({\r\n                            block: \"center\",\r\n                            inline: \"nearest\",\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            requestAnimationRef.current = requestAnimationFrame(update);\r\n        };\r\n\r\n        requestAnimationRef.current = requestAnimationFrame(update);\r\n\r\n        return () => cancelAnimationFrame(requestAnimationRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function handleKey(event) {\r\n            if (!subtitles || subtitles.length === 0) {\r\n                return;\r\n            }\r\n\r\n            let newSubtitleIndex;\r\n            const selected = Object.keys(selectedSubtitleIndexes);\r\n\r\n            if (event.keyCode === 37) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.max(0, Math.min(...selected) - 1)\r\n                    : -1;\r\n            } else if (event.keyCode === 39) {\r\n                newSubtitleIndex = selected.length > 0\r\n                    ? Math.min(subtitles.length - 1, Math.max(...selected) + 1)\r\n                    : -1;\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            if (newSubtitleIndex !== -1) {\r\n                event.preventDefault();\r\n                const progress = subtitles[newSubtitleIndex].start / length;\r\n                onSeek(progress, false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleKey);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKey);\r\n        };\r\n    }, [onSeek, selectedSubtitleIndexes, subtitles, length]);\r\n\r\n    useEffect(() => {\r\n        function handleScroll(event) {\r\n            lastScrollTimestampRef.current = Date.now();\r\n        };\r\n\r\n        const table = tableRef.current;\r\n        table?.addEventListener('wheel', handleScroll);\r\n\r\n        return () => {\r\n            table?.removeEventListener('wheel', handleScroll);\r\n        };\r\n    }, [tableRef, lastScrollTimestampRef]);\r\n\r\n    useEffect(() => {\r\n        if (!jumpToSubtitle || !subtitles) {\r\n            return;\r\n        }\r\n\r\n        let jumpToIndex = -1;\r\n        let i = 0;\r\n\r\n        for (let s of subtitles) {\r\n            if (s.originalStart === jumpToSubtitle.originalStart && s.text === jumpToSubtitle.text) {\r\n                jumpToIndex = i;\r\n                break;\r\n            }\r\n\r\n            ++i;\r\n        }\r\n\r\n        if (jumpToIndex !== -1) {\r\n            subtitleRefs[jumpToIndex].current.scrollIntoView({\r\n                 block: \"center\",\r\n                 inline: \"nearest\",\r\n                 behavior: \"smooth\"\r\n            });\r\n        }\r\n    }, [jumpToSubtitle, subtitles, subtitleRefs]);\r\n\r\n    const handleClick = useCallback((subtitleIndex) => {\r\n        const progress = subtitles[subtitleIndex].start / length;\r\n        onSeek(progress, !playing && subtitleIndex in selectedSubtitleIndexes);\r\n    }, [subtitles, length, playing, onSeek, selectedSubtitleIndexes]);\r\n\r\n    const handleCopy = useCallback((event, subtitleIndex) => {\r\n        event.stopPropagation();\r\n        const subtitle = subtitles[subtitleIndex];\r\n        const text = subtitle.text;\r\n        navigator.clipboard.writeText(text);\r\n        onCopy(subtitle);\r\n        setLastCopiedSubtitle(text);\r\n        setCopyAlertOpen(true);\r\n    }, [subtitles, onCopy]);\r\n\r\n    const handleCopyAlertClosed = useCallback(() => {\r\n        setCopyAlertOpen(false);\r\n    }, [setCopyAlertOpen]);\r\n\r\n    let subtitleTable;\r\n\r\n    if (!subtitles) {\r\n        subtitleTable = (\r\n            <div className={classes.noSubtitles}>\r\n                <Typography>\r\n                    Drag and drop srt, ass, mp3, or mkv files.\r\n                </Typography>\r\n                <Typography>\r\n                    Install the <Link color=\"secondary\" target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/killergerbah/asbplayer/releases/tag/v0.2.0\">extension</Link> to sync subtitles with videos in other tabs.\r\n                </Typography>\r\n            </div>\r\n        );\r\n    } else if (subtitles.length === 0) {\r\n        subtitleTable = null;\r\n    } else {\r\n        subtitleTable = (\r\n            <TableContainer className={classes.table} ref={tableRef}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {subtitles.map((s, index) => {\r\n                            const selected = index in selectedSubtitleIndexes;\r\n                            const className = selected ? classes.selectedSubtitle : classes.subtitle;\r\n\r\n                            if (s.start < 0 && s.end < 0) {\r\n                                return null;\r\n                            }\r\n\r\n                            return (\r\n                               <TableRow\r\n                                   onClick={(e) => handleClick(index)}\r\n                                   key={index}\r\n                                   ref={subtitleRefs[index]}\r\n                                   selected={selected}\r\n                               >\r\n                                    <TableCell className={className}>\r\n                                        {s.text}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.copyButton}>\r\n                                        <IconButton onClick={(e) => handleCopy(e, index)}>\r\n                                            <FileCopy />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.timestamp}>\r\n                                        {s.displayTime}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper square elevation={0} className={classes.container}>\r\n            {subtitleTable}\r\n            <Alert open={copyAlertOpen} onClose={handleCopyAlertClosed} autoHideDuration={3000} severity=\"success\">\r\n                Copied {lastCopiedSubtitle}\r\n            </Alert>\r\n        </Paper>\r\n    );\r\n}\r\n","export function arrayEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0; i < a.length; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function keysAreEqual(a, b) {\r\n    for (let key in a) {\r\n        if (!(key in b)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    for (let key in b) {\r\n        if (!(key in a)) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}","export default class VideoChannel {\r\n\r\n    constructor(protocol) {\r\n        this.protocol = protocol;\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.isReady = false;\r\n        this.readyState = 0;\r\n        this.readyCallbacks = [];\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.exitCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.protocol.onMessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'ready':\r\n                    that.duration = event.data.duration;\r\n                    that.isReady = true;\r\n                    that.audioTracks = event.data.audioTracks;\r\n                    that.selectedAudioTrack = event.data.selectedAudioTrack;\r\n                    that.readyState = 4;\r\n                    that.time = event.data.currentTime;\r\n\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.paused);\r\n                    }\r\n                    break;\r\n                case 'readyState':\r\n                    that.readyState = event.data.value;\r\n                    if (that.readyState === 4) {\r\n                        that.oncanplay?.();\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback(event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value, event.data.echo);\r\n                    }\r\n                    break;\r\n                case 'exit':\r\n                    for (let callback of that.exitCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.readyState = 3;\r\n        this.protocol.postMessage({command: 'currentTime', value: this.time});\r\n    }\r\n\r\n    onReady(callback) {\r\n        if (this.isReady) {\r\n            callback();\r\n        }\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onExit(callback) {\r\n        this.exitCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration) {\r\n        this.protocol.postMessage({command: 'ready', duration: duration});\r\n    }\r\n\r\n    init() {\r\n        this.protocol.postMessage({command: 'init'});\r\n    }\r\n\r\n    play() {\r\n        this.protocol.postMessage({command: 'play'});\r\n    }\r\n\r\n    pause() {\r\n        this.protocol.postMessage({command: 'pause'});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.protocol.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    subtitles(subtitles) {\r\n        this.protocol.postMessage({command: 'subtitles', value: subtitles});\r\n    }\r\n\r\n    close() {\r\n        this.protocol.postMessage({command: 'close'});\r\n        this.protocol.close();\r\n    }\r\n}","import { useEffect, useState, useMemo, useCallback, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BroadcastChannelVideoProtocol from './BroadcastChannelVideoProtocol';\r\nimport ChromeTabVideoProtocol from './ChromeTabVideoProtocol';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport MediaAdapter from './MediaAdapter';\r\nimport SubtitlePlayer from './SubtitlePlayer';\r\nimport VideoChannel from './VideoChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 'calc(100vh - 64px)',\r\n        position: 'relative',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nfunction timeDuration(milliseconds, totalMilliseconds) {\r\n    if (milliseconds < 0) {\r\n        return timeDuration(0, totalMilliseconds);\r\n    }\r\n\r\n    const ms = milliseconds % 1000;\r\n    milliseconds = (milliseconds - ms) / 1000;\r\n    const secs = milliseconds % 60;\r\n    milliseconds = (milliseconds - secs) / 60;\r\n    const mins = milliseconds % 60;\r\n\r\n    if (totalMilliseconds >= 3600000) {\r\n        const hrs = (milliseconds - mins) / 60;\r\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n    }\r\n\r\n    return pad(mins) + ':' + pad(secs) + '.' + padEnd(ms);\r\n}\r\n\r\nfunction pad(n) {\r\n    return String(n).padStart(2, '0');\r\n}\r\n\r\nfunction padEnd(n) {\r\n    return String(n).padEnd(3, '0');\r\n}\r\n\r\nfunction trackLength(audioRef, videoRef, subtitles, useOffset) {\r\n    let subtitlesLength;\r\n    if (subtitles && subtitles.length > 0) {\r\n        if (useOffset) {\r\n            subtitlesLength = subtitles[subtitles.length - 1].end;\r\n        } else {\r\n            subtitlesLength = subtitles[subtitles.length - 1].originalEnd;\r\n        }\r\n    } else {\r\n        subtitlesLength = 0;\r\n    }\r\n\r\n    const audioLength = audioRef.current && audioRef.current.duration\r\n        ? 1000 * audioRef.current.duration\r\n        : 0;\r\n\r\n    const videoLength = videoRef.current && videoRef.current.duration\r\n        ? 1000 * videoRef.current.duration\r\n        : 0;\r\n\r\n    return Math.max(videoLength, Math.max(subtitlesLength, audioLength));\r\n}\r\n\r\nexport default function Player(props) {\r\n    const { api, extension, onError, onUnloadVideo } = props;\r\n    const {subtitleFile, audioFile, audioFileUrl, videoFile, videoFileUrl} = props.sources;\r\n    const [tab, setTab] = useState();\r\n    const [subtitles, setSubtitles] = useState();\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [, updateState] = useState();\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [offsetValue, setOffsetValue] = useState();\r\n    const forceUpdate = useCallback(() => updateState({}), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const audioRef = useRef();\r\n    const videoRef = useRef();\r\n    const mediaAdapter = useMemo(() => {\r\n        if (audioFileUrl) {\r\n            return new MediaAdapter(audioRef);\r\n        } else if (videoFileUrl || tab) {\r\n            return new MediaAdapter(videoRef);\r\n        }\r\n\r\n        return new MediaAdapter({});\r\n    }, [audioFileUrl, videoFileUrl, tab]);\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const classes = useStyles();\r\n    const [availableTabs, setAvailableTabs] = useState([]);\r\n    const lengthRef = useRef(0);\r\n    lengthRef.current = trackLength(audioRef, videoRef, subtitles, true);\r\n\r\n    const seek = useCallback((progress, clock, echo, callback) => {\r\n        const time = progress * lengthRef.current;\r\n        clock.setTime(time);\r\n        forceUpdate();\r\n\r\n        if (echo) {\r\n            mediaAdapter.seek(time / 1000).then((v) => callback());\r\n        } else {\r\n            callback();\r\n        }\r\n    }, [forceUpdate, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        videoRef.current?.close();\r\n        videoRef.current = null;\r\n        clock.setTime(0);\r\n        clock.stop();\r\n        setPlaying(false);\r\n        setAudioTracks(null);\r\n        setSelectedAudioTrack(null);\r\n        setOffsetValue(null);\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.pause();\r\n\r\n        let subtitlesPromise;\r\n\r\n        if (subtitleFile) {\r\n            subtitlesPromise = api.subtitles(subtitleFile)\r\n                .then(nodes => {\r\n                    const length = nodes.length > 0 ? nodes[nodes.length - 1].end : 0;\r\n\r\n                    const subtitles = nodes.map((s) => {\r\n                        return {\r\n                            text: s.text,\r\n                            start: s.start,\r\n                            originalStart: s.start,\r\n                            end: s.end,\r\n                            originalEnd: s.end,\r\n                            displayTime: timeDuration(s.start, length)};\r\n                    });\r\n\r\n                    setSubtitles(subtitles);\r\n                    return subtitles;\r\n                })\r\n                .catch(e => onError(e));\r\n        } else {\r\n            subtitlesPromise = new Promise((resolve, reject) => resolve());\r\n        }\r\n\r\n        if (audioFileUrl) {\r\n            mediaAdapter.onReady().then(() => forceUpdate());\r\n        } else if (videoFileUrl || tab) {\r\n            subtitlesPromise.then(subtitles => {\r\n                let channel;\r\n\r\n                if (videoFileUrl) {\r\n                    const channelId = String(Date.now());\r\n                    channel = new VideoChannel(new BroadcastChannelVideoProtocol(channelId));\r\n                    window.open(\r\n                        process.env.PUBLIC_URL + '/?video=' + encodeURIComponent(videoFileUrl) + '&channel=' + channelId,\r\n                        'asbplayer-video-' + videoFileUrl,\r\n                        \"resizable,width=800,height=450\"\r\n                    );\r\n                } else if (tab) {\r\n                    channel = new VideoChannel(new ChromeTabVideoProtocol(tab.id, extension));\r\n                    channel.init();\r\n                }\r\n\r\n                videoRef.current = channel;\r\n\r\n                channel.onReady((paused) => {\r\n                    lengthRef.current = trackLength(audioRef, videoRef, subtitles);\r\n                    channel.ready(lengthRef.current);\r\n\r\n                    if (subtitles) {\r\n                        channel.subtitles(subtitles);\r\n                    }\r\n\r\n                    channel.onPlay((echo) => {\r\n                        play(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onPause((echo) => {\r\n                        pause(clock, mediaAdapter, echo);\r\n                    });\r\n\r\n                    channel.onCurrentTime((currentTime, echo) => {\r\n                        const progress = currentTime * 1000 / lengthRef.current;\r\n\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        seek(progress, clock, echo, (v) => {\r\n                            if (playingRef.current) {\r\n                                clock.start();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    channel.onAudioTrackSelected((id) => {\r\n                        if (playingRef.current) {\r\n                            clock.stop();\r\n                        }\r\n\r\n                        mediaAdapter.onReady()\r\n                            .then(() => {\r\n                                if (playingRef.current) {\r\n                                    clock.start();\r\n                                }\r\n                            });\r\n\r\n                        setSelectedAudioTrack(id);\r\n                    });\r\n\r\n                    channel.onExit(() => {\r\n                        onUnloadVideo(videoFileUrl);\r\n                    });\r\n\r\n                    if (channel.audioTracks && channel.audioTracks.length > 1) {\r\n                        setAudioTracks(videoRef.current.audioTracks);\r\n                        setSelectedAudioTrack(videoRef.current.selectedAudioTrack);\r\n                    } else {\r\n                        setAudioTracks(null);\r\n                        setSelectedAudioTrack(null);\r\n                    }\r\n\r\n                    clock.setTime(videoRef.current.currentTime * 1000);\r\n\r\n                    if (paused) {\r\n                        clock.stop();\r\n                    } else {\r\n                        clock.start();\r\n                    }\r\n\r\n                    setPlaying(!paused);\r\n                });\r\n            });\r\n        }\r\n    }, [api, extension, clock, mediaAdapter, seek, onError, onUnloadVideo, subtitleFile, audioFileUrl, videoFileUrl, tab, forceUpdate]);\r\n\r\n    function play(clock, mediaAdapter, echo) {\r\n        setPlaying(true);\r\n        clock.start();\r\n\r\n        if (echo) {\r\n            mediaAdapter.play();\r\n        }\r\n    };\r\n\r\n    function pause(clock, mediaAdapter, echo) {\r\n        setPlaying(false);\r\n        clock.stop();\r\n\r\n        if (echo) {\r\n            mediaAdapter.pause();\r\n        }\r\n    };\r\n\r\n    const handlePlay = useCallback(() => {\r\n        play(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        pause(clock, mediaAdapter, true);\r\n    }, [clock, mediaAdapter]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (playingRef.current) {\r\n                clock.start();\r\n            }\r\n        });\r\n    }, [clock, seek]);\r\n\r\n    const handleSeekToSubtitle = useCallback((progress, shouldPlay) => {\r\n        if (!shouldPlay) {\r\n            pause(clock, mediaAdapter, true);\r\n        }\r\n\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        seek(progress, clock, true, () => {\r\n            if (shouldPlay && !playingRef.current) {\r\n                // play method will start the clock again\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, seek, mediaAdapter]);\r\n\r\n    const handleCopy = useCallback((subtitle) => {\r\n        props.onCopy(\r\n            subtitle,\r\n            audioFile,\r\n            videoFile,\r\n            subtitleFile,\r\n            selectedAudioTrack\r\n        );\r\n    }, [props, audioFile, videoFile, subtitleFile, selectedAudioTrack]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (videoRef.current) {\r\n            videoRef.current.audioTrackSelected(id);\r\n        }\r\n\r\n        pause(clock, mediaAdapter, true);\r\n\r\n        seek(0, clock, true, () => {\r\n            if (playingRef.current) {\r\n                play(clock, mediaAdapter, true);\r\n            }\r\n        });\r\n    }, [clock, mediaAdapter, seek]);\r\n\r\n    const handleTabSelected = useCallback((id) => {\r\n        const tab = availableTabs.filter(t => t.id === id)[0];\r\n        setTab(tab);\r\n    }, [availableTabs]);\r\n\r\n    const handleOffsetChange = useCallback((o) => {\r\n        const offset = Math.max(-lengthRef.current ?? 0, o);\r\n        const length = subtitles.length > 0 ? subtitles[subtitles.length - 1].end + offset : 0;\r\n\r\n        const newSubtitles = subtitles.map(s => ({\r\n            text: s.text,\r\n            start: s.originalStart + offset,\r\n            originalStart: s.originalStart,\r\n            end: s.originalEnd + offset,\r\n            originalEnd: s.originalEnd,\r\n            displayTime: timeDuration(s.originalStart + offset, length)\r\n        }));\r\n\r\n        setSubtitles(newSubtitles);\r\n        videoRef.current?.subtitles(newSubtitles);\r\n\r\n        const offsetSeconds = offset / 1000;\r\n        const value = offsetSeconds >= 0 ? \"+\" + offsetSeconds.toFixed(2) : String(offsetSeconds.toFixed(2));\r\n        setOffsetValue(value);\r\n    }, [subtitles]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const length = lengthRef.current;\r\n            const progress = clock.progress(length);\r\n\r\n            if (progress >= 1) {\r\n                clock.setTime(0);\r\n                clock.stop();\r\n                mediaAdapter.pause();\r\n                setPlaying(false);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [clock, subtitles, mediaAdapter]);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (props.extension.tabs.length !== availableTabs.length) {\r\n                setAvailableTabs(props.extension.tabs);\r\n            } else {\r\n                let update = false;\r\n\r\n                for (let i = 0; i < availableTabs.length; ++i) {\r\n                    const t1 = availableTabs[i];\r\n                    const t2 = props.extension.tabs[i];\r\n                    if (t1.id !== t2.id\r\n                        || t1.title !== t2.title\r\n                        || t1.src !== t2.src) {\r\n                        update = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (update) {\r\n                    setAvailableTabs(props.extension.tabs);\r\n                }\r\n            }\r\n\r\n            let selectedTabMissing = tab && props.extension.tabs.filter(t => t.id === tab.id && t.src === tab.src).length === 0;\r\n\r\n            if (selectedTabMissing) {\r\n                setTab(null);\r\n                props.onError('Lost connection with tab ' + tab.id + ' ' + tab.title);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [availableTabs, tab, props]);\r\n\r\n    useEffect(() => {\r\n        setTab(null);\r\n    }, [audioFile, videoFile]);\r\n\r\n    const length = lengthRef.current;\r\n    const loaded = audioFileUrl || videoFileUrl || subtitles;\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={handleMouseMove}\r\n            className={classes.root}\r\n        >\r\n            {loaded && (<Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                displayLength={trackLength(audioRef, videoRef, subtitles, false)}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                tabs={!videoFileUrl && !audioFileUrl && availableTabs}\r\n                selectedTab={tab && tab.id}\r\n                audioFile={audioFile?.name}\r\n                videoFile={videoFile?.name}\r\n                offsetEnabled={true}\r\n                offsetValue={offsetValue}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onTabSelected={handleTabSelected}\r\n                onUnloadAudio={() => props.onUnloadAudio(audioFileUrl)}\r\n                onUnloadVideo={() => props.onUnloadVideo(videoFileUrl)}\r\n                onOffsetChange={handleOffsetChange}\r\n            />)}\r\n            <SubtitlePlayer\r\n                playing={playing}\r\n                subtitles={subtitles}\r\n                clock={clock}\r\n                length={length}\r\n                jumpToSubtitle={props.jumpToSubtitle}\r\n                onSeek={handleSeekToSubtitle}\r\n                onCopy={handleCopy}\r\n            />\r\n            <audio ref={audioRef} src={audioFileUrl} />\r\n        </div>\r\n    );\r\n}","export default class PlayerChannel {\r\n\r\n    constructor(channel) {\r\n        this.channel = new BroadcastChannel(channel);\r\n        this.time = 0;\r\n        this.duration = 0;\r\n        this.playCallbacks = [];\r\n        this.pauseCallbacks = [];\r\n        this.currentTimeCallbacks = [];\r\n        this.audioTrackSelectedCallbacks = [];\r\n        this.closeCallbacks = [];\r\n        this.readyCallbacks = [];\r\n        this.subtitlesCallbacks = [];\r\n\r\n        const that = this;\r\n\r\n        this.channel.onmessage = (event) => {\r\n            switch(event.data.command) {\r\n                case 'init':\r\n                    // ignore, this is for the chrome extension\r\n                    break;\r\n                case 'ready':\r\n                    for (let callback of that.readyCallbacks) {\r\n                        callback(event.data.duration);\r\n                    }\r\n                    break;\r\n                case 'play':\r\n                    for (let callback of that.playCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'pause':\r\n                    for (let callback of that.pauseCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'currentTime':\r\n                    for (let callback of that.currentTimeCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                case 'audioTrackSelected':\r\n                    for (let callback of that.audioTrackSelectedCallbacks) {\r\n                        callback(event.data.id);\r\n                    }\r\n                    break;\r\n                case 'close':\r\n                    for (let callback of that.closeCallbacks) {\r\n                        callback();\r\n                    }\r\n                    break;\r\n                case 'subtitles':\r\n                    for (let callback  of that.subtitlesCallbacks) {\r\n                        callback(event.data.value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.error('Unrecognized event ' + event.data.command);\r\n            }\r\n        };\r\n    }\r\n\r\n    get currentTime() {\r\n        return this.time;\r\n    }\r\n\r\n    set currentTime(value) {\r\n        this.time = value;\r\n        this.channel.postMessage({command: 'currentTime', value: this.time, echo: true});\r\n    }\r\n\r\n    onPlay(callback) {\r\n        this.playCallbacks.push(callback);\r\n    }\r\n\r\n    onPause(callback) {\r\n        this.pauseCallbacks.push(callback);\r\n    }\r\n\r\n    onCurrentTime(callback) {\r\n        this.currentTimeCallbacks.push(callback);\r\n    }\r\n\r\n    onAudioTrackSelected(callback) {\r\n        this.audioTrackSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    onClose(callback) {\r\n        this.closeCallbacks.push(callback);\r\n    }\r\n\r\n    onReady(callback) {\r\n        this.readyCallbacks.push(callback);\r\n    }\r\n\r\n    onSubtitles(callback) {\r\n        this.subtitlesCallbacks.push(callback);\r\n    }\r\n\r\n    ready(duration, paused, audioTracks, selectedAudioTrack) {\r\n        this.channel.postMessage({\r\n            command: 'ready',\r\n            duration: duration,\r\n            paused: paused,\r\n            currentTime: 0,\r\n            audioTracks: audioTracks,\r\n            selectedAudioTrack: selectedAudioTrack\r\n        });\r\n    }\r\n\r\n    readyState(readyState) {\r\n        this.channel.postMessage({command: 'readyState', value: readyState});\r\n    }\r\n\r\n    play() {\r\n        this.channel.postMessage({command: 'play', echo: true});\r\n    }\r\n\r\n    pause() {\r\n        this.channel.postMessage({command: 'pause', echo: true});\r\n    }\r\n\r\n    audioTrackSelected(id) {\r\n        this.channel.postMessage({command: 'audioTrackSelected', id: id});\r\n    }\r\n\r\n    close() {\r\n        if (this.channel) {\r\n            this.channel.postMessage({command: 'exit'});\r\n            this.channel.close();\r\n            this.channel = null;\r\n        }\r\n    }\r\n}","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { arrayEquals } from './Util';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport PlayerChannel from './PlayerChannel';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'black',\r\n        width: '100%',\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    video: {\r\n        objectFit: \"cover\",\r\n        position: \"absolute\",\r\n        width: \"auto\",\r\n        height: \"100%\"\r\n    },\r\n    subtitle: {\r\n        position: 'absolute',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        width: '100%',\r\n        bottom: 100,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        textShadow: '0 0 2px black, 0 0 2px black, 0 0 2px black, 0 0 2px black',\r\n        fontSize: 36\r\n    }\r\n});\r\n\r\nfunction notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack) {\r\n    if (window.outerWidth && element.videoWidth > 0 && element.videoHeight > 0) {\r\n        const availWidth = window.screen.availWidth - (window.outerWidth - window.innerWidth);\r\n        const availHeight = window.screen.availHeight - (window.outerHeight - window.innerHeight);\r\n        const resizeRatio = Math.min(1, Math.min(availWidth / element.videoWidth, availHeight / element.videoHeight));\r\n\r\n        window.resizeTo(\r\n            resizeRatio * element.videoWidth + (window.outerWidth - window.innerWidth),\r\n            resizeRatio * element.videoHeight + (window.outerHeight - window.innerHeight)\r\n        );\r\n    }\r\n\r\n    let tracks;\r\n    let selectedTrack;\r\n\r\n    if (element.audioTracks) {\r\n        tracks = [];\r\n\r\n        for (let t of element.audioTracks) {\r\n            tracks.push({\r\n                id: t.id,\r\n                label: t.label,\r\n                language: t.language\r\n            });\r\n\r\n            if (t.enabled) {\r\n                selectedTrack = t.id;\r\n            }\r\n        }\r\n    } else {\r\n        tracks = null;\r\n        selectedTrack = null;\r\n    }\r\n\r\n    setAudioTracks(tracks);\r\n    setSelectedAudioTrack(selectedTrack);\r\n    playerChannel.ready(element.duration, element.paused, tracks, selectedTrack);\r\n}\r\n\r\nfunction errorMessage(element) {\r\n    let error;\r\n    switch (element.error.code) {\r\n        case 1:\r\n            error = \"Aborted\";\r\n            break;\r\n        case 2:\r\n            error = \"Network error\";\r\n            break;\r\n        case 3:\r\n            error = \"Decoding error\";\r\n            break;\r\n        case 4:\r\n            error = \"Source not supported\";\r\n            break;\r\n        default:\r\n            error = \"Unknown error\";\r\n            break;\r\n    }\r\n\r\n    return error + \": \" + (element.error.message || \"<details missing>\");\r\n}\r\n\r\nexport default function VideoPlayer(props) {\r\n    const classes = useStyles();\r\n    const { videoFile, channel } = useMemo(() => {\r\n        const params = new URLSearchParams(window.location.search);\r\n        return {\r\n            videoFile: params.get('video'),\r\n            channel: params.get('channel')\r\n        };\r\n    }, []);\r\n    const playerChannel = useMemo(() => new PlayerChannel(channel), [channel]);\r\n    const [playing, setPlaying] = useState(false);\r\n    const playingRef = useRef();\r\n    playingRef.current = playing;\r\n    const [length, setLength] = useState(0);\r\n    const [audioTracks, setAudioTracks] = useState();\r\n    const [selectedAudioTrack, setSelectedAudioTrack] = useState();\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [showSubtitles, setShowSubtitles] = useState([]);\r\n    const [subtitlesEnabled, setSubtitlesEnabled] = useState(true);\r\n    const showSubtitlesRef = useRef([]);\r\n    showSubtitlesRef.current = showSubtitles;\r\n    const clock = useMemo(() => new Clock(), []);\r\n    const mousePositionRef = useRef({x:0, y:0});\r\n    const videoRef = useRef();\r\n    const videoRefCallback = useCallback(element => {\r\n        if (element) {\r\n            videoRef.current = element;\r\n\r\n            if (element.readyState === 4) {\r\n                notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n            } else {\r\n                element.onloadeddata = (event) => {\r\n                    notifyReady(element, playerChannel, setAudioTracks, setSelectedAudioTrack);\r\n                };\r\n            }\r\n\r\n            element.oncanplay = (event) => {\r\n                playerChannel.readyState(4);\r\n\r\n                if (playingRef.current) {\r\n                    clock.start();\r\n                }\r\n            };\r\n\r\n            element.onerror = (event) => {\r\n                props.onError(errorMessage(element));\r\n            };\r\n        }\r\n    }, [setAudioTracks, setSelectedAudioTrack, clock, playerChannel, props]);\r\n\r\n    function selectAudioTrack(id) {\r\n        for (let t of videoRef.current.audioTracks) {\r\n            if (t.id === id) {\r\n                t.enabled = true;\r\n            } else {\r\n                t.enabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        playerChannel.onReady((duration) => {\r\n            setLength(duration);\r\n        });\r\n\r\n        playerChannel.onPlay(() => {\r\n            videoRef.current.play();\r\n            clock.start();\r\n            setPlaying(true);\r\n        });\r\n\r\n        playerChannel.onPause(() => {\r\n            videoRef.current.pause();\r\n            clock.stop();\r\n            setPlaying(false);\r\n        });\r\n\r\n        playerChannel.onCurrentTime((currentTime) => {\r\n            if (videoRef.current) {\r\n                videoRef.current.currentTime = currentTime;\r\n            }\r\n\r\n            if (videoRef.current?.readyState === 4) {\r\n                playerChannel.readyState(4);\r\n            }\r\n\r\n            clock.stop();\r\n            clock.setTime(currentTime * 1000);\r\n        });\r\n\r\n        playerChannel.onAudioTrackSelected((id) => {\r\n            selectAudioTrack(id);\r\n            playerChannel.audioTrackSelected(id);\r\n        });\r\n\r\n        playerChannel.onClose(() => {\r\n            playerChannel.close();\r\n            window.close();\r\n        });\r\n\r\n        playerChannel.onSubtitles((subtitles) => {\r\n            setSubtitles(subtitles);\r\n        });\r\n\r\n        window.onbeforeunload = (e) => playerChannel.close();\r\n\r\n        return () => {\r\n            playerChannel.close();\r\n        }\r\n    }, [clock, setPlaying, playerChannel]);\r\n\r\n    const handlePlay = useCallback(() => {\r\n        if (videoRef.current) {\r\n            playerChannel.play();\r\n        }\r\n    }, [playerChannel]);\r\n\r\n    const handlePause = useCallback(() => {\r\n        playerChannel.pause();\r\n    }, [playerChannel]);\r\n\r\n    const handleSeek = useCallback((progress) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n        }\r\n\r\n        const time = progress * length;\r\n        playerChannel.currentTime = time / 1000;\r\n    }, [length, clock, playerChannel]);\r\n\r\n    function handleMouseMove(e) {\r\n        mousePositionRef.current.x = e.screenX;\r\n        mousePositionRef.current.y = e.screenY;\r\n    };\r\n\r\n    const handleAudioTrackSelected = useCallback((id) => {\r\n        if (playingRef.current) {\r\n            clock.stop();\r\n            playerChannel.pause();\r\n        }\r\n\r\n        selectAudioTrack(id);\r\n        setSelectedAudioTrack(id);\r\n        playerChannel.currentTime = 0;\r\n        playerChannel.audioTrackSelected(id);\r\n    }, [playerChannel, clock]);\r\n\r\n    useEffect(() => {\r\n        if (!subtitles || subtitles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            const now = 1000 * videoRef.current.currentTime;\r\n            const showSubtitles = [];\r\n\r\n            for (let i = 0; i < subtitles.length; ++i) {\r\n                const s = subtitles[i];\r\n\r\n                if (now >= s.start && now < s.end) {\r\n                    showSubtitles.push({...s, index: i});\r\n                }\r\n\r\n                if (now < s.start) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!arrayEquals(showSubtitles, showSubtitlesRef.current)) {\r\n                setShowSubtitles(showSubtitles);\r\n            }\r\n        }, 10)\r\n\r\n        return () => clearTimeout(interval);\r\n    }, [subtitles])\r\n\r\n    const handleSubtitlesToggle = useCallback(() => {\r\n        setSubtitlesEnabled(subtitlesEnabled => !subtitlesEnabled);\r\n    }, []);\r\n\r\n    return (\r\n        <div onMouseMove={handleMouseMove} className={classes.root}>\r\n            <video\r\n                preload=\"auto\"\r\n                nocontrols={1}\r\n                className={classes.video}\r\n                ref={videoRefCallback}\r\n                src={videoFile} />\r\n            {subtitlesEnabled && (\r\n                <div className={classes.subtitle}>\r\n                    {showSubtitles.map(s => (<React.Fragment key={s.index}>{s.text}<br/></React.Fragment>))}\r\n                </div>\r\n            )}\r\n            <Controls\r\n                mousePositionRef={mousePositionRef}\r\n                playing={playing}\r\n                clock={clock}\r\n                length={length}\r\n                audioTracks={audioTracks}\r\n                selectedAudioTrack={selectedAudioTrack}\r\n                subtitlesToggle={subtitles && subtitles.length > 0}\r\n                subtitlesEnabled={subtitlesEnabled}\r\n                offsetEnabled={false}\r\n                onPlay={handlePlay}\r\n                onPause={handlePause}\r\n                onSeek={handleSeek}\r\n                onAudioTrackSelected={handleAudioTrackSelected}\r\n                onSubtitlesToggle={handleSubtitlesToggle}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useCallback, useState, useMemo, useLayoutEffect } from 'react';\nimport { Route, Redirect, Switch, useLocation } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Alert from './Alert.js';\nimport Api from './Api.js';\nimport Bar from './Bar.js';\nimport ChromeExtension from './ChromeExtension.js';\nimport CopyHistory from './CopyHistory.js';\nimport Player from './Player.js';\nimport VideoPlayer from './VideoPlayer.js';\n\nconst useStyles = drawerWidth => makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginRight: 0,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginRight: drawerWidth,\n    },\n}));\n\nfunction Content(props) {\n    const classes = useStyles(props.drawerWidth)();\n    return (\n        <main\n            className={clsx(classes.content, {\n                [classes.contentShift]: props.drawerOpen,\n            })}>\n        {props.children}\n        </main>\n    );\n}\n\n// https://stackoverflow.com/questions/19014250/rerender-view-on-browser-resize-with-react\nfunction useWindowSize(off) {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            if (off) {\n                return;\n            }\n\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, [off]);\n    return size;\n}\n\nfunction App() {\n    const api = useMemo(() => new Api(), []);\n    const extension = useMemo(() => new ChromeExtension(), []);\n    const location = useLocation();\n    const [width, ] = useWindowSize(location.pathname === '/video');\n    const drawerWidth = Math.max(400, width * 0.3);\n    const [copiedSubtitles, setCopiedSubtitles] = useState([]);\n    const [copyHistoryOpen, setCopyHistoryOpen] = useState(false);\n    const [error, setError] = useState();\n    const [errorAlertOpen, setErrorAlertOpen] = useState(false);\n    const [jumpToSubtitle, setJumpToSubtitle] = useState();\n    const [sources, setSources] = useState({});\n    const [fileName, setFileName] = useState();\n    const { subtitleFile } = sources;\n\n    const handleCopy = useCallback((subtitle, audioFile, videoFile, subtitleFile, audioTrack) => {\n        setCopiedSubtitles(copiedSubtitles => [...copiedSubtitles, {\n            ...subtitle,\n            timestamp: Date.now(),\n            name: fileName,\n            subtitleFile: subtitleFile,\n            audioFile: audioFile,\n            videoFile: videoFile,\n            audioTrack: audioTrack\n        }]);\n    }, [fileName]);\n\n    const handleOpenCopyHistory = useCallback((event) => {\n        setCopyHistoryOpen(!copyHistoryOpen);\n    }, [copyHistoryOpen]);\n\n    const handleCloseCopyHistory = useCallback(() => {\n        setCopyHistoryOpen(false);\n    }, [setCopyHistoryOpen]);\n\n    const handleDeleteCopyHistoryItem = useCallback(item => {\n        const newCopiedSubtitles = [];\n\n        for (let subtitle of copiedSubtitles) {\n            if (item.timestamp !== subtitle.timestamp) {\n                newCopiedSubtitles.push(subtitle);\n            }\n        }\n\n        setCopiedSubtitles(newCopiedSubtitles);\n    }, [copiedSubtitles]);\n\n    const handleErrorAlertClosed = useCallback(() => {\n        setErrorAlertOpen(false);\n    }, []);\n\n    const handleError = useCallback((message) => {\n        setError(message);\n        setErrorAlertOpen(true);\n    }, []);\n\n    const handleUnloadAudio = useCallback((audioFileUrl) => {\n        if (audioFileUrl !== sources.audioFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(audioFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: null,\n                audioFileUrl: null,\n                videoFile: previous.videoFile,\n                videoFileUrl: previous.videoFileUrl\n            };\n        });\n    }, [sources]);\n\n    const handleUnloadVideo = useCallback((videoFileUrl) => {\n        if (videoFileUrl !== sources.videoFileUrl) {\n            return;\n        }\n\n        setSources(previous => {\n            URL.revokeObjectURL(videoFileUrl);\n\n            return {\n                subtitleFile: previous.subtitleFile,\n                audioFile: previous.audioFile,\n                audioFileUrl: previous.audioFileUrl,\n                videoFile: null,\n                videoFileUrl: null\n            };\n        });\n    }, [sources]);\n\n    const handleClipAudio = useCallback(item => {\n        if (item.audioFile) {\n            api.clipAudioFromAudioFile(item.audioFile, item.start, item.end)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        } else if (item.videoFile) {\n            api.clipAudioFromVideoFile(item.videoFile, item.start, item.end, item.audioTrack)\n                .catch(e => {\n                    handleError(e.message);\n                });\n        }\n    }, [api, handleError]);\n\n    const handleSelectCopyHistoryItem = useCallback((item) => {\n        if (subtitleFile.name !== item.subtitleFile.name) {\n            handleError(\"Subtitle file \" + item.subtitleFile.name + \" is not open.\");\n            return;\n        }\n\n        setJumpToSubtitle({text: item.text, originalStart: item.originalStart});\n    }, [subtitleFile, handleError]);\n\n    function revokeUrls(sources) {\n        if (sources.audioFileUrl) {\n            URL.revokeObjectURL(sources.audioFileUrl);\n        }\n\n        if (sources.videoFileUrl) {\n            URL.revokeObjectURL(sources.videoFileUrl);\n        }\n    }\n\n    function extractSources(files) {\n        let subtitleFile = null;\n        let audioFile = null;\n        let videoFile = null;\n\n        for(const f of files) {\n            const extensionStartIndex = f.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex === -1) {\n                throw new Error('Unable to determine extension of ' + f.name);\n            }\n\n            const extension = f.name.substring(extensionStartIndex + 1, f.name.length);\n            switch (extension) {\n                case \"ass\":\n                case \"srt\":\n                    if (subtitleFile) {\n                        throw new Error('Cannot open two subtitle files simultaneously');\n                    }\n                    subtitleFile = f;\n                    break;\n                case \"mkv\":\n                    if (videoFile) {\n                        throw new Error('Cannot open two video files simultaneously');\n                    }\n                    videoFile = f;\n                    break;\n                case \"mp3\":\n                    if (audioFile) {\n                        throw new Error('Cannot open two audio files simultaneously');\n                    }\n                    audioFile = f;\n                    break;\n                default:\n                    throw new Error(\"Unsupported extension \" + extension);\n            }\n        }\n\n        if (videoFile && audioFile) {\n            throw new Error(\"Cannot load both an audio and video file simultaneously\");\n        }\n\n        return {subtitleFile: subtitleFile, audioFile: audioFile, videoFile: videoFile}\n    }\n\n    const handleDrop = useCallback((e) => {\n        e.preventDefault();\n\n        if (!e.dataTransfer.files || e.dataTransfer.files.length === 0) {\n            return;\n        }\n\n        try {\n            let {subtitleFile, audioFile, videoFile} = extractSources(e.dataTransfer.files);\n\n            setSources(previous => {\n                let videoFileUrl = null;\n                let audioFileUrl = null;\n\n                if (videoFile || audioFile) {\n                    revokeUrls(previous);\n\n                    if (videoFile) {\n                        videoFileUrl = URL.createObjectURL(videoFile);\n                    } else if (audioFile) {\n                        audioFileUrl = URL.createObjectURL(audioFile);\n                    }\n                } else {\n                    videoFile = previous.videoFile;\n                    videoFileUrl = previous.videoFileUrl;\n                    audioFile = previous.audioFile;\n                    audioFileUrl = previous.audioFileUrl;\n                }\n\n                const sources = {\n                    subtitleFile: subtitleFile || previous.subtitleFile,\n                    audioFile: audioFile,\n                    audioFileUrl: audioFileUrl,\n                    videoFile: videoFile,\n                    videoFileUrl: videoFileUrl\n                };\n\n                return sources;\n            });\n\n            if (subtitleFile) {\n                setFileName(subtitleFile.name);\n            }\n        } catch (e) {\n            handleError(e.message);\n        }\n    }, [handleError]);\n\n    return (\n        <div\n            onDrop={handleDrop}\n            onDragOver={e => e.preventDefault()}\n        >\n            <Alert\n                open={errorAlertOpen}\n                onClose={handleErrorAlertClosed}\n                autoHideDuration={3000}\n                severity=\"error\"\n            >\n                {error}\n            </Alert>\n            <Switch>\n                <Route exact path=\"/\" render={() => {\n                    const params = new URLSearchParams(window.location.search);\n                    const videoFile = params.get('video');\n                    const channel = params.get('channel');\n\n                    if (videoFile && channel) {\n                        return (<Redirect to={\"/video?video=\" + encodeURIComponent(videoFile) + \"&channel=\" + channel} />);\n                    }\n\n                    return (\n                        <div>\n                            <CopyHistory\n                                items={copiedSubtitles}\n                                open={copyHistoryOpen}\n                                drawerWidth={drawerWidth}\n                                onClose={handleCloseCopyHistory}\n                                onDelete={handleDeleteCopyHistoryItem}\n                                onClipAudio={handleClipAudio}\n                                onSelect={handleSelectCopyHistoryItem}\n                            />\n                            <Bar\n                                title={fileName || \"a subtitle player\"}\n                                drawerWidth={drawerWidth}\n                                drawerOpen={copyHistoryOpen}\n                                onOpenCopyHistory={handleOpenCopyHistory}\n                            />\n                            <Content drawerWidth={drawerWidth} drawerOpen={copyHistoryOpen}>\n                                <Player\n                                    api={api}\n                                    onCopy={handleCopy}\n                                    onError={handleError}\n                                    onUnloadAudio={handleUnloadAudio}\n                                    onUnloadVideo={handleUnloadVideo}\n                                    sources={sources}\n                                    jumpToSubtitle={jumpToSubtitle}\n                                    extension={extension}\n                                />\n                            </Content>\n                        </div>\n                    );\n                }} />\n                <Route exact path=\"/video\">\n                    <VideoPlayer api={api} onError={handleError} />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3e00cf',\r\n    },\r\n    secondary: {\r\n      main: '#ff1f62',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    type: 'dark',\r\n  }\r\n});\r\n\r\nexport default theme;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'typeface-roboto';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} forceRefresh={false}>\n        <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}